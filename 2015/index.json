[
  {
    "title": "Catbearcoin, a web science fiction story",
    "tags": [
      "catbearcoin",
      "adblock",
      "advertising",
      "internet",
      "tracking",
      "privacy",
      "adtech",
      "scifi",
      "fiction"
    ],
    "year": "2015",
    "month": "10",
    "day": "28",
    "isDir": false,
    "slug": "catbearcoin",
    "date": "2015-10-28T12:00:00.000Z",
    "postName": "2015-10-28-catbearcoin",
    "html": "<p>TL;DR: Wherein I write a web sci-fi story about how I imagine micropayments\ncould work.</p>\n<!--more-->\n\n<p><a data-flickr-embed=\"true\"  href=\"https://www.flickr.com/photos/bods/6559882595\" title=\"Hoard Fox\"><img id=\"thumbnail\" class=\"fullwidth\" src=\"https://farm8.staticflickr.com/7022/6559882595_08a1cfdbee_z.jpg\" alt=\"Hoard Fox\"></a></p>\n<script async src=\"//embedr.flickr.com/assets/client-code.js\" charset=\"utf-8\"></script>\n\n<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\n<p><em>For more context, this is kind of a response to <a href=\"https://medium.com/@humphd/402-payment-required-95bc72f06fcd#.dfdv0t2yb\">David Humphrey&#39;s &quot;402:\nPayment Required&quot;</a> and <a href=\"http://thelocalyarn.com/article/payment-required\">Joel Dueck&#39;s &quot;Payment Required&quot;</a>.</em></p>\n<p><em>Thanks to <a href=\"https://twitter.com/alexandrarchivy\">@alexandrarchivy</a>,\n<a href=\"https://twitter.com/jm3\">@jm3</a>, <a href=\"https://twitter.com/humphd\">@humphd</a>,\n<a href=\"https://twitter.com/joeld\">@joeld</a> for taking early peeks at this.</em></p>\n<p><em>If anything still sounds dumb, it&#39;s totally my fault.</em></p>\n<h2 id=\"no-such-thing-as-a-free-lunch-anymore\">No such thing as a free lunch, anymore</h2>\n<p>The year is 2020. The consumer revolt against tracking &amp; advertising on the web\nis here to stay. </p>\n<p>The fallout has been brutal: Every &quot;one weird trick&quot; and\n&quot;you&#39;ll never believe&quot; viral headline site has evaporated. Nine out of ten\ndaily news sites across all topics &amp; interests have gone under or consolidated.\nA few favorites have gotten by on a surprise surge of &quot;premium&quot; memberships,\nbut it&#39;s a lot quieter on what&#39;s left of the web.</p>\n<div class=\"pullquote left\">\nCatbear... The browser so great, we're going\nto let you pay for it!\n</div>\n\n<p>Out of nowhere, a new startup bursts onto the scene:\n&quot;<em>Catbear... The browser so great, we&#39;re going to let you pay for\nit!</em>&quot;</p>\n<p>Catbear launches as a subscription service. Five bucks a month in the US - $50 for\na year and save! It comes with a wallet you can fill with Catbearcoins. A $5\nsubscription gives you 1000 Catbearcoins each month.</p>\n<h2 id=\"at-least-its-not-socks\">At least it&#39;s not socks</h2>\n<p>At Christmas, you get a card from a relative you haven&#39;t seen in a few years. A\ngift card falls out - it&#39;s worth 2500 Catbearcoins.</p>\n<p>&quot;What&#39;s this crap?&quot; you think.\nCurious, you go on the web to redeem it. It turns out you can get\na month of Catbear for 2000 Catbearcoins. You shrug &amp; sign up.</p>\n<div class=\"pullquote right\">\nThis page costs 1 Catbearcoin to view.\n</div>\n\n<p>Catbear is nice. It&#39;s fast. It has clever features. After a night of\npoking around blogs &amp; games &amp; baby animal pictures, you notice the Catbearcoin balance in\nthe corner of the screen has ticked down to 450.</p>\n<p>You follow another link and the balance drops to 449.</p>\n<p>After a couple of weeks, your balance runs out. The next link shows\nan annoying warning: &quot;<em>This page costs 1 Catbearcoin to view</em>,&quot; along with a\nlink to top up your wallet at the Catbearstore. </p>\n<p>You ignore it and keep browsing on\nto other free sites - those are getting harder to find.</p>\n<p>By the end of the month, Catbear just stops working. It shows a form to\nreactivate your subscription. </p>\n<p>You go back to your old copy of Lodestone Navigator. But, every site\nwants Catbearcoin now. You bite the bullet: You pull out a credit card and\nstart a Catbear subscription.</p>\n<h2 id=\"information-wants-to-be-expensive\">Information wants to be expensive</h2>\n<p>Things are good again. The monthly allowance of 1000 Catbearcoins feeds\nyour habits. But, you&#39;ve noticed a few places have started asking for\nmore.</p>\n<div class=\"pullquote\">\nSoon, you find your Catbearcoins running out in the middle of the month.\n</div>\n\n<p>Your favorite beer homebrewing forum asks you to bump up to 2 Catbearcoins per\nview. In exchange, you get a gold border around on your avatar and you can use\nsome fun emoticons in posts. Feeling magnanimous, you agree.</p>\n<p>An arcade site asks 50 Catbearcoins to unlock every game for a few hours. The place\nis pretty fun, so you splurge some nights.</p>\n<p>You find a weekly podcast that&#39;s 150 Catbearcoins per episode - or 500 per month to\nsubscribe. After listening to some free samples from the archives, you&#39;re\nhooked.</p>\n<p>Soon, you find your wallet running out early. You bump\nyour subscription up to $10 and get 2500 Catbearcoins every month. But, with so\nmuch good stuff out there, you start using up even that allowance. There are\nstill higher subscription levels, but you decide something&#39;s got to give.</p>\n<h2 id=\"audience-participation\">Audience participation</h2>\n<p>The easiest thing to do is just deal with it - when the wallet&#39;s empty, you\ndo without the web. You make an effort to budget. But, that&#39;s\nno fun after a few weeks. So, you look into more options.</p>\n<div class=\"pullquote right\">\nYou can opt into ads to earn Catbearcoin\n</div>\n\n<p>Turns out you can opt into ads to earn Catbearcoin. You don&#39;t like\nthe sound of that, but you give it a try - you can always turn it off\nwhenever you want. </p>\n<p>It&#39;s not like the old days, though: Ads aren&#39;t plastered all over. Instead,\nCatbear shows you something every now and then between links. Usually it&#39;s a\nquick interstitial image with some text. Occasionally it&#39;s a video.  Sometimes\nit&#39;s a survey or even a puzzle. </p>\n<p>You&#39;re surprised at how little you&#39;re annoyed -\nand how often you actually engage. There are other ad services to\ntry: They offer higher payouts, but they feel too intrusive for your tastes.</p>\n<p>By the end of the month, you&#39;ve gotten an extra 750 Catbearcoins. Not terrible, but\nyou keep looking around.</p>\n<div class=\"pullquote left\">\nYou can earn Catbearcoin for moderating forums.\n</div>\n\n<p>Lots of your usual haunts have started offering some kind of payback scheme for\ntaking on odd jobs. On the homebrewing forum, you notice folks pitching in to\nhelp run the place. You can earn Catbearcoin for moderating discussions and weeding\nout spam.</p>\n<p>You apply &amp; get approved - you now have an even more special border around your\navatar and you help douse flame wars in a few topics. This nets you about 200\nCatbearcoins - plenty to offset your use of this particular site.</p>\n<h2 id=\"your-information-wants-to-be-expensive-too\">Your information wants to be expensive, too</h2>\n<p>You find yourself writing long reviews &amp; how-tos on the\nforums. One day, someone snarks that you should start a blog if you&#39;re going to\nkeep posting walls of text.</p>\n<p>It gets you thinking. You had a TumblJournal, like 10 years ago. You just used it for\nrandom GIFs and general life complaints. After a bit of research, you find\nNileMart&#39;s web services: They support blogs and just started accepting Catbearcoin to\npay for hosting. What&#39;s even more interesting is that they let <em>you</em> accept Catbearcoin!</p>\n<div class=\"pullquote right\">\nCome to find out, you like writing.\n</div>\n\n<p>So, you pick a clever name &amp; create a site. Whenever you&#39;re tempted to post a\nfew paragraphs on the forum, you publish to your blog instead and link to it\nwith a TL;DR summary. Come to find out, you really like writing.</p>\n<p>Even better, folks from the forums - and beyond - like reading what you&#39;ve got\nto say about weird &amp; exotic beers and how to brew them. Word spreads. While\nNileMart takes a cut of the Catbearcoin flowing your way, you&#39;re surprised to find\nthat your balance grows every month. </p>\n<p>By the end of summer, you stop paying cash for your Catbear subscription.</p>\n<p>You&#39;ve even totally covered your web habits with plenty left over.</p>\n<h2 id=\"catbearcoin-gets-real\">Catbearcoin gets real</h2>\n<p>Someone on the forums snarks that you must be rolling in it now, thanks to all\nyour fans. </p>\n<p>You&#39;d read about it awhile back, but totally forgot until just now:\nCatbearcoin can be redeemed for cash. In fact, as kind of a reverse subscription,\nyou can have an amount deducted every month and deposited directly into your\nbank account. So, you set that up.</p>\n<div class=\"pullquote\">\nCatbearcoin can be redeemed for cash.\n</div>\n\n<p>By the end of the year, your earnings get to a point where you actually have to\ndeclare them on your taxes. </p>\n<p>You&#39;re far from quitting your day job, but your\nblog buys you a lot of nice beer and a great splurgy dinner here &amp; there. </p>\n<p>All of which, you know, is technically research for more writing.</p>\n<h2 id=\"social-media-stars-rise-again\">Social media stars rise again</h2>\n<p>Social media becomes a thing again: It had mostly died when companies &amp;\ninvestors realized ad money was drying up. </p>\n<div class=\"pullquote right\">\nA few stars are making a living from their fans\n</div>\n\n<p>But, with the advent of Catbearcoin,\nsomeone comes up with the idea to share revenues with folks posting\nlittle quips &amp; videos. For most users, it&#39;s like any old chat site. </p>\n<p>For a group of popular folks, the pay out overtakes\nwhat they pay in - and suddenly a few stars are making a living from their\nfans.</p>\n<p>You&#39;re nowhere near that yourself, but it&#39;s good for driving traffic to\nyour blog.</p>\n<h2 id=\"competition-grows\">Competition grows</h2>\n<p>And of course, Catbearcoin isn&#39;t the only game in town for long: Gahoo revives\nthe Lodestone Navigator team and unveils their own subscription-free currency.  Allen &amp;\nGates and Pomegranate both unveil their own browser refreshes &amp; currency\nofferings. The browser wars start all over again - this time with even banks &amp;\ncredit card networks jumping into the game.</p>\n<div class=\"pullquote left\">\nThe browser wars start all over again\n</div>\n\n<p>Your cousin is a web developer. She grouses constantly about having to\nsupport all these browsers. But, she&#39;s never been so in demand.</p>\n<p>Exchange services pop up to trade currency between browser wallets. You make\na small profit by playing the markets, but you decide it&#39;s not really your thing.</p>\n<p>Fraud &amp; scams grow - you get bitten more than once. But, Catbear &amp; Lodestone &amp;\nSojourn &amp; Trident are all in a race for user protections and offer generous\nrefunds, so it&#39;s never really a big problem for you. It&#39;s a little annoying to\nkeep up to date with the tech on your site, but NileMart mostly just takes care\nof it as part of the hosting package.</p>\n<h2 id=\"good-times\">Good times</h2>\n<p>After a few years, it feels like another dot-com boom - just with fewer\nbillionaires and many more hundred-thousand-aires. Armchair analysts everywhere\nenjoy the earnings as they weigh in with opinion pieces about when the bubble&#39;s\ngoing to burst.</p>\n<div class=\"pullquote right\">\nYou really do quit your day job.\n</div>\n\n<p>You keep writing for your blog. Your traffic grows as you diversify\ninto other beverages &amp; food. You really do quit your day job. </p>\n<p>You bring in guest writers - with revenue sharing, of course. They become\npermanent staff.</p>\n<p>You find yourself traveling a bit for exclusive interviews with up-and-coming\nmicrobrewers &amp; restaurateurs.</p>\n<p>You adopt a cat with huge ears and name her Foxy. She&#39;s cute and has her own\nhilarious microblog - ghostwritten by you. It pays for her kibble. </p>\n<p>Life is pretty good on the paid web, even for pets.</p>\n",
    "body": "TL;DR: Wherein I write a web sci-fi story about how I imagine micropayments\ncould work.\n\n<!--more-->\n\n<a data-flickr-embed=\"true\"  href=\"https://www.flickr.com/photos/bods/6559882595\" title=\"Hoard Fox\"><img id=\"thumbnail\" class=\"fullwidth\" src=\"https://farm8.staticflickr.com/7022/6559882595_08a1cfdbee_z.jpg\" alt=\"Hoard Fox\"></a>\n<script async src=\"//embedr.flickr.com/assets/client-code.js\" charset=\"utf-8\"></script>\n\n<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\n*For more context, this is kind of a response to [David Humphrey's \"402:\nPayment Required\"][humphd] and [Joel Dueck's \"Payment Required\"][joel].*\n\n*Thanks to [@alexandrarchivy](https://twitter.com/alexandrarchivy),\n[@jm3](https://twitter.com/jm3), [@humphd](https://twitter.com/humphd),\n[@joeld](https://twitter.com/joeld) for taking early peeks at this.*\n\n*If anything still sounds dumb, it's totally my fault.*\n\n[humphd]: https://medium.com/@humphd/402-payment-required-95bc72f06fcd#.dfdv0t2yb\n[joel]: http://thelocalyarn.com/article/payment-required\n\n## No such thing as a free lunch, anymore\n\nThe year is 2020. The consumer revolt against tracking & advertising on the web\nis here to stay. \n\nThe fallout has been brutal: Every \"one weird trick\" and\n\"you'll never believe\" viral headline site has evaporated. Nine out of ten\ndaily news sites across all topics & interests have gone under or consolidated.\nA few favorites have gotten by on a surprise surge of \"premium\" memberships,\nbut it's a lot quieter on what's left of the web.\n\n<div class=\"pullquote left\">\nCatbear... The browser so great, we're going\nto let you pay for it!\n</div>\n\nOut of nowhere, a new startup bursts onto the scene:\n\"*Catbear... The browser so great, we're going to let you pay for\nit!*\"\n\nCatbear launches as a subscription service. Five bucks a month in the US - $50 for\na year and save! It comes with a wallet you can fill with Catbearcoins. A $5\nsubscription gives you 1000 Catbearcoins each month.\n\n## At least it's not socks\n\nAt Christmas, you get a card from a relative you haven't seen in a few years. A\ngift card falls out - it's worth 2500 Catbearcoins.\n\n\"What's this crap?\" you think.\nCurious, you go on the web to redeem it. It turns out you can get\na month of Catbear for 2000 Catbearcoins. You shrug & sign up.\n\n<div class=\"pullquote right\">\nThis page costs 1 Catbearcoin to view.\n</div>\n\nCatbear is nice. It's fast. It has clever features. After a night of\npoking around blogs & games & baby animal pictures, you notice the Catbearcoin balance in\nthe corner of the screen has ticked down to 450.\n\nYou follow another link and the balance drops to 449.\n\nAfter a couple of weeks, your balance runs out. The next link shows\nan annoying warning: \"*This page costs 1 Catbearcoin to view*,\" along with a\nlink to top up your wallet at the Catbearstore. \n\nYou ignore it and keep browsing on\nto other free sites - those are getting harder to find.\n\nBy the end of the month, Catbear just stops working. It shows a form to\nreactivate your subscription. \n\nYou go back to your old copy of Lodestone Navigator. But, every site\nwants Catbearcoin now. You bite the bullet: You pull out a credit card and\nstart a Catbear subscription.\n\n## Information wants to be expensive\n\nThings are good again. The monthly allowance of 1000 Catbearcoins feeds\nyour habits. But, you've noticed a few places have started asking for\nmore.\n\n<div class=\"pullquote\">\nSoon, you find your Catbearcoins running out in the middle of the month.\n</div>\n\nYour favorite beer homebrewing forum asks you to bump up to 2 Catbearcoins per\nview. In exchange, you get a gold border around on your avatar and you can use\nsome fun emoticons in posts. Feeling magnanimous, you agree.\n\nAn arcade site asks 50 Catbearcoins to unlock every game for a few hours. The place\nis pretty fun, so you splurge some nights.\n\nYou find a weekly podcast that's 150 Catbearcoins per episode - or 500 per month to\nsubscribe. After listening to some free samples from the archives, you're\nhooked.\n\nSoon, you find your wallet running out early. You bump\nyour subscription up to $10 and get 2500 Catbearcoins every month. But, with so\nmuch good stuff out there, you start using up even that allowance. There are\nstill higher subscription levels, but you decide something's got to give.\n\n## Audience participation\n\nThe easiest thing to do is just deal with it - when the wallet's empty, you\ndo without the web. You make an effort to budget. But, that's\nno fun after a few weeks. So, you look into more options.\n\n<div class=\"pullquote right\">\nYou can opt into ads to earn Catbearcoin\n</div>\n\nTurns out you can opt into ads to earn Catbearcoin. You don't like\nthe sound of that, but you give it a try - you can always turn it off\nwhenever you want. \n\nIt's not like the old days, though: Ads aren't plastered all over. Instead,\nCatbear shows you something every now and then between links. Usually it's a\nquick interstitial image with some text. Occasionally it's a video.  Sometimes\nit's a survey or even a puzzle. \n\nYou're surprised at how little you're annoyed -\nand how often you actually engage. There are other ad services to\ntry: They offer higher payouts, but they feel too intrusive for your tastes.\n\nBy the end of the month, you've gotten an extra 750 Catbearcoins. Not terrible, but\nyou keep looking around.\n\n<div class=\"pullquote left\">\nYou can earn Catbearcoin for moderating forums.\n</div>\n\nLots of your usual haunts have started offering some kind of payback scheme for\ntaking on odd jobs. On the homebrewing forum, you notice folks pitching in to\nhelp run the place. You can earn Catbearcoin for moderating discussions and weeding\nout spam.\n\nYou apply & get approved - you now have an even more special border around your\navatar and you help douse flame wars in a few topics. This nets you about 200\nCatbearcoins - plenty to offset your use of this particular site.\n\n## Your information wants to be expensive, too\n\nYou find yourself writing long reviews & how-tos on the\nforums. One day, someone snarks that you should start a blog if you're going to\nkeep posting walls of text.\n\nIt gets you thinking. You had a TumblJournal, like 10 years ago. You just used it for\nrandom GIFs and general life complaints. After a bit of research, you find\nNileMart's web services: They support blogs and just started accepting Catbearcoin to\npay for hosting. What's even more interesting is that they let *you* accept Catbearcoin!\n\n<div class=\"pullquote right\">\nCome to find out, you like writing.\n</div>\n\nSo, you pick a clever name & create a site. Whenever you're tempted to post a\nfew paragraphs on the forum, you publish to your blog instead and link to it\nwith a TL;DR summary. Come to find out, you really like writing.\n\nEven better, folks from the forums - and beyond - like reading what you've got\nto say about weird & exotic beers and how to brew them. Word spreads. While\nNileMart takes a cut of the Catbearcoin flowing your way, you're surprised to find\nthat your balance grows every month. \n\nBy the end of summer, you stop paying cash for your Catbear subscription.\n\nYou've even totally covered your web habits with plenty left over.\n\n## Catbearcoin gets real\n\nSomeone on the forums snarks that you must be rolling in it now, thanks to all\nyour fans. \n\nYou'd read about it awhile back, but totally forgot until just now:\nCatbearcoin can be redeemed for cash. In fact, as kind of a reverse subscription,\nyou can have an amount deducted every month and deposited directly into your\nbank account. So, you set that up.\n\n<div class=\"pullquote\">\nCatbearcoin can be redeemed for cash.\n</div>\n\nBy the end of the year, your earnings get to a point where you actually have to\ndeclare them on your taxes. \n\nYou're far from quitting your day job, but your\nblog buys you a lot of nice beer and a great splurgy dinner here & there. \n\nAll of which, you know, is technically research for more writing.\n\n## Social media stars rise again\n\nSocial media becomes a thing again: It had mostly died when companies &\ninvestors realized ad money was drying up. \n\n<div class=\"pullquote right\">\nA few stars are making a living from their fans\n</div>\n\nBut, with the advent of Catbearcoin,\nsomeone comes up with the idea to share revenues with folks posting\nlittle quips & videos. For most users, it's like any old chat site. \n\nFor a group of popular folks, the pay out overtakes\nwhat they pay in - and suddenly a few stars are making a living from their\nfans.\n\nYou're nowhere near that yourself, but it's good for driving traffic to\nyour blog.\n\n\n## Competition grows\n\nAnd of course, Catbearcoin isn't the only game in town for long: Gahoo revives\nthe Lodestone Navigator team and unveils their own subscription-free currency.  Allen &\nGates and Pomegranate both unveil their own browser refreshes & currency\nofferings. The browser wars start all over again - this time with even banks &\ncredit card networks jumping into the game.\n\n<div class=\"pullquote left\">\nThe browser wars start all over again\n</div>\n\nYour cousin is a web developer. She grouses constantly about having to\nsupport all these browsers. But, she's never been so in demand.\n\nExchange services pop up to trade currency between browser wallets. You make\na small profit by playing the markets, but you decide it's not really your thing.\n\nFraud & scams grow - you get bitten more than once. But, Catbear & Lodestone &\nSojourn & Trident are all in a race for user protections and offer generous\nrefunds, so it's never really a big problem for you. It's a little annoying to\nkeep up to date with the tech on your site, but NileMart mostly just takes care\nof it as part of the hosting package.\n\n## Good times\n\nAfter a few years, it feels like another dot-com boom - just with fewer\nbillionaires and many more hundred-thousand-aires. Armchair analysts everywhere\nenjoy the earnings as they weigh in with opinion pieces about when the bubble's\ngoing to burst.\n\n<div class=\"pullquote right\">\nYou really do quit your day job.\n</div>\n\nYou keep writing for your blog. Your traffic grows as you diversify\ninto other beverages & food. You really do quit your day job. \n\nYou bring in guest writers - with revenue sharing, of course. They become\npermanent staff.\n\nYou find yourself traveling a bit for exclusive interviews with up-and-coming\nmicrobrewers & restaurateurs.\n\nYou adopt a cat with huge ears and name her Foxy. She's cute and has her own\nhilarious microblog - ghostwritten by you. It pays for her kibble. \n\nLife is pretty good on the paid web, even for pets.\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2015",
    "path": "2015/10/28/catbearcoin",
    "thumbnail": "https://farm8.staticflickr.com/7022/6559882595_08a1cfdbee_z.jpg",
    "summary": "<p>TL;DR: Wherein I write a web sci-fi story about how I imagine micropayments\ncould work.</p>\n"
  },
  {
    "title": "Continual Blogployment",
    "tags": [
      "metablogging",
      "webdev",
      "js",
      "gulp",
      "github",
      "travis",
      "s3",
      "amazon",
      "devops"
    ],
    "year": "2015",
    "month": "10",
    "day": "22",
    "isDir": false,
    "slug": "blogging-via-travis",
    "date": "2015-10-22T12:00:00.000Z",
    "postName": "2015-10-22-blogging-via-travis",
    "html": "<p>Ever since <a href=\"http://blog.lmorchard.com/2014/10/20/static-blog-generation-with-gulp/\">I switched this blog over to a Gulp-based toolchain</a> - <em>holy crap, 2 years ago</em> - I had a TODO to wire this thing up for continual deployment. Well, today I finally did it. </p>\n<!--more-->\n\n<p>Just to test the cloud machinery I&#39;m (ab)using here, I&#39;m writing this post as a new commit on GitHub in a browser. When I get done and commit this, Travis CI will fire up, install my node-based blog code and build all the content. Assuming that goes well, my code on Travis will then publish any changes in the content to Amazon S3. And, voila, I will have blogged via the magic of cheap cloud infrastructure.</p>\n<p>Up until now, I&#39;ve been doing this all from my laptop: Write a post in Vim, commit to git, build &amp; deploy from my local machine. I&#39;d push to GitHub to work in the open and have a handy backup. But from here on, the push to GitHub will actually make the magic happen!</p>\n<p>If you&#39;re curious about the plumbing, <a href=\"https://github.com/lmorchard/blog.lmorchard.com/compare/5992311ade7acc0e9dbeb0352ac4097c687be1a5...10149c0e520f7e75536535ff563dfe42aa30b960\">the changes in my recent commits</a> can tell the exact story. But, what I did in a nutshell is this:</p>\n<ul>\n<li><a href=\"https://github.com/lmorchard/blog.lmorchard.com/commit/4c029ab9a6d3f5869cee02b7265e0ad41908a8c4\">Switched to using environment vars to configure AWS credentials for S3 publishing</a>.</li>\n<li>Used <a href=\"http://docs.travis-ci.com/user/environment-variables/#Encrypted-Variables\"><code>travis secure</code></a> to supply credentials in encrypted environment vars.</li>\n<li>Started <a href=\"https://github.com/lmorchard/blog.lmorchard.com/commit/4b525710760ad70c0d83d910585e7bd9ddd80583\">maintaining a copy of file hashes on the site</a> so that <a href=\"https://www.npmjs.com/package/gulp-awspublish\">gulp-awspublish</a> will only publish changes.</li>\n<li>Composed a <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/.travis.yml\">.travis.yml</a> to build &amp; deploy everything.</li>\n</ul>\n<p>And, if you&#39;re reading this post, then that means everything worked when I hit the &quot;Commit new file&quot; button! (And, if you&#39;re reading <em>this</em> sentence, then I was able to update this post, too!)</p>\n",
    "body": "Ever since [I switched this blog over to a Gulp-based toolchain][gulp-blog] - *holy crap, 2 years ago* - I had a TODO to wire this thing up for continual deployment. Well, today I finally did it. \n\n<!--more-->\n\nJust to test the cloud machinery I'm (ab)using here, I'm writing this post as a new commit on GitHub in a browser. When I get done and commit this, Travis CI will fire up, install my node-based blog code and build all the content. Assuming that goes well, my code on Travis will then publish any changes in the content to Amazon S3. And, voila, I will have blogged via the magic of cheap cloud infrastructure.\n\nUp until now, I've been doing this all from my laptop: Write a post in Vim, commit to git, build & deploy from my local machine. I'd push to GitHub to work in the open and have a handy backup. But from here on, the push to GitHub will actually make the magic happen!\n\nIf you're curious about the plumbing, [the changes in my recent commits][recent-commits] can tell the exact story. But, what I did in a nutshell is this:\n\n* [Switched to using environment vars to configure AWS credentials for S3 publishing][env-config].\n* Used [`travis secure`][travis-secure] to supply credentials in encrypted environment vars.\n* Started [maintaining a copy of file hashes on the site][hash-stash] so that [gulp-awspublish][] will only publish changes.\n* Composed a [.travis.yml][travis-yml] to build & deploy everything.\n\nAnd, if you're reading this post, then that means everything worked when I hit the \"Commit new file\" button! (And, if you're reading *this* sentence, then I was able to update this post, too!)\n\n[env-config]: https://github.com/lmorchard/blog.lmorchard.com/commit/4c029ab9a6d3f5869cee02b7265e0ad41908a8c4\n[gulp-awspublish]: https://www.npmjs.com/package/gulp-awspublish\n[hash-stash]: https://github.com/lmorchard/blog.lmorchard.com/commit/4b525710760ad70c0d83d910585e7bd9ddd80583\n[travis-yml]: https://github.com/lmorchard/blog.lmorchard.com/blob/master/.travis.yml\n[travis-secure]: http://docs.travis-ci.com/user/environment-variables/#Encrypted-Variables\n[recent-commits]: https://github.com/lmorchard/blog.lmorchard.com/compare/5992311ade7acc0e9dbeb0352ac4097c687be1a5...10149c0e520f7e75536535ff563dfe42aa30b960\n[gulp-blog]: http://blog.lmorchard.com/2014/10/20/static-blog-generation-with-gulp/\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2015",
    "path": "2015/10/22/blogging-via-travis",
    "summary": "<p>Ever since <a href=\"http://blog.lmorchard.com/2014/10/20/static-blog-generation-with-gulp/\">I switched this blog over to a Gulp-based toolchain</a> - <em>holy crap, 2 years ago</em> - I had a TODO to wire this thing up for continual deployment. Well, today I finally did it. </p>\n"
  },
  {
    "title": "Being nice at AlterConf",
    "tags": [
      "alterconf",
      "diversity",
      "mindfulness",
      "empathy"
    ],
    "year": "2015",
    "month": "10",
    "day": "18",
    "isDir": false,
    "slug": "being-nice-at-alterconf",
    "date": "2015-10-18T12:00:00.000Z",
    "postName": "2015-10-18-being-nice-at-alterconf",
    "html": "<img class=\"inset wide right\" id=\"thumbnail\" src=\"/uploads/2015/alterconf/alterconf-laptop-sticker.png\">\n\n<p>Yesterday in Detroit, I volunteered at <a href=\"http://www.alterconf.com/conferences/detroit-mi\">AlterConf in\nDetroit</a>. I watched the food\nfor a bit, then I folded some chairs. Nothing to brag about - they barely\nneeded me. That left me largely free to sit in on the rest of the conference.</p>\n<p>It was nice. In fact, the whole afternoon was <em>all about</em> being nice. I don&#39;t want\nto trivialize it, but the core themes had a lot to\nsay about empathy and inclusion and kindness - all things I file under &quot;being\nnice&quot; in my head.</p>\n<p>When I walked in, I got a name badge. I was asked to write my personal pronouns\non it along with my name - &quot;he/him&quot; for me. That&#39;s a kindness: I don&#39;t\nwant to insult anyone by misgendering. I have enough problem remembering names,\nlet alone navigating gender concerns in a crowd of strangers more diverse than\nI usually encounter.</p>\n<p>Then, in the main room, the speaker&#39;s podium stood next to a big screen for\nslides. But, on the other side, there was another big screen with a live\ntranscript and a sign language interpreter on standby. That transcript turned\nout to be another kindness: I don&#39;t have hearing issues, but I&#39;ve always found\nit easier to absorb complicated things from written text. Among other things, I\ncan catch what I missed while taking notes or re-read what I had trouble\ngrasping at first.</p>\n<p>And, of course, there was a <a href=\"http://www.alterconf.com/code-of-conduct\">Code of Conduct</a>. I skimmed through it on my\nphone during the opening address. Not many surprises, mostly just specific ways\nto not be a jerk. It was nice to be reminded of a few more things about which\nto stay mindful. I&#39;m not <em>entirely</em> inept in social situations, but I&#39;m not\ngreat and I like hints.</p>\n<p>I know everything I just wrote was about me. That&#39;s a poor way to talk\nabout empathy. But, so many objections I&#39;ve seen about inclusion &amp;\nconsideration at an event center around gripes about personal inconvenience for\nfolks like me who don&#39;t need as many considerations. &quot;Can&#39;t we just do the\nthing? Why do we have to be distracted by all these special needs? Can&#39;t they\njust deal with it? Don&#39;t bother me with all that.&quot;</p>\n<p>I know I&#39;ve been dealt a good hand in life. Call me privileged, though I know\nthat word sets some people off. Hell, it&#39;s set me off before. But, it just\nmeans there are lots of things I don&#39;t have to deal with. So, I can afford\nto be generous. I can try to be more mindful for awhile, tread carefully, apologize\nwhen needed. I can share some burdens, make some room, hold back, bear with a\nfew minor inconveniences.</p>\n<p>To me, it&#39;s just being nice. I like to be nice. I try to be kind. It doesn&#39;t\ncost me anything I&#39;d miss. The end result usually brings unexpected benefits\nand I get exposed to interesting people &amp; ideas who would otherwise be squeezed\nout.</p>\n<p>To keep this short, I&#39;ll save writing about the ideas presented at AlterConf\nfor other posts. I just wanted to get these general things about the structure\nof the day out of my head first. It seemed like a short afternoon with a nice\nfoundation of little considerations I don&#39;t usually see. It made me glad to\nbe a small part of it.</p>\n",
    "body": "<img class=\"inset wide right\" id=\"thumbnail\" src=\"/uploads/2015/alterconf/alterconf-laptop-sticker.png\">\n\nYesterday in Detroit, I volunteered at [AlterConf in\nDetroit][alterconf-detroit]. I watched the food\nfor a bit, then I folded some chairs. Nothing to brag about - they barely\nneeded me. That left me largely free to sit in on the rest of the conference.\n\n[alterconf-detroit]: http://www.alterconf.com/conferences/detroit-mi\n\nIt was nice. In fact, the whole afternoon was *all about* being nice. I don't want\nto trivialize it, but the core themes had a lot to\nsay about empathy and inclusion and kindness - all things I file under \"being\nnice\" in my head.\n\nWhen I walked in, I got a name badge. I was asked to write my personal pronouns\non it along with my name - \"he/him\" for me. That's a kindness: I don't\nwant to insult anyone by misgendering. I have enough problem remembering names,\nlet alone navigating gender concerns in a crowd of strangers more diverse than\nI usually encounter.\n\nThen, in the main room, the speaker's podium stood next to a big screen for\nslides. But, on the other side, there was another big screen with a live\ntranscript and a sign language interpreter on standby. That transcript turned\nout to be another kindness: I don't have hearing issues, but I've always found\nit easier to absorb complicated things from written text. Among other things, I\ncan catch what I missed while taking notes or re-read what I had trouble\ngrasping at first.\n\nAnd, of course, there was a [Code of Conduct][coc]. I skimmed through it on my\nphone during the opening address. Not many surprises, mostly just specific ways\nto not be a jerk. It was nice to be reminded of a few more things about which\nto stay mindful. I'm not *entirely* inept in social situations, but I'm not\ngreat and I like hints.\n\n[coc]: http://www.alterconf.com/code-of-conduct\n\nI know everything I just wrote was about me. That's a poor way to talk\nabout empathy. But, so many objections I've seen about inclusion &\nconsideration at an event center around gripes about personal inconvenience for\nfolks like me who don't need as many considerations. \"Can't we just do the\nthing? Why do we have to be distracted by all these special needs? Can't they\njust deal with it? Don't bother me with all that.\"\n\nI know I've been dealt a good hand in life. Call me privileged, though I know\nthat word sets some people off. Hell, it's set me off before. But, it just\nmeans there are lots of things I don't have to deal with. So, I can afford\nto be generous. I can try to be more mindful for awhile, tread carefully, apologize\nwhen needed. I can share some burdens, make some room, hold back, bear with a\nfew minor inconveniences.\n\nTo me, it's just being nice. I like to be nice. I try to be kind. It doesn't\ncost me anything I'd miss. The end result usually brings unexpected benefits\nand I get exposed to interesting people & ideas who would otherwise be squeezed\nout.\n\nTo keep this short, I'll save writing about the ideas presented at AlterConf\nfor other posts. I just wanted to get these general things about the structure\nof the day out of my head first. It seemed like a short afternoon with a nice\nfoundation of little considerations I don't usually see. It made me glad to\nbe a small part of it.\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2015",
    "path": "2015/10/18/being-nice-at-alterconf",
    "thumbnail": "/uploads/2015/alterconf/alterconf-laptop-sticker.png"
  },
  {
    "title": "The day the web shrugged?",
    "tags": [
      "adblock",
      "advertising",
      "internet",
      "tracking",
      "privacy",
      "adtech",
      "safari"
    ],
    "year": "2015",
    "month": "09",
    "day": "21",
    "isDir": false,
    "slug": "blocked",
    "date": "2015-09-21T12:00:00.000Z",
    "postName": "2015-09-21-blocked",
    "html": "<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\n\n<p>With iOS9, Apple just went and did it. <a href=\"https://developer.apple.com/library/prerelease/ios/releasenotes/General/WhatsNewInSafari/Articles/Safari_9.html#//apple_ref/doc/uid/TP40014305-CH9-SW8\">They opened up the ability to implement\ncontent blocking extensions for Safari</a>.</p>\n<p><a href=\"http://gizmodo.com/5150498/50-of-the-most-insane-things-never-seen-on-google-street-view/\"><img id=\"thumbnail\" class=\"lazyload\" style=\"width: 400px\" src=\"/uploads/2015/blocked/damnyoualltohell.png\"></a></p>\n<h2 id=\"who-did-what-now\">Who did what now?</h2>\n<p>To hear some folks tell it, Apple just blew up the web. Those maniacs! In\nreality, Apple haven&#39;t blocked anything themselves.  Rather, they\nopened up the <em>capability</em> to block. It&#39;s up to app developers to decide what\nto block. From there, it&#39;s up to users to decide whether &amp; what app to\ninstall.</p>\n<p>There&#39;s a lot of choice to go around: If this is a nuclear strike, many\nhands happily turned their keys in the launch silos. It&#39;s a big nasty veto\nagainst the current state of affairs on the web.</p>\n<div class=\"pullquote right\">\nTrue to form, Apple didn't invent the content blocker. **They made\nthe tech more accessible.**\n</div>\n\n<h2 id=\"apple-didnt-start-this\">Apple didn&#39;t start this</h2>\n<p>Let&#39;s not pretend this is some sinister battle between corporate entities as\nan excuse to ignore or continue to discount the people in the middle.</p>\n<p>While Apple does do lots of things I dislike, <a href=\"http://www.informationweek.com/it-life/tim-cook-customers-not-companies-should-control-their-data/d/d-id/1320684\">they tend to champion user\nexperience for their many paying customers</a> - i.e. mainly the\nfolks who buy hardware.  In other words, none of this would be possible if\nthere weren&#39;t already people asking for it.</p>\n<p>Apple opening the door to\ncontent blockers that improve the user experience on the mobile web makes\nperfect sense. So does Apple&#39;s News app, considering that it serves to exploit\nthe opportunities offered by the self-inflicted wounds evident on today&#39;s\ntracking and ad laden web sites. (Of course, even there, <a href=\"https://twitter.com/khoi/status/645226687685337088\">the experience\nstill has wrinkles in need of ironing</a>.)</p>\n<p>We&#39;ve had things like <a href=\"https://adblockplus.org/\">Adblock Plus</a> for years. But, practically speaking,\nthat&#39;s been an obscure convenience reserved for folks in the know. True to\nform, Apple didn&#39;t invent the content blocker. They made the tech more\naccessible. If this whole thing is a master stroke by Apple to stab at any\ncompetitor&#39;s heart, the blade was gladly thrust by the disgruntled masses\nassumed until now to be <a href=\"http://blog.lmorchard.com/2014/10/08/microblogging-like-its-2002/#Free_as_in_Lunch\">a passive compost heap</a>.</p>\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">Going after Apple on this wave of ad block news is a red herring. This is user choice. Hi. I&#39;m blocking your code on my computer. Negotiate.</p>&mdash; Les Orchard (@lmorchard) <a href=\"https://twitter.com/lmorchard/status/645015287713124352\">September 18, 2015</a></blockquote>\n\n<h2 id=\"babies-bathwater-and-ultimatums\">Babies, bathwater, and ultimatums</h2>\n<p>While the shock may be understandable, publishers facing reduced revenues do\nthemselves no favors with panicked reactions to these content blocking\nextensions. </p>\n<p><a href=\"http://fortune.com/2015/09/18/dear-apple-i-may-rob-your-store/\">Proposing theft from an Apple Store</a>, for example, is just stupid.</p>\n<p>Branding ad-block users as thieves also earns little sympathy. Especially not\nwhen the surveillance-driven infrastructure of delivering unwelcome messages\ngrows daily - all while user-owned data &amp; attention &amp; computing resources are\ntaken for granted. I&#39;m sure to some folks - for right or wrong - the score\nfeels even.</p>\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">The reckoning is coming for an ad industry that grew reckless with user&#39;s bandwidth, privacy, CPU, and attention. About time.</p>&mdash; DHH (@dhh) <a href=\"https://twitter.com/dhh/status/644517154046410752\">September 17, 2015</a></blockquote>\n\n<p>Claiming that some ad networks are the &quot;good guys&quot; is a too-subtle point\nwhen the crowds are looking to throw the bums out. That said, I do think\nmaking the distinction clear and aligning with user choice will be crucial\nfor the future.</p>\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">Sorry <a href=\"https://twitter.com/gruber\">@gruber</a> they just want to block all ads, seeing all as garbage. <a href=\"http://t.co/jsq5UdVqo5\">http://t.co/jsq5UdVqo5</a> <a href=\"http://t.co/21Vcksj4jA\">pic.twitter.com/21Vcksj4jA</a></p>&mdash; Danny Sullivan (@dannysullivan) <a href=\"https://twitter.com/dannysullivan/status/645634044558884864\">September 20, 2015</a></blockquote>\n\n<p>Then, there&#39;s this proposition: <a href=\"http://www.theverge.com/2015/9/17/9338963/welcome-to-hell-apple-vs-google-vs-facebook-and-the-slow-death-of-the-web\">Accept surveillance &amp; marketing - <em>or face the\ndeath of the web you love</em>.</a> </p>\n<p>Given the presumption - and frankly, the\narrogance - behind that stark ultimatum, it&#39;s no surprise that &quot;Tough, adapt or\ndie!&quot; is the response from many. Seriously? Those are the only\nchoices? Frankly, this strikes me as a failure of imagination. And, possibly\n<a href=\"https://blog.growth.supply/content-used-to-be-king-now-its-the-joker-d40703c18c73\">an overestimation of value</a> versus the price of the hassle.</p>\n<div class=\"video-container\"><iframe class=\"lazyload\" width=\"560\" height=\"315\" src=\"\" data-src=\"https://www.youtube.com/embed/IVXJmfd3cmg\" frameborder=\"0\" allowfullscreen></iframe></div>\n\n<h2 id=\"who-knew-they-could-talk\">Who knew they could talk?</h2>\n<p>Yes, I understand that today&#39;s ad-funded model has been insanely successful.\nTurnkey services have empowered lots of folks to do their thing without\nworrying about inventory or implementation or influence. Frankly, even my own\nemployer Mozilla has benefited - and me along with it by way of a regular paycheck. </p>\n<p>Still, this ad-supported web was built on quiet acceptance by an audience who\nnever gave consent except by default. These are shaky foundations:\n<a href=\"http://blog.lmorchard.com/2015/08/07/web-awesome/#users-have-leverage\">Browsers weren&#39;t really written to make computers do things their owners\ndon&#39;t want</a>. So, refusal has long been possible. <a href=\"http://www.adweek.com/news/technology/ad-networks-beware-firefox-block-third-party-cookies-147513\">And defaults\ncan change</a>. If this spike of consumer revolt grows &amp; deepens,\nacceptance can evaporate and all the finger-wagging in the world won&#39;t un-pop\nthe bubble.</p>\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">Reminder: the ad debate is a proxy war for people&#39;s right to own and control a general purpose computer.</p>&mdash; mhoye (@mhoye) <a href=\"https://twitter.com/mhoye/status/645014642075435008\">September 18, 2015</a></blockquote>\n\n<p>No, I think digging out of this mess will require some thought &amp; creativity -\nafter first accepting the possibility that the old model might actually\ncollapse. Have some empathy &amp; listen: If your users are\nblocking your ads, maybe stop treating them like livestock and ask what&#39;s up. </p>\n<p>This <em>could</em> be the first round in a negotiation ends up with a better deal\nfor everyone involved. <strong>Who knows?</strong> This opening salvo of\nblock-all-the-things could be a first crude spastic kick from stakeholders\nwho were rarely asked or given seats at the table until they took them\njust now. </p>\n<p>Or, I guess lot of us could just be jerks who want something for nothing\nand that&#39;s why we can&#39;t have nice things. I hope that&#39;s not the case.</p>\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">Then&#10;Users: Please DoNotTrack me&#10;AdTech+Publishers: Screw you&#10;&#10;Now &#10;AdTech+Publishers: Please DoNotAdBlock me &#10;Users: Screw you</p>&mdash; Kontra (@counternotions) <a href=\"https://twitter.com/counternotions/status/645598372166893568\">September 20, 2015</a></blockquote>\n\n<h2 id=\"to-be-continued\">To be continued</h2>\n<p>I&#39;ve got a few ideas. They&#39;re terrible, or else I&#39;d already be a\nbillionaire. In the interests of keeping this short, I&#39;ll save them for \nanother blog post. Either way, I suspect that shaking the web out of comfy\nad-supported complacency could just possibly lead to interesting things -\nprovided we get the the finger pointing &amp; wagging out of our systems and get\ndown to facing the challenge.</p>\n<p>Or, this could all blow over, and things will be back to business as usual\nin no time at all. Best not to rely on that, though.</p>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "body": "<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\n\nWith iOS9, Apple just went and did it. [They opened up the ability to implement\ncontent blocking extensions for Safari][contentblocking].\n\n[contentblocking]: https://developer.apple.com/library/prerelease/ios/releasenotes/General/WhatsNewInSafari/Articles/Safari_9.html#//apple_ref/doc/uid/TP40014305-CH9-SW8\n\n[<img id=\"thumbnail\" class=\"lazyload\" style=\"width: 400px\" src=\"/uploads/2015/blocked/damnyoualltohell.png\">](http://gizmodo.com/5150498/50-of-the-most-insane-things-never-seen-on-google-street-view/)\n\n## Who did what now?\n\nTo hear some folks tell it, Apple just blew up the web. Those maniacs! In\nreality, Apple haven't blocked anything themselves.  Rather, they\nopened up the *capability* to block. It's up to app developers to decide what\nto block. From there, it's up to users to decide whether & what app to\ninstall.\n\nThere's a lot of choice to go around: If this is a nuclear strike, many\nhands happily turned their keys in the launch silos. It's a big nasty veto\nagainst the current state of affairs on the web.\n\n<div class=\"pullquote right\">\nTrue to form, Apple didn't invent the content blocker. **They made\nthe tech more accessible.**\n</div>\n\n## Apple didn't start this\n\nLet's not pretend this is some sinister battle between corporate entities as\nan excuse to ignore or continue to discount the people in the middle.\n\nWhile Apple does do lots of things I dislike, [they tend to champion user\nexperience for their many paying customers][applecustomers] - i.e. mainly the\nfolks who buy hardware.  In other words, none of this would be possible if\nthere weren't already people asking for it.\n\n[applecustomers]: http://www.informationweek.com/it-life/tim-cook-customers-not-companies-should-control-their-data/d/d-id/1320684\n\nApple opening the door to\ncontent blockers that improve the user experience on the mobile web makes\nperfect sense. So does Apple's News app, considering that it serves to exploit\nthe opportunities offered by the self-inflicted wounds evident on today's\ntracking and ad laden web sites. (Of course, even there, [the experience\nstill has wrinkles in need of ironing][applenewsnyt].)\n\n[applenewsnyt]: https://twitter.com/khoi/status/645226687685337088\n\nWe've had things like [Adblock Plus][] for years. But, practically speaking,\nthat's been an obscure convenience reserved for folks in the know. True to\nform, Apple didn't invent the content blocker. They made the tech more\naccessible. If this whole thing is a master stroke by Apple to stab at any\ncompetitor's heart, the blade was gladly thrust by the disgruntled masses\nassumed until now to be [a passive compost heap][compost].\n\n[adblock plus]: https://adblockplus.org/\n[compost]: http://blog.lmorchard.com/2014/10/08/microblogging-like-its-2002/#Free_as_in_Lunch\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">Going after Apple on this wave of ad block news is a red herring. This is user choice. Hi. I&#39;m blocking your code on my computer. Negotiate.</p>&mdash; Les Orchard (@lmorchard) <a href=\"https://twitter.com/lmorchard/status/645015287713124352\">September 18, 2015</a></blockquote>\n\n## Babies, bathwater, and ultimatums\n\nWhile the shock may be understandable, publishers facing reduced revenues do\nthemselves no favors with panicked reactions to these content blocking\nextensions. \n\n[Proposing theft from an Apple Store][robapple], for example, is just stupid.\n\nBranding ad-block users as thieves also earns little sympathy. Especially not\nwhen the surveillance-driven infrastructure of delivering unwelcome messages\ngrows daily - all while user-owned data & attention & computing resources are\ntaken for granted. I'm sure to some folks - for right or wrong - the score\nfeels even.\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">The reckoning is coming for an ad industry that grew reckless with user&#39;s bandwidth, privacy, CPU, and attention. About time.</p>&mdash; DHH (@dhh) <a href=\"https://twitter.com/dhh/status/644517154046410752\">September 17, 2015</a></blockquote>\n\nClaiming that some ad networks are the \"good guys\" is a too-subtle point\nwhen the crowds are looking to throw the bums out. That said, I do think\nmaking the distinction clear and aligning with user choice will be crucial\nfor the future.\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">Sorry <a href=\"https://twitter.com/gruber\">@gruber</a> they just want to block all ads, seeing all as garbage. <a href=\"http://t.co/jsq5UdVqo5\">http://t.co/jsq5UdVqo5</a> <a href=\"http://t.co/21Vcksj4jA\">pic.twitter.com/21Vcksj4jA</a></p>&mdash; Danny Sullivan (@dannysullivan) <a href=\"https://twitter.com/dannysullivan/status/645634044558884864\">September 20, 2015</a></blockquote>\n\n[robapple]: http://fortune.com/2015/09/18/dear-apple-i-may-rob-your-store/\n\nThen, there's this proposition: [Accept surveillance & marketing - *or face the\ndeath of the web you love*.][webdeath] \n\nGiven the presumption - and frankly, the\narrogance - behind that stark ultimatum, it's no surprise that \"Tough, adapt or\ndie!\" is the response from many. Seriously? Those are the only\nchoices? Frankly, this strikes me as a failure of imagination. And, possibly\n[an overestimation of value][contentvalue] versus the price of the hassle.\n\n[contentvalue]: https://blog.growth.supply/content-used-to-be-king-now-its-the-joker-d40703c18c73\n[webdeath]: http://www.theverge.com/2015/9/17/9338963/welcome-to-hell-apple-vs-google-vs-facebook-and-the-slow-death-of-the-web\n\n<div class=\"video-container\"><iframe class=\"lazyload\" width=\"560\" height=\"315\" src=\"\" data-src=\"https://www.youtube.com/embed/IVXJmfd3cmg\" frameborder=\"0\" allowfullscreen></iframe></div>\n\n## Who knew they could talk?\n\nYes, I understand that today's ad-funded model has been insanely successful.\nTurnkey services have empowered lots of folks to do their thing without\nworrying about inventory or implementation or influence. Frankly, even my own\nemployer Mozilla has benefited - and me along with it by way of a regular paycheck. \n\nStill, this ad-supported web was built on quiet acceptance by an audience who\nnever gave consent except by default. These are shaky foundations:\n[Browsers weren't really written to make computers do things their owners\ndon't want][browserchoice]. So, refusal has long been possible. [And defaults\ncan change][mozillacookies]. If this spike of consumer revolt grows & deepens,\nacceptance can evaporate and all the finger-wagging in the world won't un-pop\nthe bubble.\n\n[browserchoice]: http://blog.lmorchard.com/2015/08/07/web-awesome/#users-have-leverage\n[mozillacookies]: http://www.adweek.com/news/technology/ad-networks-beware-firefox-block-third-party-cookies-147513 \n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">Reminder: the ad debate is a proxy war for people&#39;s right to own and control a general purpose computer.</p>&mdash; mhoye (@mhoye) <a href=\"https://twitter.com/mhoye/status/645014642075435008\">September 18, 2015</a></blockquote>\n\nNo, I think digging out of this mess will require some thought & creativity -\nafter first accepting the possibility that the old model might actually\ncollapse. Have some empathy & listen: If your users are\nblocking your ads, maybe stop treating them like livestock and ask what's up. \n\nThis *could* be the first round in a negotiation ends up with a better deal\nfor everyone involved. **Who knows?** This opening salvo of\nblock-all-the-things could be a first crude spastic kick from stakeholders\nwho were rarely asked or given seats at the table until they took them\njust now. \n\nOr, I guess lot of us could just be jerks who want something for nothing\nand that's why we can't have nice things. I hope that's not the case.\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">Then&#10;Users: Please DoNotTrack me&#10;AdTech+Publishers: Screw you&#10;&#10;Now &#10;AdTech+Publishers: Please DoNotAdBlock me &#10;Users: Screw you</p>&mdash; Kontra (@counternotions) <a href=\"https://twitter.com/counternotions/status/645598372166893568\">September 20, 2015</a></blockquote>\n\n## To be continued\n\nI've got a few ideas. They're terrible, or else I'd already be a\nbillionaire. In the interests of keeping this short, I'll save them for \nanother blog post. Either way, I suspect that shaking the web out of comfy\nad-supported complacency could just possibly lead to interesting things -\nprovided we get the the finger pointing & wagging out of our systems and get\ndown to facing the challenge.\n\nOr, this could all blow over, and things will be back to business as usual\nin no time at all. Best not to rely on that, though.\n\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2015",
    "path": "2015/09/21/blocked",
    "thumbnail": "/uploads/2015/blocked/damnyoualltohell.png"
  },
  {
    "title": "Adding Android to a multi-platform React app",
    "tags": [
      "webdev",
      "native",
      "react",
      "reactnative",
      "android",
      "ios",
      "mobile",
      "mozilla"
    ],
    "year": "2015",
    "month": "09",
    "day": "21",
    "isDir": false,
    "slug": "react-native-android",
    "date": "2015-09-21T12:00:00.000Z",
    "postName": "2015-09-21-react-native-android",
    "html": "<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\n<p>TL;DR: A couple of months back, <a href=\"http://blog.lmorchard.com/2015/07/22/react-multiplatform/\">I wrote about a TODO app built using React\nfor web and React Native for iOS</a>. </p>\n<p>Last week, the team at Facebook \n<a href=\"https://code.facebook.com/posts/1189117404435352/\">released React Native for Android</a>. So, I circled back to add\nAndroid support and revisit how code sharing looks now.</p>\n<h2 id=\"getting-up-to-speed\">Getting up to speed</h2>\n<p>With this <a href=\"https://code.facebook.com/posts/1189117404435352/\">new release of React Native</a>, I was able to add support\nfor Android to <a href=\"https://github.com/lmorchard/react-multiplatform\">my little TODO app</a>.</p>\n<p>The first task was to <a href=\"https://github.com/lmorchard/react-multiplatform/commit/38fb7afe67f8c339b8d51c69a1f515a5a91e97c7\">shuffle directories &amp; files around and add the base\nAndroid support</a>. In general, the project layout is now cleaner.\nAssets for each platform now live in separate sub-directories.</p>\n<p>Next, to start iterating &amp; experimenting, I copied the code from the iOS app\ninto Android-specific directories. I <a href=\"https://github.com/lmorchard/react-multiplatform/commit/fd80e9859400744ac5fcffc8f7d75d6703a3856d\">only needed to make some small\ntweaks</a> to account for differences in native component sets. That got my\nbase app functionality working.</p>\n<p>Then, <a href=\"https://github.com/lmorchard/react-multiplatform/commit/dd8b6b307c31b67fde23c6b090e7b1f1d8b0f579\">I squashed the iOS &amp; Android models together</a> when I realized that\ncode was identical between the React Native platforms. That could change in\nthe future, but there&#39;s no need for a difference right now.</p>\n<p>After sleeping on it, <a href=\"https://github.com/lmorchard/react-multiplatform/commit/ea7abb421b7e0486b2d3de42001724343f832901\">I refactored some common mixins</a> to take advantage of\nadditional sharing opportunities I found between iOS &amp; Android views. That\nhelped to further shrink the lines of duplicated code.</p>\n<p>This added what amounts to a new category of code sharing in my project. So,\n<a href=\"https://github.com/lmorchard/react-multiplatform/commit/cdbbff72cb941fac75f68c1c91279fa780997b26\">I separated that code into its own module</a> to make the distinction easier\nto see &amp; measure.  Now, I have code shared between web and native in general,\nand code shared between the iOS and Android native platforms.</p>\n<p>Finally, in an attempt to start automating my code metrics, <a href=\"https://github.com/lmorchard/react-multiplatform/commit/d5149768e116571d0a1a059d1ff16e1cfc45fcfd\">I added\n<code>loc-metrics.sh</code></a>.</p>\n<h2 id=\"visualizing-the-code-metrics\">Visualizing the code metrics</h2>\n<p>So, I tried drawing some Venn diagrams in my notebook. But, I&#39;m terrible at\ndrawing. That&#39;s when I remembered that SVG is a thing where I can draw by\nwriting code. So, <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial\">I spent an afternoon teaching myself some SVG</a>\nand <a href=\"https://github.com/lmorchard/react-multiplatform/commit/0014232c9858e082414e094be021170fda19aab0\">reworked my metrics shell script</a>.</p>\n<p>I&#39;m not going to bother trying to make the areas actually proportional to the\nlines of code. But, here&#39;s a rough picture of code sharing:</p>\n<img style=\"width: 240px\" src=\"/uploads/2015/react-native-android/shared-overall.svg\">\n<img style=\"width: 240px\" src=\"/uploads/2015/react-native-android/shared-models.svg\">\n<img style=\"width: 240px\" src=\"/uploads/2015/react-native-android/shared-views.svg\">\n\n<p>If you can&#39;t see those images, then you&#39;ll need to find a browser that understands\nSVG until I can be bothered to convert to PNG. (Pull requests welcome!)</p>\n<h2 id=\"conclusions-revisited\">Conclusions revisited</h2>\n<p>As before, most of the models code is shared between web and both native\nplatforms. What&#39;s unique is mostly boilerplate wrapping <a href=\"http://blog.lmorchard.com/2015/07/22/react-multiplatform/#forking-sharing-model-code-for-persistence\">the localStorage /\nasyncStorage split between web and native</a>.</p>\n<p>On the view side, however, things are a bit more spread out. In a nutshell,\nReact patterns in general allow a decent chunk of code to be shared between\nweb and native. And even more code can be shared between the iOS and Android\nplatforms.</p>\n<p>But, unique concerns in each platform - web, iOS, and Android - call for\nunique code for each case. This is not actually a failing, though: Varying the\nUX between web &amp; iOS &amp; Android is a flexibility you&#39;ll probably appreciate. </p>\n<p>In other words, use components &amp; conventions unique to each\nplatform without your app suffering from the lowest-common-denominator UX\nproblem historically found in a lot of multi-platform apps. In the case of this\nTODO app, that just boils down to trivialities like checkboxes &amp; switches &amp;\nsegmented controls. In a larger app, I&#39;d expect this concern to grow.</p>\n<p>I&#39;m being lazy and not coding up the math in percentages. This approach shared\nabout half the code from the web app, and even more than that for each of the\nnative apps. I think that&#39;s a significant advantage over writing separate\napps.</p>\n<p>Of course, <a href=\"http://blog.lmorchard.com/2015/07/22/react-multiplatform/#conclusion\">all my caveats from the first go\naround</a> still apply: This is a very simple app. The code devoted to\ndoing interesting things versus React boilerplate is probably not at a good\nratio. Also, as more view components arise, further overlap might be found.\nAnd, hopefully, common logic would remain the primary area of growth on the\nmodel site.</p>\n<p>I think this approach toward building apps remains interesting &amp; promising. </p>\n<!-- vim: set wrap wm=5 syntax=markdown textwidth=78: -->\n",
    "body": "<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\nTL;DR: A couple of months back, [I wrote about a TODO app built using React\nfor web and React Native for iOS][rnpart1]. \n\nLast week, the team at Facebook \n[released React Native for Android][rnandroid]. So, I circled back to add\nAndroid support and revisit how code sharing looks now.\n\n[rnandroid]: https://code.facebook.com/posts/1189117404435352/\n[rnpart1]: http://blog.lmorchard.com/2015/07/22/react-multiplatform/\n[reactmultiplatform]: https://github.com/lmorchard/react-multiplatform\n\n## Getting up to speed\n\nWith this [new release of React Native][rnandroid], I was able to add support\nfor Android to [my little TODO app][reactmultiplatform].\n  \nThe first task was to [shuffle directories & files around and add the base\nAndroid support][c1]. In general, the project layout is now cleaner.\nAssets for each platform now live in separate sub-directories.\n\n[c1]: https://github.com/lmorchard/react-multiplatform/commit/38fb7afe67f8c339b8d51c69a1f515a5a91e97c7\n\nNext, to start iterating & experimenting, I copied the code from the iOS app\ninto Android-specific directories. I [only needed to make some small\ntweaks][c2] to account for differences in native component sets. That got my\nbase app functionality working.\n\n[c2]: https://github.com/lmorchard/react-multiplatform/commit/fd80e9859400744ac5fcffc8f7d75d6703a3856d\n\nThen, [I squashed the iOS & Android models together][c3] when I realized that\ncode was identical between the React Native platforms. That could change in\nthe future, but there's no need for a difference right now.\n\n[c3]: https://github.com/lmorchard/react-multiplatform/commit/dd8b6b307c31b67fde23c6b090e7b1f1d8b0f579\n\nAfter sleeping on it, [I refactored some common mixins][c4] to take advantage of\nadditional sharing opportunities I found between iOS & Android views. That\nhelped to further shrink the lines of duplicated code.\n\n[c4]: https://github.com/lmorchard/react-multiplatform/commit/ea7abb421b7e0486b2d3de42001724343f832901\n\nThis added what amounts to a new category of code sharing in my project. So,\n[I separated that code into its own module][c5] to make the distinction easier\nto see & measure.  Now, I have code shared between web and native in general,\nand code shared between the iOS and Android native platforms.\n\n[c5]: https://github.com/lmorchard/react-multiplatform/commit/cdbbff72cb941fac75f68c1c91279fa780997b26\n\nFinally, in an attempt to start automating my code metrics, [I added\n`loc-metrics.sh`][c6].\n\n[c6]: https://github.com/lmorchard/react-multiplatform/commit/d5149768e116571d0a1a059d1ff16e1cfc45fcfd\n\n## Visualizing the code metrics\n\nSo, I tried drawing some Venn diagrams in my notebook. But, I'm terrible at\ndrawing. That's when I remembered that SVG is a thing where I can draw by\nwriting code. So, [I spent an afternoon teaching myself some SVG][svgtutorial]\nand [reworked my metrics shell script][c7].\n\n[c7]: https://github.com/lmorchard/react-multiplatform/commit/0014232c9858e082414e094be021170fda19aab0\n[svgtutorial]: https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial\n\nI'm not going to bother trying to make the areas actually proportional to the\nlines of code. But, here's a rough picture of code sharing:\n\n<img style=\"width: 240px\" src=\"/uploads/2015/react-native-android/shared-overall.svg\">\n<img style=\"width: 240px\" src=\"/uploads/2015/react-native-android/shared-models.svg\">\n<img style=\"width: 240px\" src=\"/uploads/2015/react-native-android/shared-views.svg\">\n\nIf you can't see those images, then you'll need to find a browser that understands\nSVG until I can be bothered to convert to PNG. (Pull requests welcome!)\n\n## Conclusions revisited\n\nAs before, most of the models code is shared between web and both native\nplatforms. What's unique is mostly boilerplate wrapping [the localStorage /\nasyncStorage split between web and native][storagesplit].\n\n[storagesplit]: http://blog.lmorchard.com/2015/07/22/react-multiplatform/#forking-sharing-model-code-for-persistence\n\nOn the view side, however, things are a bit more spread out. In a nutshell,\nReact patterns in general allow a decent chunk of code to be shared between\nweb and native. And even more code can be shared between the iOS and Android\nplatforms.\n\nBut, unique concerns in each platform - web, iOS, and Android - call for\nunique code for each case. This is not actually a failing, though: Varying the\nUX between web & iOS & Android is a flexibility you'll probably appreciate. \n\nIn other words, use components & conventions unique to each\nplatform without your app suffering from the lowest-common-denominator UX\nproblem historically found in a lot of multi-platform apps. In the case of this\nTODO app, that just boils down to trivialities like checkboxes & switches &\nsegmented controls. In a larger app, I'd expect this concern to grow.\n\nI'm being lazy and not coding up the math in percentages. This approach shared\nabout half the code from the web app, and even more than that for each of the\nnative apps. I think that's a significant advantage over writing separate\napps.\n\nOf course, [all my caveats from the first go\naround][caveats] still apply: This is a very simple app. The code devoted to\ndoing interesting things versus React boilerplate is probably not at a good\nratio. Also, as more view components arise, further overlap might be found.\nAnd, hopefully, common logic would remain the primary area of growth on the\nmodel site.\n\n[caveats]: http://blog.lmorchard.com/2015/07/22/react-multiplatform/#conclusion\n\nI think this approach toward building apps remains interesting & promising. \n\n<!-- vim: set wrap wm=5 syntax=markdown textwidth=78: -->\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2015",
    "path": "2015/09/21/react-native-android",
    "thumbnail": "/uploads/2015/react-native-android/shared-overall.svg"
  },
  {
    "title": "The web is awesome",
    "tags": [
      "webdev",
      "web",
      "adtech",
      "advertising",
      "internet",
      "privacy",
      "tracking"
    ],
    "year": "2015",
    "month": "08",
    "day": "07",
    "isDir": false,
    "slug": "web-awesome",
    "date": "2015-08-07T12:00:00.000Z",
    "postName": "2015-08-07-web-awesome",
    "html": "<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\n<p>TL;DR: The open web is a beautiful thing that empowers makers while offering users leverage. There&#39;s nothing else like it. It&#39;s constantly improving. It&#39;s up to you what you do with it.</p>\n<!--more-->\n\n<h2 id=\"the-beauty-of-the-open-web\">The beauty of the open web</h2>\n<p>So, here I am again, channelling my easily excited self from 1993: Man, I love the web.</p>\n<p>It&#39;s easy to take this thing for granted, but take a step back and consider it: You&#39;ve got this thing called a <a href=\"https://en.wikipedia.org/wiki/Web_browser\">browser</a>. It acts as an <a href=\"https://en.wikipedia.org/wiki/User_agent\">Agent</a> on your behalf, reaching out to computers on the Internet and requesting resources identified via <a href=\"https://en.wikipedia.org/wiki/Uniform_resource_locator\">Universal Resource Locators</a>. Looking among these resources, you&#39;d find <a href=\"https://en.wikipedia.org/wiki/Hypertext\">hypertext</a>, <a href=\"https://en.wikipedia.org/wiki/Style_sheet_(web_development)\">style sheets</a>, and <a href=\"https://en.wikipedia.org/wiki/Multimedia\">multimedia</a>.</p>\n<div class=\"pullquote\">\nSo, here I am again, channelling my easily excited self from 1993: **Man, I love the web.**\n</div>\n\n<p>Your browser comes with code that knows what to do with common types of content. But, browsers can&#39;t anticipate every invention. So, one of the supported resource content types is <a href=\"https://en.wikipedia.org/wiki/JavaScript\">JavaScript</a>. This is a <em>meta content type</em>. That is, it offers the ability to augment existing content types and support completely new ones.</p>\n<p>Chew on <em>that</em> awhile: Not satisfied to be just a networked document viewer with a frozen set of features, browsers ship with a <a href=\"https://en.wikipedia.org/wiki/Toolchain\">toolchain</a> for running code on demand. Kind of scary, but it works way better than any reasonable person should expect.</p>\n<p>And again, thanks to the Internet, these resources can each come literally from anywhere<!-- ([even Sweden][cern]!) -->, hosted by any person or company or organization. Your browser chases URL references and collects all these disparate resources automatically. It assembles them into what is basically a zero-installation software application that&#39;s temporarily resident on your computer.</p>\n<p>We call these insane things &quot;web pages&quot;. Their negotiated &amp; ephemeral hold on our computers is why we say we only &quot;visit&quot; them. In fact, it might be more accurate to say web pages are guests we host on our computers for a short time.</p>\n<!--\nSo, yeah, I'm crazy about the web. Crazy enough to work for Mozilla and turn down every other job offer over the years because the mission aligns so well with so many of my favorite things.\n-->\n\n<h2 id=\"makers-have-power\">Makers have power</h2>\n<p>There is no other successful system like this on the planet. No other system for delivering content and software that is this open and free of gatekeepers deciding what we can publish. There&#39;s no app store, no review process, no adult supervision. You can make the most amazing or terrible things. Short of legal action or government intervention, no one can really stop you as long as you&#39;re paying the hosting bill.</p>\n<h3 id=\"build-your-own-whatever\">Build your own whatever</h3>\n<p>In fact, even though I wrote that browsers are agents acting on their users&#39; behalf - they&#39;re historically weak advocates by default. In other words, browsers do what web pages ask, with a few exceptions for safety and security. Today&#39;s open web offers the balance of control largely to publishers.</p>\n<div class=\"image-group\">\n[<img class=\"lazyload inset left\" data-src=\"/uploads/2015/the-verge-web-sucks/im-surrounded.png\">][theverge]\n[<img class=\"lazyload inset right\" data-src=\"/uploads/2015/web-awesome/oregon-trail.png\">][jsmess]\n</div>\n\n<p>No one will stop you from <a href=\"http://blog.lmorchard.com/2015/07/22/the-verge-web-sucks/\">building a magazine site loaded with spyware and ads</a>.</p>\n<p>Of course, you can also <a href=\"https://archive.org/details/softwarelibrary\">emulate old computers to make running classic software linkable and embeddable</a>.</p>\n<div class=\"image-group\">\n[<img class=\"inset left\" id=\"thumbnail\" src=\"/uploads/2015/web-awesome/troxel.png\">][troxel]\n[<img class=\"lazyload inset right\" data-src=\"/uploads/2015/web-awesome/blogger.jpeg\">][iranjail]\n</div>\n\n<p>Or you can <a href=\"https://www.reddit.com/r/TroveCreations/\">create new hats and weapons for an MMO</a>, sharing your work <a href=\"https://chrmoritz.github.io/Troxel/#m=EBAzAP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0CxQADxy7//gkAA8cu//4lAggDxy7//QIIA8cu//4lAAPHLv/+CQADxy7///0DZQIYA8cu//4hAhgDxy7//iECGAPHLv///QNlAAPHLv/+CQADxy7//iUCGAPHLv/+JQADxy7//gkAA8cu///9A7EAA8cu///9Au0CCAGAoKP8AVyQk/4IAYCgo/4dAgQBgKCj/ggCUDQ3/ALIAAP8AlA0N/4EAYCgo/4ZAAGAoKP8AlA0N/wCyAAD/gQCUDQ3/ALIAAP+BAJQNDf8AYCgo/4ZAAGAoKP+GAJQNDf8AYCgo/4ZAAFckJP+GAJQNDf8AYCgo/4ZAAGAoKP+GAJQNDf8AYCgo/4ZAAGAoKP8AlA0N/wCyAAD/AJQNDf8AsgAA/4IAlA0N/wBgKCj/hkCBAGAoKP+DAJQNDf8AsgAA/4EAYCgo/4dAAGAoKP8AVyQk/4QAYCgo//hAgQBgKCj/gQBXJCT/ggBgKCj/h0CIAGAoKP+GQIgAYCgo/4ZAiABgKCj/hkAAVyQk/4IAYCgo/wDxy7//gwBgKCj/hkAAVyQk/4cAYCgo/4ZAiABgKCj/hkCIAGAoKP+HQIEAYCgo/4EAVyQk/4IAYCgo//hAgQBgKCj/AFckJP+DAGAoKP+HQIgAYCgo/4ZAiABgKCj/hkCIAGAoKP+GQIMAYCgo/wDxy7//gwBgKCj/hkAAVyQk/4cAYCgo/4ZAAFckJP+HAGAoKP+GQIgAYCgo/4dAggBgKCj/ggBXJCT/AGAoKP/4QABgKCj/AFckJP+EAGAoKP+HQIgAYCgo/4ZAiABgKCj/hkCIAGAoKP+GQIMAYCgo/wDxy7//gwBgKCj/hkCIAGAoKP+GQABXJCT/hwBgKCj/hkAAYCgo/wBXJCT/hABgKCj/gQBXJCT/h0CEAGAoKP+BAFckJP/4QABgKCj/AFckJP+EAGAoKP+HQABgKCj/AFckJP+GAGAoKP+GQIgAYCgo/4ZAiABgKCj/hkCDAGAoKP8A8cu//4MAYCgo/4ZAiABgKCj/hkCHAGAoKP8AVyQk/4ZAAGAoKP8AVyQk/4QAYCgo/4EAVyQk/4dAhgBgKCj/+ECGAGAoKP+HQABgKCj/AFckJP+GAGAoKP+GQIgAYCgo/4ZAiABgKCj/hkCDAGAoKP8A8cu//4MAYCgo/4ZAhwBgKCj/AFckJP+GQIcAYCgo/wBXJCT/hkAAYCgo/wBXJCT/hgBgKCj/h0AAYCgo/wBXJCT/hABgKCj/+UCEAGAoKP+JQABXJCT/hQBgKCj/h0AAVyQk/4cAYCgo/4ZAhwBgKCj/AFckJP+GQIMAYCgo/wDxy7//ggBgKCj/AFckJP+GQIcAYCgo/wBXJCT/hkCIAGAoKP+HQIYAYCgo/4lAAFckJP+DAGAoKP/6QIQAYCgo/4lAhgBgKCj/h0AAVyQk/4YAYCgo/wBXJCT/hkAAVyQk/4YAYCgo/wBXJCT/hkCDAGAoKP8A8cu//4MAYCgo/4ZAiABgKCj/hkCIAGAoKP+HQIYAYCgo/4lAAGAoKP8AVyQk/4IAYCgo//pAgwBgKCj/AFckJP+JQIUAYCgo/wBXJCT/h0CHAGAoKP8AVyQk/4ZAiABgKCj/hkAAVyQk/4IAYCgo/wDxy7//gwBgKCj/hkAAVyQk/4cAYCgo/4ZAiABgKCj/h0CGAGAoKP+JQABgKCj/gQBXJCT/gQBgKCj/+kCCAGAoKP8AVyQk/wBgKCj/iUCGAGAoKP+HQIgAYCgo/4ZAiABgKCj/hkCDAGAoKP8A8cu//4MAYCgo/4ZAiABgKCj/hkAAVyQk/4cAYCgo/4dAhgBgKCj/iUCBAGAoKP+BAFckJP8AYCgo//pAgQBgKCj/gQBXJCT/AGAoKP+JQIYAYCgo/4dAiABgKCj/hkCIAGAoKP+GQIMAYCgo/wDxy7//gwBgKCj/hkCIAGAoKP+GQIgAYCgo/4dAAFckJP+FAGAoKP+JQIMAYCgo/wBXJCT/+kAAYCgo/4EAVyQk/4EAYCgo/4lAhgBgKCj/h0CIAGAoKP+GQIgAYCgo/4ZAgwBgKCj/APHLv/+DAGAoKP+GQIgAYCgo/4ZAiABgKCj/h0AAVyQk/4QAYCgo/wBXJCT/iUAAVyQk/4MAYCgo//pAgQBXJCT/ggBgKCj/iUCGAGAoKP+HQIgAYCgo/4ZAiABgKCj/hkCDAGAoKP8A8cu//4MAYCgo/4ZAiABgKCj/hkCHAGAoKP8AVyQk/4dAhgBgKCj/iUCBAFckJP+CAGAoKP/6QABXJCT/gwBgKCj/iUAAVyQk/4UAYCgo/4dAAFckJP+HAGAoKP+GQIgAYCgo/4ZAgwBgKCj/APHLv/+DAGAoKP+GQIcAYCgo/wBXJCT/hkCHAGAoKP8AVyQk/4dAhgBgKCj/iUAAYCgo/4EAVyQk/4EAYCgo//pAhABgKCj/iUCGAGAoKP+HQABXJCT/hwBgKCj/hkCHAGAoKP8AVyQk/4ZAgwBgKCj/APHLv/+CAGAoKP8AVyQk/4ZAhwBgKCj/AFckJP+GQIgAYCgo/4dAhgBgKCj/iUCBAGAoKP+BAFckJP8AYCgo//tAggBgKCj/ikCGAGAoKP+IQIYAYCgo/4dAAFckJP+GAGAoKP8AVyQk/4ZAAFckJP+CAGAoKP8A8cu//4MAYCgo/4ZAiABgKCj/h0CGAGAoKP+IQIQAYCgo/wBXJCT/AGAoKP+KQIEAYCgo/wBXJCT//ECCAGAoKP+KQIQAYCgo/4EAVyQk/4hAhQBgKCj/AFckJP+HQIgAYCgo/4ZAgwBgKCj/APHLv/+DAGAoKP+GQABXJCT/hwBgKCj/h0CGAGAoKP+IQIQAYCgo/4EAVyQk/4pAggBgKCj//0CLQIIAYCgo/4EAVyQk/4lAhgBgKCj/iECGAGAoKP+IQIIAYCgo/wDxy7//ggBgKCj/iECGAGAoKP+IQABXJCT/hABgKCj/AFckJP+JQIQAYCgo//9AmkAAYCgo/4EAVyQk/4EAYCgo/4lAAGAoKP+EAJQNDf8AYCgo/4hAAGAoKP8AsgAA/4IAlA0N/wCyAAD/AGAoKP+IQABgKCj/ALIAAP+DAJQNDf8AYCgo/4hAAGAoKP+EAJQNDf8AVyQk/4hAAFckJP+CAJQNDf8AsgAA/wCUDQ3/AFckJP+JQABXJCT/gwBgKCj//0CaQABgKCj/AFckJP+CAGAoKP+KQABgKCj/gkAAYCgo/4lAAGAoKP+BQADxy7//gUAAYCgo/4hAAGAoKP9AggDxy7//QABXJCT/iEAAYCgo/4FAAPHLv/+BQABXJCT/iUAAYCgo/4JAAGAoKP+KQABXJCT/gwBgKCj//0CbQABXJCT/gQBgKCj/i0AAVyQk/wBgKCj/QABgKCj/AFckJP+JQIEAYCgo/0AA8cu//0AAYCgo/wBXJCT/iEAAYCgo/0CCAPHLv/9AAGAoKP+IQIEAYCgo/0AA8cu//0CBAGAoKP+JQIEAYCgo/0CBAGAoKP+LQABXJCT/gQBgKCj//0CdQABgKCj/jUAAYCgo/0AAVyQk/4tAAFckJP9AAPHLv/9AAGAoKP+JQABgKCj/QIIA8cu//wBgKCj/ikAAYCgo/0AA8cu//wBgKCj/AFckJP+LQIEAYCgo/wBXJCT/jUAAVyQk//9ArkAAVyQk/41AAGAoKP8A8cu//wBgKCj/i0AAVyQk/4IA8cu//wBXJCT/i0AAYCgo/wDxy7//AFckJP+NQABgKCj//0DeQADxy7///0D+QD//AP/6/0D+QADxy7///0D+QADxy7///0D+QADxy7///0DsQADxy7//gkAA8cu//4lAhgDxy7//iUAA8cu//4JAAPHLv///QNlAggDxy7//QIIA8cu//4hAhgDxy7//iECCAPHLv/9AggDxy7///0DZQADxy7//gkAA8cu//4lAggDxy7//QIIA8cu//4lAAPHLv/+CQADxy7///0CoQA==\">as a link to a live 3D modeling tool</a>.</p>\n<p>Or you can write <a href=\"https://medium.com/matter/the-web-we-have-to-save-2eb1fe15a426\">a blog that lands you in an Iranian jail</a> for political speech.</p>\n<p>Or you can craft <a href=\"http://cabbi.bo/enough/\">a gorgeous existential narrative about luminous beings</a>.</p>\n<p><a href=\"http://cabbi.bo/enough/\"><img src=\"/uploads/2015/web-awesome/enough.png\" style=\"display: block; margin: auto; width: 66%; clear: both\"></a></p>\n<h3 style=\"clear: both\">DIY for cheap</h3>\n\n<p>And, it&#39;s never been cheaper to put something on the web. For example, <a href=\"http://blog.lmorchard.com/2014/10/20/static-blog-generation-with-gulp/\">this blog lives mostly on Amazon S3</a>. My <a href=\"http://blog.lmorchard.com/2015/07/22/the-verge-web-sucks/\">last post</a> got around 55,000 unique views so far - the most attention I&#39;ve gotten in years. It looks like that&#39;s going to cost me about $6 by the end of the month. I could have probably cut that in half if I&#39;d been smarter about things.</p>\n<p>To put this in my old-person perspective: Someone once told me it was $1 or $5 to photocopy &amp; mail a single issue of a <a href=\"https://en.wikipedia.org/wiki/Zine\">zine</a>. Bump that up to $5-10 for a CD-ROM or DVD in a nice padded envelope. Holy crap. I couldn&#39;t even imagine funding a passion project centered around media like that and reaching 55,000 people across the planet.</p>\n<h2 id=\"users-have-leverage\">Users have leverage</h2>\n<p>I know I just wrote that the balance of control on the web leans mainly toward the publishers. But, users on the web <em>do</em> have leverage when they care to assert themselves.</p>\n<div class=\"pullquote right\">\nWith this choice in personalized user agents, **the relationship between reader and publisher must be negotiated**.\n</div>\n\n<h3 id=\"browser-choice\">Browser choice</h3>\n<p>First off, you have a choice in browsers. The browser market is pretty healthy right now. Once upon a time, <a href=\"https://en.wikipedia.org/wiki/Browser_wars#First_browser_war\">Microsoft Internet Explorer held 96% of the market</a>. Today, we&#39;ve got <a href=\"https://en.wikipedia.org/wiki/Browser_wars#Second_browser_war\">at least half-a-dozen browsers</a> with almost as many rendering engines under their hoods.</p>\n<p>This diversity in browsers is important, and switching cost is low on a web with shared standards. You can vote with your feet and try another browser at any time. This also hinders any single company from injecting their own proprietary features into the web and setting up tollbooths.</p>\n<h3 id=\"add-ons-and-extensions\">Add-ons and extensions</h3>\n<p>Your choice in browsers includes some that can be customized with <a href=\"https://addons.mozilla.org/en-US/firefox/\">add-ons</a> and <a href=\"https://chrome.google.com/webstore/category/extensions\">extensions</a>. This is where a browser can really shine as a personalized <a href=\"https://en.wikipedia.org/wiki/User_agent\">User Agent</a>.</p>\n<p><a href=\"https://adblockplus.org/en/about\"><img class=\"lazyload inset left wide\" data-src=\"/uploads/2015/web-awesome/adblock.png\"></a></p>\n<p>Install <a href=\"https://adblockplus.org/\">Adblock Plus</a>, and you can deflect most attempts to track you &amp; display ads.</p>\n<p>Install <a href=\"https://www.readability.com/\">Readability</a>, and you can get a cleaner view of articles you&#39;d like to read.</p>\n<p>Install <a href=\"https://www.libraryextension.com/\">Library Extension</a> and your browser will automatically tell you when a book is available at your local library while you&#39;re shopping on Amazon.</p>\n<p>You can even craft your own tweaks, if you&#39;re so inclined. In a spirit similar to the web itself, the tech to build these things is generally available to anyone.</p>\n<p>Publishers on the web sometimes deride these tweaks. It&#39;s understandable: The most popular ones have long been centered around refusing to accept many of the annoyances that also happen to fund the web.</p>\n<h3 id=\"the-web-is-a-negotiation\">The web is a negotiation</h3>\n<p>With this choice in personalized user agents, the relationship between reader and publisher must be <em>negotiated</em>. Mostly, it&#39;s a quiet negotiation by defaults: Publishers can do as much as readers accept. But, when readers introduce resistance in the form of using ad-blockers, they can impose a cost to publishers who get carried away.</p>\n<p>As I wrote before, web pages are <em>guests</em> on our computers. Most users have been very tolerant of these guests&#39; behavior. Tolerant to the point where a publisher could take for granted or even feel entitled to the bandwidth and hardware we pay for. But, it&#39;s entirely possible for this negotiation to turn sour, <a href=\"http://fredrikdeboer.com/2015/04/27/the-supervillains-guide-to-saving-the-internet/\">forcing the industry to come up with a new deal</a>.</p>\n<h2 id=\"if-its-not-the-web-its-not-the-web\">If it&#39;s not the web, it&#39;s not the web</h2>\n<p>There&#39;s a new iPhone ad out there - &quot;<a href=\"https://www.apple.com/iphone/why-theres-iphone/\">If it&#39;s not an iPhone, it&#39;s not an iPhone</a>&quot;.</p>\n<div class=\"video-container\"><iframe class=\"lazyload\" width=\"560\" height=\"315\" src=\"\" data-src=\"https://www.youtube.com/embed/wl3PlrPq8sw\" frameborder=\"0\" allowfullscreen></iframe></div>\n\n<p>This is one of the things the narrator says:</p>\n<blockquote>\n<p>The hardware part makes the most of the software part, and the software part makes the most of the hardware part. When you design the whole phone, all the parts work together as one amazing part.</p>\n</blockquote>\n<p>This is obviously true, and the iPhone is a great product. You can curate a smooth and &quot;magical&quot; experience, when you own a platform from bottom to top. But, the cost is that makers have less power and users have less leverage.</p>\n<h3 id=\"theres-only-one-app-store\">There&#39;s only one App Store</h3>\n<p><a href=\"http://www.comicvine.com/connor-macleod/4005-47561/\"><img class=\"lazyload inset right\" data-src=\"/uploads/2015/web-awesome/connor-macleod.jpg\"></a></p>\n<p>As gatekeepers running the one and only App Store, Apple can demand a cut of all money that flows to makers. <a href=\"https://developer.apple.com/app-store/review/guidelines/\">Apple also lists a lot of requirements</a>. Some are great ideas for users, while some serve to reinforce Apple&#39;s control over its platform.</p>\n<!-- more to say about makers? -->\n\n<p>As a user, you can somewhat customize your iPhone by the apps you install. As of iOS 8, there are also <a href=\"http://arstechnica.com/apple/2014/06/explaining-ios-8s-extensions-opening-the-platform-while-keeping-it-secure/\">App Extensions</a> that allow you to add selected bits of new functionality to existing apps.</p>\n<p>But, there are limits: For instance, did you know that despite there being many apps that let you browse the web, <a href=\"http://www.howtogeek.com/184283/why-third-party-browsers-will-always-be-inferior-to-safari-on-iphone-and-ipad/\">there&#39;s really only one web engine</a> on iOS? (&quot;<a href=\"https://developer.apple.com/app-store/review/guidelines/\">2.17 Apps that browse the web must use the iOS WebKit framework and WebKit Javascript</a>&quot;)</p>\n<h3 id=\"leverage-constrained\">Leverage constrained</h3>\n<p>Luckily, users of iOS 9 will soon benefit from <a href=\"http://appleinsider.com/articles/15/06/15/inside-app-extensions-webkit-content-blockers-extend-user-privacy-in-ios-9-safari-9\">Content Blocker App Extensions</a> in Safari. These an improvement on filter lists for <a href=\"https://adblockplus.org/\">AdBlock Plus</a>: The extensions consist of JSON files containing patterns &amp; rules used to block requests and selectively remove content from pages.</p>\n<p>Outside of Safari and the constrained world of App Extensions, though, users don&#39;t have much leverage over what apps makers do. If you don&#39;t like it, don&#39;t install it. There&#39;s no view source or built-in developer tools, so even power users mainly rely on Apple to monitor apps.</p>\n<h3 id=\"black-boxes-all-the-way-down\">Black boxes all the way down</h3>\n<p>There&#39;s also the matter of apps being their own mini-silos. They don&#39;t have the spontaneous linkability of the web. Sure, <a href=\"http://applinks.org/\">some efforts have been made</a> with regard to that, but it&#39;s kind of an awkward bolt-on rather than something inherent to the fabric of it all.</p>\n<p>On top of linkability, the web also offers <em>composability</em>. That is, you can embed resources and scripts from other sites. For example, there was a YouTube video just a few paragraphs ago and there&#39;s a Disqus-driven comment section at the end of this post.</p>\n<p>Or, check out this tweet:</p>\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">Current cat status: Cheddars and Catsby Cheddarsson <a href=\"http://t.co/9y9Q2uDwxb\">pic.twitter.com/9y9Q2uDwxb</a></p>&mdash; Les Orchard (@lmorchard) <a href=\"https://twitter.com/lmorchard/status/628683951629029376\">August 4, 2015</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>Or, hey, want to try a game of Oregon Trail?</p>\n<iframe class=\"lazyload\" data-src=\"https://archive.org/embed/msdos_Oregon_Trail_Deluxe_The_1992\" width=\"560\" height=\"384\" frameborder=\"0\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" allowfullscreen></iframe>\n\n<p>In an app, it&#39;s hard to mix content from totally different sites together like this. At least, not without a lot of preparation at the top or just punting off to an embedded web browser. Me, I didn&#39;t write any of the code to make a tweet or an MS-DOS emulator work on this page.</p>\n<h3 id=\"you-cant-take-it-with-you\">You can&#39;t take it with you</h3>\n<p>As something that affects a normal busy person, this is the strongest argument I have against apps in Apple&#39;s ecosystem: If you don&#39;t like any part of it, your only move is not to play.</p>\n<p>Like the ad says, the hardware part and the software part are inseparable. But, if you ever decide to leave once you&#39;ve been inside, you leave behind what you bought while you were there. This is why I&#39;ve owned iPods, but never an iPhone.</p>\n<h2 id=\"the-web-is-learning-from-apps\">The web is learning from apps</h2>\n<p>Even after writing that last section, though, I&#39;m hard pressed to make a case against apps. Apps solve a lot of problems we&#39;ve had on the web. Installation versus a temporary visit can make things work better. User interfaces tend to be simpler &amp; more focused - something which Apple in particular is inclined to enforce &amp; curate. Monetization is better - there aren&#39;t as many trackers &amp; ads.</p>\n<p>Most of the problems apps solve <em>can</em> be solved on the web. Some of them are technological, but some of them are more a matter of perspective and assumptions.</p>\n<div class=\"pullquote right\">\nMost of the problems apps solve **can be solved on the web**.\n</div>\n\n<h3 id=\"permanence--integration\">Permanence &amp; Integration</h3>\n<p>If this page was an app, you might install it. But, that&#39;s an explicit up front commitment. And you have to remember to uninstall it later. What if web pages could do that implicitly and <a href=\"https://infrequently.org/2015/06/progressive-apps-escaping-tabs-without-losing-our-soul/\">maybe even ask nicely - <em>after a few visits</em> - if you&#39;d like to make the relationship more explicit by pinning it to your home screen</a>?</p>\n<p>We have technologies on the horizon like <a href=\"http://www.html5rocks.com/en/tutorials/service-worker/introduction/\">Service Workers</a> and <a href=\"https://brendaneich.com/2015/06/from-asm-js-to-webassembly/\">WebAssembly</a> that can make web pages more persistent and efficient by downloading optimized content &amp; code and making it available offline. Web pages can ask for expanded access to your device through <a href=\"https://developer.mozilla.org/en-US/docs/WebAPI\">WebAPIs</a>. This includes things like <a href=\"https://developers.google.com/web/updates/2015/03/increasing-engagement-with-app-install-banners-in-chrome-for-android?hl=en\">an icon on your home screen</a>, running in the background, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API/Using_the_Notifications_API\">displaying notifications</a>.</p>\n<p>In other words, we&#39;re very close to a state where web pages can have benefits of installed native apps while retaining the maker power and user leverage of the open web.</p>\n<h3 id=\"the-web-deserves-a-cleaner-slate\">The web deserves a cleaner slate</h3>\n<p>Lots of developers are after a <a href=\"http://jankfree.org/\">jank free</a>, <a href=\"http://engineering.flipboard.com/2015/02/mobile-web/\">60 frames-per-second</a> experience. That&#39;s where many native apps can shine and it&#39;s great. I think the mobile web is entirely capable of it. We&#39;ve got <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions\">hardware-accelerated CSS transitions</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes\">flexbox</a> to help with fast, flexible user interfaces. We&#39;ve got <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\">Web Workers</a> to shove work off onto separate threads to help keep things smooth.</p>\n<div class=\"pullquote\">\nWhen you're making an app, most of the time you're forced to **start fresh and work within app constraints**.\n</div>\n\n<p>I think a helpful thing is start with a <a href=\"https://codemyviews.com/blog/mobilefirst\">clean mobile-first slate</a>. Maybe more important than the <em>mobile</em> is the <strong>clean slate</strong>:</p>\n<p>It&#39;s easy to start with a years&#39; old web site and just slap a few extra styles &amp; scripts on. When you&#39;re making an app, most of the time you&#39;re <em>forced</em> to start fresh and work within app constraints. I think that&#39;s a huge advantage for the experience that I haven&#39;t seen a lot of folks talk about.</p>\n<p>Hell, <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript\">make a fresh effort to see what&#39;s out there</a>. Skip the crowd of JS frameworks for a bit. Take a look at <a href=\"http://vanilla-js.com/\">Vanilla JS</a>. You might be surprised at how much you can get done these days without even jQuery onboard.</p>\n<p>Accept cutting off or (ideally) shipping a reduced experience to older browsers, and you might be surprised what you can make happen on modern browsers. Even better, get your <a href=\"http://www.w3.org/wiki/Graceful_degradation_versus_progressive_enhancement\">progressive enhancement</a> game on.</p>\n<h3 id=\"monetization-is-hard-without-a-gatekeeper\">Monetization is hard without a gatekeeper</h3>\n<p>As for monetization, well, that&#39;s a can of worms. More persistent web pages <em>will</em> help solve <a href=\"http://blog.lmorchard.com/2015/07/22/the-verge-web-sucks/\">the problem of the continually re-downloaded 7MB of JavaScript tracking you and showing ads</a>. But, if that stuff causes less of a drag, will we really care quite as much?</p>\n<p><a href=\"http://amzn.to/1MTayLa\"><img class=\"lazyload inset right\" data-src=\"/uploads/2015/web-awesome/who-owns-the-future.jpg\"></a></p>\n<p>Maybe not. If performance &amp; surveillance concerns are decoupled, we might not notice a problem. I mean, native apps <a href=\"http://www.google.com/analytics/mobile/\">track</a> <a href=\"https://developer.apple.com/app-store/app-analytics/\">us</a> <a href=\"https://developers.facebook.com/products/analytics/\">too</a>, and we don&#39;t seem to care. Though, I suppose the siloed nature of apps might make it a little harder to follow you everywhere you go. (I wouldn&#39;t count on that, though.)</p>\n<p>I don&#39;t really have great ideas, here. I pay for some stuff, I don&#39;t pay for some other stuff. I&#39;m honestly not 100% against ads, though I think we could use fewer of them.</p>\n<p>Without an App Store as a gateway, though, the same old revenue problems persist. And still, <a href=\"https://en.wikipedia.org/wiki/There_ain&#39;t_no_such_thing_as_a_free_lunch\">there ain&#39;t no such thing as a free lunch</a>. In fact, folks like <a href=\"http://transcopyright.org/hcoinRemarks-D28.html\">Ted Nelson</a> and <a href=\"http://www.niemanlab.org/2013/05/jaron-lanier-wants-to-build-a-new-middle-class-on-micropayments/\">Jaron Lanier</a> have been saying for years (and decades) that the free-of-charge web is failing itself and all of us. Maybe we need a web with more robust two-way links that track provenance and distribute wealth.</p>\n<p>(For what it&#39;s worth, <a href=\"http://decafbad.com/blog/2002/11/11/ooocba/\">I made fun of Ted Nelson &amp; Xanadu</a> once upon a time. But, since then I&#39;ve read more about his work and realize how off base I was.)</p>\n<h2 id=\"wrapping-up\">Wrapping up</h2>\n<p>Mostly, what I meant to do here was to write a love letter to the web. To try to capture what about it has captured me for the bulk of my career so far. Oh, and maybe to say a few things about now and future challenges. I&#39;ve got a few ideas, but certainly not all the answers.</p>\n<p>I think things look bright, despite <a href=\"http://www.wired.com/2010/08/ff_webrip/\">many</a> <a href=\"http://www.wired.com/insights/2014/02/web-dead/\">exaggerated</a> <a href=\"http://www.wsj.com/articles/the-web-is-dying-apps-are-killing-it-1416169934\">attempts</a> <a href=\"http://www.businessinsider.com/the-mobile-web-is-dead-its-all-about-apps-2014-4\">to declare</a> <a href=\"http://christianheilmann.com/2014/05/10/tedx-thessaloniki-the-web-is-dead/\">the web&#39;s demise</a>. Most of the issues with the web stem from what we do with it, not necessarily from what it can (or can&#39;t) do. The creative constraints and curation of app ecosystems have forced us to build better mobile experiences, and we&#39;ve expanded the capabilities of the web in response.</p>\n<p>My hope is that we can take fresh looks at the web and revisit its unique capabilities. There&#39;s a ton of value in the <a href=\"https://paul.kinlan.me/slice-the-web/\">secure, linkable, indexable, composable, and ephemeral</a> facets of the open web that closed app silos just can&#39;t match.</p>\n",
    "body": "<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\nTL;DR: The open web is a beautiful thing that empowers makers while offering users leverage. There's nothing else like it. It's constantly improving. It's up to you what you do with it.\n\n<!--more-->\n\n## The beauty of the open web\n\nSo, here I am again, channelling my easily excited self from 1993: Man, I love the web.\n\nIt's easy to take this thing for granted, but take a step back and consider it: You've got this thing called a [browser][]. It acts as an [Agent][] on your behalf, reaching out to computers on the Internet and requesting resources identified via [Universal Resource Locators][url]. Looking among these resources, you'd find [hypertext][], [style sheets][], and [multimedia][].\n\n[url]: https://en.wikipedia.org/wiki/Uniform_resource_locator\n[browser]: https://en.wikipedia.org/wiki/Web_browser\n[agent]: https://en.wikipedia.org/wiki/User_agent\n[hypertext]: https://en.wikipedia.org/wiki/Hypertext\n[style sheets]: https://en.wikipedia.org/wiki/Style_sheet_(web_development)\n[multimedia]: https://en.wikipedia.org/wiki/Multimedia\n\n<div class=\"pullquote\">\nSo, here I am again, channelling my easily excited self from 1993: **Man, I love the web.**\n</div>\n\nYour browser comes with code that knows what to do with common types of content. But, browsers can't anticipate every invention. So, one of the supported resource content types is [JavaScript][]. This is a *meta content type*. That is, it offers the ability to augment existing content types and support completely new ones.\n\n[javascript]: https://en.wikipedia.org/wiki/JavaScript\n\nChew on *that* awhile: Not satisfied to be just a networked document viewer with a frozen set of features, browsers ship with a [toolchain][] for running code on demand. Kind of scary, but it works way better than any reasonable person should expect.\n\n[toolchain]: https://en.wikipedia.org/wiki/Toolchain\n\nAnd again, thanks to the Internet, these resources can each come literally from anywhere<!-- ([even Sweden][cern]!) -->, hosted by any person or company or organization. Your browser chases URL references and collects all these disparate resources automatically. It assembles them into what is basically a zero-installation software application that's temporarily resident on your computer.\n\n[cern]: http://home.web.cern.ch/\n\nWe call these insane things \"web pages\". Their negotiated & ephemeral hold on our computers is why we say we only \"visit\" them. In fact, it might be more accurate to say web pages are guests we host on our computers for a short time.\n\n<!--\nSo, yeah, I'm crazy about the web. Crazy enough to work for Mozilla and turn down every other job offer over the years because the mission aligns so well with so many of my favorite things.\n-->\n\n[gopher]: https://en.wikipedia.org/wiki/Gopher_(protocol)\n[zen]: https://www.cs.indiana.edu/docproject/zen/zen-1.0_toc.html\n\n[newlydigital]: http://blog.lmorchard.com/2003/06/13/newly-digital/\n\n## Makers have power\n\nThere is no other successful system like this on the planet. No other system for delivering content and software that is this open and free of gatekeepers deciding what we can publish. There's no app store, no review process, no adult supervision. You can make the most amazing or terrible things. Short of legal action or government intervention, no one can really stop you as long as you're paying the hosting bill.\n\n### Build your own whatever\n\nIn fact, even though I wrote that browsers are agents acting on their users' behalf - they're historically weak advocates by default. In other words, browsers do what web pages ask, with a few exceptions for safety and security. Today's open web offers the balance of control largely to publishers.\n\n<div class=\"image-group\">\n[<img class=\"lazyload inset left\" data-src=\"/uploads/2015/the-verge-web-sucks/im-surrounded.png\">][theverge]\n[<img class=\"lazyload inset right\" data-src=\"/uploads/2015/web-awesome/oregon-trail.png\">][jsmess]\n</div>\n\nNo one will stop you from [building a magazine site loaded with spyware and ads][theverge].\n\nOf course, you can also [emulate old computers to make running classic software linkable and embeddable][jsmess].\n\n<div class=\"image-group\">\n[<img class=\"inset left\" id=\"thumbnail\" src=\"/uploads/2015/web-awesome/troxel.png\">][troxel]\n[<img class=\"lazyload inset right\" data-src=\"/uploads/2015/web-awesome/blogger.jpeg\">][iranjail]\n</div>\n\nOr you can [create new hats and weapons for an MMO][trovecreations], sharing your work [as a link to a live 3D modeling tool][troxel].\n\nOr you can write [a blog that lands you in an Iranian jail][iranjail] for political speech.\n\nOr you can craft [a gorgeous existential narrative about luminous beings][enough].\n\n[<img src=\"/uploads/2015/web-awesome/enough.png\" style=\"display: block; margin: auto; width: 66%; clear: both\">][enough]\n\n[troxel]: https://chrmoritz.github.io/Troxel/#m=EBAzAP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0D/QP9A/0CxQADxy7//gkAA8cu//4lAggDxy7//QIIA8cu//4lAAPHLv/+CQADxy7///0DZQIYA8cu//4hAhgDxy7//iECGAPHLv///QNlAAPHLv/+CQADxy7//iUCGAPHLv/+JQADxy7//gkAA8cu///9A7EAA8cu///9Au0CCAGAoKP8AVyQk/4IAYCgo/4dAgQBgKCj/ggCUDQ3/ALIAAP8AlA0N/4EAYCgo/4ZAAGAoKP8AlA0N/wCyAAD/gQCUDQ3/ALIAAP+BAJQNDf8AYCgo/4ZAAGAoKP+GAJQNDf8AYCgo/4ZAAFckJP+GAJQNDf8AYCgo/4ZAAGAoKP+GAJQNDf8AYCgo/4ZAAGAoKP8AlA0N/wCyAAD/AJQNDf8AsgAA/4IAlA0N/wBgKCj/hkCBAGAoKP+DAJQNDf8AsgAA/4EAYCgo/4dAAGAoKP8AVyQk/4QAYCgo//hAgQBgKCj/gQBXJCT/ggBgKCj/h0CIAGAoKP+GQIgAYCgo/4ZAiABgKCj/hkAAVyQk/4IAYCgo/wDxy7//gwBgKCj/hkAAVyQk/4cAYCgo/4ZAiABgKCj/hkCIAGAoKP+HQIEAYCgo/4EAVyQk/4IAYCgo//hAgQBgKCj/AFckJP+DAGAoKP+HQIgAYCgo/4ZAiABgKCj/hkCIAGAoKP+GQIMAYCgo/wDxy7//gwBgKCj/hkAAVyQk/4cAYCgo/4ZAAFckJP+HAGAoKP+GQIgAYCgo/4dAggBgKCj/ggBXJCT/AGAoKP/4QABgKCj/AFckJP+EAGAoKP+HQIgAYCgo/4ZAiABgKCj/hkCIAGAoKP+GQIMAYCgo/wDxy7//gwBgKCj/hkCIAGAoKP+GQABXJCT/hwBgKCj/hkAAYCgo/wBXJCT/hABgKCj/gQBXJCT/h0CEAGAoKP+BAFckJP/4QABgKCj/AFckJP+EAGAoKP+HQABgKCj/AFckJP+GAGAoKP+GQIgAYCgo/4ZAiABgKCj/hkCDAGAoKP8A8cu//4MAYCgo/4ZAiABgKCj/hkCHAGAoKP8AVyQk/4ZAAGAoKP8AVyQk/4QAYCgo/4EAVyQk/4dAhgBgKCj/+ECGAGAoKP+HQABgKCj/AFckJP+GAGAoKP+GQIgAYCgo/4ZAiABgKCj/hkCDAGAoKP8A8cu//4MAYCgo/4ZAhwBgKCj/AFckJP+GQIcAYCgo/wBXJCT/hkAAYCgo/wBXJCT/hgBgKCj/h0AAYCgo/wBXJCT/hABgKCj/+UCEAGAoKP+JQABXJCT/hQBgKCj/h0AAVyQk/4cAYCgo/4ZAhwBgKCj/AFckJP+GQIMAYCgo/wDxy7//ggBgKCj/AFckJP+GQIcAYCgo/wBXJCT/hkCIAGAoKP+HQIYAYCgo/4lAAFckJP+DAGAoKP/6QIQAYCgo/4lAhgBgKCj/h0AAVyQk/4YAYCgo/wBXJCT/hkAAVyQk/4YAYCgo/wBXJCT/hkCDAGAoKP8A8cu//4MAYCgo/4ZAiABgKCj/hkCIAGAoKP+HQIYAYCgo/4lAAGAoKP8AVyQk/4IAYCgo//pAgwBgKCj/AFckJP+JQIUAYCgo/wBXJCT/h0CHAGAoKP8AVyQk/4ZAiABgKCj/hkAAVyQk/4IAYCgo/wDxy7//gwBgKCj/hkAAVyQk/4cAYCgo/4ZAiABgKCj/h0CGAGAoKP+JQABgKCj/gQBXJCT/gQBgKCj/+kCCAGAoKP8AVyQk/wBgKCj/iUCGAGAoKP+HQIgAYCgo/4ZAiABgKCj/hkCDAGAoKP8A8cu//4MAYCgo/4ZAiABgKCj/hkAAVyQk/4cAYCgo/4dAhgBgKCj/iUCBAGAoKP+BAFckJP8AYCgo//pAgQBgKCj/gQBXJCT/AGAoKP+JQIYAYCgo/4dAiABgKCj/hkCIAGAoKP+GQIMAYCgo/wDxy7//gwBgKCj/hkCIAGAoKP+GQIgAYCgo/4dAAFckJP+FAGAoKP+JQIMAYCgo/wBXJCT/+kAAYCgo/4EAVyQk/4EAYCgo/4lAhgBgKCj/h0CIAGAoKP+GQIgAYCgo/4ZAgwBgKCj/APHLv/+DAGAoKP+GQIgAYCgo/4ZAiABgKCj/h0AAVyQk/4QAYCgo/wBXJCT/iUAAVyQk/4MAYCgo//pAgQBXJCT/ggBgKCj/iUCGAGAoKP+HQIgAYCgo/4ZAiABgKCj/hkCDAGAoKP8A8cu//4MAYCgo/4ZAiABgKCj/hkCHAGAoKP8AVyQk/4dAhgBgKCj/iUCBAFckJP+CAGAoKP/6QABXJCT/gwBgKCj/iUAAVyQk/4UAYCgo/4dAAFckJP+HAGAoKP+GQIgAYCgo/4ZAgwBgKCj/APHLv/+DAGAoKP+GQIcAYCgo/wBXJCT/hkCHAGAoKP8AVyQk/4dAhgBgKCj/iUAAYCgo/4EAVyQk/4EAYCgo//pAhABgKCj/iUCGAGAoKP+HQABXJCT/hwBgKCj/hkCHAGAoKP8AVyQk/4ZAgwBgKCj/APHLv/+CAGAoKP8AVyQk/4ZAhwBgKCj/AFckJP+GQIgAYCgo/4dAhgBgKCj/iUCBAGAoKP+BAFckJP8AYCgo//tAggBgKCj/ikCGAGAoKP+IQIYAYCgo/4dAAFckJP+GAGAoKP8AVyQk/4ZAAFckJP+CAGAoKP8A8cu//4MAYCgo/4ZAiABgKCj/h0CGAGAoKP+IQIQAYCgo/wBXJCT/AGAoKP+KQIEAYCgo/wBXJCT//ECCAGAoKP+KQIQAYCgo/4EAVyQk/4hAhQBgKCj/AFckJP+HQIgAYCgo/4ZAgwBgKCj/APHLv/+DAGAoKP+GQABXJCT/hwBgKCj/h0CGAGAoKP+IQIQAYCgo/4EAVyQk/4pAggBgKCj//0CLQIIAYCgo/4EAVyQk/4lAhgBgKCj/iECGAGAoKP+IQIIAYCgo/wDxy7//ggBgKCj/iECGAGAoKP+IQABXJCT/hABgKCj/AFckJP+JQIQAYCgo//9AmkAAYCgo/4EAVyQk/4EAYCgo/4lAAGAoKP+EAJQNDf8AYCgo/4hAAGAoKP8AsgAA/4IAlA0N/wCyAAD/AGAoKP+IQABgKCj/ALIAAP+DAJQNDf8AYCgo/4hAAGAoKP+EAJQNDf8AVyQk/4hAAFckJP+CAJQNDf8AsgAA/wCUDQ3/AFckJP+JQABXJCT/gwBgKCj//0CaQABgKCj/AFckJP+CAGAoKP+KQABgKCj/gkAAYCgo/4lAAGAoKP+BQADxy7//gUAAYCgo/4hAAGAoKP9AggDxy7//QABXJCT/iEAAYCgo/4FAAPHLv/+BQABXJCT/iUAAYCgo/4JAAGAoKP+KQABXJCT/gwBgKCj//0CbQABXJCT/gQBgKCj/i0AAVyQk/wBgKCj/QABgKCj/AFckJP+JQIEAYCgo/0AA8cu//0AAYCgo/wBXJCT/iEAAYCgo/0CCAPHLv/9AAGAoKP+IQIEAYCgo/0AA8cu//0CBAGAoKP+JQIEAYCgo/0CBAGAoKP+LQABXJCT/gQBgKCj//0CdQABgKCj/jUAAYCgo/0AAVyQk/4tAAFckJP9AAPHLv/9AAGAoKP+JQABgKCj/QIIA8cu//wBgKCj/ikAAYCgo/0AA8cu//wBgKCj/AFckJP+LQIEAYCgo/wBXJCT/jUAAVyQk//9ArkAAVyQk/41AAGAoKP8A8cu//wBgKCj/i0AAVyQk/4IA8cu//wBXJCT/i0AAYCgo/wDxy7//AFckJP+NQABgKCj//0DeQADxy7///0D+QD//AP/6/0D+QADxy7///0D+QADxy7///0D+QADxy7///0DsQADxy7//gkAA8cu//4lAhgDxy7//iUAA8cu//4JAAPHLv///QNlAggDxy7//QIIA8cu//4hAhgDxy7//iECCAPHLv/9AggDxy7///0DZQADxy7//gkAA8cu//4lAggDxy7//QIIA8cu//4lAAPHLv/+CQADxy7///0CoQA==\n[trovecreations]: https://www.reddit.com/r/TroveCreations/\n[iranjail]: https://medium.com/matter/the-web-we-have-to-save-2eb1fe15a426\n[jsmess]: https://archive.org/details/softwarelibrary\n[sharkcat]: https://www.youtube.com/watch?v=tLt5rBfNucc\n[enough]: http://cabbi.bo/enough/\n[theverge]: http://blog.lmorchard.com/2015/07/22/the-verge-web-sucks/\n[ue4]: https://blog.mozilla.org/blog/2014/03/12/mozilla-and-epic-preview-unreal-engine-4-running-in-firefox/\n\n<h3 style=\"clear: both\">DIY for cheap</h3>\n\nAnd, it's never been cheaper to put something on the web. For example, [this blog lives mostly on Amazon S3][s3blog]. My [last post][theverge] got around 55,000 unique views so far - the most attention I've gotten in years. It looks like that's going to cost me about $6 by the end of the month. I could have probably cut that in half if I'd been smarter about things.\n\n[s3blog]: http://blog.lmorchard.com/2014/10/20/static-blog-generation-with-gulp/\n\nTo put this in my old-person perspective: Someone once told me it was $1 or $5 to photocopy & mail a single issue of a [zine][]. Bump that up to $5-10 for a CD-ROM or DVD in a nice padded envelope. Holy crap. I couldn't even imagine funding a passion project centered around media like that and reaching 55,000 people across the planet.\n\n[zine]: https://en.wikipedia.org/wiki/Zine\n\n## Users have leverage\n\nI know I just wrote that the balance of control on the web leans mainly toward the publishers. But, users on the web *do* have leverage when they care to assert themselves.\n\n<div class=\"pullquote right\">\nWith this choice in personalized user agents, **the relationship between reader and publisher must be negotiated**.\n</div>\n\n### Browser choice\n\nFirst off, you have a choice in browsers. The browser market is pretty healthy right now. Once upon a time, [Microsoft Internet Explorer held 96% of the market][msie96]. Today, we've got [at least half-a-dozen browsers][browserstoday] with almost as many rendering engines under their hoods.\n\nThis diversity in browsers is important, and switching cost is low on a web with shared standards. You can vote with your feet and try another browser at any time. This also hinders any single company from injecting their own proprietary features into the web and setting up tollbooths.\n\n[msie96]: https://en.wikipedia.org/wiki/Browser_wars#First_browser_war\n[browserstoday]: https://en.wikipedia.org/wiki/Browser_wars#Second_browser_war\n\n### Add-ons and extensions\n\nYour choice in browsers includes some that can be customized with [add-ons][] and [extensions][]. This is where a browser can really shine as a personalized [User Agent][].\n\n[<img class=\"lazyload inset left wide\" data-src=\"/uploads/2015/web-awesome/adblock.png\">][about-adblock]\n\n[about-adblock]: https://adblockplus.org/en/about\n\nInstall [Adblock Plus][], and you can deflect most attempts to track you & display ads.\n\nInstall [Readability][], and you can get a cleaner view of articles you'd like to read.\n\nInstall [Library Extension][] and your browser will automatically tell you when a book is available at your local library while you're shopping on Amazon.\n\nYou can even craft your own tweaks, if you're so inclined. In a spirit similar to the web itself, the tech to build these things is generally available to anyone.\n\nPublishers on the web sometimes deride these tweaks. It's understandable: The most popular ones have long been centered around refusing to accept many of the annoyances that also happen to fund the web.\n\n### The web is a negotiation\n\nWith this choice in personalized user agents, the relationship between reader and publisher must be *negotiated*. Mostly, it's a quiet negotiation by defaults: Publishers can do as much as readers accept. But, when readers introduce resistance in the form of using ad-blockers, they can impose a cost to publishers who get carried away.\n\nAs I wrote before, web pages are *guests* on our computers. Most users have been very tolerant of these guests' behavior. Tolerant to the point where a publisher could take for granted or even feel entitled to the bandwidth and hardware we pay for. But, it's entirely possible for this negotiation to turn sour, [forcing the industry to come up with a new deal][savingtheinternet].\n\n[savingtheinternet]: http://fredrikdeboer.com/2015/04/27/the-supervillains-guide-to-saving-the-internet/\n[library extension]: https://www.libraryextension.com/\n[extensions]: https://chrome.google.com/webstore/category/extensions\n[add-ons]: https://addons.mozilla.org/en-US/firefox/\n[readability]: https://www.readability.com/\n[adblock plus]: https://adblockplus.org/\n[User Agent]: https://en.wikipedia.org/wiki/User_agent\n\n## If it's not the web, it's not the web\n\nThere's a new iPhone ad out there - \"[If it's not an iPhone, it's not an iPhone][iphonead]\".\n\n<div class=\"video-container\"><iframe class=\"lazyload\" width=\"560\" height=\"315\" src=\"\" data-src=\"https://www.youtube.com/embed/wl3PlrPq8sw\" frameborder=\"0\" allowfullscreen></iframe></div>\n\nThis is one of the things the narrator says:\n\n> The hardware part makes the most of the software part, and the software part makes the most of the hardware part. When you design the whole phone, all the parts work together as one amazing part.\n\nThis is obviously true, and the iPhone is a great product. You can curate a smooth and \"magical\" experience, when you own a platform from bottom to top. But, the cost is that makers have less power and users have less leverage.\n\n### There's only one App Store\n\n[<img class=\"lazyload inset right\" data-src=\"/uploads/2015/web-awesome/connor-macleod.jpg\">][connor-macleod]\n\n[connor-macleod]: http://www.comicvine.com/connor-macleod/4005-47561/\n\nAs gatekeepers running the one and only App Store, Apple can demand a cut of all money that flows to makers. [Apple also lists a lot of requirements][appguidelines]. Some are great ideas for users, while some serve to reinforce Apple's control over its platform.\n\n<!-- more to say about makers? -->\n\nAs a user, you can somewhat customize your iPhone by the apps you install. As of iOS 8, there are also [App Extensions][appextensions] that allow you to add selected bits of new functionality to existing apps.\n\nBut, there are limits: For instance, did you know that despite there being many apps that let you browse the web, [there's really only one web engine][onebrowser] on iOS? (\"[2.17 Apps that browse the web must use the iOS WebKit framework and WebKit Javascript][appguidelines]\")\n\n### Leverage constrained\n\nLuckily, users of iOS 9 will soon benefit from [Content Blocker App Extensions][contentblocksafari] in Safari. These an improvement on filter lists for [AdBlock Plus][]: The extensions consist of JSON files containing patterns & rules used to block requests and selectively remove content from pages.\n\nOutside of Safari and the constrained world of App Extensions, though, users don't have much leverage over what apps makers do. If you don't like it, don't install it. There's no view source or built-in developer tools, so even power users mainly rely on Apple to monitor apps.\n\n[appextensions]: http://arstechnica.com/apple/2014/06/explaining-ios-8s-extensions-opening-the-platform-while-keeping-it-secure/\n\n[contentblocksafari]: http://appleinsider.com/articles/15/06/15/inside-app-extensions-webkit-content-blockers-extend-user-privacy-in-ios-9-safari-9\n[onebrowser]: http://www.howtogeek.com/184283/why-third-party-browsers-will-always-be-inferior-to-safari-on-iphone-and-ipad/\n[appguidelines]: https://developer.apple.com/app-store/review/guidelines/\n[iphonead]: https://www.apple.com/iphone/why-theres-iphone/\n\n### Black boxes all the way down\n\nThere's also the matter of apps being their own mini-silos. They don't have the spontaneous linkability of the web. Sure, [some efforts have been made][applinks] with regard to that, but it's kind of an awkward bolt-on rather than something inherent to the fabric of it all.\n\nOn top of linkability, the web also offers *composability*. That is, you can embed resources and scripts from other sites. For example, there was a YouTube video just a few paragraphs ago and there's a Disqus-driven comment section at the end of this post.\n\nOr, check out this tweet:\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">Current cat status: Cheddars and Catsby Cheddarsson <a href=\"http://t.co/9y9Q2uDwxb\">pic.twitter.com/9y9Q2uDwxb</a></p>&mdash; Les Orchard (@lmorchard) <a href=\"https://twitter.com/lmorchard/status/628683951629029376\">August 4, 2015</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nOr, hey, want to try a game of Oregon Trail?\n\n<iframe class=\"lazyload\" data-src=\"https://archive.org/embed/msdos_Oregon_Trail_Deluxe_The_1992\" width=\"560\" height=\"384\" frameborder=\"0\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" allowfullscreen></iframe>\n\nIn an app, it's hard to mix content from totally different sites together like this. At least, not without a lot of preparation at the top or just punting off to an embedded web browser. Me, I didn't write any of the code to make a tweet or an MS-DOS emulator work on this page.\n\n### You can't take it with you\n\nAs something that affects a normal busy person, this is the strongest argument I have against apps in Apple's ecosystem: If you don't like any part of it, your only move is not to play.\n\nLike the ad says, the hardware part and the software part are inseparable. But, if you ever decide to leave once you've been inside, you leave behind what you bought while you were there. This is why I've owned iPods, but never an iPhone.\n\n[applinks]: http://applinks.org/\n\n## The web is learning from apps\n\nEven after writing that last section, though, I'm hard pressed to make a case against apps. Apps solve a lot of problems we've had on the web. Installation versus a temporary visit can make things work better. User interfaces tend to be simpler & more focused - something which Apple in particular is inclined to enforce & curate. Monetization is better - there aren't as many trackers & ads.\n\nMost of the problems apps solve *can* be solved on the web. Some of them are technological, but some of them are more a matter of perspective and assumptions.\n\n<div class=\"pullquote right\">\nMost of the problems apps solve **can be solved on the web**.\n</div>\n\n### Permanence & Integration\n\nIf this page was an app, you might install it. But, that's an explicit up front commitment. And you have to remember to uninstall it later. What if web pages could do that implicitly and [maybe even ask nicely - *after a few visits* - if you'd like to make the relationship more explicit by pinning it to your home screen][progressiveapps]?\n\nWe have technologies on the horizon like [Service Workers][] and [WebAssembly][] that can make web pages more persistent and efficient by downloading optimized content & code and making it available offline. Web pages can ask for expanded access to your device through [WebAPIs][]. This includes things like [an icon on your home screen][installbanners], running in the background, and [displaying notifications][notifications].\n\nIn other words, we're very close to a state where web pages can have benefits of installed native apps while retaining the maker power and user leverage of the open web.\n\n[notifications]: https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API/Using_the_Notifications_API\n[installbanners]: https://developers.google.com/web/updates/2015/03/increasing-engagement-with-app-install-banners-in-chrome-for-android?hl=en\n[webapis]: https://developer.mozilla.org/en-US/docs/WebAPI\n[webassembly]: https://brendaneich.com/2015/06/from-asm-js-to-webassembly/\n[service workers]: http://www.html5rocks.com/en/tutorials/service-worker/introduction/\n[progressiveapps]: https://infrequently.org/2015/06/progressive-apps-escaping-tabs-without-losing-our-soul/\n\n### The web deserves a cleaner slate\n\nLots of developers are after a [jank free][], [60 frames-per-second][60fps] experience. That's where many native apps can shine and it's great. I think the mobile web is entirely capable of it. We've got [hardware-accelerated CSS transitions][csstransitions] and [flexbox][] to help with fast, flexible user interfaces. We've got [Web Workers][] to shove work off onto separate threads to help keep things smooth.\n\n[Web Workers]: https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\n[flexbox]: https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes\n[csstransitions]: https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions\n\n<div class=\"pullquote\">\nWhen you're making an app, most of the time you're forced to **start fresh and work within app constraints**.\n</div>\n\nI think a helpful thing is start with a [clean mobile-first slate][mobilefirst]. Maybe more important than the *mobile* is the **clean slate**:\n\nIt's easy to start with a years' old web site and just slap a few extra styles & scripts on. When you're making an app, most of the time you're *forced* to start fresh and work within app constraints. I think that's a huge advantage for the experience that I haven't seen a lot of folks talk about.\n\n[mobilefirst]: https://codemyviews.com/blog/mobilefirst\n[jank free]: http://jankfree.org/\n[60fps]: http://engineering.flipboard.com/2015/02/mobile-web/\n\nHell, [make a fresh effort to see what's out there][mdnjs]. Skip the crowd of JS frameworks for a bit. Take a look at [Vanilla JS][vanilla]. You might be surprised at how much you can get done these days without even jQuery onboard.\n\nAccept cutting off or (ideally) shipping a reduced experience to older browsers, and you might be surprised what you can make happen on modern browsers. Even better, get your [progressive enhancement][] game on.\n\n[progressive enhancement]: http://www.w3.org/wiki/Graceful_degradation_versus_progressive_enhancement\n[mdnjs]: https://developer.mozilla.org/en-US/docs/JavaScript\n[vanilla]: http://vanilla-js.com/\n\n### Monetization is hard without a gatekeeper\n\nAs for monetization, well, that's a can of worms. More persistent web pages *will* help solve [the problem of the continually re-downloaded 7MB of JavaScript tracking you and showing ads][theverge]. But, if that stuff causes less of a drag, will we really care quite as much?\n\n[<img class=\"lazyload inset right\" data-src=\"/uploads/2015/web-awesome/who-owns-the-future.jpg\">][who-owns-the-future]\n\n[who-owns-the-future]: http://amzn.to/1MTayLa\n\nMaybe not. If performance & surveillance concerns are decoupled, we might not notice a problem. I mean, native apps [track][track1] [us][track2] [too][track3], and we don't seem to care. Though, I suppose the siloed nature of apps might make it a little harder to follow you everywhere you go. (I wouldn't count on that, though.)\n\nI don't really have great ideas, here. I pay for some stuff, I don't pay for some other stuff. I'm honestly not 100% against ads, though I think we could use fewer of them.\n\n[track1]: http://www.google.com/analytics/mobile/\n[track2]: https://developer.apple.com/app-store/app-analytics/\n[track3]: https://developers.facebook.com/products/analytics/\n\nWithout an App Store as a gateway, though, the same old revenue problems persist. And still, [there ain't no such thing as a free lunch][tanstaafl]. In fact, folks like [Ted Nelson][micro-liberation] and [Jaron Lanier][free-info] have been saying for years (and decades) that the free-of-charge web is failing itself and all of us. Maybe we need a web with more robust two-way links that track provenance and distribute wealth.\n\n(For what it's worth, [I made fun of Ted Nelson & Xanadu][xanadu-fun] once upon a time. But, since then I've read more about his work and realize how off base I was.)\n\n[tanstaafl]: https://en.wikipedia.org/wiki/There_ain't_no_such_thing_as_a_free_lunch\n[xanadu-fun]: http://decafbad.com/blog/2002/11/11/ooocba/\n[micro-liberation]: http://transcopyright.org/hcoinRemarks-D28.html\n[free-info]: http://www.niemanlab.org/2013/05/jaron-lanier-wants-to-build-a-new-middle-class-on-micropayments/\n\n## Wrapping up\n\nMostly, what I meant to do here was to write a love letter to the web. To try to capture what about it has captured me for the bulk of my career so far. Oh, and maybe to say a few things about now and future challenges. I've got a few ideas, but certainly not all the answers.\n\nI think things look bright, despite [many](http://www.wired.com/2010/08/ff_webrip/) [exaggerated](http://www.wired.com/insights/2014/02/web-dead/) [attempts](http://www.wsj.com/articles/the-web-is-dying-apps-are-killing-it-1416169934) [to declare](http://www.businessinsider.com/the-mobile-web-is-dead-its-all-about-apps-2014-4) [the web's demise](http://christianheilmann.com/2014/05/10/tedx-thessaloniki-the-web-is-dead/). Most of the issues with the web stem from what we do with it, not necessarily from what it can (or can't) do. The creative constraints and curation of app ecosystems have forced us to build better mobile experiences, and we've expanded the capabilities of the web in response.\n\nMy hope is that we can take fresh looks at the web and revisit its unique capabilities. There's a ton of value in the [secure, linkable, indexable, composable, and ephemeral][slice] facets of the open web that closed app silos just can't match.\n\n[slice]: https://paul.kinlan.me/slice-the-web/\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2015",
    "path": "2015/08/07/web-awesome",
    "thumbnail": "/uploads/2015/web-awesome/troxel.png",
    "summary": "<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\n<p>TL;DR: The open web is a beautiful thing that empowers makers while offering users leverage. There&apos;s nothing else like it. It&apos;s constantly improving. It&apos;s up to you what you do with it.</p>\n"
  },
  {
    "title": "Experimenting with a multi-platform app using React",
    "tags": [
      "webdev",
      "native",
      "react",
      "reactnative",
      "ios",
      "mobile",
      "mozilla"
    ],
    "year": "2015",
    "month": "07",
    "day": "22",
    "isDir": false,
    "slug": "react-multiplatform",
    "date": "2015-07-22T12:00:00.000Z",
    "postName": "2015-07-22-react-multiplatform",
    "html": "<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\n<p>TL;DR: I built <a href=\"https://github.com/lmorchard/react-multiplatform/\">a toy app using React for web and native</a> to get a feel for whether this hybrid approach is worth using. I think the answer is &quot;yes&quot; - but mainly for apps whose business logic &amp; data models are more complex than their views.</p>\n<!--more-->\n\n<h2 id=\"write-slightly-more-than-once-run-manywhere\">Write slightly more than once, run manywhere</h2>\n<p>At Mozilla, one of the things we try to champion is the efficiency of writing one web app versus building many separate native apps. In practice, your mileage varies based on goals, priorities, platform capabilities, and a dozen other factors.</p>\n<p><a href=\"https://facebook.github.io/react/\">React</a> and <a href=\"https://facebook.github.io/react-native/\">React Native</a> seem to offer a middle ground: Given the shared conventions and patterns and language, it should be possible to share a lot of code between platforms while still taking advantage of native capabilities.</p>\n<p>So, I figured I&#39;d give it a shot and try measuring the common lines of code as a rough success metric.</p>\n<h2 id=\"great-another-todo-app\">Great, another Todo app</h2>\n<p>I decided to build a Todo app, with lots of inspiration and a little code borrowed from <a href=\"http://todomvc.com/\">TodoMVC</a>.</p>\n<p>A basic Todo app demands just enough user interface and data management to get an initial feel for most app frameworks. Commit to something bigger and you may end up wasting your time. Build something smaller and you won&#39;t have explored deep enough into the framework&#39;s solution space.</p>\n<p>I think I&#39;ve erred on the shallow side, but that just gives me room to improve.</p>\n<h2 id=\"what-about-flux-vs-mvc\">What about Flux vs MVC?</h2>\n<p>It&#39;s said that React provides just the V in MVC (Model-View-Controller). But, there&#39;s also <a href=\"https://facebook.github.io/flux/docs/overview.html\">this Flux notion</a>. It&#39;s billed as an alternative to MVC, and React is intended to be a part of it. That said, I haven&#39;t quite yet wrapped my head around Flux. Luckily, React is focused and useful in isolation. So, I can defer buying into the rest of the conceptual package as I learn.</p>\n<p>In fact, I didn&#39;t even really end up building a proper MVC app. The Controller role got distributed between Views &amp; Models: UI event handlers in Views modify Models directly. Views subscribe to change events from Models to update their own state.</p>\n<p>I expect that when I grok Flux better, it&#39;s this reciprocal Model/View relationship that will get broken up &amp; mediated by a Dispatcher. But, in the spirit of iterative hacking, I forged ahead with my terrible code &amp; design.</p>\n<h2 id=\"building-shared-models\">Building shared Models</h2>\n<p>For the Model layer, I took a look at <a href=\"http://ampersandjs.com/\">Ampersand.js</a>. Based originally on <a href=\"http://backbonejs.org/\">Backbone.js</a> - a library of which I&#39;m a big fan - <a href=\"http://ampersandjs.com/\">Ampersand.js</a> breaks things up into a collection of small modules that work well together. But, like <a href=\"https://facebook.github.io/react/\">React</a>, most of the modules are handy in isolation or alongside substitutions from outside of the <a href=\"http://ampersandjs.com/\">Ampersand.js</a> family.</p>\n<p>For managing a single todo item, I liked the looks of <a href=\"https://github.com/AmpersandJS/ampersand-state\">ampersand-state</a>. With it, you can build JavaScript objects with properties that can be watched for changes. This is what <a href=\"https://github.com/lmorchard/react-multiplatform/blob/master/lib/models/Todo.js\">my todo item model</a> looks like, using <a href=\"https://github.com/tastejs/todomvc/blob/master/examples/ampersand/js/models/todo.js\">TodoMVC code</a> as a starting point:</p>\n<pre><code class=\"language-javascript\">var State = require(&#39;ampersand-state&#39;);\nmodule.exports = State.extend({\n  // Properties this model will store\n  props: {\n    title: { type: &#39;string&#39;, default: &#39;&#39; },\n    completed: { type: &#39;boolean&#39;, default: false }\n  },\n  // session properties are not included when serializing.\n  session: {\n    editing: { type: &#39;boolean&#39;, default: false }\n  },\n  destroy: function () {\n    if (this.collection) {\n      this.collection.remove(this);\n    }\n  }\n});</code></pre>\n<h2 id=\"forking-the-views-by-platform\">Forking the Views by platform</h2>\n<p>This Model code works on both the web and native sides of my app. So far, so good - and pretty straightforward.</p>\n<p>However, getting down to actually rendering this data across platforms reveals where things start to vary. For example, <a href=\"https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/views/web/TodoItem.js#L34\">the JSX in the <code>render()</code> method of my web view</a> looks like this:</p>\n<pre><code class=\"language-javascript\">return (\n  &lt;li style={itemStyles.container}&gt;\n    &lt;input type=&quot;checkbox&quot;\n      style={itemStyles.completed}\n      onChange={(event) =&gt; this.handleCompletedChange(event.target.checked)}\n      checked={this.state.item.completed} /&gt;\n    {title}\n  &lt;/li&gt;\n);</code></pre>\n<p>Meanwhile, <a href=\"https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/views/ios/TodoItem.js#L42\">the JSX in the <code>render()</code> method of my iOS view</a> looks like this:</p>\n<pre><code class=\"language-javascript\">return (\n  &lt;View style={styles.todoItem}&gt;\n    &lt;SwitchIOS\n      style={styles.todoCompleted}\n      onValueChange={this.handleCompletedChange}\n      value={this.state.item.completed} /&gt;\n    {title}\n  &lt;/View&gt;\n);</code></pre>\n<p>And, if you take a longer peek at those views, you&#39;ll see some slightly more complex JSX devoted to the <code>{title}</code> placeholders where rendering changes based on whether the item is being edited.</p>\n<p>It&#39;s not radically different; it&#39;s just enough to make things interesting.</p>\n<h2 id=\"code-sharing-with-react-mixins\">Code sharing with React mixins</h2>\n<p>What you might notice about these two divergent views, though, is they both start like this:</p>\n<pre><code class=\"language-javascript\">var TodoItem = module.exports = React.createClass({\n  mixins: [Views.TodoItemCommonMixin],\n  // ...</code></pre>\n<p>It turns out that, thanks to <a href=\"https://facebook.github.io/react/docs/reusable-components.html#mixins\">React mixins</a>, I can write <a href=\"https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/views/index.js#L35\">the bulk of the View logic</a> in a shared module. Since both sides use Models based on <a href=\"https://github.com/AmpersandJS/ampersand-state\">ampersand-state</a>, this includes subscribing to Model changes:</p>\n<pre><code class=\"language-javascript\">getInitialState() {\n  return { editing: false, item: this.props.item };\n},\ncomponentDidMount() {\n  this.state.item.on(&#39;change&#39;, () =&gt; this.forceUpdate(), this);\n},\ncomponentWillUnmount() {\n  this.state.item.off(null, null, this);\n},\ncomponentWillReceiveProps(props) {\n  this.setState({ item: props.item });\n},\ncomponentDidUpdate(prevProps, prevState) {\n  if (prevState.item !== this.state.item) {\n    prevState.item.off(null, null, this);\n    this.state.item.on(&#39;change&#39;, () =&gt; this.forceUpdate(), this);\n  }\n}</code></pre>\n<p>And, since both sides use Views based on <a href=\"https://facebook.github.io/react/\">React</a>, many UI event handlers can also be shared despite the difference in platform specific JSX and view elements.</p>\n<p>(Of course, I recently learned that <a href=\"https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750\">React mixins are dead</a>, so I&#39;m already behind the times. But, this code works for now. I&#39;ll get around to burning that bridge when I learn more about Flux.)</p>\n<h2 id=\"forking--sharing-model-code-for-persistence\">Forking &amp; sharing Model code for persistence</h2>\n<p>For multiple todo items, <a href=\"https://github.com/AmpersandJS/ampersand-collection\">ampersand-collection</a> is handy. It manages arrays of <a href=\"https://github.com/AmpersandJS/ampersand-state\">ampersand-state</a> objects and emits events when the set changes. This is useful for keeping <a href=\"https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/views/web/TodoList.js\">list</a> <a href=\"https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/views/ios/TodoList.js\">views</a> updated.</p>\n<p><a href=\"https://github.com/AmpersandJS/ampersand-collection\">ampersand-collection</a> also offers methods for serializing &amp; deserializing the models it contains. That&#39;s just what I need, because I&#39;d like to make my todo list items persistent between sessions with the app.</p>\n<p>Apropos of that, we have some storage capabilities on each platform: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API\">localStorage</a> for modern browsers, and <a href=\"https://facebook.github.io/react-native/docs/asyncstorage.html\">AsyncStorage</a> for React Native. Both allow you to store small amounts of persistent data on a device. For the purposes of this toy app, these data stores are just about right.</p>\n<p>But, these storage APIs differ. <a href=\"https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/models/web/TodoCollection.js#L14\">Using localStorage</a> looks like this:</p>\n<pre><code class=\"language-javascript\">readFromStorage: function () {\n  var existingData = localStorage[STORAGE_KEY];\n  if (existingData) {\n    this.set(JSON.parse(existingData));\n  }\n},\nwriteToStorage: function () {\n  localStorage[STORAGE_KEY] = JSON.stringify(this);\n}</code></pre>\n<p>Meanwhile, <a href=\"https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/models/ios/TodoCollection.js#L9\">using AsyncStorage</a> looks like this:</p>\n<pre><code class=\"language-javascript\">readFromStorage() {\n  AsyncStorage.getItem(STORAGE_KEY).then((existingData) =&gt; {\n    this.set(JSON.parse(existingData));\n  });\n},\nwriteToStorage() {\n  AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(this));\n}</code></pre>\n<p>If you peek at those last two links, though, you might notice they both define classes that start like this:</p>\n<pre><code class=\"language-javascript\">var TodoCollection = module.exports = BaseCollection.extend({</code></pre>\n<p>Since <a href=\"https://github.com/AmpersandJS/ampersand-collection\">ampersand-collection</a> supports class inheritance, the bulk of the logic for these collections can be housed in <a href=\"https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/models/TodoCollection.js#L8\">a shared superclass</a>. The subclasses just need to implement the platform-specific storage methods. A different mechanism than <a href=\"https://facebook.github.io/react/docs/reusable-components.html#mixins\">React mixins</a>, but for basically the same purpose.</p>\n<h2 id=\"sharing-by-the-numbers\">Sharing by the numbers</h2>\n<p>The main goal of this experiment is to get a feel as to whether a hybrid React approach is worth considering versus building totally separate apps for native and web platforms. The metric I decided to use for this is counting lines of code (LoC), and this is what I found:</p>\n<ul>\n<li><p>Overall, ~30% shared LoC (226 / 748).</p>\n</li>\n<li><p>For Models, ~74% shared LoC (159 / 215).</p>\n</li>\n<li><p>For Views, ~12% shared LoC (67 / 533).</p>\n</li>\n</ul>\n<p>Because I like showing my work, here&#39;s how I came up with those numbers:</p>\n<pre><code class=\"language-bash\"># Total LoC for models = 215\n$ cat lib/models/**/*.js | wc -l\n     215\n\n# ~74% common model code\n$ cat lib/models/*js | wc -l\n     159\n\n# ~12% iOS specific model code\n$ cat lib/models/ios/*js | wc -l\n      25\n\n# ~14% web specific model code\n$ cat lib/models/web/*js | wc -l\n      31\n\n# Total LoC for views = 533\n$ cat lib/views/**/*.js | wc -l\n     533\n\n# ~12% common view code\n$ cat lib/views/*js | wc -l\n      67\n\n# ~44% iOS specific view code\n$ cat lib/views/ios/*js | wc -l\n     235\n\n# ~43% web specific view code\n$ cat lib/views/web/*js | wc -l\n     231</code></pre>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>Using React for both web &amp; native looks promising. However, the toy app I&#39;ve built is too simple to present an overwhemingly compelling case.</p>\n<p>What I tried to do here was get a quick feel for the shape of things and where the code multipliers can be found. Your mileage will vary on app features and code refactoring ability.</p>\n<p>In particular, this toy app&#39;s models are very simple. So, even though there&#39;s a lot of sharing, it doesn&#39;t make a big impact on the bottom line. In an app with more complex business logic, that could change favorably.</p>\n<p>On the other hand, Views between platforms will have a greater impact as they get more complex in dealing with divergent UI elements. You could paper over many platform differences with reusable components that normalize APIs &amp; usage patterns - hopefully while not squashing unique advantages of each platform. So far, this app is too simple to really expose those opportunities.</p>\n<p>And, of course, all bets are off once you&#39;ve left React for straight native development. My hunch is that there are qualitative &amp; quantitative benefits to reducing context switching. You can focus development &amp; testing efforts on JavaScript &amp; React as opposed to multiple native &amp; web toolkits (e.g. Objective-C &amp; Swift &amp; Java - oh my!). But, measuring that hunch is beyond the scope of what I tried doing here.</p>\n<p>Hopefully, I&#39;ve raised some interesting features of the terrain. But, I know this is a very shallow look at things and I&#39;m learning as I go along. Feel free to poke holes in this stuff and throw some suggestions at me!</p>\n",
    "body": "<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\nTL;DR: I built [a toy app using React for web and native][react-multiplatform] to get a feel for whether this hybrid approach is worth using. I think the answer is \"yes\" - but mainly for apps whose business logic & data models are more complex than their views.\n\n<!--more-->\n\n## Write slightly more than once, run manywhere\n\nAt Mozilla, one of the things we try to champion is the efficiency of writing one web app versus building many separate native apps. In practice, your mileage varies based on goals, priorities, platform capabilities, and a dozen other factors.\n\n[React][] and [React Native][] seem to offer a middle ground: Given the shared conventions and patterns and language, it should be possible to share a lot of code between platforms while still taking advantage of native capabilities.\n\nSo, I figured I'd give it a shot and try measuring the common lines of code as a rough success metric.\n\n## Great, another Todo app\n\nI decided to build a Todo app, with lots of inspiration and a little code borrowed from [TodoMVC][].\n\nA basic Todo app demands just enough user interface and data management to get an initial feel for most app frameworks. Commit to something bigger and you may end up wasting your time. Build something smaller and you won't have explored deep enough into the framework's solution space.\n\nI think I've erred on the shallow side, but that just gives me room to improve.\n\n## What about Flux vs MVC?\n\nIt's said that React provides just the V in MVC (Model-View-Controller). But, there's also [this Flux notion][flux]. It's billed as an alternative to MVC, and React is intended to be a part of it. That said, I haven't quite yet wrapped my head around Flux. Luckily, React is focused and useful in isolation. So, I can defer buying into the rest of the conceptual package as I learn.\n\nIn fact, I didn't even really end up building a proper MVC app. The Controller role got distributed between Views & Models: UI event handlers in Views modify Models directly. Views subscribe to change events from Models to update their own state.\n\nI expect that when I grok Flux better, it's this reciprocal Model/View relationship that will get broken up & mediated by a Dispatcher. But, in the spirit of iterative hacking, I forged ahead with my terrible code & design.\n\n## Building shared Models\n\nFor the Model layer, I took a look at [Ampersand.js][]. Based originally on [Backbone.js][] - a library of which I'm a big fan - [Ampersand.js][] breaks things up into a collection of small modules that work well together. But, like [React][], most of the modules are handy in isolation or alongside substitutions from outside of the [Ampersand.js][] family.\n\nFor managing a single todo item, I liked the looks of [ampersand-state][]. With it, you can build JavaScript objects with properties that can be watched for changes. This is what [my todo item model][todo-model] looks like, using [TodoMVC code][todo-model-ampersand] as a starting point:\n\n```javascript\nvar State = require('ampersand-state');\nmodule.exports = State.extend({\n  // Properties this model will store\n  props: {\n    title: { type: 'string', default: '' },\n    completed: { type: 'boolean', default: false }\n  },\n  // session properties are not included when serializing.\n  session: {\n    editing: { type: 'boolean', default: false }\n  },\n  destroy: function () {\n    if (this.collection) {\n      this.collection.remove(this);\n    }\n  }\n});\n```\n\n## Forking the Views by platform\n\nThis Model code works on both the web and native sides of my app. So far, so good - and pretty straightforward.\n\nHowever, getting down to actually rendering this data across platforms reveals where things start to vary. For example, [the JSX in the `render()` method of my web view][item-web-render] looks like this:\n\n```javascript\nreturn (\n  <li style={itemStyles.container}>\n    <input type=\"checkbox\"\n      style={itemStyles.completed}\n      onChange={(event) => this.handleCompletedChange(event.target.checked)}\n      checked={this.state.item.completed} />\n    {title}\n  </li>\n);\n```\n\nMeanwhile, [the JSX in the `render()` method of my iOS view][item-ios-render] looks like this:\n\n```javascript\nreturn (\n  <View style={styles.todoItem}>\n    <SwitchIOS\n      style={styles.todoCompleted}\n      onValueChange={this.handleCompletedChange}\n      value={this.state.item.completed} />\n    {title}\n  </View>\n);\n```\n\n[item-web-render]: https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/views/web/TodoItem.js#L34\n[item-ios-render]: https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/views/ios/TodoItem.js#L42\n\nAnd, if you take a longer peek at those views, you'll see some slightly more complex JSX devoted to the `{title}` placeholders where rendering changes based on whether the item is being edited.\n\nIt's not radically different; it's just enough to make things interesting.\n\n## Code sharing with React mixins\n\nWhat you might notice about these two divergent views, though, is they both start like this:\n\n```javascript\nvar TodoItem = module.exports = React.createClass({\n  mixins: [Views.TodoItemCommonMixin],\n  // ...\n```\n\nIt turns out that, thanks to [React mixins][], I can write [the bulk of the View logic][item-shared-view] in a shared module. Since both sides use Models based on [ampersand-state][], this includes subscribing to Model changes:\n\n[React mixins]: https://facebook.github.io/react/docs/reusable-components.html#mixins\n\n```javascript\ngetInitialState() {\n  return { editing: false, item: this.props.item };\n},\ncomponentDidMount() {\n  this.state.item.on('change', () => this.forceUpdate(), this);\n},\ncomponentWillUnmount() {\n  this.state.item.off(null, null, this);\n},\ncomponentWillReceiveProps(props) {\n  this.setState({ item: props.item });\n},\ncomponentDidUpdate(prevProps, prevState) {\n  if (prevState.item !== this.state.item) {\n    prevState.item.off(null, null, this);\n    this.state.item.on('change', () => this.forceUpdate(), this);\n  }\n}\n```\n\n[item-shared-view]: https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/views/index.js#L35\n\nAnd, since both sides use Views based on [React][], many UI event handlers can also be shared despite the difference in platform specific JSX and view elements.\n\n(Of course, I recently learned that [React mixins are dead][dead-mixins], so I'm already behind the times. But, this code works for now. I'll get around to burning that bridge when I learn more about Flux.)\n\n[dead-mixins]: https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750\n\n## Forking & sharing Model code for persistence\n\nFor multiple todo items, [ampersand-collection][] is handy. It manages arrays of [ampersand-state][] objects and emits events when the set changes. This is useful for keeping [list][list-web-view] [views][list-ios-view] updated.\n\n[list-web-view]: https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/views/web/TodoList.js\n[list-ios-view]: https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/views/ios/TodoList.js\n\n[ampersand-collection][] also offers methods for serializing & deserializing the models it contains. That's just what I need, because I'd like to make my todo list items persistent between sessions with the app.\n\n[todo-model]: https://github.com/lmorchard/react-multiplatform/blob/master/lib/models/Todo.js\n[todo-model-ampersand]: https://github.com/tastejs/todomvc/blob/master/examples/ampersand/js/models/todo.js\n\nApropos of that, we have some storage capabilities on each platform: [localStorage][] for modern browsers, and [AsyncStorage][] for React Native. Both allow you to store small amounts of persistent data on a device. For the purposes of this toy app, these data stores are just about right.\n\nBut, these storage APIs differ. [Using localStorage][using-localstorage] looks like this:\n\n```javascript\nreadFromStorage: function () {\n  var existingData = localStorage[STORAGE_KEY];\n  if (existingData) {\n    this.set(JSON.parse(existingData));\n  }\n},\nwriteToStorage: function () {\n  localStorage[STORAGE_KEY] = JSON.stringify(this);\n}\n```\n\nMeanwhile, [using AsyncStorage][using-asyncstorage] looks like this:\n\n```javascript\nreadFromStorage() {\n  AsyncStorage.getItem(STORAGE_KEY).then((existingData) => {\n    this.set(JSON.parse(existingData));\n  });\n},\nwriteToStorage() {\n  AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(this));\n}\n```\n\nIf you peek at those last two links, though, you might notice they both define classes that start like this:\n\n```javascript\nvar TodoCollection = module.exports = BaseCollection.extend({\n```\n\nSince [ampersand-collection][] supports class inheritance, the bulk of the logic for these collections can be housed in [a shared superclass][basecollection]. The subclasses just need to implement the platform-specific storage methods. A different mechanism than [React mixins][], but for basically the same purpose.\n\n[using-localstorage]: https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/models/web/TodoCollection.js#L14\n[using-asyncstorage]: https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/models/ios/TodoCollection.js#L9\n[basecollection]: https://github.com/lmorchard/react-multiplatform/blob/3fd16fe31473f249d8a54020ef252f524dd17d70/lib/models/TodoCollection.js#L8\n\n[AsyncStorage]: https://facebook.github.io/react-native/docs/asyncstorage.html\n[localstorage]: https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API\n\n## Sharing by the numbers\n\nThe main goal of this experiment is to get a feel as to whether a hybrid React approach is worth considering versus building totally separate apps for native and web platforms. The metric I decided to use for this is counting lines of code (LoC), and this is what I found:\n\n* Overall, ~30% shared LoC (226 / 748).\n\n* For Models, ~74% shared LoC (159 / 215).\n\n* For Views, ~12% shared LoC (67 / 533).\n\nBecause I like showing my work, here's how I came up with those numbers:\n\n```bash\n# Total LoC for models = 215\n$ cat lib/models/**/*.js | wc -l\n     215\n\n# ~74% common model code\n$ cat lib/models/*js | wc -l\n     159\n\n# ~12% iOS specific model code\n$ cat lib/models/ios/*js | wc -l\n      25\n\n# ~14% web specific model code\n$ cat lib/models/web/*js | wc -l\n      31\n\n# Total LoC for views = 533\n$ cat lib/views/**/*.js | wc -l\n     533\n\n# ~12% common view code\n$ cat lib/views/*js | wc -l\n      67\n\n# ~44% iOS specific view code\n$ cat lib/views/ios/*js | wc -l\n     235\n\n# ~43% web specific view code\n$ cat lib/views/web/*js | wc -l\n     231\n```\n\n## Conclusion\n\nUsing React for both web & native looks promising. However, the toy app I've built is too simple to present an overwhemingly compelling case.\n\nWhat I tried to do here was get a quick feel for the shape of things and where the code multipliers can be found. Your mileage will vary on app features and code refactoring ability.\n\nIn particular, this toy app's models are very simple. So, even though there's a lot of sharing, it doesn't make a big impact on the bottom line. In an app with more complex business logic, that could change favorably.\n\nOn the other hand, Views between platforms will have a greater impact as they get more complex in dealing with divergent UI elements. You could paper over many platform differences with reusable components that normalize APIs & usage patterns - hopefully while not squashing unique advantages of each platform. So far, this app is too simple to really expose those opportunities.\n\nAnd, of course, all bets are off once you've left React for straight native development. My hunch is that there are qualitative & quantitative benefits to reducing context switching. You can focus development & testing efforts on JavaScript & React as opposed to multiple native & web toolkits (e.g. Objective-C & Swift & Java - oh my!). But, measuring that hunch is beyond the scope of what I tried doing here.\n\nHopefully, I've raised some interesting features of the terrain. But, I know this is a very shallow look at things and I'm learning as I go along. Feel free to poke holes in this stuff and throw some suggestions at me!\n\n[ampersand-subcollection]: https://github.com/AmpersandJS/ampersand-subcollection\n[ampersand-collection]: https://github.com/AmpersandJS/ampersand-collection\n[ampersand-state]: https://github.com/AmpersandJS/ampersand-state\n[ampersand-view]: https://github.com/AmpersandJS/ampersand-view\n[Backbone.js]: http://backbonejs.org/\n[ampersand.js]: http://ampersandjs.com/\n[flux]: https://facebook.github.io/flux/docs/overview.html\n[TodoMVC]: http://todomvc.com/\n[react-multiplatform]: https://github.com/lmorchard/react-multiplatform/\n[react]: https://facebook.github.io/react/\n[feels-like-web]: https://code.facebook.com/posts/1014532261909640/react-native-bringing-modern-web-techniques-to-mobile/\n[rn-devtools]: https://facebook.github.io/react-native/docs/debugging.html#content\n[react-api]: https://facebook.github.io/react/docs/top-level-api.html\n[React Native]: https://facebook.github.io/react-native/\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2015",
    "path": "2015/07/22/react-multiplatform",
    "summary": "<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\n<p>TL;DR: I built <a href=\"https://github.com/lmorchard/react-multiplatform/\">a toy app using React for web and native</a> to get a feel for whether this hybrid approach is worth using. I think the answer is &quot;yes&quot; - but mainly for apps whose business logic &amp; data models are more complex than their views.</p>\n"
  },
  {
    "title": "The Verge's web sucks",
    "tags": [
      "webdev",
      "adtech",
      "advertising",
      "internet",
      "privacy",
      "tracking"
    ],
    "year": "2015",
    "month": "07",
    "day": "22",
    "isDir": false,
    "slug": "the-verge-web-sucks",
    "date": "2015-07-22T12:00:00.000Z",
    "postName": "2015-07-22-the-verge-web-sucks",
    "html": "<p>TL;DR: Did you know that The Verge delivers you to around 20 companies for advertising &amp; tracking purposes? I didn&#39;t. That might foul up your web experience a little bit. Maybe we should try something different.</p>\n<!--more-->\n\n<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\n<h2 id=\"i-love-the-verge-but-man\">I love The Verge, but man...</h2>\n<p>So, I&#39;ve been a big fan of The Verge, <a href=\"https://twitter.com/lmorchard/statuses/142396733316534272\">almost since day one</a>. It&#39;s a gorgeous site and the content is great.</p>\n<p>They&#39;ve done some amazing things with longform articles like &quot;<a href=\"http://www.theverge.com/2015/6/24/8809723/jerry-seinfeld-tv-show-international-translation\">What&#39;s the deal with translating Seinfeld</a>&quot; and &quot;<a href=\"http://www.theverge.com/2015/4/2/8285139/max-headroom-oral-history-80s-cyberpunk-interview\">Max Headroom: the definitive history of the 1980s digital icon</a>&quot;, and the daily news output is high quality.</p>\n<p>But, I have to say, reading <a href=\"https://twitter.com/reckless/\">Nilay Patel</a>&#39;s &quot;<a href=\"http://www.theverge.com/2015/7/20/9002721/the-mobile-web-sucks\">The Mobile Web Sucks</a>&quot; felt like getting pelted by rocks thrown <a href=\"http://product.voxmedia.com/2015/5/6/8561867/declaring-performance-bankruptcy\">from a bright, shiny glass house</a>.</p>\n<p>Calling out browser makers for the performance of sites like his? That&#39;s a bit much.</p>\n<p>Here&#39;s my thing: I&#39;ve never had an iPhone. I&#39;ve had Palm webOS phones, a parade of Android devices, and now <a href=\"http://www.cnet.com/news/mozilla-overhauls-firefox-smartphone-plan-to-focus-on-quality-not-cost/\">an experimental Boot2Gecko phone on really nice hardware</a>. Some sites have long been a delight on whatever gadget I fetch from my pocket. Others, I&#39;ve watched decay over the years as their mobile web experiences are neglected in favor of those frantically promoted apps.</p>\n<p>The Verge isn&#39;t quite either of those. And, for me as a fan, it&#39;s frustrating.</p>\n<h2 id=\"time-to-open-the-dev-tools\">Time to open the Dev Tools</h2>\n<p>A page view on The Verge is a heavy load. I&#39;ve known this for awhile, but it wasn&#39;t until now that I decided to take a peek at what might be wriggling under this log.</p>\n<p>So, I opened up the Dev Tools in Firefox and gave the page a reload on a cleared cache.</p>\n<p><img src=\"/uploads/2015/the-verge-web-sucks/the-verge-html-size.png\" class=\"fullwidth\"\n  alt=\"HTML size on the article\"/></p>\n<p>That&#39;s fine - 75kb of HTML for the article. But, I also expect there&#39;ll be a font or two and a raft of images.</p>\n<p><img src=\"/uploads/2015/the-verge-web-sucks/more-resources.png\" class=\"fullwidth\"\n  alt=\"Loading more resources...\" /></p>\n<p>We&#39;re up to 20 requests and 1.4MB over ~7 seconds. That&#39;s on the upper end of what I&#39;d advise, but it&#39;s not terrible. I said that The Verge is a gorgeous site - that takes some resources. Hell, this very blog post is going to be bigger than I&#39;d like thanks to the Twitters &amp; Googles &amp; Disqus, and it&#39;s no visual delight either.</p>\n<p>Oh, but wait, it&#39;s not done loading yet. I&#39;m starting to read &amp; scroll, but my browser&#39;s still spinning. I wonder what the final stats will be?</p>\n<h2 id=\"ow-my-data-plan\">Ow, my data plan!</h2>\n<p><img src=\"/uploads/2015/the-verge-web-sucks/the-verge-final-load-stats.png\"\n  class=\"fullwidth\" alt=\"It finally stopped loading\" /></p>\n<p>Holy crap. It took over 30 seconds. In the end, it fetched over 9.5MB across 263 HTTP requests. That&#39;s almost an order of magnitude more data &amp; time than needed for the article itself.</p>\n<p>What the hell is all this stuff?</p>\n<p><img src=\"/uploads/2015/the-verge-web-sucks/resource-breakdown.png\"\n  class=\"fullwidth\" alt=\"It finally stopped loading\" /></p>\n<p>Wow. Devtools performed a second reload of the page to get an overall performance analysis. This time it downloaded 12MB - a little over 7MB in that is JavaScript!</p>\n<p>Just to put this in some rough perspective: Assuming I had a 1GB / month data plan, I could visit sites like The Verge about 3 times per day before I hit my cap. If I&#39;m lucky, some or most of this will get cached between requests so it won&#39;t be <em>quite</em> that bad. In fact, another report tells me that a primed cache yields 8MB transferred - so maybe 4 visits per day.</p>\n<p>That&#39;s assuming caches on mobile are comparable to my laptop, <a href=\"http://www.webperformancetoday.com/2012/07/12/early-findings-mobile-browser-cache-persistence-and-behaviour/\">which is not a safe assumption</a>.</p>\n<p>Still, this isn&#39;t one of the cool longform articles on The Verge with interactive features and whatnot. This is just a straightforward 1600 word rant with a few quotes &amp; images. Oh, and one video. Not entirely different than this blog post.</p>\n<p>What in the world is all this code <em>doing</em>?</p>\n<h2 id=\"shining-a-lightbeam-under-the-log\">Shining a Lightbeam under the log</h2>\n<p>Hmm, I think I <a href=\"https://twitter.com/reckless/status/623234268152598528\">Nilay Patel tweeted a hint</a>:</p>\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/satefan\">@satefan</a> <a href=\"https://twitter.com/verge\">@verge</a> part of the content we deliver is advertising! :)</p>&mdash; nilay patel (@reckless) <a href=\"https://twitter.com/reckless/status/623234268152598528\">July 20, 2015</a></blockquote>\n\n<p>Man, I&#39;d hazard a guess that <em>most</em> of what you just delivered was advertising. That, and spyware.</p>\n<p>In one of the <a href=\"https://wiki.mozilla.org/WeeklyUpdates\">public Monday update calls at Mozilla</a> I heard about this project called <a href=\"https://www.mozilla.org/en-US/lightbeam/\">Lightbeam</a>:</p>\n<blockquote>Lightbeam is a Firefox add-on that uses interactive visualizations to show you the first and third party sites you interact with on the Web.</blockquote>\n\n<p>So, I figured I&#39;d let it take a look at The Verge. This is what it showed:</p>\n<p><img src=\"/uploads/2015/the-verge-web-sucks/im-surrounded.png\"\n  class=\"fullwidth\" id=\"thumbnail\" alt=\"I'm surrounded\" /></p>\n<p>Imagine this is an iceberg as viewed from above. The Verge is the tip above water, the big circle in the middle. The triangles dancing around it are third-party sites lurking under the surface. Lightbeam has a list view, so I switched to get a closer look:</p>\n<p><img src=\"/uploads/2015/the-verge-web-sucks/lightbeam-listview.png\"\n  class=\"fullwidth\" alt=\"Lightbeam list view\" /></p>\n<p>Sweet Jeebus. &quot;You have visited <strong>1 SITE</strong>. You have connected with <strong>47 THIRD PARTY SITES.</strong>&quot;</p>\n<h2 id=\"22-flavors-of-spyware\">22 flavors of spyware</h2>\n<p>Now, to be fair, scrolling through the report I could see that some of these distinct &quot;sites&quot; are clearly alternate domains owned by the same organization. That said, I still found <em>over 20 different companies</em> before I got tired of digging:</p>\n<!-- mosaic here? -->\n\n<ul> <!-- class=\"columns clearfix\"> -->\n<li><a href=\"http://googleadservices.com\">Google</a></li>\n<li><a href=\"http://advertising.amazon.com/\">Amazon</a> - \"Reach millions of customers who find, discover, and buy at Amazon\"</li>\n<li><a href=\"http://skimresources.com\">skimresources.com</a> - \"When links in publishers’ content lead their users to click through and buy from an online retailer, we make sure they’re rewarded!\"</li>\n<li><a href=\"http://sonobi.com\">sonobi.com</a> - \"Sonobi’s suite of buy and sell-side tools allow our customers to identify, deliver, and manage advertising opportunities through performance filters once absent from programmatic channels\"</li>\n<li><a href=\"http://umbel.com\">umbel.com</a> - \"Umbel helps you securely collect first-party customer data and combine all of your existing data from multiple sources to give you a complete view of your customers.\"</li>\n<li><a href=\"http://www.krux.com/\">krux.com</a> - \"Krux helps businesses drive revenue by delivering smarter content, commerce and marketing experiences to people.\"</li>\n<li><a href=\"http://mathtag.com\">mediamath.com</a> - \"MediaMath’s TerminalOne™ platform activates data, automates execution, and optimizes advertising interactions across addressable media—delivering greater performance, transparency, and control to marketers and a better experience to consumers.\"</li>\n<li><a href=\"http://adnxs.com\">adnxs.com</a> - \"Adnxs™ is a portal for Publishers to the AppNexus® online auction exchange used to sell advertising space.\"</li>\n<li><a href=\"http://bidswitch.net\">bidswitch.net</a> - \"BidSwitch provides immediate and seamless real-time access for Supply and Demand Partners across all media types (display, mobile, video, native, etc.).\"</li>\n<li><a href=\"http://scorecardresearch.com\">scorecardresearch.com</a> - \"ScorecardResearch, a service of Full Circle Studies, Inc., is part of the comScore, Inc. market research community, a leading global market research effort that studies and reports on Internet trends and behavior.\"</li>\n<li><a href=\"http://kargo.com\">kargo.com</a> - \"Kargo weaves our content and ad technology into our premium publishers’ mobile and tablet properties, offering advertisers the best brand experiences.\"</li>\n<li><a href=\"http://quantserve.com\">quantcast.com</a> - \"Understand your audience. Find your next customer.\"</li>\n<li><a href=\"http://moatads.com\">moatads.com</a> - \"Moat's proprietary ad search engine has become a ubiquitous tool for the display ad industry. Moat makes it easy to find what and where ads are running for the top brands and sites.\"</li>\n<li><a href=\"http://flashtalking.com\">flashtalking.com</a> - \"Flashtalking is an independent ad serving, measuring and technology company, providing best-in-class digital advertising products, service and support for online advertisers, key media buying and creative agencies.\"</li>\n<li><a href=\"http://www.lotame.com/\">lotame.com</a> - \"Lotame is a data management platform (DMP) that lets marketers, agencies and publishers harness audience data to make smarter marketing, product and business decisions.\"</li>\n<li><a href=\"http://ixicorp.com\">ixicorp.com</a> - \"IXI Services enables its clients to differentiate and target consumer households and target markets based on proprietary measures of wealth, income, spending capacity, credit, share-of-wallet, and share-of-market.\"</li>\n<li><a href=\"http://chartbeat.com\">chartbeat.com</a> - \"We partner with editorial teams to identify their highest quality content -- the pieces that pique and keep reader attention. We partner with advertising teams to plan campaigns around this high-quality content so these ads are seen more often and for longer.\"</li>\n<li><a href=\"http://bombora.com\">bombora.com</a> - \"We are the largest aggregator of B2B intent driven data.\"</li>\n<li><a href=\"http://taboola.com\">taboola.com</a> - \"Taboola recommends editorial and sponsored content across many of the world’s most highly-trafficked sites.\"</li>\n<li><a href=\"http://bluekai.com\">bluekai.com</a> - \"BlueKai is the industry's leading cloud-based big data platform that enables companies to personalize online, offline and mobile marketing campaigns with richer and more actionable information about targeted audiences.\"</li>\n<li><a href=\"http://marketo.com\">marketo.com</a> - \"Marketo has developed the industry’s leading engagement marketing platform, the broadest ecosystem of partners, and the deepest expertise to make this all possible.\"</li>\n<li><a href=\"http://retargeter.com\">retargeter.com</a> - \"ReTargeter optimizes your ad spend with highly targeted, real time digital advertising solutions and the best account management in the industry.\"</li>\n</ul>\n\n<h2 id=\"make-time-to-visit-the-vendor-hall\">Make time to visit the vendor hall!</h2>\n<p>I feel like someone just set up the entire vendor hall from an awful tech conference in my living room. Seriously, could you folks just not pick one or two or ten? Did you hit every booth and say &quot;Yeah, cool, sign us up!&quot; I feel thoroughly spindled &amp; folded &amp; researched, here.</p>\n<p>As a webdev at Mozilla, I&#39;ve been in hour-long meetings where we&#39;ve agonized over whether it&#39;s copacetic to include <em>just one little Google Analytics snippet</em> without notifying users and updating the privacy policy. But, I know we&#39;re crazy in our own very special ways.</p>\n<p>In former lives, I&#39;ve worked at ad agencies and digital marketing companies. I&#39;m no stranger to conversations that revolve around partners &amp; bizdev &amp; analytics &amp; media buys. I can only imagine things have intensified &amp; evolved since I&#39;ve been out of those trenches.</p>\n<p>Still - and maybe this is the Mozilla brain-damage talking - I can&#39;t imagine a sane conversation that resulted in The Verge extending an invitation to over 20 companies to set up shop on my computer with every page visit. I can only imagine this as a steady drip-drop of bizdev decisions and emails to internal webdevs:</p>\n<p>*&quot;Hey, can you add this tracking pixel? These guys do realtime attention heatmapping and it&#39;s brilliant!&quot;*</p>\n<p>*&quot;Paste this snippet into the global template, please? This fourth programmatic ad platform is really going to fill in the gaps for the other three.&quot;*</p>\n<p>*&quot;One more script thing here. We need to capture the affiliate credit for all these links going out to e-commerce sites.*&quot;</p>\n<p>*&quot;Oh hey, we&#39;re going to need this new script to manage the dozen ad platforms we use now.&quot;*</p>\n<p>I&#39;m guessing no one along the way had the power or motivation to say no. I mean, really, what&#39;s the cost in tossing one more straw onto that camel&#39;s back? I know I never looked or complained until now, and I doubt the majority of readers will ever bother.</p>\n<p>We all just kind of get this growing sense of malaise about &quot;the web&quot; as a gestalt of our favorite sites as they get suckier.</p>\n<h2 id=\"how-to-make-the-web-suck\">How to make the web suck</h2>\n<p>So, I haven&#39;t taken the time to dig into the source code of those companies&#39; specific contributions to the article. There are only so many hours in the day, and I have a ranty blog post to finish.</p>\n<p>But, if you want to talk about browser performance - mobile or desktop - don&#39;t you think that maybe, <em>just maybe</em>, some of that <strong>7 megabytes</strong> of JavaScript code might have an impact?</p>\n<p>First, even assuming this code comes from a local cache, <a href=\"http://timkadlec.com/2014/09/js-parse-and-execution-time/\">parsing it into something executable has a cost</a>. Of course, someday, we&#39;ll have <a href=\"https://brendaneich.com/2015/06/from-asm-js-to-webassembly/\">WebAssembly</a> to shift this first stage upstream into webdev build tools. But we don&#39;t have that, yet.</p>\n<p>Then, there&#39;s what that code&#39;s actually doing once it runs. There&#39;s the usual reporting on every scrap of browser fingerprint data. There&#39;s deciding whether and what ads to fetch &amp; inject. I&#39;ve seen scripts that record every pixel of mouse movement and phone home every few seconds.</p>\n<p>Some spawn lots of hidden iframes, each doing something fun. Others run code 10 times per second that trigger little invisible page re-renderings that chew up CPU and make scrolling &amp; orientation changes chug. Some scripts get run multiple times and perform duplicate work. Attack ships on fire off the shoulder of Orion. I watched C-beams glitter in the dark near the Tannhauser gate.</p>\n<p>Wait, where was I?</p>\n<h2 id=\"everybodys-not-doing-it\">Everybody&#39;s (not) doing it!</h2>\n<p>I&#39;ve seen the argument that this is how the web gets funded. Everybody&#39;s doing it. This is the current state of the art. Browsers just need to suck it up &amp; make it happen.</p>\n<p>Some sites are (much) better than others, though, and it doesn&#39;t seem to be directly related to the content. Here&#39;s what I saw when I did a quick check of some daily reads:</p>\n<style type=\"text/css\">\n  img.inline { vertical-align: middle; }\n</style>\n\n<ul>\n<li><img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/forbes.png\"> - <a href=\"http://www.forbes.com/sites/ryanmac/2015/07/20/as-paypal-goes-public-again-ceo-hints-at-working-with-amazon-and-sets-sights-on-acquisitions/\">Forbes</a></li>\n<li><img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/huffpo.png\"> - <a href=\"http://www.huffingtonpost.com/entry/first-half-of-2015-was-hottest-january-june-ever-recorded_55ad7b8ce4b0caf721b3a968\">The Huffington Post</a></li>\n<li><img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/cnn.png\"> - <a href=\"http://www.cnn.com/2015/07/23/politics/donald-trump-border-visit-texas/index.html\">CNN</a></li>\n<li><img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/readwrite.png\"> - <a href=\"http://readwrite.com/2015/07/15/bittorrent-sync-new-api\">Readwrite</a></li>\n<li><img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/bbc.png\"> - <a href=\"http://www.bbc.com/news/world-africa-33642158\">BBC</a></li>\n<li><img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/ars-technica.png\"> - <a href=\"http://arstechnica.com/gadgets/2015/07/rare-breed-linux-mint-17-2-offers-desktop-familiarity-and-responds-to-user-wants/\">Ars Technica</a></li>\n<li><img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/qz.png\"> - <a href=\"http://qz.com/458826/behold-nasas-first-image-in-decades-of-the-whole-earth/\">Quartz</a></li>\n<li><img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/npr.png\"> - <a href=\"http://www.npr.org/sections/alltechconsidered/2015/07/20/424630545/with-ad-blocking-use-on-the-rise-what-happens-to-online-publishers\">NPR</a></li>\n<li><img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/io9.png\"> - <a href=\"http://io9.com/molybdenum-the-most-important-element-youve-never-hear-1718443869\">io9</a></li>\n<li><img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/the-guardian.png\"> - <a href=\"http://www.theguardian.com/commentisfree/2015/jul/20/bernie-sanders-structural-racism-economic-justice\">The Guardian</a></li>\n<li><img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/mozilla.png\"> - <a href=\"https://www.mozilla.org/en-US/\">Mozilla</a></li>\n<li><img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/mdn.png\"> - <a href=\"https://developer.mozilla.org/en-US/\">Mozilla Developer Network</a></li>\n</ul>\n<p>If you&#39;ve bought into my thesis that this stuff should take a lot of the blame for poor mobile performance - it&#39;s no surprise that I&#39;ll claim these sites are progressively better experiences as I step down the list.</p>\n<p>I also didn&#39;t dig deeply into each of these. But, it&#39;s pretty clear The Verge blows other sites out of the water in terms of what it demands from a browser. Forbes is a very close second, though, and it sometimes seems to do annoying things like phone home every second or so while I&#39;m on the page.</p>\n<p>Oh, and admittedly I don&#39;t visit the Mozilla home page as a &quot;daily read&quot;, though I do use MDN regularly. I&#39;ve also worked on both, so I have some notion of what they&#39;re (not) doing - and how much we beat ourselves up internally about reaching sub-second page loads. (Man, do we look good now, or what?)</p>\n<h2 id=\"what-are-browsers-for-anyway\">What are browsers for, anyway?</h2>\n<p>Nilay Patel says &quot;what we really need is a more powerful, more robust web.&quot; Personally, I think the web we have right now can be pretty damn powerful &amp; robust. <a href=\"http://tinyrevolution.us/2014/05/09/choosing-a-tow-vehicle-for-your-tiny-house/\">Stop trying to make a sedan tow a house.</a></p>\n<p>But, is it ultimately a good idea to optimize for these icebergs that consist of the tiny bit we came for, perched atop a great big submerged intelligence gathering apparatus assembled on-demand from a consortium of marketing &amp; analytics firms?</p>\n<p>Just what are we building these browsers for? Is this what we want as users? Because, browsers are <em>user agents*. I know the web needs to get funded, somehow. But should the agents operating on our behalf just blindly accept whatever publishers want to send gurgling down the pipes? Maybe our agents *should be asserting themselves</em> to get us a better deal &amp; better performance. This is dangerous talk, I know, and it implies some slippery slopes.</p>\n<p>Apropos of that, it could be worse: Consider things like <a href=\"https://flipboard.com/\">Flipboard</a>, <a href=\"http://instantarticles.fb.com/\">Facebook&#39;s Instant Articles</a>, and <a href=\"https://www.apple.com/news/\">Apple&#39;s News app</a>. These are highly assertive agents that offer great reading experiences.</p>\n<p>In a nutshell, they do it by making publishers less free to crap it all up and users less free to encounter crap. That is, &quot;curation&quot;. As gatekeepers, they force publishers to strip it all down and make their deals with just one middle man. Win-win - except it&#39;s a solution for a self-made problem that introduces new gatekeepers and leaves us with far less choice &amp; control over our agents.</p>\n<h2 id=\"maybe-paying-for-the-web-can-be-better\">Maybe paying for the web can be better?</h2>\n<p>Browsers have typically tried to stay neutral, because <a href=\"http://www.iab.net/mozilla_rothenberg\">asserting an opinion can start some nasty fights</a>. But, if the choice is to watch the web head off into the sunset, what do we have to lose? Maybe browsers should impose a few of the constraints these news apps introduce. We keep things like <a href=\"https://adblockplus.org/\">Adblock Plus</a> at arm&#39;s length for plausible deniability - but everyone I know uses it.</p>\n<p>Meanwhile, there are people pondering how to improve funding for the web. Believe it or not, the <a href=\"https://wiki.mozilla.org/Content_services\">Content Services team</a> at Mozilla is thinking about way more than just &quot;<a href=\"http://www.computerworld.com/article/2847727/mozilla-plunks-ads-into-firefox.html\">plunking ads into Firefox</a>&quot;. Like, what if we actually accepted the fact that ads are a way of funding the web at large, and browsers themselves offered <a href=\"https://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/advancingcontent/files/2015/05/How-data-is-protected-Infographic1.pdf\">built-in mechanisms to support advertising that respect privacy &amp; performance</a>? Yeah, that&#39;s a bit of a change from browsers&#39; traditional neutrality. But, it could be a better deal for publishers <em>and</em> users together.</p>\n<p>Here&#39;s another idea: Almost a year ago, <a href=\"https://air.mozilla.org/subscribe2web/\">I heard the notion of &quot;Subscribe 2 Web&quot; at Mozilla</a>. The gist is that you&#39;re worth about $6.20 per month across publishers via advertising revenues. What if you paid that much into an account yourself every month and used a mechanism built into your browser to distribute that money? Yeah, it&#39;s micropayments, but I find it interesting that these folks came up with a specific dollar amount that doesn&#39;t sound terrible.</p>\n<p>But, if you don&#39;t like that, we have other options. I&#39;m a listener of Tom Merritt&#39;s <a href=\"http://www.dailytechnewsshow.com/\">Daily Tech News Show</a> - and <a href=\"https://www.patreon.com/acedtect\">I support him via Patreon</a>. We&#39;ve also got things like <a href=\"https://flattr.com/\">Flattr</a>. We&#39;ve got a pile of other ideas out there - but, none of them are as convenient as web spyware when users don&#39;t complain or impose a cost. If browsers started getting tough on web spyware, necessity might force some of these options to grow.</p>\n<h2 id=\"wrapping-up\">Wrapping up</h2>\n<p>So, I&#39;m out of steam. Sorry (<a href=\"http://blog.lmorchard.com/2013/02/25/too-long-read-anyway/\">not sorry</a>) for the wall of text, and the complete lack of pictures toward the end.</p>\n<p>Anyway, yeah, there are many things that can make the mobile web suck. Bad CSS layout, heavy UI frameworks, you name it. And, yeah, browsers can get better. They <em>are</em> getting better. There are interesting capabilities on the horizon.</p>\n<p>But, I can&#39;t help thinking if everyone shrank those tracking &amp; advertising icebergs down to some sane magnitude relative to the actual content, that this web might be a better place overall.</p>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n",
    "body": "TL;DR: Did you know that The Verge delivers you to around 20 companies for advertising & tracking purposes? I didn't. That might foul up your web experience a little bit. Maybe we should try something different.\n\n<!--more-->\n\n<nav role=\"navigation\" class=\"table-of-contents\"></nav>\n\n## I love The Verge, but man...\n\nSo, I've been a big fan of The Verge, [almost since day one][verge-fan]. It's a gorgeous site and the content is great.\n\nThey've done some amazing things with longform articles like \"[What's the deal with translating Seinfeld][translating-seinfeld]\" and \"[Max Headroom: the definitive history of the 1980s digital icon][max-headroom]\", and the daily news output is high quality.\n\nBut, I have to say, reading [Nilay Patel][]'s \"[The Mobile Web Sucks][mobile-web-sucks]\" felt like getting pelted by rocks thrown [from a bright, shiny glass house][performance-bankruptcy].\n\n[nilay patel]: https://twitter.com/reckless/\n\nCalling out browser makers for the performance of sites like his? That's a bit much.\n\nHere's my thing: I've never had an iPhone. I've had Palm webOS phones, a parade of Android devices, and now [an experimental Boot2Gecko phone on really nice hardware][mozilla-ignite]. Some sites have long been a delight on whatever gadget I fetch from my pocket. Others, I've watched decay over the years as their mobile web experiences are neglected in favor of those frantically promoted apps.\n\n[mozilla-ignite]: http://www.cnet.com/news/mozilla-overhauls-firefox-smartphone-plan-to-focus-on-quality-not-cost/\n\nThe Verge isn't quite either of those. And, for me as a fan, it's frustrating.\n\n## Time to open the Dev Tools\n\nA page view on The Verge is a heavy load. I've known this for awhile, but it wasn't until now that I decided to take a peek at what might be wriggling under this log.\n\nSo, I opened up the Dev Tools in Firefox and gave the page a reload on a cleared cache.\n\n<img src=\"/uploads/2015/the-verge-web-sucks/the-verge-html-size.png\" class=\"fullwidth\"\n  alt=\"HTML size on the article\"/>\n\nThat's fine - 75kb of HTML for the article. But, I also expect there'll be a font or two and a raft of images.\n\n<img src=\"/uploads/2015/the-verge-web-sucks/more-resources.png\" class=\"fullwidth\"\n  alt=\"Loading more resources...\" />\n\nWe're up to 20 requests and 1.4MB over ~7 seconds. That's on the upper end of what I'd advise, but it's not terrible. I said that The Verge is a gorgeous site - that takes some resources. Hell, this very blog post is going to be bigger than I'd like thanks to the Twitters & Googles & Disqus, and it's no visual delight either.\n\nOh, but wait, it's not done loading yet. I'm starting to read & scroll, but my browser's still spinning. I wonder what the final stats will be?\n\n## Ow, my data plan!\n\n<img src=\"/uploads/2015/the-verge-web-sucks/the-verge-final-load-stats.png\"\n  class=\"fullwidth\" alt=\"It finally stopped loading\" />\n\nHoly crap. It took over 30 seconds. In the end, it fetched over 9.5MB across 263 HTTP requests. That's almost an order of magnitude more data & time than needed for the article itself.\n\nWhat the hell is all this stuff?\n\n<img src=\"/uploads/2015/the-verge-web-sucks/resource-breakdown.png\"\n  class=\"fullwidth\" alt=\"It finally stopped loading\" />\n\nWow. Devtools performed a second reload of the page to get an overall performance analysis. This time it downloaded 12MB - a little over 7MB in that is JavaScript!\n\nJust to put this in some rough perspective: Assuming I had a 1GB / month data plan, I could visit sites like The Verge about 3 times per day before I hit my cap. If I'm lucky, some or most of this will get cached between requests so it won't be *quite* that bad. In fact, another report tells me that a primed cache yields 8MB transferred - so maybe 4 visits per day.\n\nThat's assuming caches on mobile are comparable to my laptop, [which is not a safe assumption][mobile-caching].\n\n[mobile-caching]: http://www.webperformancetoday.com/2012/07/12/early-findings-mobile-browser-cache-persistence-and-behaviour/\n\nStill, this isn't one of the cool longform articles on The Verge with interactive features and whatnot. This is just a straightforward 1600 word rant with a few quotes & images. Oh, and one video. Not entirely different than this blog post.\n\nWhat in the world is all this code *doing*?\n\n## Shining a Lightbeam under the log\n\nHmm, I think I [Nilay Patel tweeted a hint](https://twitter.com/reckless/status/623234268152598528):\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/satefan\">@satefan</a> <a href=\"https://twitter.com/verge\">@verge</a> part of the content we deliver is advertising! :)</p>&mdash; nilay patel (@reckless) <a href=\"https://twitter.com/reckless/status/623234268152598528\">July 20, 2015</a></blockquote>\n\nMan, I'd hazard a guess that *most* of what you just delivered was advertising. That, and spyware.\n\nIn one of the [public Monday update calls at Mozilla][weeklyupdates] I heard about this project called [Lightbeam][lightbeam]:\n\n[weeklyupdates]: https://wiki.mozilla.org/WeeklyUpdates\n\n<blockquote>Lightbeam is a Firefox add-on that uses interactive visualizations to show you the first and third party sites you interact with on the Web.</blockquote>\n\nSo, I figured I'd let it take a look at The Verge. This is what it showed:\n\n<img src=\"/uploads/2015/the-verge-web-sucks/im-surrounded.png\"\n  class=\"fullwidth\" id=\"thumbnail\" alt=\"I'm surrounded\" />\n\nImagine this is an iceberg as viewed from above. The Verge is the tip above water, the big circle in the middle. The triangles dancing around it are third-party sites lurking under the surface. Lightbeam has a list view, so I switched to get a closer look:\n\n<img src=\"/uploads/2015/the-verge-web-sucks/lightbeam-listview.png\"\n  class=\"fullwidth\" alt=\"Lightbeam list view\" />\n\nSweet Jeebus. \"You have visited **1 SITE**. You have connected with **47 THIRD PARTY SITES.**\"\n\n## 22 flavors of spyware\n\nNow, to be fair, scrolling through the report I could see that some of these distinct \"sites\" are clearly alternate domains owned by the same organization. That said, I still found *over 20 different companies* before I got tired of digging:\n\n<!-- mosaic here? -->\n\n<ul> <!-- class=\"columns clearfix\"> -->\n<li><a href=\"http://googleadservices.com\">Google</a></li>\n<li><a href=\"http://advertising.amazon.com/\">Amazon</a> - \"Reach millions of customers who find, discover, and buy at Amazon\"</li>\n<li><a href=\"http://skimresources.com\">skimresources.com</a> - \"When links in publishers’ content lead their users to click through and buy from an online retailer, we make sure they’re rewarded!\"</li>\n<li><a href=\"http://sonobi.com\">sonobi.com</a> - \"Sonobi’s suite of buy and sell-side tools allow our customers to identify, deliver, and manage advertising opportunities through performance filters once absent from programmatic channels\"</li>\n<li><a href=\"http://umbel.com\">umbel.com</a> - \"Umbel helps you securely collect first-party customer data and combine all of your existing data from multiple sources to give you a complete view of your customers.\"</li>\n<li><a href=\"http://www.krux.com/\">krux.com</a> - \"Krux helps businesses drive revenue by delivering smarter content, commerce and marketing experiences to people.\"</li>\n<li><a href=\"http://mathtag.com\">mediamath.com</a> - \"MediaMath’s TerminalOne™ platform activates data, automates execution, and optimizes advertising interactions across addressable media—delivering greater performance, transparency, and control to marketers and a better experience to consumers.\"</li>\n<li><a href=\"http://adnxs.com\">adnxs.com</a> - \"Adnxs™ is a portal for Publishers to the AppNexus® online auction exchange used to sell advertising space.\"</li>\n<li><a href=\"http://bidswitch.net\">bidswitch.net</a> - \"BidSwitch provides immediate and seamless real-time access for Supply and Demand Partners across all media types (display, mobile, video, native, etc.).\"</li>\n<li><a href=\"http://scorecardresearch.com\">scorecardresearch.com</a> - \"ScorecardResearch, a service of Full Circle Studies, Inc., is part of the comScore, Inc. market research community, a leading global market research effort that studies and reports on Internet trends and behavior.\"</li>\n<li><a href=\"http://kargo.com\">kargo.com</a> - \"Kargo weaves our content and ad technology into our premium publishers’ mobile and tablet properties, offering advertisers the best brand experiences.\"</li>\n<li><a href=\"http://quantserve.com\">quantcast.com</a> - \"Understand your audience. Find your next customer.\"</li>\n<li><a href=\"http://moatads.com\">moatads.com</a> - \"Moat's proprietary ad search engine has become a ubiquitous tool for the display ad industry. Moat makes it easy to find what and where ads are running for the top brands and sites.\"</li>\n<li><a href=\"http://flashtalking.com\">flashtalking.com</a> - \"Flashtalking is an independent ad serving, measuring and technology company, providing best-in-class digital advertising products, service and support for online advertisers, key media buying and creative agencies.\"</li>\n<li><a href=\"http://www.lotame.com/\">lotame.com</a> - \"Lotame is a data management platform (DMP) that lets marketers, agencies and publishers harness audience data to make smarter marketing, product and business decisions.\"</li>\n<li><a href=\"http://ixicorp.com\">ixicorp.com</a> - \"IXI Services enables its clients to differentiate and target consumer households and target markets based on proprietary measures of wealth, income, spending capacity, credit, share-of-wallet, and share-of-market.\"</li>\n<li><a href=\"http://chartbeat.com\">chartbeat.com</a> - \"We partner with editorial teams to identify their highest quality content -- the pieces that pique and keep reader attention. We partner with advertising teams to plan campaigns around this high-quality content so these ads are seen more often and for longer.\"</li>\n<li><a href=\"http://bombora.com\">bombora.com</a> - \"We are the largest aggregator of B2B intent driven data.\"</li>\n<li><a href=\"http://taboola.com\">taboola.com</a> - \"Taboola recommends editorial and sponsored content across many of the world’s most highly-trafficked sites.\"</li>\n<li><a href=\"http://bluekai.com\">bluekai.com</a> - \"BlueKai is the industry's leading cloud-based big data platform that enables companies to personalize online, offline and mobile marketing campaigns with richer and more actionable information about targeted audiences.\"</li>\n<li><a href=\"http://marketo.com\">marketo.com</a> - \"Marketo has developed the industry’s leading engagement marketing platform, the broadest ecosystem of partners, and the deepest expertise to make this all possible.\"</li>\n<li><a href=\"http://retargeter.com\">retargeter.com</a> - \"ReTargeter optimizes your ad spend with highly targeted, real time digital advertising solutions and the best account management in the industry.\"</li>\n</ul>\n\n## Make time to visit the vendor hall!\n\nI feel like someone just set up the entire vendor hall from an awful tech conference in my living room. Seriously, could you folks just not pick one or two or ten? Did you hit every booth and say \"Yeah, cool, sign us up!\" I feel thoroughly spindled & folded & researched, here.\n\nAs a webdev at Mozilla, I've been in hour-long meetings where we've agonized over whether it's copacetic to include *just one little Google Analytics snippet* without notifying users and updating the privacy policy. But, I know we're crazy in our own very special ways.\n\nIn former lives, I've worked at ad agencies and digital marketing companies. I'm no stranger to conversations that revolve around partners & bizdev & analytics & media buys. I can only imagine things have intensified & evolved since I've been out of those trenches.\n\nStill - and maybe this is the Mozilla brain-damage talking - I can't imagine a sane conversation that resulted in The Verge extending an invitation to over 20 companies to set up shop on my computer with every page visit. I can only imagine this as a steady drip-drop of bizdev decisions and emails to internal webdevs:\n\n*\"Hey, can you add this tracking pixel? These guys do realtime attention heatmapping and it's brilliant!\"*\n\n*\"Paste this snippet into the global template, please? This fourth programmatic ad platform is really going to fill in the gaps for the other three.\"*\n\n*\"One more script thing here. We need to capture the affiliate credit for all these links going out to e-commerce sites.*\"\n\n*\"Oh hey, we're going to need this new script to manage the dozen ad platforms we use now.\"*\n\nI'm guessing no one along the way had the power or motivation to say no. I mean, really, what's the cost in tossing one more straw onto that camel's back? I know I never looked or complained until now, and I doubt the majority of readers will ever bother.\n\nWe all just kind of get this growing sense of malaise about \"the web\" as a gestalt of our favorite sites as they get suckier.\n\n## How to make the web suck\n\nSo, I haven't taken the time to dig into the source code of those companies' specific contributions to the article. There are only so many hours in the day, and I have a ranty blog post to finish.\n\nBut, if you want to talk about browser performance - mobile or desktop - don't you think that maybe, *just maybe*, some of that **7 megabytes** of JavaScript code might have an impact?\n\nFirst, even assuming this code comes from a local cache, [parsing it into something executable has a cost][js-parsing]. Of course, someday, we'll have [WebAssembly][] to shift this first stage upstream into webdev build tools. But we don't have that, yet.\n\n[js-parsing]: http://timkadlec.com/2014/09/js-parse-and-execution-time/\n[WebAssembly]: https://brendaneich.com/2015/06/from-asm-js-to-webassembly/\n\nThen, there's what that code's actually doing once it runs. There's the usual reporting on every scrap of browser fingerprint data. There's deciding whether and what ads to fetch & inject. I've seen scripts that record every pixel of mouse movement and phone home every few seconds.\n\nSome spawn lots of hidden iframes, each doing something fun. Others run code 10 times per second that trigger little invisible page re-renderings that chew up CPU and make scrolling & orientation changes chug. Some scripts get run multiple times and perform duplicate work. Attack ships on fire off the shoulder of Orion. I watched C-beams glitter in the dark near the Tannhauser gate.\n\nWait, where was I?\n\n## Everybody's (not) doing it!\n\nI've seen the argument that this is how the web gets funded. Everybody's doing it. This is the current state of the art. Browsers just need to suck it up & make it happen.\n\nSome sites are (much) better than others, though, and it doesn't seem to be directly related to the content. Here's what I saw when I did a quick check of some daily reads:\n\n<style type=\"text/css\">\n  img.inline { vertical-align: middle; }\n</style>\n\n* <img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/forbes.png\"> - [Forbes](http://www.forbes.com/sites/ryanmac/2015/07/20/as-paypal-goes-public-again-ceo-hints-at-working-with-amazon-and-sets-sights-on-acquisitions/)\n* <img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/huffpo.png\"> - [The Huffington Post](http://www.huffingtonpost.com/entry/first-half-of-2015-was-hottest-january-june-ever-recorded_55ad7b8ce4b0caf721b3a968)\n* <img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/cnn.png\"> - [CNN](http://www.cnn.com/2015/07/23/politics/donald-trump-border-visit-texas/index.html)\n* <img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/readwrite.png\"> - [Readwrite](http://readwrite.com/2015/07/15/bittorrent-sync-new-api)\n* <img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/bbc.png\"> - [BBC](http://www.bbc.com/news/world-africa-33642158)\n* <img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/ars-technica.png\"> - [Ars Technica](http://arstechnica.com/gadgets/2015/07/rare-breed-linux-mint-17-2-offers-desktop-familiarity-and-responds-to-user-wants/)\n* <img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/qz.png\"> - [Quartz](http://qz.com/458826/behold-nasas-first-image-in-decades-of-the-whole-earth/)\n* <img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/npr.png\"> - [NPR](http://www.npr.org/sections/alltechconsidered/2015/07/20/424630545/with-ad-blocking-use-on-the-rise-what-happens-to-online-publishers)\n* <img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/io9.png\"> - [io9](http://io9.com/molybdenum-the-most-important-element-youve-never-hear-1718443869)\n* <img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/the-guardian.png\"> - [The Guardian](http://www.theguardian.com/commentisfree/2015/jul/20/bernie-sanders-structural-racism-economic-justice)\n* <img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/mozilla.png\"> - [Mozilla](https://www.mozilla.org/en-US/)\n* <img class=\"inline\" src=\"/uploads/2015/the-verge-web-sucks/mdn.png\"> - [Mozilla Developer Network](https://developer.mozilla.org/en-US/)\n\nIf you've bought into my thesis that this stuff should take a lot of the blame for poor mobile performance - it's no surprise that I'll claim these sites are progressively better experiences as I step down the list.\n\nI also didn't dig deeply into each of these. But, it's pretty clear The Verge blows other sites out of the water in terms of what it demands from a browser. Forbes is a very close second, though, and it sometimes seems to do annoying things like phone home every second or so while I'm on the page.\n\nOh, and admittedly I don't visit the Mozilla home page as a \"daily read\", though I do use MDN regularly. I've also worked on both, so I have some notion of what they're (not) doing - and how much we beat ourselves up internally about reaching sub-second page loads. (Man, do we look good now, or what?)\n\n## What are browsers for, anyway?\n\nNilay Patel says \"what we really need is a more powerful, more robust web.\" Personally, I think the web we have right now can be pretty damn powerful & robust. [Stop trying to make a sedan tow a house.][tiny-house-tow]\n\n[tiny-house-tow]: http://tinyrevolution.us/2014/05/09/choosing-a-tow-vehicle-for-your-tiny-house/\n\nBut, is it ultimately a good idea to optimize for these icebergs that consist of the tiny bit we came for, perched atop a great big submerged intelligence gathering apparatus assembled on-demand from a consortium of marketing & analytics firms?\n\nJust what are we building these browsers for? Is this what we want as users? Because, browsers are *user agents*. I know the web needs to get funded, somehow. But should the agents operating on our behalf just blindly accept whatever publishers want to send gurgling down the pipes? Maybe our agents *should be asserting themselves* to get us a better deal & better performance. This is dangerous talk, I know, and it implies some slippery slopes.\n\nApropos of that, it could be worse: Consider things like [Flipboard][], [Facebook's Instant Articles][], and [Apple's News app][]. These are highly assertive agents that offer great reading experiences.\n\nIn a nutshell, they do it by making publishers less free to crap it all up and users less free to encounter crap. That is, \"curation\". As gatekeepers, they force publishers to strip it all down and make their deals with just one middle man. Win-win - except it's a solution for a self-made problem that introduces new gatekeepers and leaves us with far less choice & control over our agents.\n\n## Maybe paying for the web can be better?\n\nBrowsers have typically tried to stay neutral, because [asserting an opinion can start some nasty fights][party-cookies]. But, if the choice is to watch the web head off into the sunset, what do we have to lose? Maybe browsers should impose a few of the constraints these news apps introduce. We keep things like [Adblock Plus][] at arm's length for plausible deniability - but everyone I know uses it.\n\nMeanwhile, there are people pondering how to improve funding for the web. Believe it or not, the [Content Services team][content-services] at Mozilla is thinking about way more than just \"[plunking ads into Firefox][plunk-ads]\". Like, what if we actually accepted the fact that ads are a way of funding the web at large, and browsers themselves offered [built-in mechanisms to support advertising that respect privacy & performance][tiles-flow]? Yeah, that's a bit of a change from browsers' traditional neutrality. But, it could be a better deal for publishers *and* users together.\n\nHere's another idea: Almost a year ago, [I heard the notion of \"Subscribe 2 Web\" at Mozilla][s2w]. The gist is that you're worth about $6.20 per month across publishers via advertising revenues. What if you paid that much into an account yourself every month and used a mechanism built into your browser to distribute that money? Yeah, it's micropayments, but I find it interesting that these folks came up with a specific dollar amount that doesn't sound terrible.\n\nBut, if you don't like that, we have other options. I'm a listener of Tom Merritt's [Daily Tech News Show][dtns] - and [I support him via Patreon][dtns-patreon]. We've also got things like [Flattr][]. We've got a pile of other ideas out there - but, none of them are as convenient as web spyware when users don't complain or impose a cost. If browsers started getting tough on web spyware, necessity might force some of these options to grow.\n\n## Wrapping up\n\nSo, I'm out of steam. Sorry ([not sorry](http://blog.lmorchard.com/2013/02/25/too-long-read-anyway/)) for the wall of text, and the complete lack of pictures toward the end.\n\nAnyway, yeah, there are many things that can make the mobile web suck. Bad CSS layout, heavy UI frameworks, you name it. And, yeah, browsers can get better. They *are* getting better. There are interesting capabilities on the horizon.\n\nBut, I can't help thinking if everyone shrank those tracking & advertising icebergs down to some sane magnitude relative to the actual content, that this web might be a better place overall.\n\n[plunk-ads]: http://www.computerworld.com/article/2847727/mozilla-plunks-ads-into-firefox.html\n[flipboard]: https://flipboard.com/\n[s2w]: https://air.mozilla.org/subscribe2web/\n[flattr]: https://flattr.com/\n[dtns]: http://www.dailytechnewsshow.com/\n[dtns-patreon]: https://www.patreon.com/acedtect\n[tiles-flow]: https://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/advancingcontent/files/2015/05/How-data-is-protected-Infographic1.pdf\n[content-services]: https://wiki.mozilla.org/Content_services\n[tiles]: https://blog.mozilla.org/advancingcontent/2015/05/21/providing-a-valuable-platform-for-advertisers-content-publishers-and-users/\n[Adblock Plus]: https://adblockplus.org/\n[party-cookies]: http://www.iab.net/mozilla_rothenberg\n[Facebook's Instant Articles]: http://instantarticles.fb.com/\n[Apple's News app]: https://www.apple.com/news/\n[lightbeam]: https://www.mozilla.org/en-US/lightbeam/\n[performance-bankruptcy]: http://product.voxmedia.com/2015/5/6/8561867/declaring-performance-bankruptcy\n[mobile-web-sucks]: http://www.theverge.com/2015/7/20/9002721/the-mobile-web-sucks\n[translating-seinfeld]: http://www.theverge.com/2015/6/24/8809723/jerry-seinfeld-tv-show-international-translation\n[max-headroom]: http://www.theverge.com/2015/4/2/8285139/max-headroom-oral-history-80s-cyberpunk-interview\n[verge-fan]: https://twitter.com/lmorchard/statuses/142396733316534272\n\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2015",
    "path": "2015/07/22/the-verge-web-sucks",
    "thumbnail": "/uploads/2015/the-verge-web-sucks/im-surrounded.png",
    "summary": "<p>TL;DR: Did you know that The Verge delivers you to around 20 companies for advertising &amp; tracking purposes? I didn&apos;t. That might foul up your web experience a little bit. Maybe we should try something different.</p>\n"
  },
  {
    "title": "Goodbye, Puck",
    "tags": [
      "pets",
      "cats",
      "puck"
    ],
    "year": "2015",
    "month": "04",
    "day": "15",
    "isDir": false,
    "slug": "goodbye-puck",
    "date": "2015-04-15T12:00:00.000Z",
    "postName": "2015-04-15-goodbye-puck",
    "html": "<p><a style=\"position: block; float: right; margin: 0 0 1em 1em;\"\nhref=\"https://www.flickr.com/photos/deusx/8453933354\" title=\"Yes, i have a cat\nbed attached to my desk by Les Orchard, on Flickr\"><img src=\"/uploads/2015/puck/8453933354_a4c95d72a8_n.jpg\" width=\"320\" height=\"240\" alt=\"Yes, i have a cat bed attached to my desk\"></a></p>\n<p>Our cat Puck died last night. He would have been 15 in July. That’s pretty\ngood for a cat, all things considered.</p>\n<!--more-->\n\n<p>He was my buddy, and he would cling to me like a little monkey when I picked\nhim up. He followed me everywhere. He cried when I left the house without him.\nFor much of his life, he would be the first thing I saw when I woke up,\nbecause he slept curled up close to my chest at night. He purred when I opened\nmy eyes and stirred awake.</p>\n<p><a style=\"position: block; float: left; margin: 1em 1em 1em 0;\" href=\"https://www.flickr.com/photos/deusx/60975373\" title=\"kitty-023 by Les Orchard, on Flickr\"><img src=\"/uploads/2015/puck/60975373_1f12e7f98e_m.jpg\" width=\"240\" height=\"180\" alt=\"kitty-023\"></a></p>\n<p>I got him and his sister Inanna (<a href=\"https://twitter.com/lmorchard/status/29488656198\">also\ndeparted</a>) as kittens just before I met\nthe girl who’d later <a href=\"http://decafbad.com/blog/2005/06/17/were-engaged/\">agree to marry\nme</a>. They were the first pets I&#39;d ever\nowned on my own. He was there for me through a significant chunk of my life,\nhappy and sad and everything in between. </p>\n<p>Big changes between the ages of 25\nand 39 - different jobs and lots of moving: living with roommates, living by\nmyself, living with the girl, <a href=\"http://decafbad.com/blog/2006/06/09/wedding-day-is-today/\">getting married to the\ngirl</a>, moving cross\ncountry and back. He went pretty far for a cat, having flown with us from\n<a href=\"http://blog.lmorchard.com/2006/06/24/go-west-young-man/\">Michigan to\nCalifornia</a> and <a href=\"http://decafbad.com/blog/2008/05/14/go-midwest-young-man/\">back\nagain</a>. But, of course he hated travel, having\nreserved a peculiar howling meow for car rides that was impossible to ignore.</p>\n<p><a style=\"position: block; float: right; margin: 1em 0 1em 1em;\" href=\"https://www.flickr.com/photos/deusx/2565869172\" title=\"Cat atop shelf by Les Orchard, on Flickr\"><img src=\"/uploads/2015/puck/2565869172_ce30a4b81c_m.jpg\" width=\"192\" height=\"240\" alt=\"Cat atop shelf\"></a></p>\n<p>As I’m writing this, a calendar alert popped up. Reminding me to give Puck his\nmeds. <a href=\"https://twitter.com/lmorchard/status/588453681114185729\">I’m going to have to delete all those\nreminders</a>. I’ve watched him get\nolder, walking a little slower and taking breaks on his way through the house.\nHe wasn’t the same kitten I knew who would leap from the floor to the top of a\nbookshelf almost seven feet high. He’d started needing special care, started\nleaving messes around the house.</p>\n<p>I’m in a strange place of terrible sadness and yet relief and yet terrible\nguilt over that relief. I’ll miss him, but I won’t miss the constant\nvigilance to catch him before he soiled the couch. I won’t miss keeping on top\nof pills and injections and special food. I won’t miss the sad moans when I\nclosed him up in the attic for the night by himself. (The alternative was\nwaking up in the wee hours to fights with the new cat Catsby. Or, waking up to\nhim making a mess in his favorite spot next to me on the bed.)</p>\n<p>The night before last, we took him to the vet and got news that he was\nseriously ill. We were advised to keep an eye on him through the night, so I\nstayed with him on the couch in the attic.</p>\n<p>I hauled <a href=\"http://blog.lmorchard.com/2004/12/03/if-you-snore-get-tested-for-sleep-apnea-now/\">my CPAP\nmachine</a> up there, figuring we’d fall asleep together like old\ntimes. I didn’t expect it to turn into an overnight vigil - but every time I\ncame close to falling asleep, he’d do something to wake me back up. A meow, a\nmoan, a few times even a paw to my face. There we were, laying together on the\ncouch, or sometimes the carpet, watching the sky outside gradually lighten.</p>\n<p>Maybe he was excited to have me there or maybe it was just the new meds, but\nhe wanted my attention. I spent a long time petting him and rubbing his belly.\nHe kneaded my arm and rubbed his head on me. We spent long minutes just\nlooking at each other like we would when I woke up with him on better days.</p>\n<p>Yesterday, he spent most of the day at the vet’s. They ran tests, got some new\nmeds into him. It was bad, but it seemed like he was responding to treatment.</p>\n<p><a style=\"position: block; float: left; margin: 1em 1em 1em 0;\" href=\"https://www.flickr.com/photos/deusx/16381807917\" title=\"IMG_20150218_012414 by Les Orchard, on Flickr\"><img src=\"/uploads/2015/puck/16381807917_d56aa3c0ee_m.jpg\" width=\"240\" height=\"180\" alt=\"IMG_20150218_012414\"></a></p>\n<p>We got him home and he spent the rest of the evening curled up in his favorite\nspot on the couch. Cheddars and Catsby, our other two cats, came by and\nvisited him. Catsby, in a departure from his usual too-enthusiastic attempts\nto play, bathed Puck’s face and ears and eventually curled up around him.</p>\n<p>Close to midnight, exhaustion caught up with me from the sleepless night\nbefore. Puck seemed okay, or as well as could be expected. I carried him up to\nthe attic and put him on a soft blanket in front of a heater. He moaned, but\nsettled in. I got him to eat a little more, spent some time petting him, told\nhim good night. He cried as I went down the stairs and closed the door behind\nme. I told myself that he’d be okay in the morning. I couldn’t do another\nnight like the one before, I was just too tired.</p>\n<p>The girl woke me up early this morning. He hadn’t come down the attic stairs\nto demand his release like usual. Instead, he’d found a quiet corner, laid\ndown comfortably, and passed away. I feel terrible. I don’t think there’s\nanything more we could have done for him, but I wish I’d been with him in the\nend.</p>\n<p><a style=\"position: block; float: left; margin: 1em 1em 1em 0em;\" href=\"https://www.flickr.com/photos/deusx/60975477\" title=\"kitty-020 by Les Orchard, on Flickr\"><img src=\"/uploads/2015/puck/60975477_435d4be811_m.jpg\" width=\"240\" height=\"180\" alt=\"kitty-020\"></a></p>\n<p><a style=\"position: block; float: right; margin: 1em 0 1em 1em;\" href=\"https://www.flickr.com/photos/deusx/8353514611\" title=\"puck in a tub by Les Orchard, on Flickr\"><img src=\"/uploads/2015/puck/8353514611_64e0c6cd56_m.jpg\" width=\"240\" height=\"180\" alt=\"puck in a tub\"></a></p>\n<p>And now he’s gone. One last car trip, the first he didn’t howl all the way\nthrough.</p>\n<p>All in all, I think (I hope) Puck had a good life. </p>\n<div style=\"clear:both\">He played an oversized part\nin my life, pampered and never wanting for much. I know he was a cat, and\nthere were a lot of things he couldn’t understand, but he really seemed to\nknow when you needed him close.</div> \n\n<p>He was my best friend and a big piece of me goes with him.</p>\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "body": "<a style=\"position: block; float: right; margin: 0 0 1em 1em;\"\nhref=\"https://www.flickr.com/photos/deusx/8453933354\" title=\"Yes, i have a cat\nbed attached to my desk by Les Orchard, on Flickr\"><img src=\"/uploads/2015/puck/8453933354_a4c95d72a8_n.jpg\" width=\"320\" height=\"240\" alt=\"Yes, i have a cat bed attached to my desk\"></a>\n\nOur cat Puck died last night. He would have been 15 in July. That’s pretty\ngood for a cat, all things considered.\n\n<!--more-->\n\nHe was my buddy, and he would cling to me like a little monkey when I picked\nhim up. He followed me everywhere. He cried when I left the house without him.\nFor much of his life, he would be the first thing I saw when I woke up,\nbecause he slept curled up close to my chest at night. He purred when I opened\nmy eyes and stirred awake.\n\n<a style=\"position: block; float: left; margin: 1em 1em 1em 0;\" href=\"https://www.flickr.com/photos/deusx/60975373\" title=\"kitty-023 by Les Orchard, on Flickr\"><img src=\"/uploads/2015/puck/60975373_1f12e7f98e_m.jpg\" width=\"240\" height=\"180\" alt=\"kitty-023\"></a>\n\nI got him and his sister Inanna ([also\ndeparted](https://twitter.com/lmorchard/status/29488656198)) as kittens just before I met\nthe girl who’d later [agree to marry\nme](http://decafbad.com/blog/2005/06/17/were-engaged/). They were the first pets I'd ever\nowned on my own. He was there for me through a significant chunk of my life,\nhappy and sad and everything in between. \n\nBig changes between the ages of 25\nand 39 - different jobs and lots of moving: living with roommates, living by\nmyself, living with the girl, [getting married to the\ngirl](http://decafbad.com/blog/2006/06/09/wedding-day-is-today/), moving cross\ncountry and back. He went pretty far for a cat, having flown with us from\n[Michigan to\nCalifornia](http://blog.lmorchard.com/2006/06/24/go-west-young-man/) and [back\nagain](http://decafbad.com/blog/2008/05/14/go-midwest-young-man/). But, of course he hated travel, having\nreserved a peculiar howling meow for car rides that was impossible to ignore.\n\n<a style=\"position: block; float: right; margin: 1em 0 1em 1em;\" href=\"https://www.flickr.com/photos/deusx/2565869172\" title=\"Cat atop shelf by Les Orchard, on Flickr\"><img src=\"/uploads/2015/puck/2565869172_ce30a4b81c_m.jpg\" width=\"192\" height=\"240\" alt=\"Cat atop shelf\"></a>\n\nAs I’m writing this, a calendar alert popped up. Reminding me to give Puck his\nmeds. [I’m going to have to delete all those\nreminders](https://twitter.com/lmorchard/status/588453681114185729). I’ve watched him get\nolder, walking a little slower and taking breaks on his way through the house.\nHe wasn’t the same kitten I knew who would leap from the floor to the top of a\nbookshelf almost seven feet high. He’d started needing special care, started\nleaving messes around the house.\n \nI’m in a strange place of terrible sadness and yet relief and yet terrible\nguilt over that relief. I’ll miss him, but I won’t miss the constant\nvigilance to catch him before he soiled the couch. I won’t miss keeping on top\nof pills and injections and special food. I won’t miss the sad moans when I\nclosed him up in the attic for the night by himself. (The alternative was\nwaking up in the wee hours to fights with the new cat Catsby. Or, waking up to\nhim making a mess in his favorite spot next to me on the bed.)\n\nThe night before last, we took him to the vet and got news that he was\nseriously ill. We were advised to keep an eye on him through the night, so I\nstayed with him on the couch in the attic.\n\nI hauled [my CPAP\nmachine](http://blog.lmorchard.com/2004/12/03/if-you-snore-get-tested-for-sleep-apnea-now/) up there, figuring we’d fall asleep together like old\ntimes. I didn’t expect it to turn into an overnight vigil - but every time I\ncame close to falling asleep, he’d do something to wake me back up. A meow, a\nmoan, a few times even a paw to my face. There we were, laying together on the\ncouch, or sometimes the carpet, watching the sky outside gradually lighten.\n\nMaybe he was excited to have me there or maybe it was just the new meds, but\nhe wanted my attention. I spent a long time petting him and rubbing his belly.\nHe kneaded my arm and rubbed his head on me. We spent long minutes just\nlooking at each other like we would when I woke up with him on better days.\n\nYesterday, he spent most of the day at the vet’s. They ran tests, got some new\nmeds into him. It was bad, but it seemed like he was responding to treatment.\n\n<a style=\"position: block; float: left; margin: 1em 1em 1em 0;\" href=\"https://www.flickr.com/photos/deusx/16381807917\" title=\"IMG_20150218_012414 by Les Orchard, on Flickr\"><img src=\"/uploads/2015/puck/16381807917_d56aa3c0ee_m.jpg\" width=\"240\" height=\"180\" alt=\"IMG_20150218_012414\"></a>\n\nWe got him home and he spent the rest of the evening curled up in his favorite\nspot on the couch. Cheddars and Catsby, our other two cats, came by and\nvisited him. Catsby, in a departure from his usual too-enthusiastic attempts\nto play, bathed Puck’s face and ears and eventually curled up around him.\n\nClose to midnight, exhaustion caught up with me from the sleepless night\nbefore. Puck seemed okay, or as well as could be expected. I carried him up to\nthe attic and put him on a soft blanket in front of a heater. He moaned, but\nsettled in. I got him to eat a little more, spent some time petting him, told\nhim good night. He cried as I went down the stairs and closed the door behind\nme. I told myself that he’d be okay in the morning. I couldn’t do another\nnight like the one before, I was just too tired.\n\nThe girl woke me up early this morning. He hadn’t come down the attic stairs\nto demand his release like usual. Instead, he’d found a quiet corner, laid\ndown comfortably, and passed away. I feel terrible. I don’t think there’s\nanything more we could have done for him, but I wish I’d been with him in the\nend.\n\n<a style=\"position: block; float: left; margin: 1em 1em 1em 0em;\" href=\"https://www.flickr.com/photos/deusx/60975477\" title=\"kitty-020 by Les Orchard, on Flickr\"><img src=\"/uploads/2015/puck/60975477_435d4be811_m.jpg\" width=\"240\" height=\"180\" alt=\"kitty-020\"></a>\n\n<a style=\"position: block; float: right; margin: 1em 0 1em 1em;\" href=\"https://www.flickr.com/photos/deusx/8353514611\" title=\"puck in a tub by Les Orchard, on Flickr\"><img src=\"/uploads/2015/puck/8353514611_64e0c6cd56_m.jpg\" width=\"240\" height=\"180\" alt=\"puck in a tub\"></a>\n\nAnd now he’s gone. One last car trip, the first he didn’t howl all the way\nthrough.\n\nAll in all, I think (I hope) Puck had a good life. \n\n<div style=\"clear:both\">He played an oversized part\nin my life, pampered and never wanting for much. I know he was a cat, and\nthere were a lot of things he couldn’t understand, but he really seemed to\nknow when you needed him close.</div> \n\nHe was my best friend and a big piece of me goes with him.\n\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2015",
    "path": "2015/04/15/goodbye-puck",
    "thumbnail": "/uploads/2015/puck/8453933354_a4c95d72a8_n.jpg",
    "summary": "<p><a style=\"position: block; float: right; margin: 0 0 1em 1em;\" href=\"https://www.flickr.com/photos/deusx/8453933354\" title=\"Yes, i have a cat\nbed attached to my desk by Les Orchard, on Flickr\"><img src=\"/uploads/2015/puck/8453933354_a4c95d72a8_n.jpg\" width=\"320\" height=\"240\" alt=\"Yes, i have a cat bed attached to my desk\"></a></p>\n<p>Our cat Puck died last night. He would have been 15 in July. That&#x2019;s pretty\ngood for a cat, all things considered.</p>\n"
  },
  {
    "title": "Parsec Patrol Diaries: Construction Time Again",
    "tags": [
      "html5",
      "parsecpatrol",
      "webdev"
    ],
    "year": "2015",
    "month": "02",
    "day": "09",
    "isDir": false,
    "slug": "parsec-patrol-resumes",
    "date": "2015-02-09T12:00:00.000Z",
    "postName": "2015-02-09-parsec-patrol-resumes",
    "html": "<p>Holy crap. Has it really been a year or so since I last hacked in earnest on\n<a href=\"https://github.com/lmorchard/parsec-patrol\">Parsec Patrol</a>? I&#39;ve been meaning to get back to it, and it&#39;s always felt like\njust last week when I was poking at it.</p>\n<p>Well, a week or so ago, I read <a href=\"https://twitter.com/blakewilliams__\">Blake Williams&#39;</a> &quot;<a href=\"http://robots.thoughtbot.com/replace-%5Bcoffeescript%5D%5B%5D-with-es6\">Replace <a href=\"http://coffeescript.org/\">CoffeeScript</a>\nwith ES6</a>&quot; and thought, &quot;Hmm, on what project did I last use\n<a href=\"http://coffeescript.org/\">CoffeeScript</a>? Oh yeah: <a href=\"https://github.com/lmorchard/parsec-patrol\">Parsec patrol</a>!&quot; So, I decided to take a swing through\nthe code and see what I was last up to. </p>\n<p>After a good look, I started an empty <a href=\"https://github.com/lmorchard/parsec-patrol/commits/newbranch\">new branch</a> in <a href=\"https://github.com/lmorchard/parsec-patrol\">my\nrepo</a> and started from scratch.</p>\n<p>See, I started <a href=\"https://github.com/lmorchard/parsec-patrol\">Parsec Patrol</a> as an excuse to force myself to learn a bunch of\nnew things I&#39;d been putting off for awhile. Near the top of the list were\n<a href=\"http://yeoman.io/\">Yeoman</a>, <a href=\"http://gruntjs.com/\">Grunt</a>, <a href=\"http://bower.io/\">Bower</a>, <a href=\"http://requirejs.org/\">RequireJS</a>, and <a href=\"http://coffeescript.org/\">CoffeeScript</a>. Those\nwere all cool things, so I figured I&#39;d just stir them all up in a big mess and\nsee what happened.</p>\n<p>The process was fun - these were things that slotted into empty spots in my\nwebdev process, both expected and unexpected. Of course, <a href=\"http://requirejs.org/\">RequireJS</a> was a\nlittle awkward in comparison to modules in <a href=\"http://nodejs.org/\">Node.js</a>.  But hey, modules in\nthe browser! And, I never really quite grokked what was going on in those\ntangly <a href=\"http://gruntjs.com/\">Grunt</a> configuration files and just kind of copypasta&#39;d what others\nwere doing. But hey, build automation for all my weird webdev needs!</p>\n<p>Then, after a nice &amp; relaxing holiday vacation to wrap up 2013, I read &quot;<a href=\"http://www.100percentjs.com/just-like-%5Bgrunt%5D%5B%5D-%5Bgulp%5D%5B%5D-%5Bbrowserify%5D%5B%5D-now/\">And\njust like that Grunt and RequireJS are out, it’s all about Gulp and Browserify\nnow</a>&quot;. </p>\n<p>Well that, along with things that followed, just drained my enthusiasm for\n<a href=\"http://gruntjs.com/\">Grunt</a>, <a href=\"http://bower.io/\">Bower</a>, and <a href=\"http://requirejs.org/\">RequireJS</a> in an hurry. But, it didn&#39;t leave me\nwanting to dive into the next big thing right away. So, I took a step back and\nplayed with other things for a few seasons. <a href=\"https://github.com/lmorchard/brick-select\">Web components</a> and <a href=\"https://github.com/lmorchard/node-firefox\">developer\ntools</a> are kind of fun to hack on. <a href=\"https://www.polymer-project.org/\">Polymer</a> was kind of a crazy rabbit\nhole.</p>\n<p>But, over the past year, <a href=\"http://gulpjs.com/\">Gulp</a> and <a href=\"http://browserify.org/\">Browserify</a> started sneaking into my\nwork despite my fatigue - and they were helping me get things done. <a href=\"http://gulpjs.com/\">Gulp</a>\nmade sense to me: writing glue code to process file streams fit into my head a\nwhole lot better than trying to figure out how to shoehorn my intentions into\ndeclarative-ish config files. And <a href=\"http://browserify.org/\">Browserify</a> gave me some <a href=\"http://nodejs.org/\">Node.js</a>-style\nhappiness on the client-side, pushing most of the awkwardness into the build\nsystem.</p>\n<p>So, now I&#39;ve got <a href=\"http://gulpjs.com/\">Gulp</a>, <a href=\"https://www.npmjs.com/\">NPM</a>, <a href=\"http://browserify.org/\">Browserify</a>, and <a href=\"https://6to5.org/\">6to5</a> as a new pile\nof fun that seems like it might have a little bit of staying power. Of course,\n<a href=\"https://www.youtube.com/watch?v=1IOukA10QeQ\">all this io.js business</a> could throw some monkeywrenches around. But,\nit feels like the patterns I&#39;ve got in play here are more stable than the\nprevious regime. </p>\n<p>Maybe I&#39;ll even recover enough enthusiasm for chasing webdev mayflies by this\nspring to take a deeper dive at things like <a href=\"http://facebook.github.io/react/\">React</a> and <a href=\"https://angularjs.org/\">Angular</a> and\n<a href=\"http://emberjs.com/\">Ember</a>. Then again, maybe I&#39;ll bang together a framework of my own just to\nbe cool.</p>\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "body": "Holy crap. Has it really been a year or so since I last hacked in earnest on\n[Parsec Patrol][]? I've been meaning to get back to it, and it's always felt like\njust last week when I was poking at it.\n\nWell, a week or so ago, I read [Blake Williams'][blake] \"[Replace [CoffeeScript][]\nwith ES6][replace]\" and thought, \"Hmm, on what project did I last use\n[CoffeeScript][]? Oh yeah: [Parsec patrol][]!\" So, I decided to take a swing through\nthe code and see what I was last up to. \n\nAfter a good look, I started an empty [new branch][newbranch] in [my\nrepo][repo] and started from scratch.\n\nSee, I started [Parsec Patrol][] as an excuse to force myself to learn a bunch of\nnew things I'd been putting off for awhile. Near the top of the list were\n[Yeoman][], [Grunt][], [Bower][], [RequireJS][], and [CoffeeScript][]. Those\nwere all cool things, so I figured I'd just stir them all up in a big mess and\nsee what happened.\n\nThe process was fun - these were things that slotted into empty spots in my\nwebdev process, both expected and unexpected. Of course, [RequireJS][] was a\nlittle awkward in comparison to modules in [Node.js][].  But hey, modules in\nthe browser! And, I never really quite grokked what was going on in those\ntangly [Grunt][] configuration files and just kind of copypasta'd what others\nwere doing. But hey, build automation for all my weird webdev needs!\n\nThen, after a nice & relaxing holiday vacation to wrap up 2013, I read \"[And\njust like that Grunt and RequireJS are out, it’s all about Gulp and Browserify\nnow][justlikethat]\". \n\nWell that, along with things that followed, just drained my enthusiasm for\n[Grunt][], [Bower][], and [RequireJS][] in an hurry. But, it didn't leave me\nwanting to dive into the next big thing right away. So, I took a step back and\nplayed with other things for a few seasons. [Web components][] and [developer\ntools][] are kind of fun to hack on. [Polymer][] was kind of a crazy rabbit\nhole.\n\nBut, over the past year, [Gulp][] and [Browserify][] started sneaking into my\nwork despite my fatigue - and they were helping me get things done. [Gulp][]\nmade sense to me: writing glue code to process file streams fit into my head a\nwhole lot better than trying to figure out how to shoehorn my intentions into\ndeclarative-ish config files. And [Browserify][] gave me some [Node.js][]-style\nhappiness on the client-side, pushing most of the awkwardness into the build\nsystem.\n\nSo, now I've got [Gulp][], [NPM][], [Browserify][], and [6to5][] as a new pile\nof fun that seems like it might have a little bit of staying power. Of course,\n[all this io.js business][iojs] could throw some monkeywrenches around. But,\nit feels like the patterns I've got in play here are more stable than the\nprevious regime. \n\nMaybe I'll even recover enough enthusiasm for chasing webdev mayflies by this\nspring to take a deeper dive at things like [React][] and [Angular][] and\n[Ember][]. Then again, maybe I'll bang together a framework of my own just to\nbe cool.\n\n[polymer]: https://www.polymer-project.org/\n[react]: http://facebook.github.io/react/\n[angular]: https://angularjs.org/\n[ember]: http://emberjs.com/ \n[web components]: https://github.com/lmorchard/brick-select\n[developer tools]: https://github.com/lmorchard/node-firefox \n[node.js]: http://nodejs.org/\n[npm]: https://www.npmjs.com/\n[parsec Patrol]: https://github.com/lmorchard/parsec-patrol\n[Browserify]: http://browserify.org/\n[yeoman]: http://yeoman.io/\n[6to5]: https://6to5.org/\n[grunt]: http://gruntjs.com/\n[gulp]: http://gulpjs.com/\n[RequireJS]: http://requirejs.org/\n[bower]: http://bower.io/\n[CoffeeScript]: http://coffeescript.org/\n[iojs]: https://www.youtube.com/watch?v=1IOukA10QeQ\n[repo]: https://github.com/lmorchard/parsec-patrol\n[justlikethat]: http://www.100percentjs.com/just-like-[grunt][]-[gulp][]-[browserify][]-now/\n[newbranch]: https://github.com/lmorchard/parsec-patrol/commits/newbranch\n[blake]: https://twitter.com/blakewilliams__\n[replace]: http://robots.thoughtbot.com/replace-[coffeescript][]-with-es6\n\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2015",
    "path": "2015/02/09/parsec-patrol-resumes"
  }
]