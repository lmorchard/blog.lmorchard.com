<?xml version="1.0" encoding="UTF-8"?>
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>Tag: dev - blog.lmorchard.com</title>
      <description>It&#39;s all spinning wheels &amp; self-doubt until the first pot of coffee.</description>
      <link>https://lmorchard.github.io/blog.lmorchard.com/tag/dev/</link>
      <atom:link href="https://lmorchard.github.io/blog.lmorchard.com/index.rss" rel="self" type="application/rss+xml" />
      <item>
          <title>I like (reading about) making video games</title>
          
          <description
                >&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Noel Berry, &quot;&lt;a href=&quot;https://noelberry.ca/posts/making_games_in_2025/&quot;&gt;Making Video Games in 2025 (without an engine)&lt;/a&gt;&quot;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I genuinely believe making games without a big &quot;do everything&quot; engine can be easier, more fun, and often less overhead. I am not making a &quot;do everything&quot; game and I do not need 90% of the features these engines provide. I am very particular about how my games feel and look, and how I interact with my tools. I often find the default feature implementations in large engines like Unity so lacking I end up writing my own anyway. Eventually, my projects end up being mostly my own tools and systems, and the engine becomes just a vehicle for a nice UI and some rendering...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I read blog posts and tutorials like this all the time. Every few months, I go on a spree of installing and firing up game development tools. I keep kind of wanting to actually end up finishing a game, kind of like how my dad used to make a few fly fishing lures but only ever managed to go fishing every few years. But, do I like reading about this stuff.&lt;/p&gt;
&lt;p&gt;And this post snags me, in particular, because one of the reasons I even started poking around with game dev stuff was to learn. And what better way to really just plummet down the rabbit hole than to learn how to make a game engine almost from scratch?&lt;/p&gt;
&lt;p&gt;Oh, but in terms of actually finishing things: &lt;a href=&quot;https://blog.lmorchard.com/2016/09/11/poke-the-mongo/&quot;&gt;I can say&lt;/a&gt; I made &lt;a href=&quot;https://lmorchard.itch.io/poke-the-mongo&quot;&gt;Poke the Mongo&lt;/a&gt; for Pico-8! That&#39;s at least one finished video game. It&#39;s got &lt;a href=&quot;https://lmorchard.itch.io/poke-the-mongo&quot;&gt;an itch.io page&lt;/a&gt; and an end-game screen and everything. I won&#39;t spoil the end screen, though I&#39;m pretty sure I only know one other person who&#39;s ever seen it.&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;</description
              >
          <pubDate>Tue, 20 May 2025 00:08:09 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2025/05/19/gamedev-reading/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2025/05/19/gamedev-reading/</guid>
        </item><item>
          <title>AI winter, again</title>
          
          <description
                >&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;carl svensson, &lt;a href=&quot;https://www.datagubbe.se/winter/&quot;&gt;Is Winter Coming?&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Even when it comes to something like LLM-assisted programming, where a highly skilled developer can maybe, sometimes, somewhat gain a performance boost, the most pertinent question isn&#39;t if it can be done at all - but rather if what can be done good enough can also be done profitably. The number of GPUs and the amount of increasingly expensive energy required remains as unclear as the time frame needed to accomplish it. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don&#39;t disagree that this is where things are right now. Personally, I&#39;m getting utility from these tools - mainly for things that I could do myself, but the LLM lets me carve off a few rounds of googling and Stack Overflow browsing. That&#39;s valuable. Probably not as valuable as investors are hoping, though.&lt;/p&gt;
&lt;p&gt;I see some glimmers of potential in letting the agents rip in full-auto. But, I do also find that ofttimes they&#39;re &lt;a href=&quot;https://prototypr.io/note/vibe-coding-cursor-windsurf-slot-machine&quot;&gt;developer slot machines&lt;/a&gt; that need careful tending to keep them from going off into the weeds, going into loops, and going off on quests for which I never asked.&lt;/p&gt;
&lt;p&gt;I&#39;m seeing the most value in these tools when they&#39;re given a lot of context and kept constrained to limited tasks in a tight loop with adult supervision. I&#39;ve got a hunch this will improve over time, but who knows? We could hit a wall and see winter soon?&lt;/p&gt;
&lt;p&gt;I&#39;d really like it if this stuff would settle down and be &lt;a href=&quot;https://www.fastly.com/blog/can-we-be-normal-about-ai-now-that-deepseek-happened&quot;&gt;normal&lt;/a&gt;. But, there&#39;s probably going to be a crash before that happens.&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;</description
              >
          <pubDate>Mon, 19 May 2025 18:07:43 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2025/05/19/llm-winter/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2025/05/19/llm-winter/</guid>
        </item><item>
          <title>Hey Ron, who&#39;s driving?</title>
          
          <description
                >&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Chris Stokel-Walker, &quot;&lt;a href=&quot;https://leaddev.com/software-quality/why-untested-ai-generated-code-is-a-crisis-waiting-to-happen&quot;&gt;Why untested AI-generated code is a crisis waiting to happen&lt;/a&gt;&quot;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The fear is of a slow-burn crisis where generative AI engines spew reams of code, stitched from web-scraped snippets with dubious provenance. &lt;/p&gt;
&lt;p&gt;When that code leaps from prompt to production without being vetted, the potential attack surface balloons in size. The bill for defective code is already sizable: 40% of firms say malfunctioning or miscoded software costs them at least $1 million a year, through staff churn, increased technical debt, and escalating maintenance costs, with losses above $5 million in almost half of large US firms.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, don&#39;t let &quot;code leap from prompt to production without being vetted&quot; - it&#39;s not like it happens on its own. Steady hand on the tiller. Vibe coding is fine for screwing around and exploration, but assume you&#39;re going to be on pager duty for whatever hits production. And if someday you stick an LLM on pager duty, may Eris have mercy on your soul.&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/IfY49zx7RU0?si=Gx2gyj-rqsBSHoL-&amp;amp;start=46&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; referrerpolicy=&quot;strict-origin-when-cross-origin&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/body&gt;&lt;/html&gt;</description
              >
          <pubDate>Sat, 17 May 2025 00:00:28 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2025/05/16/review-ai-code/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2025/05/16/review-ai-code/</guid>
        </item><item>
          <title>What I&#39;m thinking about AI and LLMs</title>
          <description
                >&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;I&#39;m in a weird place with this current AI wave in the tech industry. I feel like a good chunk of folks would tar &amp;amp; feather me if I wrote anything but a complete denunciation, while another chunk I already blocked during the crypto &amp;amp; NFT craze. I still feel like writing something, though, if only to bounce it off the screen for myself.&lt;/body&gt;&lt;/html&gt;</description
              >
          
          <pubDate>Tue, 13 May 2025 22:15:00 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2025/05/13/thinking-about-llms/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2025/05/13/thinking-about-llms/</guid>
        </item><item>
          <title>Naming Things: CamelCase vs snake_case</title>
          <description
                >&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;I’ve contributed code to a number of projects, often as a drive-by bug fix in a GitHub pull request. And, usually, I’ll try to do as the Romans do and follow the local naming and coding conventions. But, sometimes, I’ll fall back to my personal conventions and get dinged in the code review.&lt;/body&gt;&lt;/html&gt;</description
              >
          
          <pubDate>Wed, 23 Jan 2013 19:00:00 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2013/01/23/naming-conventions/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2013/01/23/naming-conventions/</guid>
        </item><item>
          <title>D.I.Y. checkout lane</title>
          
          
          <pubDate>Wed, 02 Nov 2005 21:52:40 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2005/11/02/diy-checkout-lane/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2005/11/02/diy-checkout-lane/</guid>
        </item>
    </channel>
  </rss>