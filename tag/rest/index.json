[
  {
    "comments_archived": true,
    "date": "2007-03-05T22:13:45.000Z",
    "layout": "post",
    "tags": [
      "asides",
      "metablogging",
      "webdev",
      "webservices",
      "atom",
      "xmlrpc",
      "rest",
      "http",
      "auth"
    ],
    "title": "Blog posting delegation and third-party auth",
    "wordpress_id": 1043,
    "wordpress_slug": "blog-posting-delegation-and-third-party-auth",
    "wordpress_url": "http://decafbad.com/blog/2007/03/05/blog-posting-delegation-and-third-party-auth",
    "year": "2007",
    "month": "03",
    "day": "05",
    "isDir": false,
    "slug": "blog-posting-delegation-and-third-party-auth",
    "postName": "2007-03-05-blog-posting-delegation-and-third-party-auth",
    "html": "<p>Here&#39;s something I&#39;ve been meaning to post about, brought back to mind from <a href=\"http://www.identityblog.com/?p=701\">Kim Cameron&#39;s post on &quot;Wrong-headed impersonation&quot;</a>:  </p>\n<p>I wish that blog posting interfaces (ie. <a href=\"http://www.xmlrpc.com/metaWeblogApi\">MetaWeblog API</a> and <a href=\"http://www.ietf.org/html.charters/atompub-charter.html\">Atom Publishing Protocol</a>) offered a way to delegate blog posting to a 3rd party app (desktop or web) in such a way as to avoid providing one&#39;s login details (i.e. user name and password).  For instance, consider both <a href=\"http://www.flickr.com/services/api/auth.spec.html\">Flickr&#39;s</a> and <a href=\"http://upcoming.org/services/api/token_auth.php\">Upcoming&#39;s</a> 3rd party token-based authentication / authorization schemes.</p>\n<p>In particular, I&#39;m looking at things like del.icio.us&#39; own Daily Blog Post and others.  These can be used to auto-post content to one&#39;s blog generated elsewhere - but at the price of sharing login details.  Granted, you can mostly trust these 3rd parties not to do anything nasty with your credentials, but it would be nice not to have to.</p>\n<p>I figure that something RESTful like extending HTTP authentication (ala <a href=\"http://www.xml.com/pub/a/2003/12/17/dive.html\">Atom Authentication</a>) with a token scheme could be interesting, and possibly fit nicely into <a href=\"http://www.ietf.org/html.charters/atompub-charter.html\">APP</a> itself.  It could probably be retrofit into the <a href=\"http://www.xmlrpc.com/metaWeblogApi\">MetaWeblog API</a> by specifying a per-app user name and password.  I can imagine a WordPress admin plugin that issues approved authentication tokens to restrict the categories and other activities allowed by 3rd party apps.  </p>\n<p>Just something I&#39;m thinking about, as more services may or may not grow into delegated blog posting.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221084462\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://beesbuzz.biz/\"><img src=\"http://disqus.com/api/users/avatars/plaidfluff.jpg\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://beesbuzz.biz/\">fluffy</a>\n</div>\n<a href=\"#comment-221084462\" class=\"permalink\"><time datetime=\"2007-03-05T22:40:26\">2007-03-05T22:40:26</time></a>\n</div>\n<div class=\"content\"><p>Wouldn't openID be a better candidate for this?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084463\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084463\" class=\"permalink\"><time datetime=\"2007-03-05T22:48:24\">2007-03-05T22:48:24</time></a>\n</div>\n<div class=\"content\"><p>Not really, unless I don't entirely understand OpenID.  </p>\n<p>OpenID offers way to authenticate <em>yourself</em>.  However, what I want is an easy way to delegate your access to 3rd party apps, without those apps being able to authenticate as you or performs actions outside of the permissions you approve.  I don't really want Flickr Uploader, Ecto, MarsEdit to be able to use OpenID to login as me with carte blanche.</p>\n<p>With a token-based system like Flickr has, I can approve delegation to various apps and revoke their access at any time - without ever releasing my login details.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084464\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://george.hotelling.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=c7d1c8d2b1a7643236a4661e9a974dee&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://george.hotelling.net/\">George Hotelling</a>\n</div>\n<a href=\"#comment-221084464\" class=\"permalink\"><time datetime=\"2007-03-06T17:51:55\">2007-03-06T17:51:55</time></a>\n</div>\n<div class=\"content\"><p>At first I had this great idea to build a blog posting proxy service that could grant access to your blog to different services by giving them different usernames and passwords and you could revoke them at any time and it would be great and everyone would be posting to everyone's blog all the time.</p>\n<p>Then I realized I had put on <a href=\"http://worsethanfailure.com/Articles/The_Complicator's_Gloves.aspx\" rel=\"nofollow\">complicator gloves</a> and that it would be way easier to just add new users to my blog without a proxy service.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084465\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084465\" class=\"permalink\"><time datetime=\"2007-03-06T18:04:57\">2007-03-06T18:04:57</time></a>\n</div>\n<div class=\"content\"><p>Yeah, I figured making multiple accounts is a way to go when you've got your own install of something like WordPress.  It kind of gets stymied, though, if you want the same thing for a hosted service like WordPress.com, Vox, TypePad, or LiveJournal where one account = one blog.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084466\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://ian.mckellar.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a38054904e39e36fab7c4d779abf3752&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://ian.mckellar.org/\">Ian McKellar</a>\n</div>\n<a href=\"#comment-221084466\" class=\"permalink\"><time datetime=\"2007-03-12T17:43:49\">2007-03-12T17:43:49</time></a>\n</div>\n<div class=\"content\"><p>It seems to me that the ideal solution to this is to have your blog pull new posts from an RSS/Atom feed that's hosted by the service that is generating your content. Feedburner already has a half-assed implementation of this where they'll pull your delicious bookmarks and flickr photos into your burned feed.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084468\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084468\" class=\"permalink\"><time datetime=\"2007-03-12T17:58:35\">2007-03-12T17:58:35</time></a>\n</div>\n<div class=\"content\"><p>@ian: Hmm, yeah, that probably does end up being the least onerous solution - just offer an aggregated feed of one's output.  I do like the idea of auto-posting to a blog, though, for the sake of something sorta like daily backups to a system I control.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084470\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://ian.mckellar.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a38054904e39e36fab7c4d779abf3752&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://ian.mckellar.org/\">Ian McKellar</a>\n</div>\n<a href=\"#comment-221084470\" class=\"permalink\"><time datetime=\"2007-03-12T18:44:46\">2007-03-12T18:44:46</time></a>\n</div>\n<div class=\"content\"><p>@l.m.orchard: you don't need to just aggregate you can also import posts into your own store. We could come up with a cleverly confusing buzzword acronym like Atom Pull Publishing. You just periodically poll a feed and import the items. Actually, this is kind of what Google Reader is doing. They've even got a namespace in their atom for expressing the original id and the source feed. Perhaps I should write a drupal module.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084471\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084471\" class=\"permalink\"><time datetime=\"2007-03-12T19:01:45\">2007-03-12T19:01:45</time></a>\n</div>\n<div class=\"content\"><p>@ian: Hmm, yeah, that does sound like the least complicated way to get outside content pulled into a blog without releasing the blog's login details.  I know I've seen / used some WordPress plugins that do  basically that, though I've not been happy with any of them yet.  I should re-look into why that's been the case</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084473\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://ian.mckellar.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a38054904e39e36fab7c4d779abf3752&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://ian.mckellar.org/\">Ian McKellar</a>\n</div>\n<a href=\"#comment-221084473\" class=\"permalink\"><time datetime=\"2007-03-12T19:26:16\">2007-03-12T19:26:16</time></a>\n</div>\n<div class=\"content\"><p>@l.m.orchard: in my experience the problems are with the formatting of the content (do blank lines turn into paragraphs, etc) and fragile post IDs (the upgraded wordpress and spammed all my friends on livejournal or planet problem). I'm not sure how to fix either of these problems but I think they're both problems Atom is attempting to solve...</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "Here's something I've been meaning to post about, brought back to mind from [Kim Cameron's post on \"Wrong-headed impersonation\"][kc]:  \r\n\r\nI wish that blog posting interfaces (ie. [MetaWeblog API][ma] and [Atom Publishing Protocol][app]) offered a way to delegate blog posting to a 3rd party app (desktop or web) in such a way as to avoid providing one's login details (i.e. user name and password).  For instance, consider both [Flickr's][fa] and [Upcoming's][ua] 3rd party token-based authentication / authorization schemes.\r\n\r\nIn particular, I'm looking at things like del.icio.us' own Daily Blog Post and others.  These can be used to auto-post content to one's blog generated elsewhere - but at the price of sharing login details.  Granted, you can mostly trust these 3rd parties not to do anything nasty with your credentials, but it would be nice not to have to.\r\n\r\nI figure that something RESTful like extending HTTP authentication (ala [Atom Authentication][aa]) with a token scheme could be interesting, and possibly fit nicely into [APP][app] itself.  It could probably be retrofit into the [MetaWeblog API][ma] by specifying a per-app user name and password.  I can imagine a WordPress admin plugin that issues approved authentication tokens to restrict the categories and other activities allowed by 3rd party apps.  \r\n\r\nJust something I'm thinking about, as more services may or may not grow into delegated blog posting.\r\n\r\n[aa]: http://www.xml.com/pub/a/2003/12/17/dive.html\r\n[ma]: http://www.xmlrpc.com/metaWeblogApi\r\n[app]: http://www.ietf.org/html.charters/atompub-charter.html\r\n[fa]: http://www.flickr.com/services/api/auth.spec.html\r\n[ua]: http://upcoming.org/services/api/token_auth.php\r\n[kc]: http://www.identityblog.com/?p=701\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221084462\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://beesbuzz.biz/\"><img src=\"http://disqus.com/api/users/avatars/plaidfluff.jpg\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://beesbuzz.biz/\">fluffy</a>\n                </div>\n                <a href=\"#comment-221084462\" class=\"permalink\"><time datetime=\"2007-03-05T22:40:26\">2007-03-05T22:40:26</time></a>\n            </div>\n            <div class=\"content\"><p>Wouldn't openID be a better candidate for this?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084463\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084463\" class=\"permalink\"><time datetime=\"2007-03-05T22:48:24\">2007-03-05T22:48:24</time></a>\n            </div>\n            <div class=\"content\"><p>Not really, unless I don't entirely understand OpenID.  </p>\n\n<p>OpenID offers way to authenticate <em>yourself</em>.  However, what I want is an easy way to delegate your access to 3rd party apps, without those apps being able to authenticate as you or performs actions outside of the permissions you approve.  I don't really want Flickr Uploader, Ecto, MarsEdit to be able to use OpenID to login as me with carte blanche.</p>\n\n<p>With a token-based system like Flickr has, I can approve delegation to various apps and revoke their access at any time - without ever releasing my login details.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084464\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://george.hotelling.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=c7d1c8d2b1a7643236a4661e9a974dee&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://george.hotelling.net/\">George Hotelling</a>\n                </div>\n                <a href=\"#comment-221084464\" class=\"permalink\"><time datetime=\"2007-03-06T17:51:55\">2007-03-06T17:51:55</time></a>\n            </div>\n            <div class=\"content\"><p>At first I had this great idea to build a blog posting proxy service that could grant access to your blog to different services by giving them different usernames and passwords and you could revoke them at any time and it would be great and everyone would be posting to everyone's blog all the time.</p>\n\n<p>Then I realized I had put on <a href=\"http://worsethanfailure.com/Articles/The_Complicator's_Gloves.aspx\" rel=\"nofollow\">complicator gloves</a> and that it would be way easier to just add new users to my blog without a proxy service.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084465\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084465\" class=\"permalink\"><time datetime=\"2007-03-06T18:04:57\">2007-03-06T18:04:57</time></a>\n            </div>\n            <div class=\"content\"><p>Yeah, I figured making multiple accounts is a way to go when you've got your own install of something like WordPress.  It kind of gets stymied, though, if you want the same thing for a hosted service like WordPress.com, Vox, TypePad, or LiveJournal where one account = one blog.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084466\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://ian.mckellar.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a38054904e39e36fab7c4d779abf3752&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://ian.mckellar.org/\">Ian McKellar</a>\n                </div>\n                <a href=\"#comment-221084466\" class=\"permalink\"><time datetime=\"2007-03-12T17:43:49\">2007-03-12T17:43:49</time></a>\n            </div>\n            <div class=\"content\"><p>It seems to me that the ideal solution to this is to have your blog pull new posts from an RSS/Atom feed that's hosted by the service that is generating your content. Feedburner already has a half-assed implementation of this where they'll pull your delicious bookmarks and flickr photos into your burned feed.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084468\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084468\" class=\"permalink\"><time datetime=\"2007-03-12T17:58:35\">2007-03-12T17:58:35</time></a>\n            </div>\n            <div class=\"content\"><p>@ian: Hmm, yeah, that probably does end up being the least onerous solution - just offer an aggregated feed of one's output.  I do like the idea of auto-posting to a blog, though, for the sake of something sorta like daily backups to a system I control.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084470\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://ian.mckellar.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a38054904e39e36fab7c4d779abf3752&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://ian.mckellar.org/\">Ian McKellar</a>\n                </div>\n                <a href=\"#comment-221084470\" class=\"permalink\"><time datetime=\"2007-03-12T18:44:46\">2007-03-12T18:44:46</time></a>\n            </div>\n            <div class=\"content\"><p>@l.m.orchard: you don't need to just aggregate you can also import posts into your own store. We could come up with a cleverly confusing buzzword acronym like Atom Pull Publishing. You just periodically poll a feed and import the items. Actually, this is kind of what Google Reader is doing. They've even got a namespace in their atom for expressing the original id and the source feed. Perhaps I should write a drupal module.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084471\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084471\" class=\"permalink\"><time datetime=\"2007-03-12T19:01:45\">2007-03-12T19:01:45</time></a>\n            </div>\n            <div class=\"content\"><p>@ian: Hmm, yeah, that does sound like the least complicated way to get outside content pulled into a blog without releasing the blog's login details.  I know I've seen / used some WordPress plugins that do  basically that, though I've not been happy with any of them yet.  I should re-look into why that's been the case</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084473\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://ian.mckellar.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a38054904e39e36fab7c4d779abf3752&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://ian.mckellar.org/\">Ian McKellar</a>\n                </div>\n                <a href=\"#comment-221084473\" class=\"permalink\"><time datetime=\"2007-03-12T19:26:16\">2007-03-12T19:26:16</time></a>\n            </div>\n            <div class=\"content\"><p>@l.m.orchard: in my experience the problems are with the formatting of the content (do blank lines turn into paragraphs, etc) and fragile post IDs (the upgraded wordpress and spammed all my friends on livejournal or planet problem). I'm not sure how to fix either of these problems but I think they're both problems Atom is attempting to solve...</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2007",
    "path": "2007/03/05/blog-posting-delegation-and-third-party-auth"
  },
  {
    "comments_archived": true,
    "date": "2005-10-21T03:45:54.000Z",
    "layout": "post",
    "tags": [
      "rss",
      "syndication",
      "atom",
      "rest",
      "http",
      "podcasting"
    ],
    "title": "Time-release Syndication",
    "wordpress_id": 740,
    "wordpress_slug": "time-release-syndication",
    "wordpress_url": "http://decafbad.com/blog/?p=740",
    "year": "2005",
    "month": "10",
    "day": "20",
    "isDir": false,
    "slug": "time-release-syndication",
    "postName": "2005-10-20-time-release-syndication",
    "html": "<blockquote cite=\"http://www.surfarama.com/index.php?p=242\">Want to read Cory Doctorow’s new book, Someone comes to Town, Someone leaves Town, via RSS?<br /><br />This chicklet will let you do just that…doesn’t matter when you first subscribe, this feed will deliver the book to your feed reader in the right order, a couple of chapters a day, over the next month. You could even subscribe via WINKsite and get it all on your mobile phone…</blockquote>\n<small style=\"text-align:right; display:block\">Source: <a href=\"http://www.surfarama.com/index.php?p=242\">Surfarama » RSS for serialized content</a></small>\n\n<p>I&#39;ve been toying around with a few ideas for something like this for a few years, but have never bothered to finish any of them.  <a href=\"http://www.russellbeattie.com/notebook/1008220.html\">Russell Beattie</a> had an interesting implementation of this too.</p>\n<p>But, just in case I never actually <em>do</em> anything with this notion, here&#39;s a free idea—I wonder how many aggregators actually obey a <code>301 Moved Permanently</code> HTTP status code?  </p>\n<p><a href=\"http://simon.incutio.com/archive/2004/09/01/track\">Simon Willison wrote about this notion</a>: A reader subscribes using a clean and simple feed URL, but the aggregator receives a <code>301</code> redirect upon the first <code>GET</code>.  This redirect shifts the subscription over to a new feed URL with a unique ID for the reader, thereby uniquely tagging every new subscription to the feed.  The aggregator should then continue to use this tagged URL for all future requests.</p>\n<p>However, tagging a subscriber with an RSS radio collar implies that you&#39;ll have a database on the server maintaining notes tied to those IDs.  That might be cool if I&#39;m trying to gather some metrics, but for simple time-release syndication I don&#39;t really care about tracking a <em>person*.  I want to track a *start time</em>.  </p>\n<p>What if this post-redirect feed URL had the time of initial redirect in it, and the time release was just a function of the duration since that initial redirect?  Anonymous and no need for a database.  My notion is that I&#39;ll just need a PHP script and a fully-formed &quot;master feed&quot; on which the time-release feed will be a time-bounded &quot;viewport&quot; informed by a little date math.  </p>\n<p>Or, maybe I&#39;ll have a pile of pre-prepared content in a folder and munge that into a feed.  Imagine a podcast like <a href=\"http://www.project-daemon.net/\">Scott Sigler&#39;s Ancestor</a>, all queued up and ready on the server, but doled out automatically on a weekly basis from the beginning from the point you subscribed.  I&#39;ll leave as exercises for the reader issues of &quot;obfuscating&quot; URLs so that people can&#39;t easily skip ahead through the story.</p>\n<!-- tags: rss atom syndication rest http podcasting -->\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221086694\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://laughingmeme.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=01457d1a0f0e533062cd0d1033fb4d7a&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://laughingmeme.org\">kellan</a>\n</div>\n<a href=\"#comment-221086694\" class=\"permalink\"><time datetime=\"2005-10-21T04:16:34\">2005-10-21T04:16:34</time></a>\n</div>\n<div class=\"content\"><p>My favorite example of this is Matt Webb's service which offers <a href=\"http://interconnected.org/home/more/lightcone/\" rel=\"nofollow\">RSS feed of your personal light cone</a></p></div>\n</li>\n<li class=\"comment\" id=\"comment-221086695\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a0b347907bfaf05694805210ec595d6c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Martin Atkins</a>\n</div>\n<a href=\"#comment-221086695\" class=\"permalink\"><time datetime=\"2005-10-21T07:06:00\">2005-10-21T07:06:00</time></a>\n</div>\n<div class=\"content\"><p>This scheme falls down in two ways. Firstly, people have a tendency to share URLs, and when they do they tend to just take whatever's in their user-agent (your timestamped URL) rather than your pretty entry point URL that lives only on some HTML page somewhere.</p>\n<p>Secondly, lots of people use \"shared aggregators\", which reduces load on your server but requires that everyone is seeing the same content.</p>\n<p>It's a nice idea, though. Its a shame that syndication tech ended up making it so tricky.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221086696\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221086696\" class=\"permalink\"><time datetime=\"2005-10-21T10:54:22\">2005-10-21T10:54:22</time></a>\n</div>\n<div class=\"content\"><p>@Kellan: Heh, I thought that one was kinda silly, but neat... It's in my subscription list.</p>\n<p>@Martin: D'oh, that's right.  Even podcasts are being heard via shared aggregators now like Odeo.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221086697\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://rasterweb.net/raster/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=db0fab74bcb564ebb09295498b892fb6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://rasterweb.net/raster/\">Pete Prodoehl</a>\n</div>\n<a href=\"#comment-221086697\" class=\"permalink\"><time datetime=\"2005-10-21T17:14:17\">2005-10-21T17:14:17</time></a>\n</div>\n<div class=\"content\"><p>Delta Park Project is a podcast that provides you with your own RSS feed url. I'm not exactly sure what they do with it, but for now I trust them not to do any evil.</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "<blockquote cite=\"http://www.surfarama.com/index.php?p=242\">Want to read Cory Doctorow’s new book, Someone comes to Town, Someone leaves Town, via RSS?<br /><br />This chicklet will let you do just that…doesn’t matter when you first subscribe, this feed will deliver the book to your feed reader in the right order, a couple of chapters a day, over the next month. You could even subscribe via WINKsite and get it all on your mobile phone…</blockquote>\r\n<small style=\"text-align:right; display:block\">Source: <a href=\"http://www.surfarama.com/index.php?p=242\">Surfarama » RSS for serialized content</a></small>\r\n\r\nI've been toying around with a few ideas for something like this for a few years, but have never bothered to finish any of them.  [Russell Beattie][rb] had an interesting implementation of this too.\r\n\r\nBut, just in case I never actually *do* anything with this notion, here's a free idea—I wonder how many aggregators actually obey a `301 Moved Permanently` HTTP status code?  \r\n\r\n[Simon Willison wrote about this notion][sw]: A reader subscribes using a clean and simple feed URL, but the aggregator receives a `301` redirect upon the first `GET`.  This redirect shifts the subscription over to a new feed URL with a unique ID for the reader, thereby uniquely tagging every new subscription to the feed.  The aggregator should then continue to use this tagged URL for all future requests.\r\n\r\nHowever, tagging a subscriber with an RSS radio collar implies that you'll have a database on the server maintaining notes tied to those IDs.  That might be cool if I'm trying to gather some metrics, but for simple time-release syndication I don't really care about tracking a *person*.  I want to track a *start time*.  \r\n\r\nWhat if this post-redirect feed URL had the time of initial redirect in it, and the time release was just a function of the duration since that initial redirect?  Anonymous and no need for a database.  My notion is that I'll just need a PHP script and a fully-formed \"master feed\" on which the time-release feed will be a time-bounded \"viewport\" informed by a little date math.  \r\n\r\nOr, maybe I'll have a pile of pre-prepared content in a folder and munge that into a feed.  Imagine a podcast like [Scott Sigler's Ancestor][anc], all queued up and ready on the server, but doled out automatically on a weekly basis from the beginning from the point you subscribed.  I'll leave as exercises for the reader issues of \"obfuscating\" URLs so that people can't easily skip ahead through the story.\r\n\r\n<!-- tags: rss atom syndication rest http podcasting -->\r\n\r\n[anc]: http://www.project-daemon.net/\r\n[sw]: http://simon.incutio.com/archive/2004/09/01/track\r\n[rb]: http://www.russellbeattie.com/notebook/1008220.html\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221086694\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://laughingmeme.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=01457d1a0f0e533062cd0d1033fb4d7a&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://laughingmeme.org\">kellan</a>\r\n                </div>\r\n                <a href=\"#comment-221086694\" class=\"permalink\"><time datetime=\"2005-10-21T04:16:34\">2005-10-21T04:16:34</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>My favorite example of this is Matt Webb's service which offers <a href=\"http://interconnected.org/home/more/lightcone/\" rel=\"nofollow\">RSS feed of your personal light cone</a></p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221086695\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a0b347907bfaf05694805210ec595d6c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"\">Martin Atkins</a>\r\n                </div>\r\n                <a href=\"#comment-221086695\" class=\"permalink\"><time datetime=\"2005-10-21T07:06:00\">2005-10-21T07:06:00</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>This scheme falls down in two ways. Firstly, people have a tendency to share URLs, and when they do they tend to just take whatever's in their user-agent (your timestamped URL) rather than your pretty entry point URL that lives only on some HTML page somewhere.</p>\r\n\r\n<p>Secondly, lots of people use \"shared aggregators\", which reduces load on your server but requires that everyone is seeing the same content.</p>\r\n\r\n<p>It's a nice idea, though. Its a shame that syndication tech ended up making it so tricky.</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221086696\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\r\n                </div>\r\n                <a href=\"#comment-221086696\" class=\"permalink\"><time datetime=\"2005-10-21T10:54:22\">2005-10-21T10:54:22</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>@Kellan: Heh, I thought that one was kinda silly, but neat... It's in my subscription list.</p>\r\n\r\n<p>@Martin: D'oh, that's right.  Even podcasts are being heard via shared aggregators now like Odeo.</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221086697\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://rasterweb.net/raster/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=db0fab74bcb564ebb09295498b892fb6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://rasterweb.net/raster/\">Pete Prodoehl</a>\r\n                </div>\r\n                <a href=\"#comment-221086697\" class=\"permalink\"><time datetime=\"2005-10-21T17:14:17\">2005-10-21T17:14:17</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Delta Park Project is a podcast that provides you with your own RSS feed url. I'm not exactly sure what they do with it, but for now I trust them not to do any evil.</p></div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2005",
    "path": "2005/10/20/time-release-syndication"
  }
]