[
  {
    "comments_archived": true,
    "date": "2007-03-05T22:13:45.000Z",
    "layout": "post",
    "tags": [
      "asides",
      "metablogging",
      "webdev",
      "webservices",
      "atom",
      "xmlrpc",
      "rest",
      "http",
      "auth"
    ],
    "title": "Blog posting delegation and third-party auth",
    "wordpress_id": 1043,
    "wordpress_slug": "blog-posting-delegation-and-third-party-auth",
    "wordpress_url": "http://decafbad.com/blog/2007/03/05/blog-posting-delegation-and-third-party-auth",
    "year": "2007",
    "month": "03",
    "day": "05",
    "isDir": false,
    "slug": "blog-posting-delegation-and-third-party-auth",
    "postName": "2007-03-05-blog-posting-delegation-and-third-party-auth",
    "html": "<p>Here&#39;s something I&#39;ve been meaning to post about, brought back to mind from <a href=\"http://www.identityblog.com/?p=701\">Kim Cameron&#39;s post on &quot;Wrong-headed impersonation&quot;</a>:  </p>\n<p>I wish that blog posting interfaces (ie. <a href=\"http://www.xmlrpc.com/metaWeblogApi\">MetaWeblog API</a> and <a href=\"http://www.ietf.org/html.charters/atompub-charter.html\">Atom Publishing Protocol</a>) offered a way to delegate blog posting to a 3rd party app (desktop or web) in such a way as to avoid providing one&#39;s login details (i.e. user name and password).  For instance, consider both <a href=\"http://www.flickr.com/services/api/auth.spec.html\">Flickr&#39;s</a> and <a href=\"http://upcoming.org/services/api/token_auth.php\">Upcoming&#39;s</a> 3rd party token-based authentication / authorization schemes.</p>\n<p>In particular, I&#39;m looking at things like del.icio.us&#39; own Daily Blog Post and others.  These can be used to auto-post content to one&#39;s blog generated elsewhere - but at the price of sharing login details.  Granted, you can mostly trust these 3rd parties not to do anything nasty with your credentials, but it would be nice not to have to.</p>\n<p>I figure that something RESTful like extending HTTP authentication (ala <a href=\"http://www.xml.com/pub/a/2003/12/17/dive.html\">Atom Authentication</a>) with a token scheme could be interesting, and possibly fit nicely into <a href=\"http://www.ietf.org/html.charters/atompub-charter.html\">APP</a> itself.  It could probably be retrofit into the <a href=\"http://www.xmlrpc.com/metaWeblogApi\">MetaWeblog API</a> by specifying a per-app user name and password.  I can imagine a WordPress admin plugin that issues approved authentication tokens to restrict the categories and other activities allowed by 3rd party apps.  </p>\n<p>Just something I&#39;m thinking about, as more services may or may not grow into delegated blog posting.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221084462\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://beesbuzz.biz/\"><img src=\"http://disqus.com/api/users/avatars/plaidfluff.jpg\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://beesbuzz.biz/\">fluffy</a>\n</div>\n<a href=\"#comment-221084462\" class=\"permalink\"><time datetime=\"2007-03-05T22:40:26\">2007-03-05T22:40:26</time></a>\n</div>\n<div class=\"content\"><p>Wouldn't openID be a better candidate for this?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084463\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084463\" class=\"permalink\"><time datetime=\"2007-03-05T22:48:24\">2007-03-05T22:48:24</time></a>\n</div>\n<div class=\"content\"><p>Not really, unless I don't entirely understand OpenID.  </p>\n<p>OpenID offers way to authenticate <em>yourself</em>.  However, what I want is an easy way to delegate your access to 3rd party apps, without those apps being able to authenticate as you or performs actions outside of the permissions you approve.  I don't really want Flickr Uploader, Ecto, MarsEdit to be able to use OpenID to login as me with carte blanche.</p>\n<p>With a token-based system like Flickr has, I can approve delegation to various apps and revoke their access at any time - without ever releasing my login details.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084464\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://george.hotelling.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=c7d1c8d2b1a7643236a4661e9a974dee&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://george.hotelling.net/\">George Hotelling</a>\n</div>\n<a href=\"#comment-221084464\" class=\"permalink\"><time datetime=\"2007-03-06T17:51:55\">2007-03-06T17:51:55</time></a>\n</div>\n<div class=\"content\"><p>At first I had this great idea to build a blog posting proxy service that could grant access to your blog to different services by giving them different usernames and passwords and you could revoke them at any time and it would be great and everyone would be posting to everyone's blog all the time.</p>\n<p>Then I realized I had put on <a href=\"http://worsethanfailure.com/Articles/The_Complicator's_Gloves.aspx\" rel=\"nofollow\">complicator gloves</a> and that it would be way easier to just add new users to my blog without a proxy service.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084465\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084465\" class=\"permalink\"><time datetime=\"2007-03-06T18:04:57\">2007-03-06T18:04:57</time></a>\n</div>\n<div class=\"content\"><p>Yeah, I figured making multiple accounts is a way to go when you've got your own install of something like WordPress.  It kind of gets stymied, though, if you want the same thing for a hosted service like WordPress.com, Vox, TypePad, or LiveJournal where one account = one blog.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084466\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://ian.mckellar.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a38054904e39e36fab7c4d779abf3752&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://ian.mckellar.org/\">Ian McKellar</a>\n</div>\n<a href=\"#comment-221084466\" class=\"permalink\"><time datetime=\"2007-03-12T17:43:49\">2007-03-12T17:43:49</time></a>\n</div>\n<div class=\"content\"><p>It seems to me that the ideal solution to this is to have your blog pull new posts from an RSS/Atom feed that's hosted by the service that is generating your content. Feedburner already has a half-assed implementation of this where they'll pull your delicious bookmarks and flickr photos into your burned feed.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084468\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084468\" class=\"permalink\"><time datetime=\"2007-03-12T17:58:35\">2007-03-12T17:58:35</time></a>\n</div>\n<div class=\"content\"><p>@ian: Hmm, yeah, that probably does end up being the least onerous solution - just offer an aggregated feed of one's output.  I do like the idea of auto-posting to a blog, though, for the sake of something sorta like daily backups to a system I control.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084470\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://ian.mckellar.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a38054904e39e36fab7c4d779abf3752&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://ian.mckellar.org/\">Ian McKellar</a>\n</div>\n<a href=\"#comment-221084470\" class=\"permalink\"><time datetime=\"2007-03-12T18:44:46\">2007-03-12T18:44:46</time></a>\n</div>\n<div class=\"content\"><p>@l.m.orchard: you don't need to just aggregate you can also import posts into your own store. We could come up with a cleverly confusing buzzword acronym like Atom Pull Publishing. You just periodically poll a feed and import the items. Actually, this is kind of what Google Reader is doing. They've even got a namespace in their atom for expressing the original id and the source feed. Perhaps I should write a drupal module.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084471\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084471\" class=\"permalink\"><time datetime=\"2007-03-12T19:01:45\">2007-03-12T19:01:45</time></a>\n</div>\n<div class=\"content\"><p>@ian: Hmm, yeah, that does sound like the least complicated way to get outside content pulled into a blog without releasing the blog's login details.  I know I've seen / used some WordPress plugins that do  basically that, though I've not been happy with any of them yet.  I should re-look into why that's been the case</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084473\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://ian.mckellar.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a38054904e39e36fab7c4d779abf3752&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://ian.mckellar.org/\">Ian McKellar</a>\n</div>\n<a href=\"#comment-221084473\" class=\"permalink\"><time datetime=\"2007-03-12T19:26:16\">2007-03-12T19:26:16</time></a>\n</div>\n<div class=\"content\"><p>@l.m.orchard: in my experience the problems are with the formatting of the content (do blank lines turn into paragraphs, etc) and fragile post IDs (the upgraded wordpress and spammed all my friends on livejournal or planet problem). I'm not sure how to fix either of these problems but I think they're both problems Atom is attempting to solve...</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "Here's something I've been meaning to post about, brought back to mind from [Kim Cameron's post on \"Wrong-headed impersonation\"][kc]:  \r\n\r\nI wish that blog posting interfaces (ie. [MetaWeblog API][ma] and [Atom Publishing Protocol][app]) offered a way to delegate blog posting to a 3rd party app (desktop or web) in such a way as to avoid providing one's login details (i.e. user name and password).  For instance, consider both [Flickr's][fa] and [Upcoming's][ua] 3rd party token-based authentication / authorization schemes.\r\n\r\nIn particular, I'm looking at things like del.icio.us' own Daily Blog Post and others.  These can be used to auto-post content to one's blog generated elsewhere - but at the price of sharing login details.  Granted, you can mostly trust these 3rd parties not to do anything nasty with your credentials, but it would be nice not to have to.\r\n\r\nI figure that something RESTful like extending HTTP authentication (ala [Atom Authentication][aa]) with a token scheme could be interesting, and possibly fit nicely into [APP][app] itself.  It could probably be retrofit into the [MetaWeblog API][ma] by specifying a per-app user name and password.  I can imagine a WordPress admin plugin that issues approved authentication tokens to restrict the categories and other activities allowed by 3rd party apps.  \r\n\r\nJust something I'm thinking about, as more services may or may not grow into delegated blog posting.\r\n\r\n[aa]: http://www.xml.com/pub/a/2003/12/17/dive.html\r\n[ma]: http://www.xmlrpc.com/metaWeblogApi\r\n[app]: http://www.ietf.org/html.charters/atompub-charter.html\r\n[fa]: http://www.flickr.com/services/api/auth.spec.html\r\n[ua]: http://upcoming.org/services/api/token_auth.php\r\n[kc]: http://www.identityblog.com/?p=701\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221084462\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://beesbuzz.biz/\"><img src=\"http://disqus.com/api/users/avatars/plaidfluff.jpg\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://beesbuzz.biz/\">fluffy</a>\n                </div>\n                <a href=\"#comment-221084462\" class=\"permalink\"><time datetime=\"2007-03-05T22:40:26\">2007-03-05T22:40:26</time></a>\n            </div>\n            <div class=\"content\"><p>Wouldn't openID be a better candidate for this?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084463\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084463\" class=\"permalink\"><time datetime=\"2007-03-05T22:48:24\">2007-03-05T22:48:24</time></a>\n            </div>\n            <div class=\"content\"><p>Not really, unless I don't entirely understand OpenID.  </p>\n\n<p>OpenID offers way to authenticate <em>yourself</em>.  However, what I want is an easy way to delegate your access to 3rd party apps, without those apps being able to authenticate as you or performs actions outside of the permissions you approve.  I don't really want Flickr Uploader, Ecto, MarsEdit to be able to use OpenID to login as me with carte blanche.</p>\n\n<p>With a token-based system like Flickr has, I can approve delegation to various apps and revoke their access at any time - without ever releasing my login details.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084464\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://george.hotelling.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=c7d1c8d2b1a7643236a4661e9a974dee&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://george.hotelling.net/\">George Hotelling</a>\n                </div>\n                <a href=\"#comment-221084464\" class=\"permalink\"><time datetime=\"2007-03-06T17:51:55\">2007-03-06T17:51:55</time></a>\n            </div>\n            <div class=\"content\"><p>At first I had this great idea to build a blog posting proxy service that could grant access to your blog to different services by giving them different usernames and passwords and you could revoke them at any time and it would be great and everyone would be posting to everyone's blog all the time.</p>\n\n<p>Then I realized I had put on <a href=\"http://worsethanfailure.com/Articles/The_Complicator's_Gloves.aspx\" rel=\"nofollow\">complicator gloves</a> and that it would be way easier to just add new users to my blog without a proxy service.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084465\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084465\" class=\"permalink\"><time datetime=\"2007-03-06T18:04:57\">2007-03-06T18:04:57</time></a>\n            </div>\n            <div class=\"content\"><p>Yeah, I figured making multiple accounts is a way to go when you've got your own install of something like WordPress.  It kind of gets stymied, though, if you want the same thing for a hosted service like WordPress.com, Vox, TypePad, or LiveJournal where one account = one blog.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084466\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://ian.mckellar.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a38054904e39e36fab7c4d779abf3752&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://ian.mckellar.org/\">Ian McKellar</a>\n                </div>\n                <a href=\"#comment-221084466\" class=\"permalink\"><time datetime=\"2007-03-12T17:43:49\">2007-03-12T17:43:49</time></a>\n            </div>\n            <div class=\"content\"><p>It seems to me that the ideal solution to this is to have your blog pull new posts from an RSS/Atom feed that's hosted by the service that is generating your content. Feedburner already has a half-assed implementation of this where they'll pull your delicious bookmarks and flickr photos into your burned feed.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084468\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084468\" class=\"permalink\"><time datetime=\"2007-03-12T17:58:35\">2007-03-12T17:58:35</time></a>\n            </div>\n            <div class=\"content\"><p>@ian: Hmm, yeah, that probably does end up being the least onerous solution - just offer an aggregated feed of one's output.  I do like the idea of auto-posting to a blog, though, for the sake of something sorta like daily backups to a system I control.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084470\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://ian.mckellar.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a38054904e39e36fab7c4d779abf3752&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://ian.mckellar.org/\">Ian McKellar</a>\n                </div>\n                <a href=\"#comment-221084470\" class=\"permalink\"><time datetime=\"2007-03-12T18:44:46\">2007-03-12T18:44:46</time></a>\n            </div>\n            <div class=\"content\"><p>@l.m.orchard: you don't need to just aggregate you can also import posts into your own store. We could come up with a cleverly confusing buzzword acronym like Atom Pull Publishing. You just periodically poll a feed and import the items. Actually, this is kind of what Google Reader is doing. They've even got a namespace in their atom for expressing the original id and the source feed. Perhaps I should write a drupal module.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084471\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084471\" class=\"permalink\"><time datetime=\"2007-03-12T19:01:45\">2007-03-12T19:01:45</time></a>\n            </div>\n            <div class=\"content\"><p>@ian: Hmm, yeah, that does sound like the least complicated way to get outside content pulled into a blog without releasing the blog's login details.  I know I've seen / used some WordPress plugins that do  basically that, though I've not been happy with any of them yet.  I should re-look into why that's been the case</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084473\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://ian.mckellar.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a38054904e39e36fab7c4d779abf3752&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://ian.mckellar.org/\">Ian McKellar</a>\n                </div>\n                <a href=\"#comment-221084473\" class=\"permalink\"><time datetime=\"2007-03-12T19:26:16\">2007-03-12T19:26:16</time></a>\n            </div>\n            <div class=\"content\"><p>@l.m.orchard: in my experience the problems are with the formatting of the content (do blank lines turn into paragraphs, etc) and fragile post IDs (the upgraded wordpress and spammed all my friends on livejournal or planet problem). I'm not sure how to fix either of these problems but I think they're both problems Atom is attempting to solve...</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2007",
    "path": "2007/03/05/blog-posting-delegation-and-third-party-auth"
  },
  {
    "comments_archived": true,
    "date": "2006-12-21T02:55:45.000Z",
    "layout": "post",
    "tags": [
      "asides",
      "json",
      "webdev",
      "webservices",
      "javascript",
      "ws"
    ],
    "title": "do not taunt happy fun JSON",
    "wordpress_id": 1029,
    "wordpress_slug": "do-not-taunt-happy-fun-json",
    "wordpress_url": "http://decafbad.com/blog/2006/12/20/do-not-taunt-happy-fun-json",
    "year": "2006",
    "month": "12",
    "day": "20",
    "isDir": false,
    "slug": "do-not-taunt-happy-fun-json",
    "postName": "2006-12-20-do-not-taunt-happy-fun-json",
    "html": "<p>Allow me to repeat myself somewhat and clarify my general opinion of JSON and its use in cross-domain browser scripting:</p>\n<p>Happy Fun JSON is not really an API. Happy Fun JSON is not a bold declaration of side-taking in the grand war of web service specifications. Do not base business models on Happy Fun JSON. Caution: Happy Fun JSON may suddenly accelerate to dangerous speeds or stop altogether. Happy Fun JSON contains a liquid core, which, if exposed due to rupture, should not be touched, inhaled, or looked at. Ingredients of Happy Fun JSON include an unknown glowing substance which fell to Earth, presumably from outer space. If Happy Fun JSON begins to smoke, get away immediately. Seek shelter and cover head.</p>\n<p>Do not taunt Happy Fun JSON.</p>\n<p>Having said all that?  Happy Fun JSON is pretty fun to throw around.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221087880\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://gfmorris.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=505e3b39dcea29b3ded74a5494c493eb&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://gfmorris.net/\">Geof F. Morris</a>\n</div>\n<a href=\"#comment-221087880\" class=\"permalink\"><time datetime=\"2006-12-21T03:34:19\">2006-12-21T03:34:19</time></a>\n</div>\n<div class=\"content\"><p>Did it hurt when Happy Fun JSON fell from Heaven?  ;)</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087884\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://franklinmint.fm\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b9ed774661a22ff8797a1e0e24f0baf3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://franklinmint.fm\">Robert Sayre</a>\n</div>\n<a href=\"#comment-221087884\" class=\"permalink\"><time datetime=\"2006-12-21T03:55:47\">2006-12-21T03:55:47</time></a>\n</div>\n<div class=\"content\"><p>Obviously, the new del.icio.us JSON url feed is crushing blow against XML Web Enterprise Services Declarative Net Neutrality.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087886\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=c82c72ca4f9eab33a80a7bd839c1ae0b&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">jamesv</a>\n</div>\n<a href=\"#comment-221087886\" class=\"permalink\"><time datetime=\"2006-12-21T15:14:24\">2006-12-21T15:14:24</time></a>\n</div>\n<div class=\"content\"><p>I only wish you could pass Happy Fun JSON into Flash via FlashVars in IE. FF and Safari seem to have no problems with it.</p>\n<p>It would make authoring a richer content version of sIFR much, much easier.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087889\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.litfuel.net/plush\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=048d90bde20830d1e4fdec860321a5a6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.litfuel.net/plush\">Jim Plush</a>\n</div>\n<a href=\"#comment-221087889\" class=\"permalink\"><time datetime=\"2006-12-22T19:22:48\">2006-12-22T19:22:48</time></a>\n</div>\n<div class=\"content\"><p>You should be banned from talking about JSON if you think you have to choose one or the other. A place for everything and everything in it's place.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087893\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=7028f422ca6da0180de6c9d922a3228f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\">Danny</a>\n</div>\n<a href=\"#comment-221087893\" class=\"permalink\"><time datetime=\"2006-12-31T18:11:19\">2006-12-31T18:11:19</time></a>\n</div>\n<div class=\"content\"><p>All this lynch talk - I just got throttled! </p>\n<p>Running the script <a href=\"http://dannyayers.com/2006/12/29/del\" rel=\"nofollow\">here</a> on a series of URIs got me the 999 error (no sure how many had run). There's a 2 second pause between calls, I thought that would be polite enough. Still throttled now, maybe 10 mins later. Any suggestions for what would prevent throttling? How long it needs to recover?</p>\n<p>btw, I think Happy Fun JSON is great, and not unreasonable for interop. But what isn't so good for interop is inventing a new HTTP code when there's <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4\" rel=\"nofollow\">503 Service Unavailable</a> (and a Retry-After header would be handy).</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087896\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.alleged.org.uk/pdc/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=5b7d6aea7a0ef515700985bb17cdc5a0&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.alleged.org.uk/pdc/\">Damian Cugley</a>\n</div>\n<a href=\"#comment-221087896\" class=\"permalink\"><time datetime=\"2007-01-22T14:16:27\">2007-01-22T14:16:27</time></a>\n</div>\n<div class=\"content\"><p>@jamesv: The first thing I did with JSON at work was pass it in to a Flash movie via FlashVars. This used a JSON decode written in ActionScript grabbed from JSON.org, plus a JSON encoder written in C# (it did not take long to write because I  did not attempt to serialize arbitrary objects).  Some gratuitous URL-encoding was also involved. Compared with passing the same data structure via URL-encoded XML to be picked apart by ActionScript's DOM support, it was easy and much more like fun.</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "Allow me to repeat myself somewhat and clarify my general opinion of JSON and its use in cross-domain browser scripting:\r\n\r\nHappy Fun JSON is not really an API. Happy Fun JSON is not a bold declaration of side-taking in the grand war of web service specifications. Do not base business models on Happy Fun JSON. Caution: Happy Fun JSON may suddenly accelerate to dangerous speeds or stop altogether. Happy Fun JSON contains a liquid core, which, if exposed due to rupture, should not be touched, inhaled, or looked at. Ingredients of Happy Fun JSON include an unknown glowing substance which fell to Earth, presumably from outer space. If Happy Fun JSON begins to smoke, get away immediately. Seek shelter and cover head.\r\n\r\nDo not taunt Happy Fun JSON.\r\n\r\nHaving said all that?  Happy Fun JSON is pretty fun to throw around.\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221087880\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://gfmorris.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=505e3b39dcea29b3ded74a5494c493eb&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://gfmorris.net/\">Geof F. Morris</a>\n                </div>\n                <a href=\"#comment-221087880\" class=\"permalink\"><time datetime=\"2006-12-21T03:34:19\">2006-12-21T03:34:19</time></a>\n            </div>\n            <div class=\"content\"><p>Did it hurt when Happy Fun JSON fell from Heaven?  ;)</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087884\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://franklinmint.fm\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b9ed774661a22ff8797a1e0e24f0baf3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://franklinmint.fm\">Robert Sayre</a>\n                </div>\n                <a href=\"#comment-221087884\" class=\"permalink\"><time datetime=\"2006-12-21T03:55:47\">2006-12-21T03:55:47</time></a>\n            </div>\n            <div class=\"content\"><p>Obviously, the new del.icio.us JSON url feed is crushing blow against XML Web Enterprise Services Declarative Net Neutrality.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087886\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=c82c72ca4f9eab33a80a7bd839c1ae0b&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">jamesv</a>\n                </div>\n                <a href=\"#comment-221087886\" class=\"permalink\"><time datetime=\"2006-12-21T15:14:24\">2006-12-21T15:14:24</time></a>\n            </div>\n            <div class=\"content\"><p>I only wish you could pass Happy Fun JSON into Flash via FlashVars in IE. FF and Safari seem to have no problems with it.</p>\n\n<p>It would make authoring a richer content version of sIFR much, much easier.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087889\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.litfuel.net/plush\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=048d90bde20830d1e4fdec860321a5a6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.litfuel.net/plush\">Jim Plush</a>\n                </div>\n                <a href=\"#comment-221087889\" class=\"permalink\"><time datetime=\"2006-12-22T19:22:48\">2006-12-22T19:22:48</time></a>\n            </div>\n            <div class=\"content\"><p>You should be banned from talking about JSON if you think you have to choose one or the other. A place for everything and everything in it's place.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087893\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=7028f422ca6da0180de6c9d922a3228f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://dannyayers.com\">Danny</a>\n                </div>\n                <a href=\"#comment-221087893\" class=\"permalink\"><time datetime=\"2006-12-31T18:11:19\">2006-12-31T18:11:19</time></a>\n            </div>\n            <div class=\"content\"><p>All this lynch talk - I just got throttled! </p>\n\n<p>Running the script <a href=\"http://dannyayers.com/2006/12/29/del\" rel=\"nofollow\">here</a> on a series of URIs got me the 999 error (no sure how many had run). There's a 2 second pause between calls, I thought that would be polite enough. Still throttled now, maybe 10 mins later. Any suggestions for what would prevent throttling? How long it needs to recover?</p>\n\n<p>btw, I think Happy Fun JSON is great, and not unreasonable for interop. But what isn't so good for interop is inventing a new HTTP code when there's <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4\" rel=\"nofollow\">503 Service Unavailable</a> (and a Retry-After header would be handy).</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087896\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.alleged.org.uk/pdc/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=5b7d6aea7a0ef515700985bb17cdc5a0&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.alleged.org.uk/pdc/\">Damian Cugley</a>\n                </div>\n                <a href=\"#comment-221087896\" class=\"permalink\"><time datetime=\"2007-01-22T14:16:27\">2007-01-22T14:16:27</time></a>\n            </div>\n            <div class=\"content\"><p>@jamesv: The first thing I did with JSON at work was pass it in to a Flash movie via FlashVars. This used a JSON decode written in ActionScript grabbed from JSON.org, plus a JSON encoder written in C# (it did not take long to write because I  did not attempt to serialize arbitrary objects).  Some gratuitous URL-encoding was also involved. Compared with passing the same data structure via URL-encoded XML to be picked apart by ActionScript's DOM support, it was easy and much more like fun.</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/12/20/do-not-taunt-happy-fun-json"
  },
  {
    "comments_archived": true,
    "date": "2006-12-21T02:01:38.000Z",
    "layout": "post",
    "tags": [
      "asides",
      "delicious",
      "json",
      "webdev",
      "webservices",
      "google",
      "soap"
    ],
    "title": "correlation is not causation",
    "wordpress_id": 1028,
    "wordpress_slug": "correlation-is-not-causation",
    "wordpress_url": "http://decafbad.com/blog/2006/12/20/correlation-is-not-causation",
    "year": "2006",
    "month": "12",
    "day": "20",
    "isDir": false,
    "slug": "correlation-is-not-causation",
    "postName": "2006-12-20-correlation-is-not-causation",
    "html": "<p>By the by:  Correlating the <a href=\"http://del.icio.us/help/json/url\">new del.icio.us JSON URL feed</a> with <a href=\"http://google-code-updates.blogspot.com/2006/12/beyond-soap-search-api.html\">Google&#39;s recent deprecation of the SOAP Search API</a> is about as effective as noticing how often the clock reads 12:34 when you just happen to be looking at it.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221090761\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.joegrossberg.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=f288a8afe5302a16a366d5e9d34f2fec&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.joegrossberg.com\">Joe Grossberg</a>\n</div>\n<a href=\"#comment-221090761\" class=\"permalink\"><time datetime=\"2006-12-21T13:10:16\">2006-12-21T13:10:16</time></a>\n</div>\n<div class=\"content\"><p>Because ... you say so? :)</p>\n<p>Also, I think you misuse the word \"correlation\".</p>\n<p>And I think there is a correlation -- both are indicative of a trend in \"web services\" today.</p>\n<p>JSON and YAML are getting more popular in that arena and XML (especially SOAP) is something that a lot of programmers dislike workign with.</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "By the by:  Correlating the [new del.icio.us JSON URL feed][ju] with [Google's recent deprecation of the SOAP Search API][dep] is about as effective as noticing how often the clock reads 12:34 when you just happen to be looking at it.\r\n\r\n[ju]: http://del.icio.us/help/json/url\r\n[dep]: http://google-code-updates.blogspot.com/2006/12/beyond-soap-search-api.html\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221090761\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.joegrossberg.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=f288a8afe5302a16a366d5e9d34f2fec&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.joegrossberg.com\">Joe Grossberg</a>\n                </div>\n                <a href=\"#comment-221090761\" class=\"permalink\"><time datetime=\"2006-12-21T13:10:16\">2006-12-21T13:10:16</time></a>\n            </div>\n            <div class=\"content\"><p>Because ... you say so? :)</p>\n\n<p>Also, I think you misuse the word \"correlation\".</p>\n\n<p>And I think there is a correlation -- both are indicative of a trend in \"web services\" today.</p>\n\n<p>JSON and YAML are getting more popular in that arena and XML (especially SOAP) is something that a lot of programmers dislike workign with.</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/12/20/correlation-is-not-causation"
  },
  {
    "comments_archived": true,
    "date": "2006-08-24T12:58:04.000Z",
    "layout": "post",
    "tags": [
      "webdev",
      "amazon",
      "s3",
      "ec2",
      "webservices"
    ],
    "title": "Amazon EC2 emerges",
    "wordpress_id": 984,
    "wordpress_slug": "amazon-ec2-emerges",
    "wordpress_url": "http://decafbad.com/blog/2006/08/24/amazon-ec2-emerges",
    "year": "2006",
    "month": "08",
    "day": "24",
    "isDir": false,
    "slug": "amazon-ec2-emerges",
    "postName": "2006-08-24-amazon-ec2-emerges",
    "html": "<blockquote cite=\"http://www.amazon.com/b/ref=sc_fe_c_1_3435361_1/002-3833110-2752034?ie=UTF8&node=201590011&no=3435361&me=A36L942TSJ2AJA\"><p>Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides resizable compute capacity in the cloud. It is designed to make web-scale computing easier for developers.\n</p><p>\nJust as Amazon Simple Storage Service (Amazon S3) enables storage in the cloud, Amazon EC2 enables \"compute\" in the cloud.</p></blockquote><div class=\"quotesource\">Source: <a href=\"http://www.amazon.com/b/ref=sc_fe_c_1_3435361_1/002-3833110-2752034?ie=UTF8&node=201590011&no=3435361&me=A36L942TSJ2AJA\">Amazon.com Amazon Web Services Store: Amazon EC2 / Amazon Web Services</a></div>\n\n<p>This seems like the sound of the second shoe hitting the floor.  Although I tried signing up for this as soon as I saw the email, I was already too late to get in on the beta and start playing.  Maybe I&#39;ll get in on a second round.</p>\n<p>EC2 seems a lot like <a href=\"http://user-mode-linux.sourceforge.net/\">User Mode Linux</a> virtual hosting, but it charges <del>by the CPU hour</del> by the hour of uptime instead of month-to-month.  I&#39;ll be very interested to see how this shakes out, and what sort of web app architecture it encourages when used in conjunction with S3 - say <a href=\"http://weblog.infoworld.com/udell/2006/07/07.html\">AJAX-based queues</a> for instance? - or if it just gets used as a straight <a href=\"http://en.wikipedia.org/wiki/LAMP_(software_bundle)\">LAMP</a> host in general.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221088886\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.sencer.de\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=0e94b4d4662542b91df48f0ff3b36d26&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.sencer.de\">Sencer</a>\n</div>\n<a href=\"#comment-221088886\" class=\"permalink\"><time datetime=\"2006-08-24T15:27:46\">2006-08-24T15:27:46</time></a>\n</div>\n<div class=\"content\"><blockquote>\n<p>it charges by the CPU hour</p>\n</blockquote>\n<p>Just to prevent confusion: They call it instance hours and mean the hours a vm/instance has been running (independent of utilization). \nOnly saying this, beause some hosts, like dreamhost, use(d) the term CPU-minutes for keeping track of \"how much time a processor spends working for your username\" and allow(ed) sth. like 60 CPU-minutes a day.</p>\n<p>At least that's how I understand the amazon offer.</p>\n<p>And thanks for the pointer! It'll be intereting to watch what people are going to come up with. Given that the instances are not \"persistent\", i.e. data is gone when you stop them (unless you move things int S3 or elsewhere), I am assuming that they <em>will</em> be used differently from regular dedicated machines. </p>\n<p>It reminds a little bit of DSL (Damnsmalllinux) which boots/runs of a CD, but allows you to save all your data and customization to an external storage (usb/ftp/etc.) and does auto-restore when you boot into it again. This is nice for people afraid of viruses or getting hacked etc.. I wonder whether this will turn out to be a plus for amazons offer as well. At first it does make things a bit more complicated wrt to usual linux way. But I guess tose things can be solved...</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221088888\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221088888\" class=\"permalink\"><time datetime=\"2006-08-24T16:29:44\">2006-08-24T16:29:44</time></a>\n</div>\n<div class=\"content\"><p>Sencer: Actually, I think your reading is the right one.  It's charge per hour of uptime of the instance, and not a meter on CPU cycles.  \n</p><p>\nSo, to do a quick napkin calculation - $0.10 per hour x 24 hours x 31 days = $74.40 per month to keep an instance running around the clock.  \n</p><p>\nThat makes me think that applications using this service will need to be designed around some clever resource usage, either through scheduled tasks or some interesting way to respond on demand.  Simply running a straight PHP app would seem a bit wasteful in many small-scale cases.</p>\n<p>If I were to run a blog from it, say, I'd lean more toward the Movable Type school of static publishing than the WordPress school of live PHP pages.  Of course, that could all be done from a behind-firewall personal desktop machine, so I need to think of a better example.</p>\n<p>Then again, being able to add and drop instances at will is a big, big deal for larger scale applications.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221088891\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.jonathanboutelle.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d77d55a352cc3dc84a86510094b2dde8&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.jonathanboutelle.com\">Jonathan Boutelle</a>\n</div>\n<a href=\"#comment-221088891\" class=\"permalink\"><time datetime=\"2006-08-24T17:12:09\">2006-08-24T17:12:09</time></a>\n</div>\n<div class=\"content\"><p>Let's see,  back of the envelope calculation ... that's a 10-machine cluster for 720$ /month + bandwidth. With redundant storage and firewall included. Holy crap! Web 2.0 apps just got a LOT cheaper to deploy.</p>\n<p>I am also stuck in limbo land: they sent the email out at 3AM PST, which is just rude: a west-coast company should at least wait until California and Washington wakes up before sending out a limited beta. Methinks the geeks in NYC and boston and the research triangle got all the slots.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221088893\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221088893\" class=\"permalink\"><time datetime=\"2006-08-24T17:57:58\">2006-08-24T17:57:58</time></a>\n</div>\n<div class=\"content\"><p>Jonathan: Yeah, I think your calculation is a better one.  Mine just reflects the fact that EC2 doesn't scale <em>down</em> to piddly little apps like I've been playing with.  But scaling up, it looks like a much better value.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221088895\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://claimid.com/dne\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=7cc1b40a65ed472663b1af1749e8fcb6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://claimid.com/dne\">Daniel Néri</a>\n</div>\n<a href=\"#comment-221088895\" class=\"permalink\"><time datetime=\"2006-08-24T19:04:19\">2006-08-24T19:04:19</time></a>\n</div>\n<div class=\"content\"><p></p><p>It appears to be based on <a href=\"http://www.cl.cam.ac.uk/Research/SRG/netos/xen/\" rel=\"nofollow\">Xen</a>, judging from the sample hostnames in the <a href=\"http://docs.amazonwebservices.com/AmazonEC2/gsg/2006-06-26/\" rel=\"nofollow\">docs</a>.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221088899\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.base4.net/Blog.aspx?ID=93\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=ef0b5680532c0e0fac2fe20ef4b01929&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.base4.net/Blog.aspx?ID=93\">Alex James</a>\n</div>\n<a href=\"#comment-221088899\" class=\"permalink\"><time datetime=\"2006-08-25T11:27:19\">2006-08-25T11:27:19</time></a>\n</div>\n<div class=\"content\"><p>I agree, you need to band together with a couple of mates to make it worthwhile for really small sites. But at the high end it is amazing value. </p>\n<p>Perhaps then there is an opportunity for someone to use EC2 based websites, you could easily create an sort of ISP or ASP model using this, by putting about 20 little websites/application servers on one Image. </p>\n<p>BTW Jonathan... I'm from little old New Zealand and I managed to nab a slot!</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221088900\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.waituk.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=accdd07341577af9d82a220a8a0f5a2d&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.waituk.com\">Website Nepal</a>\n</div>\n<a href=\"#comment-221088900\" class=\"permalink\"><time datetime=\"2007-08-31T17:23:53\">2007-08-31T17:23:53</time></a>\n</div>\n<div class=\"content\"><p>I checked out the Amazon EC2 since I am planning to offer web hosting solution somewhat similar to what EC2 are doing.</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "<blockquote cite=\"http://www.amazon.com/b/ref=sc_fe_c_1_3435361_1/002-3833110-2752034?ie=UTF8&node=201590011&no=3435361&me=A36L942TSJ2AJA\"><p>Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides resizable compute capacity in the cloud. It is designed to make web-scale computing easier for developers.\r\n</p><p>\r\nJust as Amazon Simple Storage Service (Amazon S3) enables storage in the cloud, Amazon EC2 enables \"compute\" in the cloud.</p></blockquote><div class=\"quotesource\">Source: <a href=\"http://www.amazon.com/b/ref=sc_fe_c_1_3435361_1/002-3833110-2752034?ie=UTF8&node=201590011&no=3435361&me=A36L942TSJ2AJA\">Amazon.com Amazon Web Services Store: Amazon EC2 / Amazon Web Services</a></div>\r\n\r\nThis seems like the sound of the second shoe hitting the floor.  Although I tried signing up for this as soon as I saw the email, I was already too late to get in on the beta and start playing.  Maybe I'll get in on a second round.\r\n  \r\nEC2 seems a lot like [User Mode Linux][uml] virtual hosting, but it charges <del>by the CPU hour</del> by the hour of uptime instead of month-to-month.  I'll be very interested to see how this shakes out, and what sort of web app architecture it encourages when used in conjunction with S3 - say [AJAX-based queues][aq] for instance? - or if it just gets used as a straight [LAMP][] host in general.\r\n\r\n[lamp]: http://en.wikipedia.org/wiki/LAMP_(software_bundle)\r\n[uml]:http://user-mode-linux.sourceforge.net/\r\n[aq]: http://weblog.infoworld.com/udell/2006/07/07.html\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221088886\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.sencer.de\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=0e94b4d4662542b91df48f0ff3b36d26&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.sencer.de\">Sencer</a>\n                </div>\n                <a href=\"#comment-221088886\" class=\"permalink\"><time datetime=\"2006-08-24T15:27:46\">2006-08-24T15:27:46</time></a>\n            </div>\n            <div class=\"content\"><blockquote>\n  <p>it charges by the CPU hour</p>\n</blockquote>\n\n<p>Just to prevent confusion: They call it instance hours and mean the hours a vm/instance has been running (independent of utilization). \nOnly saying this, beause some hosts, like dreamhost, use(d) the term CPU-minutes for keeping track of \"how much time a processor spends working for your username\" and allow(ed) sth. like 60 CPU-minutes a day.</p>\n\n<p>At least that's how I understand the amazon offer.</p>\n\n<p>And thanks for the pointer! It'll be intereting to watch what people are going to come up with. Given that the instances are not \"persistent\", i.e. data is gone when you stop them (unless you move things int S3 or elsewhere), I am assuming that they <em>will</em> be used differently from regular dedicated machines. </p>\n\n<p>It reminds a little bit of DSL (Damnsmalllinux) which boots/runs of a CD, but allows you to save all your data and customization to an external storage (usb/ftp/etc.) and does auto-restore when you boot into it again. This is nice for people afraid of viruses or getting hacked etc.. I wonder whether this will turn out to be a plus for amazons offer as well. At first it does make things a bit more complicated wrt to usual linux way. But I guess tose things can be solved...</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221088888\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221088888\" class=\"permalink\"><time datetime=\"2006-08-24T16:29:44\">2006-08-24T16:29:44</time></a>\n            </div>\n            <div class=\"content\"><p>Sencer: Actually, I think your reading is the right one.  It's charge per hour of uptime of the instance, and not a meter on CPU cycles.  \n</p><p>\nSo, to do a quick napkin calculation - $0.10 per hour x 24 hours x 31 days = $74.40 per month to keep an instance running around the clock.  \n</p><p>\nThat makes me think that applications using this service will need to be designed around some clever resource usage, either through scheduled tasks or some interesting way to respond on demand.  Simply running a straight PHP app would seem a bit wasteful in many small-scale cases.</p>\n\n<p>If I were to run a blog from it, say, I'd lean more toward the Movable Type school of static publishing than the WordPress school of live PHP pages.  Of course, that could all be done from a behind-firewall personal desktop machine, so I need to think of a better example.</p>\n\n<p>Then again, being able to add and drop instances at will is a big, big deal for larger scale applications.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221088891\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.jonathanboutelle.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d77d55a352cc3dc84a86510094b2dde8&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.jonathanboutelle.com\">Jonathan Boutelle</a>\n                </div>\n                <a href=\"#comment-221088891\" class=\"permalink\"><time datetime=\"2006-08-24T17:12:09\">2006-08-24T17:12:09</time></a>\n            </div>\n            <div class=\"content\"><p>Let's see,  back of the envelope calculation ... that's a 10-machine cluster for 720$ /month + bandwidth. With redundant storage and firewall included. Holy crap! Web 2.0 apps just got a LOT cheaper to deploy.</p>\n\n<p>I am also stuck in limbo land: they sent the email out at 3AM PST, which is just rude: a west-coast company should at least wait until California and Washington wakes up before sending out a limited beta. Methinks the geeks in NYC and boston and the research triangle got all the slots.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221088893\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221088893\" class=\"permalink\"><time datetime=\"2006-08-24T17:57:58\">2006-08-24T17:57:58</time></a>\n            </div>\n            <div class=\"content\"><p>Jonathan: Yeah, I think your calculation is a better one.  Mine just reflects the fact that EC2 doesn't scale <em>down</em> to piddly little apps like I've been playing with.  But scaling up, it looks like a much better value.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221088895\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://claimid.com/dne\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=7cc1b40a65ed472663b1af1749e8fcb6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://claimid.com/dne\">Daniel Néri</a>\n                </div>\n                <a href=\"#comment-221088895\" class=\"permalink\"><time datetime=\"2006-08-24T19:04:19\">2006-08-24T19:04:19</time></a>\n            </div>\n            <div class=\"content\"><p></p><p>It appears to be based on <a href=\"http://www.cl.cam.ac.uk/Research/SRG/netos/xen/\" rel=\"nofollow\">Xen</a>, judging from the sample hostnames in the <a href=\"http://docs.amazonwebservices.com/AmazonEC2/gsg/2006-06-26/\" rel=\"nofollow\">docs</a>.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221088899\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.base4.net/Blog.aspx?ID=93\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=ef0b5680532c0e0fac2fe20ef4b01929&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.base4.net/Blog.aspx?ID=93\">Alex James</a>\n                </div>\n                <a href=\"#comment-221088899\" class=\"permalink\"><time datetime=\"2006-08-25T11:27:19\">2006-08-25T11:27:19</time></a>\n            </div>\n            <div class=\"content\"><p>I agree, you need to band together with a couple of mates to make it worthwhile for really small sites. But at the high end it is amazing value. </p>\n\n<p>Perhaps then there is an opportunity for someone to use EC2 based websites, you could easily create an sort of ISP or ASP model using this, by putting about 20 little websites/application servers on one Image. </p>\n\n<p>BTW Jonathan... I'm from little old New Zealand and I managed to nab a slot!</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221088900\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.waituk.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=accdd07341577af9d82a220a8a0f5a2d&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.waituk.com\">Website Nepal</a>\n                </div>\n                <a href=\"#comment-221088900\" class=\"permalink\"><time datetime=\"2007-08-31T17:23:53\">2007-08-31T17:23:53</time></a>\n            </div>\n            <div class=\"content\"><p>I checked out the Amazon EC2 since I am planning to offer web hosting solution somewhat similar to what EC2 are doing.</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/08/24/amazon-ec2-emerges"
  },
  {
    "comments_archived": true,
    "date": "2005-09-26T01:12:46.000Z",
    "layout": "post",
    "tags": [
      "webdev",
      "rss",
      "syndication",
      "webservices",
      "atom",
      "xml"
    ],
    "title": "Templates:  Good or Evil?",
    "wordpress_id": 689,
    "wordpress_slug": "templates-good-or-evil",
    "wordpress_url": "http://decafbad.com/blog/?p=689",
    "year": "2005",
    "month": "09",
    "day": "25",
    "isDir": false,
    "slug": "templates-good-or-evil",
    "postName": "2005-09-25-templates-good-or-evil",
    "html": "<blockquote cite=\"http://lachy.id.au/log/2005/04/xhtml-future#comment-271\">This cry and whine that draconian handling will break your page and make your users suffer for you if you have a single error is just another legacy of HTML we’ve gotten used to: our toolchains tend to be of the “glue strings together” (aka templates) variety. ... There should never be any part of your publishing toolchain just gluing strings together. Ever.</blockquote><span style=\"float:right; font-size: 0.75em; width:75%\">Source: <a href=\"http://lachy.id.au/log/2005/04/xhtml-future#comment-271\">Aristotle Pagaltzis in a comment on \"The Future: HTML or XHTML\"</a></span><br style=\"clear:both\" /><blockquote cite=\"http://lesscode.org/2005/09/24/web-services-infrastructure-kid/\">There’s no rule that says templates must only be used to generate HTML. Indeed, many of the RSS and Atom feeds in the wild are generated from some form of template. They are never automatically-generated-behind-the-scenes using language bindings and are very rarely generated using some kind of DOM/SAX API.</blockquote><span style=\"float:right; font-size: 0.75em; width:75%\">Source: <a href=\"http://lesscode.org/2005/09/24/web-services-infrastructure-kid/\">Web Services Infrastructure: Kid Templating  </a></span><br style=\"clear:both\" />\n\n<p>I&#39;ve been meaning to write about this for some time now, though I&#39;ve never had my thoughts together to any degree to mount a decent case for either side.  Problem is, I haven&#39;t gotten much closer now, but I figured I&#39;d at least post a few thoughts and conjure up a vague sketch of the issue.</p>\n<p>You see, I think it all goes back to <a href=\"http://decafbad.com/blog/2002/12/13/oooced\">thoughts about which I posted almost three years ago</a>.  On the one hand, producing something like XML using &quot;proper&quot; DOM invocations and handwavings seems like the &quot;correct&quot; thing to do.  Yet, on the other hand, using a templating system lets me get down to business much more quickly and with much more clarity and succinct code.  </p>\n<p>Yeah, templates provide a range of flexibility sufficient to aim the barrel at your own toes, while an API like the XML DOM keeps everything on the rails--but sometimes you know where you&#39;re going and don&#39;t need the rails to get you there.  Furthermore, isn&#39;t it possible to make a template system that Does The Right Thing?</p>\n<p>Anyway, it&#39;s rather apparent that I&#39;m solidly in favor of templates:  After all, a book of mine just hit the shelves which is just rife with template-based generation of RSS and Atom feeds.  </p>\n<p>My only issue, really, is that I feel vaguely guilty about it.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221084924\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=821395fe70906c8290df7f18ac4ac6cf&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">rick</a>\n</div>\n<a href=\"#comment-221084924\" class=\"permalink\"><time datetime=\"2005-09-26T02:27:37\">2005-09-26T02:27:37</time></a>\n</div>\n<div class=\"content\">Ruby has the nice Builder module for this (http://builder.rubyforge.org/).  Ruby on Rails uses it for it's rxml templates.  So, you still get the speed of templates, but you don't have to worry about those pesky xml rules.\nHere's a sample Atom 1.0 template used by Typo, a rails weblogging system: http://typo.leetsoft.com/trac/file/trunk/app/views/xml/atom10_feed.rxml</div>\n</li>\n<li class=\"comment\" id=\"comment-221084925\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://plasmasturm.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e17949267bbfe21a0fadf1bbf00592b4&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://plasmasturm.org/\">Aristotle Pagaltzis</a>\n</div>\n<a href=\"#comment-221084925\" class=\"permalink\"><time datetime=\"2005-09-26T03:52:50\">2005-09-26T03:52:50</time></a>\n</div>\n<div class=\"content\">Using the DOM to build documents is awfully awkward. Don&#8217;t do that.\nCheck <a href=\"http://hsivonen.iki.fi/\" rel=\"nofollow\">Henri Sivonen</a>&#8217;s suggestions just published in his <a href=\"http://hsivonen.iki.fi/producing-xml/\" rel=\"nofollow\">HOWTO Avoid Being Called a Bozo When Producing XML</a>. Instead of building a DOM, generate SAX events, using the program structure to ensure proper nesting &#8211; or instead of generating the SAX events all manually, generate them by parsing a static XML document and using certain interesting points in the stream (such as Processing Instructions) as hooks for inserting payload.\nThe emission of synthesised SAX events can be generalised by writing a datastructure-to-SAX serialiser, so that you can build your data within your language&#8217;s native datastructures prior to outputting it, for maximum comfort. (Of course you serialise piecemeal too, f.ex. by outputting the head of a feed manually, then for each item, building the data structure and immediately serialising it, then emitting the final events to complete the document.)\nDepending on the complexity of the output, you could directly emit the otuput format or feed the events into to an XSLT transform that generates the full-blown thing from an easy to generate document structure. In both cases this can be done with or without the involvement of a serialiser as middle man.\nThere are plenty of ways to make sure that the entire toolchain from one end to the other consists only of steps that conserve well-formedness, and they need not be any less convenient than using templates.</div>\n</li>\n<li class=\"comment\" id=\"comment-221084926\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084926\" class=\"permalink\"><time datetime=\"2005-09-26T04:16:35\">2005-09-26T04:16:35</time></a>\n</div>\n<div class=\"content\"><blockquote>or instead of generating the SAX events all manually, generate them by parsing a static XML document and using certain interesting points in the stream (such as Processing Instructions) as hooks for inserting payload.</blockquote>\nAristotle:  Now here's where I think certain templating technologies get interesting, and may Do the Right Thing.  My so-far-favorite templating kit, ZPT, wants well-formed XML as templates--although I think that restriction is unfortunately relaxed as a nod to HTML.  On the other hand, my possibly-new-favorite templating kit, Kid, [demands well-formed XML as templates](http://lesscode.org/projects/kid/wiki/KidFaq#must-templates-be-well-formed-xml).\nIn case you haven't played with them, these two template languages center around the idea that certain attributes on elements define where content provided in a data structure should be inserted / swapped in by the template engine.  The engine handles character encodings and such to ensure that the well-formed template results in a well-formed document.\nDoes this match up with what you say up there?</div>\n</li>\n<li class=\"comment\" id=\"comment-221084928\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084928\" class=\"permalink\"><time datetime=\"2005-09-26T04:28:49\">2005-09-26T04:28:49</time></a>\n</div>\n<div class=\"content\">I guess the other thing that bugs me about constructing documents via DOM or via generating SAX events—which I'd first discovered in <a href=\"http://www.xml.com/pub/a/2003/03/12/py-xml.html\" rel=\"nofollow\">this XML.com article by Uche Ogbuji</a>—is how awkward and removed it is from the view-source XML I've gotten used to hacking around with.  Of course, my distaste for programmatically generating things like this goes back to <a href=\"http://perldoc.perl.org/CGI.html#CREATING-STANDARD-HTML-ELEMENTS%3a\" rel=\"nofollow\">CGI.pm</a> in my perl-hacking days.\nWhen I start writing <i>code</i> to generate <i>data</i> that could be mostly done with a template, it strikes me as tangling Model/View/Controller elements and introducing weird context shifts.  (ie. h1() vs &lt;h1 /&gt;)  Not sure if that made sense...</div>\n</li>\n<li class=\"comment\" id=\"comment-221084929\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.sporkmonger.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=56ee28134dd0776825445e3551979b14&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.sporkmonger.com\">Bob Aman</a>\n</div>\n<a href=\"#comment-221084929\" class=\"permalink\"><time datetime=\"2005-09-26T05:40:24\">2005-09-26T05:40:24</time></a>\n</div>\n<div class=\"content\">Yeah, I was gonna say, Builder for Ruby solves most of the issues with using templates and xml.  For RSS and Atom, there's also my Ruby FeedTools library, which makes it even more rediculously easy to get a valid feed up and running.\nI'm also very tempted to play around with Kid and see how I like it, and perhaps port it to Ruby.  From what I've seen so far, it looks like perhaps the nicest templating system yet.</div>\n</li>\n<li class=\"comment\" id=\"comment-221084930\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://plasmasturm.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e17949267bbfe21a0fadf1bbf00592b4&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://plasmasturm.org/\">Aristotle Pagaltzis</a>\n</div>\n<a href=\"#comment-221084930\" class=\"permalink\"><time datetime=\"2005-09-26T05:59:08\">2005-09-26T05:59:08</time></a>\n</div>\n<div class=\"content\">It does. I confess I actually kind of liked <a href=\"http://search.cpan.org/dist/CGI.pm/\" rel=\"nofollow\">CGI.pm</a> &#8211; because nesting is automatically taken care of without so much typing of end tags, and you can seamlessly weave <code>map</code>s into the code for output loops.\nI have to note though that I used it as a sort of template language in its own right &#8211; I never littered <code>print</code>s all over my code, I kept all the calls in a single place, in fact, usually a single expression. That is also why I find it strange that people create template languages for PHP, which was itself born as a template language. What matters is that the output generation is separate from the processing logic, whether or not the template and the code are in different languages.\nAnyway, I digress.\nWhat I wanted to say is, no, I hadn&#8217;t seen either ZPT or Kid. I had put off reading the lesscode.org article you quoted and went back to it after responding here. Now that I&#8217;ve read it, I admit I&#8217;m intrigued. I&#8217;ll have to look into Kid; it sounds like an interesting take.</div>\n</li>\n<li class=\"comment\" id=\"comment-221084931\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084931\" class=\"permalink\"><time datetime=\"2005-09-26T13:39:00\">2005-09-26T13:39:00</time></a>\n</div>\n<div class=\"content\"><blockquote>What matters is that the output generation is separate from the processing logic, whether or not the template and the code are in different languages.</blockquote>\nAh hah, yeah, that's what I was fumbling toward with the sleepy tail-end of my comment.  Logic and presentation in separate blocks / files / etc.  And then, my take is that if you're going to have your presentation/view separate from the logic/controller, you may as well code the presentation in a form as close to the goal as possible (ie. in XML or HTML, not in s-expressions or the logic implementation idiom)—especially since oftimes you've got separate people or teams working primarily on each.\nI suspect, however, that a templating system like Kid goes quite a ways toward solving the problem of \"gluing strings together\".  I almost wish it had been further along / I'd been more aware of it before I'd reinvented my own wheels for my book using Python string templates and funky map classes.</div>\n</li>\n<li class=\"comment\" id=\"comment-221084932\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://naeblis.cx/rtomayko/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=abfc88b96ae18c85ba7aac3bded2ec5e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://naeblis.cx/rtomayko/\">Ryan Tomayko</a>\n</div>\n<a href=\"#comment-221084932\" class=\"permalink\"><time datetime=\"2005-09-26T19:00:44\">2005-09-26T19:00:44</time></a>\n</div>\n<div class=\"content\"><blockquote>I suspect, however, that a templating system like Kid goes quite a ways toward solving the problem of “gluing strings together”.</blockquote>\nThat's the idea. The correctness of DOM/SAX based contruction with the ease-of-use of templating. The future of Kid is somewhat uncertain. I'm hoping to wrap up 1.0 and stabalize it for Kevin and TurboGears but what I'd personally really love to see is the general concept of \"structured templating\" reach a wider audience.</div>\n</li>\n<li class=\"comment\" id=\"comment-221084933\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://naeblis.cx/rtomayko/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=abfc88b96ae18c85ba7aac3bded2ec5e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://naeblis.cx/rtomayko/\">Ryan Tomayko</a>\n</div>\n<a href=\"#comment-221084933\" class=\"permalink\"><time datetime=\"2005-09-26T19:02:17\">2005-09-26T19:02:17</time></a>\n</div>\n<div class=\"content\">Oops. Sorry about the rough formatting. For some reason I thought comments were in markdown. Edit away, Leslie.</div>\n</li>\n<li class=\"comment\" id=\"comment-221084934\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084934\" class=\"permalink\"><time datetime=\"2005-09-26T19:11:20\">2005-09-26T19:11:20</time></a>\n</div>\n<div class=\"content\">Ryan:  Grr.  Funny you should mention that—I thought comments around here allowed markdown, too.  I think I need to fix that *and* display some copy explaining markdown availablility, since I think that was something about which Aristotle expressed some confusion/surprise before as well.</div>\n</li>\n<li class=\"comment\" id=\"comment-221084935\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://plasmasturm.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e17949267bbfe21a0fadf1bbf00592b4&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://plasmasturm.org/\">Aristotle Pagaltzis</a>\n</div>\n<a href=\"#comment-221084935\" class=\"permalink\"><time datetime=\"2005-09-26T20:29:12\">2005-09-26T20:29:12</time></a>\n</div>\n<div class=\"content\"><blockquote>if you&#8217;re going to have your presentation/view separate from the logic/controller, you may as well code the presentation in a form as close to the goal as possible</blockquote>\nOh, I don&#8217;t disagree at all.\nI have been annoyed at the state of XML generation at large, myself. Kid looks very nice, except I have no use for it, being that I&#8217;m still a Perlista. (Python just doesn&#8217;t feel right to me &#8211; like wearing a badly fitting tuxedo.)\nI&#8217;m wondering how much work it would be to port it or a close copy to Perl&#8230;\n<blockquote>I think that was something about which Aristotle expressed some confusion/surprise before as well.</blockquote>\nHeh, yeah. Your MT installation permitted Markdown but no literal tags, which caught me off guard once or twice until I noticed. But thankfully it had a preview button, so I could figure it out. I <strong><em>hate</em></strong> how WordPress does not ship with preview button available and enabled by default, and the default configuration doesn't even mention the expected formatting anywhere either.\nI just suspected that your WordPress was vanilla and used HTML on that hunch &#8211; and it worked. Phew. Maybe you can install the gagdget that Ryan uses on lesscode.org? I love that.</div>\n</li>\n<li class=\"comment\" id=\"comment-221084936\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084936\" class=\"permalink\"><time datetime=\"2005-09-26T21:38:08\">2005-09-26T21:38:08</time></a>\n</div>\n<div class=\"content\"><blockquote>\n<p>I just suspected that your WordPress was vanilla and used HTML on that hunch – and it worked. Phew. Maybe you can install the gagdget that Ryan uses on lesscode.org? I love that.</p>\n</blockquote>\n<p>Your wish is my command.  At least, in this instance.  I pawed through Ryan's HTML source and got sufficient clues to install this thing and shamelessly steal a snippet or two.  Let's see if this preview works and if it accurately reflects what this will look like when I post...</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084937\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.emacswiki.org/alex/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=73d2617de46d85c306dbdf533b72fded&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.emacswiki.org/alex/\">Alex Schröder</a>\n</div>\n<a href=\"#comment-221084937\" class=\"permalink\"><time datetime=\"2005-09-27T11:22:06\">2005-09-27T11:22:06</time></a>\n</div>\n<div class=\"content\"><p>I maintain Oddmuse, a wiki engine written in Perl, using CGI.pm to generate the HTML.  Often people want me to switch to templates.  At the moment, when you want to radically change the HTML for the stuff that is not the wiki content, ie. headers and footers, you need to override the Perl subs that I provide.  Somehow that strikes me as natural and easy, but many of my users seem to disagree, preferring to learn a templating system instead of learning to write Perl code.  I'm still undecided about the issue.  At the moment I'm still sticking to the \"write Perl code instead of templating\" because being able to write Perl code will make so many other task easy.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221084938\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221084938\" class=\"permalink\"><time datetime=\"2005-09-27T11:31:23\">2005-09-27T11:31:23</time></a>\n</div>\n<div class=\"content\"><p>Alex:  Well, from my perspective, I've worked on a lot of teams where you've essentially got two roles—software engineer (SE) and interface engineer (IE).  Depending on the company and the team, the SE might understand Perl/Python/Java/SQL while the IE might understand HTML/CSS/Javascript/Flash.  There's usually overlap, of course, but these are the roles on paper at least.</p>\n<p>When you're trying to come up with an overarching framework which accomodates collaboration between these two sorts of people and their respective skill sets, it helps to have a bridge between the logic and the presentation which can keep the Perl out of the HTML and the HTML out of the Perl.</p>\n<p>On the other hand...  A project like Oddmuse likely has an entirely different user and developer base than the projects I work on at my day job :)</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "<blockquote cite=\"http://lachy.id.au/log/2005/04/xhtml-future#comment-271\">This cry and whine that draconian handling will break your page and make your users suffer for you if you have a single error is just another legacy of HTML we’ve gotten used to: our toolchains tend to be of the “glue strings together” (aka templates) variety. ... There should never be any part of your publishing toolchain just gluing strings together. Ever.</blockquote><span style=\"float:right; font-size: 0.75em; width:75%\">Source: <a href=\"http://lachy.id.au/log/2005/04/xhtml-future#comment-271\">Aristotle Pagaltzis in a comment on \"The Future: HTML or XHTML\"</a></span><br style=\"clear:both\" /><blockquote cite=\"http://lesscode.org/2005/09/24/web-services-infrastructure-kid/\">There’s no rule that says templates must only be used to generate HTML. Indeed, many of the RSS and Atom feeds in the wild are generated from some form of template. They are never automatically-generated-behind-the-scenes using language bindings and are very rarely generated using some kind of DOM/SAX API.</blockquote><span style=\"float:right; font-size: 0.75em; width:75%\">Source: <a href=\"http://lesscode.org/2005/09/24/web-services-infrastructure-kid/\">Web Services Infrastructure: Kid Templating  </a></span><br style=\"clear:both\" />\r\n\r\nI've been meaning to write about this for some time now, though I've never had my thoughts together to any degree to mount a decent case for either side.  Problem is, I haven't gotten much closer now, but I figured I'd at least post a few thoughts and conjure up a vague sketch of the issue.\r\n\r\nYou see, I think it all goes back to [thoughts about which I posted almost three years ago][lazy].  On the one hand, producing something like XML using \"proper\" DOM invocations and handwavings seems like the \"correct\" thing to do.  Yet, on the other hand, using a templating system lets me get down to business much more quickly and with much more clarity and succinct code.  \r\n\r\nYeah, templates provide a range of flexibility sufficient to aim the barrel at your own toes, while an API like the XML DOM keeps everything on the rails--but sometimes you know where you're going and don't need the rails to get you there.  Furthermore, isn't it possible to make a template system that Does The Right Thing?\r\n\r\nAnyway, it's rather apparent that I'm solidly in favor of templates:  After all, a book of mine just hit the shelves which is just rife with template-based generation of RSS and Atom feeds.  \r\n\r\nMy only issue, really, is that I feel vaguely guilty about it.\r\n\r\n[lazy]: http://decafbad.com/blog/2002/12/13/oooced\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221084924\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=821395fe70906c8290df7f18ac4ac6cf&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">rick</a>\n                </div>\n                <a href=\"#comment-221084924\" class=\"permalink\"><time datetime=\"2005-09-26T02:27:37\">2005-09-26T02:27:37</time></a>\n            </div>\n            <div class=\"content\">Ruby has the nice Builder module for this (http://builder.rubyforge.org/).  Ruby on Rails uses it for it's rxml templates.  So, you still get the speed of templates, but you don't have to worry about those pesky xml rules.\n\nHere's a sample Atom 1.0 template used by Typo, a rails weblogging system: http://typo.leetsoft.com/trac/file/trunk/app/views/xml/atom10_feed.rxml</div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084925\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://plasmasturm.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e17949267bbfe21a0fadf1bbf00592b4&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://plasmasturm.org/\">Aristotle Pagaltzis</a>\n                </div>\n                <a href=\"#comment-221084925\" class=\"permalink\"><time datetime=\"2005-09-26T03:52:50\">2005-09-26T03:52:50</time></a>\n            </div>\n            <div class=\"content\">Using the DOM to build documents is awfully awkward. Don&#8217;t do that.\n\nCheck <a href=\"http://hsivonen.iki.fi/\" rel=\"nofollow\">Henri Sivonen</a>&#8217;s suggestions just published in his <a href=\"http://hsivonen.iki.fi/producing-xml/\" rel=\"nofollow\">HOWTO Avoid Being Called a Bozo When Producing XML</a>. Instead of building a DOM, generate SAX events, using the program structure to ensure proper nesting &#8211; or instead of generating the SAX events all manually, generate them by parsing a static XML document and using certain interesting points in the stream (such as Processing Instructions) as hooks for inserting payload.\n\nThe emission of synthesised SAX events can be generalised by writing a datastructure-to-SAX serialiser, so that you can build your data within your language&#8217;s native datastructures prior to outputting it, for maximum comfort. (Of course you serialise piecemeal too, f.ex. by outputting the head of a feed manually, then for each item, building the data structure and immediately serialising it, then emitting the final events to complete the document.)\n\nDepending on the complexity of the output, you could directly emit the otuput format or feed the events into to an XSLT transform that generates the full-blown thing from an easy to generate document structure. In both cases this can be done with or without the involvement of a serialiser as middle man.\n\nThere are plenty of ways to make sure that the entire toolchain from one end to the other consists only of steps that conserve well-formedness, and they need not be any less convenient than using templates.</div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084926\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084926\" class=\"permalink\"><time datetime=\"2005-09-26T04:16:35\">2005-09-26T04:16:35</time></a>\n            </div>\n            <div class=\"content\"><blockquote>or instead of generating the SAX events all manually, generate them by parsing a static XML document and using certain interesting points in the stream (such as Processing Instructions) as hooks for inserting payload.</blockquote>\nAristotle:  Now here's where I think certain templating technologies get interesting, and may Do the Right Thing.  My so-far-favorite templating kit, ZPT, wants well-formed XML as templates--although I think that restriction is unfortunately relaxed as a nod to HTML.  On the other hand, my possibly-new-favorite templating kit, Kid, [demands well-formed XML as templates](http://lesscode.org/projects/kid/wiki/KidFaq#must-templates-be-well-formed-xml).\n\nIn case you haven't played with them, these two template languages center around the idea that certain attributes on elements define where content provided in a data structure should be inserted / swapped in by the template engine.  The engine handles character encodings and such to ensure that the well-formed template results in a well-formed document.\n\nDoes this match up with what you say up there?</div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084928\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084928\" class=\"permalink\"><time datetime=\"2005-09-26T04:28:49\">2005-09-26T04:28:49</time></a>\n            </div>\n            <div class=\"content\">I guess the other thing that bugs me about constructing documents via DOM or via generating SAX events—which I'd first discovered in <a href=\"http://www.xml.com/pub/a/2003/03/12/py-xml.html\" rel=\"nofollow\">this XML.com article by Uche Ogbuji</a>—is how awkward and removed it is from the view-source XML I've gotten used to hacking around with.  Of course, my distaste for programmatically generating things like this goes back to <a href=\"http://perldoc.perl.org/CGI.html#CREATING-STANDARD-HTML-ELEMENTS%3a\" rel=\"nofollow\">CGI.pm</a> in my perl-hacking days.\n\nWhen I start writing <i>code</i> to generate <i>data</i> that could be mostly done with a template, it strikes me as tangling Model/View/Controller elements and introducing weird context shifts.  (ie. h1() vs &lt;h1 /&gt;)  Not sure if that made sense...</div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084929\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.sporkmonger.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=56ee28134dd0776825445e3551979b14&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.sporkmonger.com\">Bob Aman</a>\n                </div>\n                <a href=\"#comment-221084929\" class=\"permalink\"><time datetime=\"2005-09-26T05:40:24\">2005-09-26T05:40:24</time></a>\n            </div>\n            <div class=\"content\">Yeah, I was gonna say, Builder for Ruby solves most of the issues with using templates and xml.  For RSS and Atom, there's also my Ruby FeedTools library, which makes it even more rediculously easy to get a valid feed up and running.\n\nI'm also very tempted to play around with Kid and see how I like it, and perhaps port it to Ruby.  From what I've seen so far, it looks like perhaps the nicest templating system yet.</div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084930\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://plasmasturm.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e17949267bbfe21a0fadf1bbf00592b4&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://plasmasturm.org/\">Aristotle Pagaltzis</a>\n                </div>\n                <a href=\"#comment-221084930\" class=\"permalink\"><time datetime=\"2005-09-26T05:59:08\">2005-09-26T05:59:08</time></a>\n            </div>\n            <div class=\"content\">It does. I confess I actually kind of liked <a href=\"http://search.cpan.org/dist/CGI.pm/\" rel=\"nofollow\">CGI.pm</a> &#8211; because nesting is automatically taken care of without so much typing of end tags, and you can seamlessly weave <code>map</code>s into the code for output loops.\n\nI have to note though that I used it as a sort of template language in its own right &#8211; I never littered <code>print</code>s all over my code, I kept all the calls in a single place, in fact, usually a single expression. That is also why I find it strange that people create template languages for PHP, which was itself born as a template language. What matters is that the output generation is separate from the processing logic, whether or not the template and the code are in different languages.\n\nAnyway, I digress.\n\nWhat I wanted to say is, no, I hadn&#8217;t seen either ZPT or Kid. I had put off reading the lesscode.org article you quoted and went back to it after responding here. Now that I&#8217;ve read it, I admit I&#8217;m intrigued. I&#8217;ll have to look into Kid; it sounds like an interesting take.</div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084931\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084931\" class=\"permalink\"><time datetime=\"2005-09-26T13:39:00\">2005-09-26T13:39:00</time></a>\n            </div>\n            <div class=\"content\"><blockquote>What matters is that the output generation is separate from the processing logic, whether or not the template and the code are in different languages.</blockquote>\n\nAh hah, yeah, that's what I was fumbling toward with the sleepy tail-end of my comment.  Logic and presentation in separate blocks / files / etc.  And then, my take is that if you're going to have your presentation/view separate from the logic/controller, you may as well code the presentation in a form as close to the goal as possible (ie. in XML or HTML, not in s-expressions or the logic implementation idiom)—especially since oftimes you've got separate people or teams working primarily on each.\n\nI suspect, however, that a templating system like Kid goes quite a ways toward solving the problem of \"gluing strings together\".  I almost wish it had been further along / I'd been more aware of it before I'd reinvented my own wheels for my book using Python string templates and funky map classes.</div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084932\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://naeblis.cx/rtomayko/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=abfc88b96ae18c85ba7aac3bded2ec5e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://naeblis.cx/rtomayko/\">Ryan Tomayko</a>\n                </div>\n                <a href=\"#comment-221084932\" class=\"permalink\"><time datetime=\"2005-09-26T19:00:44\">2005-09-26T19:00:44</time></a>\n            </div>\n            <div class=\"content\"><blockquote>I suspect, however, that a templating system like Kid goes quite a ways toward solving the problem of “gluing strings together”.</blockquote>\n\nThat's the idea. The correctness of DOM/SAX based contruction with the ease-of-use of templating. The future of Kid is somewhat uncertain. I'm hoping to wrap up 1.0 and stabalize it for Kevin and TurboGears but what I'd personally really love to see is the general concept of \"structured templating\" reach a wider audience.</div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084933\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://naeblis.cx/rtomayko/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=abfc88b96ae18c85ba7aac3bded2ec5e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://naeblis.cx/rtomayko/\">Ryan Tomayko</a>\n                </div>\n                <a href=\"#comment-221084933\" class=\"permalink\"><time datetime=\"2005-09-26T19:02:17\">2005-09-26T19:02:17</time></a>\n            </div>\n            <div class=\"content\">Oops. Sorry about the rough formatting. For some reason I thought comments were in markdown. Edit away, Leslie.</div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084934\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084934\" class=\"permalink\"><time datetime=\"2005-09-26T19:11:20\">2005-09-26T19:11:20</time></a>\n            </div>\n            <div class=\"content\">Ryan:  Grr.  Funny you should mention that—I thought comments around here allowed markdown, too.  I think I need to fix that *and* display some copy explaining markdown availablility, since I think that was something about which Aristotle expressed some confusion/surprise before as well.</div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084935\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://plasmasturm.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e17949267bbfe21a0fadf1bbf00592b4&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://plasmasturm.org/\">Aristotle Pagaltzis</a>\n                </div>\n                <a href=\"#comment-221084935\" class=\"permalink\"><time datetime=\"2005-09-26T20:29:12\">2005-09-26T20:29:12</time></a>\n            </div>\n            <div class=\"content\"><blockquote>if you&#8217;re going to have your presentation/view separate from the logic/controller, you may as well code the presentation in a form as close to the goal as possible</blockquote>\n\nOh, I don&#8217;t disagree at all.\n\nI have been annoyed at the state of XML generation at large, myself. Kid looks very nice, except I have no use for it, being that I&#8217;m still a Perlista. (Python just doesn&#8217;t feel right to me &#8211; like wearing a badly fitting tuxedo.)\n\nI&#8217;m wondering how much work it would be to port it or a close copy to Perl&#8230;\n\n<blockquote>I think that was something about which Aristotle expressed some confusion/surprise before as well.</blockquote>\n\nHeh, yeah. Your MT installation permitted Markdown but no literal tags, which caught me off guard once or twice until I noticed. But thankfully it had a preview button, so I could figure it out. I <strong><em>hate</em></strong> how WordPress does not ship with preview button available and enabled by default, and the default configuration doesn't even mention the expected formatting anywhere either.\n\nI just suspected that your WordPress was vanilla and used HTML on that hunch &#8211; and it worked. Phew. Maybe you can install the gagdget that Ryan uses on lesscode.org? I love that.</div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084936\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084936\" class=\"permalink\"><time datetime=\"2005-09-26T21:38:08\">2005-09-26T21:38:08</time></a>\n            </div>\n            <div class=\"content\"><blockquote>\n  <p>I just suspected that your WordPress was vanilla and used HTML on that hunch – and it worked. Phew. Maybe you can install the gagdget that Ryan uses on lesscode.org? I love that.</p>\n</blockquote>\n\n<p>Your wish is my command.  At least, in this instance.  I pawed through Ryan's HTML source and got sufficient clues to install this thing and shamelessly steal a snippet or two.  Let's see if this preview works and if it accurately reflects what this will look like when I post...</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084937\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.emacswiki.org/alex/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=73d2617de46d85c306dbdf533b72fded&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.emacswiki.org/alex/\">Alex Schröder</a>\n                </div>\n                <a href=\"#comment-221084937\" class=\"permalink\"><time datetime=\"2005-09-27T11:22:06\">2005-09-27T11:22:06</time></a>\n            </div>\n            <div class=\"content\"><p>I maintain Oddmuse, a wiki engine written in Perl, using CGI.pm to generate the HTML.  Often people want me to switch to templates.  At the moment, when you want to radically change the HTML for the stuff that is not the wiki content, ie. headers and footers, you need to override the Perl subs that I provide.  Somehow that strikes me as natural and easy, but many of my users seem to disagree, preferring to learn a templating system instead of learning to write Perl code.  I'm still undecided about the issue.  At the moment I'm still sticking to the \"write Perl code instead of templating\" because being able to write Perl code will make so many other task easy.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221084938\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221084938\" class=\"permalink\"><time datetime=\"2005-09-27T11:31:23\">2005-09-27T11:31:23</time></a>\n            </div>\n            <div class=\"content\"><p>Alex:  Well, from my perspective, I've worked on a lot of teams where you've essentially got two roles—software engineer (SE) and interface engineer (IE).  Depending on the company and the team, the SE might understand Perl/Python/Java/SQL while the IE might understand HTML/CSS/Javascript/Flash.  There's usually overlap, of course, but these are the roles on paper at least.</p>\n\n<p>When you're trying to come up with an overarching framework which accomodates collaboration between these two sorts of people and their respective skill sets, it helps to have a bridge between the logic and the presentation which can keep the Perl out of the HTML and the HTML out of the Perl.</p>\n\n<p>On the other hand...  A project like Oddmuse likely has an entirely different user and developer base than the projects I work on at my day job :)</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2005",
    "path": "2005/09/25/templates-good-or-evil"
  }
]