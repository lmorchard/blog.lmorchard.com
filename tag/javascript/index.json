[
  {
    "title": "Playing with a node.js app project layout",
    "tags": [
      "nodejs",
      "webdev",
      "javascript",
      "gulp",
      "heroku"
    ],
    "year": "2014",
    "month": "10",
    "day": "23",
    "isDir": false,
    "slug": "node-project-layout",
    "date": "2014-10-23T12:00:00.000Z",
    "postName": "2014-10-23-node-project-layout",
    "html": "<p>I&#39;m pleased with <a href=\"https://github.com/lmorchard/toothub/tree/913c4d326ea5a424087899a103301323d46d8086\">this project layout</a> for a node.js-based web client /\nserver app.</p>\n<!--more-->\n\n<pre><code class=\"language-bash\">➜  toothub git:(master) ✗ tree\n├── Procfile\n├── README.md\n├── app.json\n├── bin\n│   └── toothub\n├── config.json-dist\n├── htdocs\n│   ├── css\n│   │   └── main.styl\n│   └── index.html\n├── lib\n│   ├── cli\n│   │   ├── index.js\n│   │   └── server.js\n│   ├── client\n│   │   └── index.js\n│   ├── models\n│   │   ├── Item.js\n│   │   └── index.js\n│   └── server\n│       ├── index.js\n│       └── static.js\n├── package.json\n└── test\n    └── test-index.js</code></pre>\n<p><a href=\"http://browserify.org/\">Browserify</a> lets me share a lot of code between client &amp; server, using the same\nconventions.  Though, I have to be careful not to pile too much into the\nclient-side JS bundle. It&#39;s really easy to inflate that.</p>\n<p>The <a href=\"https://www.npmjs.org/package/require-dir\">require-dir</a> module lets me do <a href=\"https://github.com/lmorchard/feeder2/tree/9d02e216e4d4e47351a69eece8bece67d2fed550/lib/cli\">some lazy things</a> to break up my\ncode into more submodules - at least on the server side. It&#39;s a little thing,\nbut I really like it. I first saw it over in <a href=\"http://viget.com/extend/gulp-browserify-starter-faq\">this Gulp + Browserify starter\nkit</a>.</p>\n<p>Thanks to the <a href=\"https://blog.heroku.com/archives/2014/8/7/heroku-button\">Heroku Button</a>, this thing is cake to get running\nsomewhere <em>out there</em>. Free Heroku is like the Raspberry PI of the cloud. I&#39;m\nstarting to think that anyone who&#39;s into indiewebish self-hosting concepts\nshould really be taking a look at this.</p>\n<p>I&#39;ve also been really into <a href=\"http://gulpjs.com/\">Gulp</a> recently, but so far I don&#39;t need it here.\nI&#39;m gratuitously wasting memory and cycles by processing resources on the fly\nthrough the app server rather than generating as static assets. Maybe I&#39;ll\nchange my mind on that after I&#39;ve tinkered for awhile.</p>\n<p>Anyway, now I guess I should actually start making this thing do stuff.</p>\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "body": "I'm pleased with [this project layout][layout] for a node.js-based web client /\r\nserver app.\r\n\r\n<!--more-->\r\n\r\n```bash\r\n➜  toothub git:(master) ✗ tree\r\n├── Procfile\r\n├── README.md\r\n├── app.json\r\n├── bin\r\n│   └── toothub\r\n├── config.json-dist\r\n├── htdocs\r\n│   ├── css\r\n│   │   └── main.styl\r\n│   └── index.html\r\n├── lib\r\n│   ├── cli\r\n│   │   ├── index.js\r\n│   │   └── server.js\r\n│   ├── client\r\n│   │   └── index.js\r\n│   ├── models\r\n│   │   ├── Item.js\r\n│   │   └── index.js\r\n│   └── server\r\n│       ├── index.js\r\n│       └── static.js\r\n├── package.json\r\n└── test\r\n    └── test-index.js\r\n```\r\n\r\n[Browserify][] lets me share a lot of code between client & server, using the same\r\nconventions.  Though, I have to be careful not to pile too much into the\r\nclient-side JS bundle. It's really easy to inflate that.\r\n\r\n[Browserify]: http://browserify.org/\r\n\r\nThe [require-dir][] module lets me do [some lazy things][lazy] to break up my\r\ncode into more submodules - at least on the server side. It's a little thing,\r\nbut I really like it. I first saw it over in [this Gulp + Browserify starter\r\nkit][starterkit].\r\n\r\n[starterkit]: http://viget.com/extend/gulp-browserify-starter-faq\r\n[require-dir]: https://www.npmjs.org/package/require-dir\r\n[lazy]: https://github.com/lmorchard/feeder2/tree/9d02e216e4d4e47351a69eece8bece67d2fed550/lib/cli\r\n\r\nThanks to the [Heroku Button][], this thing is cake to get running\r\nsomewhere *out there*. Free Heroku is like the Raspberry PI of the cloud. I'm\r\nstarting to think that anyone who's into indiewebish self-hosting concepts\r\nshould really be taking a look at this.\r\n\r\n[Heroku Button]: https://blog.heroku.com/archives/2014/8/7/heroku-button\r\n\r\nI've also been really into [Gulp][] recently, but so far I don't need it here.\r\nI'm gratuitously wasting memory and cycles by processing resources on the fly\r\nthrough the app server rather than generating as static assets. Maybe I'll\r\nchange my mind on that after I've tinkered for awhile.\r\n\r\n[gulp]: http://gulpjs.com/\r\n[layout]: https://github.com/lmorchard/toothub/tree/913c4d326ea5a424087899a103301323d46d8086\r\n\r\nAnyway, now I guess I should actually start making this thing do stuff.\r\n\r\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/10/23/node-project-layout",
    "summary": "<p>I&apos;m pleased with <a href=\"https://github.com/lmorchard/toothub/tree/913c4d326ea5a424087899a103301323d46d8086\">this project layout</a> for a node.js-based web client /\nserver app.</p>\n",
    "prevPostPath": "2014/10/27/thoughts",
    "nextPostPath": "2014/10/23/thoughts"
  },
  {
    "title": "Naming Things: CamelCase vs snake_case",
    "author": "lmorchard",
    "layout": "post",
    "permalink": "/2013/01/23/naming-conventions",
    "dsq_thread_id": [
      1107007531
    ],
    "categories": [
      "Uncategorized"
    ],
    "tags": [
      "CamelCase",
      "dev",
      "javascript",
      "python",
      "snake_case",
      "webdev"
    ],
    "year": "2013",
    "month": "01",
    "day": "23",
    "isDir": false,
    "slug": "naming-conventions",
    "date": "2013-01-23T12:00:00.000Z",
    "postName": "2013-01-23-naming-conventions",
    "html": "<p>I&#8217;ve contributed code to a number of projects, often as a drive-by bug fix in a GitHub pull request. And, usually, I&#8217;ll try to do as the Romans do and follow the local naming and coding conventions. But, sometimes, I&#8217;ll fall back to my personal conventions and get dinged in the code review.</p>\n<!--more-->\n\n<p>For what it&#8217;s worth, those personal conventions look something like this:</p>\n<p><code>variable_names_in_snake_case</code>\n:   Variable, a mutable thing. All lower case, words separated by underscores.</p>\n<p><code>CONSTANTS_IN_ALL_CAPS</code>\n:   Constant, an immutable thing. All upper case, words separated by underscores.</p>\n<p><code>functionAndMethodNames</code>\n:   Functions and methods, immutable and callable things. Mixed camel case, first letter always lower case.</p>\n<p><code>StructAndClassNames</code>\n:   Structs and classes, immutable and instantiatable things. Mixed camel case, first letter always upper case.</p>\n<p>Of course, given the features of any particular language, these rules yield subtleties. For instance, in <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a> a variable can be assigned a callable thing, a declared function can be replaced by assignment, and classes &amp; methods are themselves mainly just suggestions. These conventions are more about my intentions than anything literally baked into syntax.</p>\n<p>I&#8217;ve been using some variant of the above rules for close to 20 years, across probably a dozen languages. On <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a> projects, I end up with <a href=\"http://en.wikipedia.org/wiki/Snake_case\">snake_case</a> in undesirable places. On Python projects, I&#8217;ll use <a href=\"http://en.wikipedia.org/wiki/CamelCase\">CamelCase</a> where it&#8217;s not wanted.</p>\n<p>On the Python side, I know there&#8217;s <a href=\"http://www.python.org/dev/peps/pep-0008/\">PEP 8</a>. That&#8217;s something to point at and claim uniformity, and <a href=\"http://pypi.python.org/pypi/pep8\">it has tooling support</a>. On the <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a> side, I seem to be missing some recent consensus amongst the current wave of browser and nodejs enthusiasts. That, or I&#8217;m just contributing to more projects than my own these days (thanks to GitHub) and only running into this now.</p>\n<p>But, here&#8217;s what always leaves me mildly rankled: Why just one or the other? Why discard the semantic shading available through mixing <a href=\"http://en.wikipedia.org/wiki/Snake_case\">snake_case</a> and <a href=\"http://en.wikipedia.org/wiki/CamelCase\">CamelCase</a>, at least by way of consistent rules? I know there&#8217;s a such thing as syntax highlighting, but combining that with these conventions has often helped me with highlighting is unavailable. <a href=\"http://en.wiktionary.org/wiki/belt_and_suspenders\">Belt and suspenders</a>, and all that.</p>\n<p>Of course, I prefer my rules, because they&#8217;re a deeply ingrained habit. I know this is my peeve. But, what I&#8217;ve never quite been able to get is a satisfying answer as to why one style is preferred to the exclusion of another. Usually I get responses like &#8220;That&#8217;s just the way it&#8217;s done&#8221;, or &#8220;The other way is ugly&#8221;. So, it&#8217;s down to personal whim, project momentum, or <a href=\"http://en.wikipedia.org/wiki/Cargo_cult\">cargo cult</a>.</p>\n<p>I guess it bothers me to see a perfectly good semantic tool thrown out for no good reason as far as I can tell. Feel free to drop me a comment here, if I&#8217;m missing any good reasons. Some additional bits and pieces accumulate below:</p>\n<ul>\n<li><p>Here are some arguments against CamelCase for <a href=\"http://stackoverflow.com/questions/1740116/for-what-reason-do-we-have-the-lower-case-with-underscores-naming-convention/1740152#1740152\">accessibility reasons</a> and for <a href=\"http://stackoverflow.com/questions/1740116/for-what-reason-do-we-have-the-lower-case-with-underscores-naming-convention/1740131#1740131\">non-english speakers</a>.</p>\n</li>\n<li><p><a href=\"http://glyph.twistedmatrix.com/2012/10/a-tired-hobgoblin.html\">The Twisted project uses <em>both</em> CamelCase <em>and</em> snake_case in the same variable names.</a> The bit before the underscore signifies the type of a method, and the bit after is the name &#8211; eg. <code>remote_loginAnonymous</code> or <code>test_addDSAIdentityNoComment</code>.</p>\n</li>\n</ul>\n<p>Anyway, this has been bugging me for long enough that here I am finally blogging about it, so that I have an URL to throw into conversations when it comes up.</p>\n",
    "body": "I&#8217;ve contributed code to a number of projects, often as a drive-by bug fix in a GitHub pull request. And, usually, I&#8217;ll try to do as the Romans do and follow the local naming and coding conventions. But, sometimes, I&#8217;ll fall back to my personal conventions and get dinged in the code review.\r\n\r\n<!--more-->\r\n\r\nFor what it&#8217;s worth, those personal conventions look something like this:\r\n\r\n`variable_names_in_snake_case`\r\n:   Variable, a mutable thing. All lower case, words separated by underscores.\r\n\r\n`CONSTANTS_IN_ALL_CAPS`\r\n:   Constant, an immutable thing. All upper case, words separated by underscores.\r\n\r\n`functionAndMethodNames`\r\n:   Functions and methods, immutable and callable things. Mixed camel case, first letter always lower case.\r\n\r\n`StructAndClassNames`\r\n:   Structs and classes, immutable and instantiatable things. Mixed camel case, first letter always upper case.\r\n\r\nOf course, given the features of any particular language, these rules yield subtleties. For instance, in <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a> a variable can be assigned a callable thing, a declared function can be replaced by assignment, and classes & methods are themselves mainly just suggestions. These conventions are more about my intentions than anything literally baked into syntax.\r\n\r\nI&#8217;ve been using some variant of the above rules for close to 20 years, across probably a dozen languages. On <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a> projects, I end up with [snake_case][1] in undesirable places. On Python projects, I&#8217;ll use [CamelCase][2] where it&#8217;s not wanted.\r\n\r\nOn the Python side, I know there&#8217;s [PEP 8][3]. That&#8217;s something to point at and claim uniformity, and [it has tooling support][4]. On the <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a> side, I seem to be missing some recent consensus amongst the current wave of browser and nodejs enthusiasts. That, or I&#8217;m just contributing to more projects than my own these days (thanks to GitHub) and only running into this now.\r\n\r\nBut, here&#8217;s what always leaves me mildly rankled: Why just one or the other? Why discard the semantic shading available through mixing [snake_case][1] and [CamelCase][2], at least by way of consistent rules? I know there&#8217;s a such thing as syntax highlighting, but combining that with these conventions has often helped me with highlighting is unavailable. [Belt and suspenders][5], and all that.\r\n\r\nOf course, I prefer my rules, because they&#8217;re a deeply ingrained habit. I know this is my peeve. But, what I&#8217;ve never quite been able to get is a satisfying answer as to why one style is preferred to the exclusion of another. Usually I get responses like &#8220;That&#8217;s just the way it&#8217;s done&#8221;, or &#8220;The other way is ugly&#8221;. So, it&#8217;s down to personal whim, project momentum, or [cargo cult][6].\r\n\r\nI guess it bothers me to see a perfectly good semantic tool thrown out for no good reason as far as I can tell. Feel free to drop me a comment here, if I&#8217;m missing any good reasons. Some additional bits and pieces accumulate below:\r\n\r\n*   Here are some arguments against CamelCase for [accessibility reasons][7] and for [non-english speakers][8].\r\n\r\n*   [The Twisted project uses *both* CamelCase *and* snake_case in the same variable names.][9] The bit before the underscore signifies the type of a method, and the bit after is the name &#8211; eg. `remote_loginAnonymous` or `test_addDSAIdentityNoComment`.\r\n\r\nAnyway, this has been bugging me for long enough that here I am finally blogging about it, so that I have an URL to throw into conversations when it comes up.\r\n\r\n [1]: http://en.wikipedia.org/wiki/Snake_case\r\n [2]: http://en.wikipedia.org/wiki/CamelCase\r\n [3]: http://www.python.org/dev/peps/pep-0008/\r\n [4]: http://pypi.python.org/pypi/pep8\r\n [5]: http://en.wiktionary.org/wiki/belt_and_suspenders\r\n [6]: http://en.wikipedia.org/wiki/Cargo_cult\r\n [7]: http://stackoverflow.com/questions/1740116/for-what-reason-do-we-have-the-lower-case-with-underscores-naming-convention/1740152#1740152\r\n [8]: http://stackoverflow.com/questions/1740116/for-what-reason-do-we-have-the-lower-case-with-underscores-naming-convention/1740131#1740131\r\n [9]: http://glyph.twistedmatrix.com/2012/10/a-tired-hobgoblin.html",
    "parentPath": "../blog.lmorchard.com/posts/archives/2013",
    "path": "2013/01/23/naming-conventions",
    "summary": "<p>I&#x2019;ve contributed code to a number of projects, often as a drive-by bug fix in a GitHub pull request. And, usually, I&#x2019;ll try to do as the Romans do and follow the local naming and coding conventions. But, sometimes, I&#x2019;ll fall back to my personal conventions and get dinged in the code review.</p>\n",
    "prevPostPath": "2013/02/10/building-my-couch-computing-station",
    "nextPostPath": "2013/01/21/gaming-from-the-orchard-house-couch"
  },
  {
    "comments_archived": true,
    "date": "2009-07-15T15:26:40.000Z",
    "layout": "post",
    "tags": [
      "webdev",
      "firefox",
      "js",
      "outliners",
      "outlining",
      "javascript",
      "dhtml",
      "eventdelegation",
      "entries",
      "mozilla",
      "draganddrop"
    ],
    "title": "HTML5 drag and drop in Firefox 3.5",
    "wordpress_id": 1793,
    "wordpress_slug": "html5-drag-and-drop",
    "wordpress_url": "http://decafbad.com/blog/?p=1793",
    "year": "2009",
    "month": "07",
    "day": "15",
    "isDir": false,
    "slug": "html5-drag-and-drop",
    "postName": "2009-07-15-html5-drag-and-drop",
    "html": "<p><i>\nOh hey, look! It's another blog post—and this one\n<a href=\"http://hacks.mozilla.org/2009/07/html5-drag-and-drop/\">is cross-posted on hacks.mozilla.com</a>.\nI won't say this is the start of a renewed blogging habit, but let's see what happens.\n</i></p>\n\n<style type=\"text/css\">\ndl { margin-left: 2em; }\ndd { margin-left: 2em; margin-bottom: 0.25em; }\n</style>\n<div id=\"introduction\">\n    <p>\n        Drag and drop is one of the most fundamental interactions\n        afforded by graphical user interfaces.  In one gesture, it\n        allows users to pair the selection of an object with the\n        execution of an action, often including a second object in the\n        operation.  It's a simple yet powerful UI concept used to\n        support copying, list reordering, deletion (ala the Trash / Recycle Bin),\n        and even the creation of link relationships.\n    </p><p>\n        Since it's so fundamental, offering drag and drop in web\n        applications has been a no-brainer ever since browsers first\n        offered mouse events in DHTML.  But, although\n        <code>mousedown</code>, <code>mousemove</code>, and\n        <code>mouseup</code> made it possible, the implementation has been\n        limited to the bounds of the browser window.  Additionally,\n        since these events refer only to the object being dragged,\n        there's a challenge to find the subject of the drop when\n        the interaction is completed.\n    </p><p>\n\n<pre><code>    Of course, that doesn&#39;t prevent most modern JavaScript\n    frameworks from abstracting away most of the problems and\n    throwing in some flourishes while they&#39;re at it.  But, wouldn&#39;t\n    it be nice if browsers offered first-class support for drag and\n    drop, and maybe even extended it beyond the window sandbox?\n&lt;/p&gt;&lt;p&gt;\n    As it turns out, this very wish is answered by the HTML 5 specification \n    &lt;a target=&quot;_new&quot; href=&quot;http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#dnd&quot;&gt;section on new drag-and-drop events&lt;/a&gt;, and \n    &lt;a target=&quot;_new&quot; href=&quot;https://developer.mozilla.org/En/DragDrop/Drag_and_Drop&quot;&gt;Firefox 3.5 includes an implementation&lt;/a&gt; of those events.\n&lt;/p&gt;&lt;p&gt;\n    If you want to jump straight to the code, I&#39;ve put together \n    &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html&quot;&gt;some simple demos&lt;/a&gt; \n    of the new events.  \n&lt;/p&gt;&lt;p&gt;\n\n    I&#39;ve even scratched an itch of my own and\n    built &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/outline.html&quot;&gt;the beginnings of an outline editor&lt;/a&gt;,\n    where every draggable element is also a drop target—of which\n    there could be dozens to hundreds in a complex document, something\n    that gave me some minor hair-tearing moments in the past\n    while trying to make do with plain old mouse events.\n&lt;/p&gt;&lt;p&gt;\n    And, all the above can be downloaded or cloned from \n    &lt;a href=&quot;http://github.com/lmorchard/fx35-drag-and-drop&quot;&gt;a GitHub repository&lt;/a&gt;\n    I&#39;ve created especially for this article—which continues after the jump.\n&lt;/p&gt;</code></pre>\n</div>\n\n<!--more-->\n\n<div id=\"events\">\n\n<pre><code>&lt;h2&gt;The New Drag and Drop Events&lt;/h2&gt;\n&lt;p&gt;\n    So, with no further ado, here are the new drag and drop events,\n    in roughly the order you might expect to see them fired:\n&lt;/p&gt;\n&lt;dl&gt;\n    &lt;dt&gt;&lt;code&gt;dragstart&lt;/code&gt;&lt;/dt&gt;\n    &lt;dd&gt;\n        A drag has been initiated, with the dragged element as the\n        event target.\n    &lt;/dd&gt;\n\n    &lt;dt&gt;&lt;code&gt;drag&lt;/code&gt;&lt;/dt&gt;\n    &lt;dd&gt;\n        The mouse has moved, with the dragged element as the event target.\n    &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;dragenter&lt;/code&gt;&lt;/dt&gt;\n    &lt;dd&gt;\n        The dragged element has been moved into a drop listener,\n        with the drop listener element as the event target.\n    &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;dragover&lt;/code&gt;&lt;/dt&gt;\n\n    &lt;dd&gt;\n        The dragged element has been moved over a drop listener,\n        with the drop listener element as the event target.  Since\n        the default behavior is to cancel drops, returning\n        &lt;code&gt;false&lt;/code&gt; or calling &lt;code&gt;preventDefault()&lt;/code&gt; in\n        the event handler indicates that a drop is allowed here.\n    &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;dragleave&lt;/code&gt;&lt;/dt&gt;\n    &lt;dd&gt;\n        The dragged element has been moved out of a drop listener,\n        with the drop listener element as the event target.\n    &lt;/dd&gt;\n\n    &lt;dt&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/dt&gt;\n    &lt;dd&gt;\n        The dragged element has been successfully dropped on a drop\n        listener, with the drop listener element as the event\n        target.\n    &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;dragend&lt;/code&gt;&lt;/dt&gt;\n    &lt;dd&gt;\n        A drag has been ended, successfully or not, with the\n        dragged element as the event target.\n    &lt;/dd&gt;\n&lt;/dl&gt;\n\n&lt;p&gt;\n    Like the mouse events of yore, listeners can be attached to\n    elements using &lt;code&gt;addEventListener()&lt;/code&gt; \n    directly or by way of your favorite JS library.  \n&lt;/p&gt;&lt;p&gt;\n    Consider the following example using jQuery, \n    &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html#newschool&quot;&gt;also available as a live demo&lt;/a&gt;:\n&lt;/p&gt;\n&lt;pre lang=&quot;javascript&quot; line=&quot;1&quot;&gt;</code></pre>\n<div id=\"newschool\">\n    <div class=\"dragme\">Drag me!</div>\n    <div class=\"drophere\">Drop here!</div>\n</div>\n\n<script type=\"text/javascript\">\n    $(document).ready(function() {\n        $('#newschool .dragme')\n            .attr('draggable', 'true')\n            .bind('dragstart', function(ev) {\n                var dt = ev.originalEvent.dataTransfer;\n                dt.setData(\"Text\", \"Dropped in zone!\");\n                return true;\n            })\n            .bind('dragend', function(ev) {\n                return false;\n            });\n        $('#newschool .drophere')\n            .bind('dragenter', function(ev) {\n                $(ev.target).addClass('dragover');\n                return false;\n            })\n            .bind('dragleave', function(ev) {\n                $(ev.target).removeClass('dragover');\n                return false;\n            })\n            .bind('dragover', function(ev) {\n                return false;\n            })\n            .bind('drop', function(ev) {\n                var dt = ev.originalEvent.dataTransfer;\n                alert(dt.getData('Text'));\n                return false;\n            });\n    });\n</script>\n<pre><code>&lt;/pre&gt;\n&lt;p&gt;\n    Thanks to the new events and jQuery, this example is both short\n    and simple—but it packs in a lot of functionality, as the rest\n    of this article will explain.  \n&lt;/p&gt;&lt;p&gt;\n    Before moving on, there are at least three things about the above\n    code that are worth mentioning:\n&lt;/p&gt;\n&lt;ul&gt;\n    &lt;li&gt;\n\n        &lt;p&gt;\n            Drop targets are enabled by virtue of having\n            listeners for drop events.  But, \n            &lt;a target=&quot;_new&quot; href=&quot;http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#drag-and-drop-processing-model&quot;&gt;per the HTML 5 spec&lt;/a&gt;,\n            draggable elements need an\n            attribute of &lt;code&gt;draggable=&quot;true&quot;&lt;/code&gt;, set either in\n            markup or in JavaScript.  \n        &lt;/p&gt;\n        &lt;p&gt;\n            Thus, &lt;code&gt;$(&#39;#newschool&amp;nbsp;.dragme&#39;).attr(&#39;draggable&#39;, &#39;true&#39;)&lt;/code&gt;.\n        &lt;/p&gt;\n\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;p&gt;\n            The original DOM event (as opposed to jQuery&#39;s event\n            wrapper) offers a property called &lt;code&gt;dataTransfer&lt;/code&gt;.\n            Beyond just manipulating elements, the new drag and drop\n            events accomodate the transmission of user-definable data\n            during the course of the interaction.  \n        &lt;/p&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;p&gt;\n\n            Since these are first-class events, you can apply \n            &lt;a target=&quot;_new&quot; href=&quot;http://icant.co.uk/sandbox/eventdelegation/&quot;&gt;the technique of Event Delegation&lt;/a&gt;.\n        &lt;/p&gt;&lt;p&gt;\n            What&#39;s that?  Well, imagine you have a list of 1000\n            list items—as part of a deeply-nested outline document,\n            for instance.  Rather than needing to attach listeners\n            or otherwise fiddle with all 1000 items, simply attach\n            a listener to the parent node (eg. the\n            &lt;code&gt;&lt;ul&gt;&lt;/code&gt; element) and all events from\n            the children will propagate up to the single parent listener.\n            As a bonus, all new child elements added after page\n            load will enjoy the same benefits.\n        &lt;/p&gt;&lt;p&gt;\n            &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html#delegated&quot;&gt;Check out this demo&lt;/a&gt;, \n            and \n            &lt;a target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/js/drag-delegated.js&quot;&gt;the associated JS code&lt;/a&gt; \n            to see more about these events and Event Delegation.\n        &lt;/p&gt;\n\n    &lt;/li&gt;\n&lt;/ul&gt;</code></pre>\n</div>\n\n<div id=\"datatransfer\">\n    <h2>Using dataTransfer</h2>\n    <p>\n        As mentioned in the last section, the new drag and drop events\n        let you send data along with a dragged element.  But, it's even\n        better than that:  Your drop targets can receive data\n        transferred by content objects dragged into the window from \n        other browser windows, and even <i>other applications</i>.\n    </p><p>\n\n<pre><code>    Since the example is a bit longer,  \n    &lt;a target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html#data_transfer&quot;&gt;check out the live demo&lt;/a&gt;\n    and \n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/js/drag-datatransfer.js&quot;&gt;associated code&lt;/a&gt;\n    to get an idea of what&#39;s possible with &lt;code&gt;dataTransfer&lt;/code&gt;.\n&lt;/p&gt;&lt;p&gt;\n    In a nutshell, the stars of this show are the\n    &lt;code&gt;setData()&lt;/code&gt; and &lt;code&gt;getData()&lt;/code&gt; methods of\n    the &lt;code&gt;dataTransfer&lt;/code&gt; property exposed by the Event object.\n&lt;/p&gt;\n\n&lt;p&gt;\n    The &lt;code&gt;setData()&lt;/code&gt; method is typically called in the \n    &lt;code&gt;dragstart&lt;/code&gt; listener, loading &lt;code&gt;dataTransfer&lt;/code&gt;\n    up with one or more strings of content with associated\n    &lt;a href=&quot;https://developer.mozilla.org/En/DragDrop/Recommended_Drag_Types#link&quot;&gt;recommended content types&lt;/a&gt;.\n&lt;/p&gt;\n\n&lt;p&gt;\n    For illustration, here&#39;s a quick snippet from the example code:\n&lt;/p&gt;\n&lt;pre lang=&quot;javascript&quot; line=&quot;1&quot;&gt;</code></pre>\n<p>var dt = ev.originalEvent.dataTransfer;<br>dt.setData(&#39;text/plain&#39;, $(&#39;#logo&#39;).parent().text());\ndt.setData(&#39;text/html&#39;, $(&#39;#logo&#39;).parent().html());\ndt.setData(&#39;text/uri-list&#39;, $(&#39;#logo&#39;)[0].src);\n    </pre>\n    </p><p>\n        On the other end, <code>getData()</code> allows you to query\n        for content by type (eg. <code>text/html</code> followed by\n        <code>text/plain</code>).  This, in turn, allows you to decide\n        on acceptable content types at the time of the\n        <code>drop</code> event or even during <code>dragover</code></p>\n<pre><code>    to offer feedback for unacceptable types during the drag.\n&lt;/p&gt;&lt;p&gt;\n    Here&#39;s another example from the receiving end of the example code:\n&lt;/p&gt;\n&lt;pre lang=&quot;javascript&quot; line=&quot;1&quot;&gt;</code></pre>\n<p>var dt = ev.originalEvent.dataTransfer;<br>$(&#39;.content_url .content&#39;).text(dt.getData(&#39;text/uri-list&#39;));\n$(&#39;.content_text .content&#39;).text(dt.getData(&#39;text/plain&#39;));\n$(&#39;.content_html .content&#39;).html(dt.getData(&#39;text/html&#39;));\n    </pre>\n    <p>\n        Where <code>dataTransfer</code> really shines, though, is that\n        it allows your drop targets to receive content from \n        sources outside your defined draggable elements and even from\n        outside the browser altogether.  Firefox accepts such drags, \n        and attempts to populate <code>dataTransfer</code> with\n        appropriate content types extracted from the external object.\n    </p><p></p>\n<pre><code>    Thus, you could select some text in a word processor window and\n    drop it into one of your elements, and at least expect to find\n    it available as &lt;code&gt;text/plain&lt;/code&gt; content.  \n&lt;/p&gt;&lt;p&gt;\n    You can also select content in \n    another browser window, and expect to see &lt;code&gt;text/html&lt;/code&gt;\n    appear in your events.  Check out the \n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/outline.html&quot;&gt;outline editing demo&lt;/a&gt;\n    and see what happens when you try dragging various elements \n    (eg. images, tables, and lists) and highlighted content from\n    other windows onto the items there.\n&lt;/p&gt;</code></pre>\n</div>\n\n<div id=\"dragfeedback\">\n    <h2>Using Drag Feedback Images</h2>\n    <p>\n       An important aspect of the drag and drop interaction is a\n       representation of the thing being dragged.  By default in\n       Firefox, this is a \"ghost\" image of the dragged element itself.  But,\n       the <code>dataTransfer</code> property of the original Event\n       object exposes the method <code>setDragImage()</code> for use\n       in customizing this representation.\n    </p><p>\n\n<pre><code>    There&#39;s\n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html#feedback_image&quot;&gt;a live demo&lt;/a&gt; of this feature, as well as\n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/js/drag-feedback-images.js&quot;&gt;associated JS code&lt;/a&gt; \n    available.  The gist, however, is sketched out in these code snippets:\n&lt;/p&gt;\n&lt;pre lang=&quot;javascript&quot; line=&quot;1&quot;&gt;</code></pre>\n<p>var dt = ev.originalEvent.dataTransfer;    </p>\n<p>dt.setDragImage( $(&#39;#feedback_image h2&#39;)[0], 0, 0);</p>\n<p>dt.setDragImage( $(&#39;#logo&#39;)[0], 32, 32); </p>\n<p>var canvas = document.createElement(&quot;canvas&quot;);\ncanvas.width = canvas.height = 50;</p>\n<p>var ctx = canvas.getContext(&quot;2d&quot;);\nctx.lineWidth = 8;\nctx.moveTo(25,0);\nctx.lineTo(50, 50);\nctx.lineTo(0, 50);\nctx.lineTo(25, 0);\nctx.stroke();</p>\n<p>dt.setDragImage(canvas, 25, 25);\n    </pre>\n    <p>\n        You can supply a DOM node as the first parameter to \n        <code>setDragImage()</code>, which includes everything from\n        text to images to <code>canvas</code> elements.  The\n        second two parameters indicate at what left and top offset\n        the mouse should appear in the image while dragging.\n    </p><p></p>\n<pre><code>    For example, since the &lt;code&gt;#logo&lt;/code&gt; image is 64x64,\n    the parameters in the second &lt;code&gt;setDragImage()&lt;/code&gt;\n    method places the mouse right in the center of the image.\n    On the other hand, the first call positions the feedback\n    image such that the mouse rests in the upper left corner.\n&lt;/p&gt;&lt;p&gt;\n&lt;/p&gt;</code></pre>\n</div>\n\n<div id=\"dragfeedback\">\n\n<pre><code>&lt;h2&gt;Using Drop Effects&lt;/h2&gt;\n&lt;p&gt;\n    As mentioned at the start of this article, the drag and drop\n    interaction has been used to support actions such as copying,\n    moving, and linking.  Accordingly, the HTML 5 specification \n    accomodates these operations in the form of the \n    &lt;code&gt;effectAllowed&lt;/code&gt; and &lt;code&gt;dropEffect&lt;/code&gt;\n    properties exposed by the Event object.\n&lt;/p&gt;\n&lt;p&gt;\n\n    For a quick fix, check out the\n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html#drag_effects&quot;&gt;a live demo&lt;/a&gt; \n    of this feature, as well as the\n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/js/drag-effects.js&quot;&gt;associated JS code&lt;/a&gt;.\n&lt;/p&gt;&lt;p&gt;\n    The basic idea is that the &lt;code&gt;dragstart&lt;/code&gt; event\n    listener can set a value for &lt;code&gt;effectAllowed&lt;/code&gt; like so:\n&lt;/p&gt;\n\n&lt;pre lang=&quot;javascript&quot; line=&quot;1&quot;&gt;</code></pre>\n<p>var dt = ev.originalEvent.dataTransfer;\nswitch (ev.target.id) {\n    case &#39;effectdrag0&#39;: dt.effectAllowed = &#39;copy&#39;; break;\n    case &#39;effectdrag1&#39;: dt.effectAllowed = &#39;move&#39;; break;\n    case &#39;effectdrag2&#39;: dt.effectAllowed = &#39;link&#39;; break;\n    case &#39;effectdrag3&#39;: dt.effectAllowed = &#39;all&#39;; break;\n    case &#39;effectdrag4&#39;: dt.effectAllowed = &#39;none&#39;; break;\n}\n    </pre>\n    <p>The choices available for this property include the following:</p>\n    <dl> \n        <dt><code>none</code></dt><dd>no operation is permitted </dd>\n        <dt><code>copy</code></dt><dd>copy only </dd></p>\n<pre><code>    &lt;dt&gt;&lt;code&gt;move&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;move only &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;link&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;link only &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;copyMove&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;copy or move only &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;copyLink&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;copy or link only &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;linkMove&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;link or move only &lt;/dd&gt;\n\n    &lt;dt&gt;&lt;code&gt;all&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;copy, move, or link &lt;/dd&gt;\n&lt;/dl&gt;\n&lt;p&gt;\n    On the other end, the &lt;code&gt;dragover&lt;/code&gt; event listener \n    can set the value of the\n    &lt;code&gt;dropEffect&lt;/code&gt; property to indicate the expected effect\n    invoked on a successful drop.  If the value does\n    not match up with &lt;code&gt;effectAllowed&lt;/code&gt;, the drop will\n    be considered cancelled on completion.\n&lt;/p&gt;&lt;p&gt;\n\n    In the \n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html#drag_effects&quot;&gt;a live demo&lt;/a&gt;,\n    you should be able to see that only elements with matching\n    effects can be dropped into the appropriate drop zones.  This\n    is accomplished with code like the following:\n&lt;/p&gt;\n&lt;pre lang=&quot;javascript&quot; line=&quot;1&quot;&gt;</code></pre>\n<p>var dt = ev.originalEvent.dataTransfer;\nswitch (ev.target.id) {\n    case &#39;effectdrop0&#39;: dt.dropEffect = &#39;copy&#39;; break;\n    case &#39;effectdrop1&#39;: dt.dropEffect = &#39;move&#39;; break;\n    case &#39;effectdrop2&#39;: dt.dropEffect = &#39;link&#39;; break;\n    case &#39;effectdrop3&#39;: dt.dropEffect = &#39;all&#39;; break;\n    case &#39;effectdrop4&#39;: dt.dropEffect = &#39;none&#39;; break;\n}\n    </pre>\n    <p>\n        Although the OS itself can provide some feedback, you \n        can also use these properties to update your own visible \n        feedback, both on the dragged element and on the drop zone\n        itself.\n    </p></p>\n</div>\n\n<div id=\"conclusion\">\n    <h2>Conclusion</h2>\n    <p>\n        The new first-class drag and drop events in HTML5 and Firefox\n        make supporting this form of UI interaction simple, concise,\n        and powerful in the browser.  But beyond the new simplicity of\n        these events, the ability to transfer content between\n        applications opens brand new avenues for web-based applications\n        and collaboration with desktop software in general.\n    </p><p>\n    </p><p>\n    </p>\n</div>\n\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221090962\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://lmframework.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=03dc722b1852367f02b0b21f02b10675&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://lmframework.com\">David Semeria</a>\n</div>\n<a href=\"#comment-221090962\" class=\"permalink\"><time datetime=\"2009-07-16T17:56:52\">2009-07-16T17:56:52</time></a>\n</div>\n<div class=\"content\"><p>Wow - thanks for a great introduction to D+D in HTML 5, I'm really looking forward to giving it a thorough road test. </p>\n<p>The key part of the implementation are the target listeners, because, as I'm sure you're aware, onmouseover would historically never fire over the target element because the dragged item would always 'cover it up'. BTW, my proposed solution was to add an 'event transparency' property, which would have made the dragged item invisible from the point of view of selected events, eg onmouseover.</p>\n<p>This implementation is going to take a lot of pain away. You have no idea how many hoops I had to jump through to get a fully generic D+D implementation working without these new calls.</p>\n<p>If you're interested, you can see it working here: http://lmframework.com/page.php?id=vd_twig_short_2</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090964\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=cee7ac3f63d7e8c1367e170bec302c14&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Alex</a>\n</div>\n<a href=\"#comment-221090964\" class=\"permalink\"><time datetime=\"2009-07-17T00:13:23\">2009-07-17T00:13:23</time></a>\n</div>\n<div class=\"content\"><p>Hey,</p>\n<p>Looks great and useful article.  For dragging from external applications (such as the Desktop) is a normal webpage able to get the data from the drop?  I was just playing with it and seem to always get what seems to be a security error with getData or mozGetDataAt.  However, the documentation seems to state that on drop that data should be made available to the page.  Likewise, in the same way an image can be dragged off the page onto the desktop, can an arbitrary element be dragged onto the desktop with whatever file content to be saved?  Thanks for the help.</p>\n<p>Alex</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090966\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://paulisageek.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b3bb70a4bace7f9bd49f48b149ab95f9&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://paulisageek.com/\">Paul Tarjan</a>\n</div>\n<a href=\"#comment-221090966\" class=\"permalink\"><time datetime=\"2009-07-17T04:52:54\">2009-07-17T04:52:54</time></a>\n</div>\n<div class=\"content\"><p>Very nice, I didn't know that FF 3.5 actually had this implemented. Time to start playing :)</p>\n<p>Also, how did you do your code posts? Was it just pasting in HTML or do you have a better setup?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090967\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=066d1e75c9b938053ee6b3d48b1c0f6a&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Animal</a>\n</div>\n<a href=\"#comment-221090967\" class=\"permalink\"><time datetime=\"2009-07-17T14:35:21\">2009-07-17T14:35:21</time></a>\n</div>\n<div class=\"content\"><p>Seems pretty pointless pressing ahead with this when you just can't write a web app to use it. There's no support. All a bunch of whizzy fun I'm sure, but sod-all use.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090969\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221090969\" class=\"permalink\"><time datetime=\"2009-07-17T16:23:10\">2009-07-17T16:23:10</time></a>\n</div>\n<div class=\"content\"><p>@Animal: Why can't you write a web app to use it?  It's in the HTML5 spec, works in Fx3.5 and Safari 4 / WebKit.  It doesn't have universal support yet, or course, but new standards never do.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090970\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.crearedesign.co.uk\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=87bf21798e390d9043dda7240c1b60f7&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.crearedesign.co.uk\">paul</a>\n</div>\n<a href=\"#comment-221090970\" class=\"permalink\"><time datetime=\"2009-07-21T08:08:26\">2009-07-21T08:08:26</time></a>\n</div>\n<div class=\"content\"><p>very nice indeed! i like this, it has definitely opened up new avenues for interaction without using flash. but it will take time before people upgrade to the new browser. a lot of people who browse the web wont realise what the technology will bring and will use their current browser because it does the job!</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090971\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=04de859cfd6ef0b75e4ea3cbea143190&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Joel</a>\n</div>\n<a href=\"#comment-221090971\" class=\"permalink\"><time datetime=\"2009-07-21T14:36:04\">2009-07-21T14:36:04</time></a>\n</div>\n<div class=\"content\"><p>Excellent demos of the new features.</p>\n<p>When using a feedback image on a zoomed in page, should the image not also be scaled up automatically?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090973\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"https://bugzilla.mozilla.org/show_bug.cgi?id=41708\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=6d3bf986abdbb431991c3b02eb6e2335&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"https://bugzilla.mozilla.org/show_bug.cgi?id=41708\">RenegadeX</a>\n</div>\n<a href=\"#comment-221090973\" class=\"permalink\"><time datetime=\"2009-07-22T04:13:46\">2009-07-22T04:13:46</time></a>\n</div>\n<div class=\"content\"><p>Dragging &amp; dropping <em>is</em> as you say, a \"one of the most fundamental interations\" that users of computer graphical interfaces have come to know, and expect.</p>\n<p>It therefore completes dumbfounds me how it is that we <em>still</em> can not natively drag &amp; scroll (&amp; then drop) in Firefox. We can only drag &amp; drop an item within the currently visible portion of a Firefox webpage or tab, no further up, no further down.</p>\n<p>That is should be limited makes absolutely no sense. Microsoft built the function into their Windows 3.x (file) Explorer, and then when visual browsers came along, naturally carried it through into Internet Explorer. </p>\n<p>Firefox Bug 41708, \"Should be able to scroll in the viewport while dragging\" was opened in June, 2000 (yes, 9 years ago!) and remains open, and is disregarded by Firefox developers as little more than a trivial little annoyance, and therefore is and should be treated as a low-importance 'enhancement' rather than as the 'standard feature' it should really be.</p>\n<p>If it weren't for the extension 'DragToScroll', which has been around for 3-1/2 years now (not updated in a long time but still works if you override version compatibility), I would have dumped Firefox and switched to a different browser (Maxthon 3, most likely).</p>\n<p>So, I'm wondering (and hoping) -- does the new HTML5 drag and drop specification include anything that if implemented properly would make it possible to scroll &amp; drag?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090974\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221090974\" class=\"permalink\"><time datetime=\"2009-07-22T13:57:42\">2009-07-22T13:57:42</time></a>\n</div>\n<div class=\"content\"><p>@RenegadeX: Ugh.  I don't work on the browser itself, but I noticed that unexpected behavior on drag &amp; drop.  The window really should scroll when you get toward the top or bottom while dragging - and, in fact, most pre-HTML5 JS frameworks do that in their own drag &amp; drop abstractions.  </p>\n<p>Until / unless Firefox gets this fixed, the same sort of auto-scrolling could be hacked in to HTML5 drag and drop.  Not perfect, but it's doable.  That is, in the drag event, you can check if the mouse is near the upper or lower edge of the viewport - and if so, start scrolling appropriately. That's pretty much how the JS frameworks do it with old-school D&D</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090975\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.copperbot.net\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=df48b2c2a3a2be51b1e15f10c5fb05da&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.copperbot.net\">CopperBot</a>\n</div>\n<a href=\"#comment-221090975\" class=\"permalink\"><time datetime=\"2009-07-23T21:41:07\">2009-07-23T21:41:07</time></a>\n</div>\n<div class=\"content\"><p>Very cool article! Thanks for sharing. HTML5 really is going to change everything about how we use and develop for the web. Pretty awesome!</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090976\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.AmnesiaGames.cl\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=14ad888c23e28c85c222a73b6c633570&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.AmnesiaGames.cl\">Alexos</a>\n</div>\n<a href=\"#comment-221090976\" class=\"permalink\"><time datetime=\"2009-07-26T05:05:44\">2009-07-26T05:05:44</time></a>\n</div>\n<div class=\"content\"><p>Hi, would DD work for uploading files? How can I display a progress bar?\nThanks! \nI've been looking for that several days, and found only applets which I can't use in my proyect :-)</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090977\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.sjlwebdesign.co.uk\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=185cd965e0e8ccd15df2f90977cbeaf3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.sjlwebdesign.co.uk\">Sam</a>\n</div>\n<a href=\"#comment-221090977\" class=\"permalink\"><time datetime=\"2009-07-28T13:54:26\">2009-07-28T13:54:26</time></a>\n</div>\n<div class=\"content\"><p>Looks fantastic, going to try it out now (once I have upgraded my FF)</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090978\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.dankantor.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=60fc8331f617fc905fd682bc4f41ce8d&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.dankantor.com\">Dan Kantor</a>\n</div>\n<a href=\"#comment-221090978\" class=\"permalink\"><time datetime=\"2009-07-30T03:10:25\">2009-07-30T03:10:25</time></a>\n</div>\n<div class=\"content\"><p>Looks like effectAllowed and dropEffect are not working for FF 3.5 on the Mac. I see effects on Windows and Safari 4 on Mac. I've been playing around with adding borders to the drop target, but the + icon for copy really helps a lot. Hopefully Mozilla will fix this next update.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090979\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.thecssninja.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8677c9f7c0f6d947bf318c1430d00bfd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.thecssninja.com/\">Ryan</a>\n</div>\n<a href=\"#comment-221090979\" class=\"permalink\"><time datetime=\"2009-09-01T02:33:06\">2009-09-01T02:33:06</time></a>\n</div>\n<div class=\"content\"><p>Great article it's good to see developments in this area. I wrote an article on the further extensions Firefox 3.6 has done with the dataTransfer method by adding the file attribute so you can access local files and upload them without the need for file inputs. http://www.thecssninja.com/javascript/drag-and-drop-upload</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090982\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=1ed4bbef573bfc014d32356d53103ca2&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">phil swenson</a>\n</div>\n<a href=\"#comment-221090982\" class=\"permalink\"><time datetime=\"2009-09-03T22:58:36\">2009-09-03T22:58:36</time></a>\n</div>\n<div class=\"content\"><p>Why not a first class WYSIWYG rich text editor with copy from clipboard image support?  </p>\n<p><em>NO ONE</em> has built a decent text editor in JavaScript - At least not that I've seen.  And browsers don't allow image paste for reasons I don't understand.  </p>\n<p>And by decent I mean just like you'd get in textmate or another editor.  Have the standard text editor features everyone expects:  tab, select indent/select unindent, resize image, home, end, duplicate line, delete line, styling, etc.</p>\n<p>would push the browser to the next level in killing the desktop.  non-techies hate wikis.  They want a real editor.  I do too actually.... would be great for forums, bug tracking system (imagine pasting screen shots in line with your bug desc), email, etc.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090983\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=deed51cddc830e162557b8f01383a057&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Jean-Denis</a>\n</div>\n<a href=\"#comment-221090983\" class=\"permalink\"><time datetime=\"2009-09-04T00:23:39\">2009-09-04T00:23:39</time></a>\n</div>\n<div class=\"content\"><p>Francisco Tomalski wrote up a nice piece on HTML 5 drag'n drop at http://www.alertdebugging.com/2009/08/16/on-html-5-drag-and-drop/</p>\n<p>where he uncovers that the proposed standard is partially broken. Any comment on his piece?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090984\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://html5tutorial.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=3876e030a3fc69a8b59a8c55829fb510&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://html5tutorial.net/\">Lisa</a>\n</div>\n<a href=\"#comment-221090984\" class=\"permalink\"><time datetime=\"2009-09-09T07:33:08\">2009-09-09T07:33:08</time></a>\n</div>\n<div class=\"content\"><p>This is a great move forward no more relying on 3rd party apps and extensions to play video or audio, i have been reading up on HTML 5 at the <a href=\"http://html5tutorial.net/\" title=\"HTML tutorials\" rel=\"nofollow\">HTML 5 Tutorials</a> website, i am now playing around with one of the free templates and was wondering how to embed audio, so thanks a lot, great information, lets hope more people lean towards HTML 5 and SOON!!!</p>\n<p>The drag and drop feature i did not notice was already working in FF 3.5, i was told to get Safari to see HTML 5 in action. Thanks for a great post</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090985\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.useragentman.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=9a579fa051b35266678735c8a3751771&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.useragentman.com\">Zoltan Hawryluk</a>\n</div>\n<a href=\"#comment-221090985\" class=\"permalink\"><time datetime=\"2010-01-11T15:14:48\">2010-01-11T15:14:48</time></a>\n</div>\n<div class=\"content\"><p>A million thank yous!  This article was great introduction to HTML5 D+D.  With it, I was able to extend it to other browsers.  It was a little painful at first because the browser implementations diverge in significant, but manageable ways.</p>\n<p>If you are interested, check out my article at http://www.useragentman.com/blog/2010/01/10/cross-browser-html5-drag-and-drop/ if you are interested in my results.</p>\n<p>I noticed you haven't blogged in a while - I hope you haven't stopped totally and continue to share with the webdev community.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090986\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.lingua-franka.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e65f416e42c12571ba1c86ae2dadd99f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.lingua-franka.com\">Raul</a>\n</div>\n<a href=\"#comment-221090986\" class=\"permalink\"><time datetime=\"2011-04-26T23:56:02\">2011-04-26T23:56:02</time></a>\n</div>\n<div class=\"content\"><p>Hi, Leslie. I've just come across a problem that's driving me nuts. I'm not fully comfortable with D&amp;D, but managed to move a crosshairs image over a map to very precisely controlled positions. It worked great on FF 3.6 and FF 4. After a couple of days of successful testing, the image suddenly refused to de dropped after being dragged (it rather flew back to its previous position). Do you know if there is a bug in FF that might cause this? </p>\n<p>BTW, during the programming process I updated Firebug, which also is getting a little cranky.</p>\n<p>Thanks for your prompt answer, Raul</p></div>\n</li>\n<li class=\"comment\" id=\"comment-324410737\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://disqus.com/api/users/avatars/google-4014af7ac4ea5d00df95bef4503b78dd.jpg\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Alexander Plutov</a>\n</div>\n<a href=\"#comment-324410737\" class=\"permalink\"><time datetime=\"2011-10-01T11:51:12\">2011-10-01T11:51:12</time></a>\n</div>\n<div class=\"content\">Good post about Drag & Drop http://plutov.by/post/html5_drag_and_drop</div>\n</li>\n</ul>\n</div>\n",
    "body": "<p><i>\r\nOh hey, look! It's another blog post—and this one\r\n<a href=\"http://hacks.mozilla.org/2009/07/html5-drag-and-drop/\">is cross-posted on hacks.mozilla.com</a>.\r\nI won't say this is the start of a renewed blogging habit, but let's see what happens.\r\n</i></p>\r\n\r\n<style type=\"text/css\">\r\ndl { margin-left: 2em; }\r\ndd { margin-left: 2em; margin-bottom: 0.25em; }\r\n</style>\r\n<div id=\"introduction\">\r\n    <p>\r\n        Drag and drop is one of the most fundamental interactions\r\n        afforded by graphical user interfaces.  In one gesture, it\r\n        allows users to pair the selection of an object with the\r\n        execution of an action, often including a second object in the\r\n        operation.  It's a simple yet powerful UI concept used to\r\n        support copying, list reordering, deletion (ala the Trash / Recycle Bin),\r\n        and even the creation of link relationships.\r\n    </p><p>\r\n        Since it's so fundamental, offering drag and drop in web\r\n        applications has been a no-brainer ever since browsers first\r\n        offered mouse events in DHTML.  But, although\r\n        <code>mousedown</code>, <code>mousemove</code>, and\r\n        <code>mouseup</code> made it possible, the implementation has been\r\n        limited to the bounds of the browser window.  Additionally,\r\n        since these events refer only to the object being dragged,\r\n        there's a challenge to find the subject of the drop when\r\n        the interaction is completed.\r\n    </p><p>\r\n\r\n        Of course, that doesn't prevent most modern JavaScript\r\n        frameworks from abstracting away most of the problems and\r\n        throwing in some flourishes while they're at it.  But, wouldn't\r\n        it be nice if browsers offered first-class support for drag and\r\n        drop, and maybe even extended it beyond the window sandbox?\r\n    </p><p>\r\n        As it turns out, this very wish is answered by the HTML 5 specification \r\n        <a target=\"_new\" href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#dnd\">section on new drag-and-drop events</a>, and \r\n        <a target=\"_new\" href=\"https://developer.mozilla.org/En/DragDrop/Drag_and_Drop\">Firefox 3.5 includes an implementation</a> of those events.\r\n    </p><p>\r\n        If you want to jump straight to the code, I've put together \r\n        <a target=\"_new\" target=\"_new\" target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html\">some simple demos</a> \r\n        of the new events.  \r\n    </p><p>\r\n\r\n        I've even scratched an itch of my own and\r\n        built <a target=\"_new\" target=\"_new\" target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/outline.html\">the beginnings of an outline editor</a>,\r\n        where every draggable element is also a drop target—of which\r\n        there could be dozens to hundreds in a complex document, something\r\n        that gave me some minor hair-tearing moments in the past\r\n        while trying to make do with plain old mouse events.\r\n    </p><p>\r\n        And, all the above can be downloaded or cloned from \r\n        <a href=\"http://github.com/lmorchard/fx35-drag-and-drop\">a GitHub repository</a>\r\n        I've created especially for this article—which continues after the jump.\r\n    </p>\r\n</div>\r\n\r\n<!--more-->\r\n\r\n<div id=\"events\">\r\n\r\n    <h2>The New Drag and Drop Events</h2>\r\n    <p>\r\n        So, with no further ado, here are the new drag and drop events,\r\n        in roughly the order you might expect to see them fired:\r\n    </p>\r\n    <dl>\r\n        <dt><code>dragstart</code></dt>\r\n        <dd>\r\n            A drag has been initiated, with the dragged element as the\r\n            event target.\r\n        </dd>\r\n\r\n        <dt><code>drag</code></dt>\r\n        <dd>\r\n            The mouse has moved, with the dragged element as the event target.\r\n        </dd>\r\n        <dt><code>dragenter</code></dt>\r\n        <dd>\r\n            The dragged element has been moved into a drop listener,\r\n            with the drop listener element as the event target.\r\n        </dd>\r\n        <dt><code>dragover</code></dt>\r\n\r\n        <dd>\r\n            The dragged element has been moved over a drop listener,\r\n            with the drop listener element as the event target.  Since\r\n            the default behavior is to cancel drops, returning\r\n            <code>false</code> or calling <code>preventDefault()</code> in\r\n            the event handler indicates that a drop is allowed here.\r\n        </dd>\r\n        <dt><code>dragleave</code></dt>\r\n        <dd>\r\n            The dragged element has been moved out of a drop listener,\r\n            with the drop listener element as the event target.\r\n        </dd>\r\n\r\n        <dt><code>drop</code></dt>\r\n        <dd>\r\n            The dragged element has been successfully dropped on a drop\r\n            listener, with the drop listener element as the event\r\n            target.\r\n        </dd>\r\n        <dt><code>dragend</code></dt>\r\n        <dd>\r\n            A drag has been ended, successfully or not, with the\r\n            dragged element as the event target.\r\n        </dd>\r\n    </dl>\r\n\r\n    <p>\r\n        Like the mouse events of yore, listeners can be attached to\r\n        elements using <code>addEventListener()</code> \r\n        directly or by way of your favorite JS library.  \r\n    </p><p>\r\n        Consider the following example using jQuery, \r\n        <a target=\"_new\" target=\"_new\" target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html#newschool\">also available as a live demo</a>:\r\n    </p>\r\n    <pre lang=\"javascript\" line=\"1\">\r\n<div id=\"newschool\">\r\n    <div class=\"dragme\">Drag me!</div>\r\n    <div class=\"drophere\">Drop here!</div>\r\n</div>\r\n\r\n<script type=\"text/javascript\">\r\n    $(document).ready(function() {\r\n        $('#newschool .dragme')\r\n            .attr('draggable', 'true')\r\n            .bind('dragstart', function(ev) {\r\n                var dt = ev.originalEvent.dataTransfer;\r\n                dt.setData(\"Text\", \"Dropped in zone!\");\r\n                return true;\r\n            })\r\n            .bind('dragend', function(ev) {\r\n                return false;\r\n            });\r\n        $('#newschool .drophere')\r\n            .bind('dragenter', function(ev) {\r\n                $(ev.target).addClass('dragover');\r\n                return false;\r\n            })\r\n            .bind('dragleave', function(ev) {\r\n                $(ev.target).removeClass('dragover');\r\n                return false;\r\n            })\r\n            .bind('dragover', function(ev) {\r\n                return false;\r\n            })\r\n            .bind('drop', function(ev) {\r\n                var dt = ev.originalEvent.dataTransfer;\r\n                alert(dt.getData('Text'));\r\n                return false;\r\n            });\r\n    });\r\n</script>\r\n    </pre>\r\n    <p>\r\n        Thanks to the new events and jQuery, this example is both short\r\n        and simple—but it packs in a lot of functionality, as the rest\r\n        of this article will explain.  \r\n    </p><p>\r\n        Before moving on, there are at least three things about the above\r\n        code that are worth mentioning:\r\n    </p>\r\n    <ul>\r\n        <li>\r\n\r\n            <p>\r\n                Drop targets are enabled by virtue of having\r\n                listeners for drop events.  But, \r\n                <a target=\"_new\" href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#drag-and-drop-processing-model\">per the HTML 5 spec</a>,\r\n                draggable elements need an\r\n                attribute of <code>draggable=\"true\"</code>, set either in\r\n                markup or in JavaScript.  \r\n            </p>\r\n            <p>\r\n                Thus, <code>$('#newschool&nbsp;.dragme').attr('draggable', 'true')</code>.\r\n            </p>\r\n\r\n        </li>\r\n        <li>\r\n            <p>\r\n                The original DOM event (as opposed to jQuery's event\r\n                wrapper) offers a property called <code>dataTransfer</code>.\r\n                Beyond just manipulating elements, the new drag and drop\r\n                events accomodate the transmission of user-definable data\r\n                during the course of the interaction.  \r\n            </p>\r\n        </li>\r\n        <li>\r\n            <p>\r\n\r\n                Since these are first-class events, you can apply \r\n                <a target=\"_new\" href=\"http://icant.co.uk/sandbox/eventdelegation/\">the technique of Event Delegation</a>.\r\n            </p><p>\r\n                What's that?  Well, imagine you have a list of 1000\r\n                list items—as part of a deeply-nested outline document,\r\n                for instance.  Rather than needing to attach listeners\r\n                or otherwise fiddle with all 1000 items, simply attach\r\n                a listener to the parent node (eg. the\r\n                <code><ul></code> element) and all events from\r\n                the children will propagate up to the single parent listener.\r\n                As a bonus, all new child elements added after page\r\n                load will enjoy the same benefits.\r\n            </p><p>\r\n                <a target=\"_new\" target=\"_new\" target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html#delegated\">Check out this demo</a>, \r\n                and \r\n                <a target=\"_new\" target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/js/drag-delegated.js\">the associated JS code</a> \r\n                to see more about these events and Event Delegation.\r\n            </p>\r\n\r\n        </li>\r\n    </ul>\r\n</div>\r\n\r\n<div id=\"datatransfer\">\r\n    <h2>Using dataTransfer</h2>\r\n    <p>\r\n        As mentioned in the last section, the new drag and drop events\r\n        let you send data along with a dragged element.  But, it's even\r\n        better than that:  Your drop targets can receive data\r\n        transferred by content objects dragged into the window from \r\n        other browser windows, and even <i>other applications</i>.\r\n    </p><p>\r\n\r\n        Since the example is a bit longer,  \r\n        <a target=\"_new\" target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html#data_transfer\">check out the live demo</a>\r\n        and \r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/js/drag-datatransfer.js\">associated code</a>\r\n        to get an idea of what's possible with <code>dataTransfer</code>.\r\n    </p><p>\r\n        In a nutshell, the stars of this show are the\r\n        <code>setData()</code> and <code>getData()</code> methods of\r\n        the <code>dataTransfer</code> property exposed by the Event object.\r\n    </p>\r\n\r\n    <p>\r\n        The <code>setData()</code> method is typically called in the \r\n        <code>dragstart</code> listener, loading <code>dataTransfer</code>\r\n        up with one or more strings of content with associated\r\n        <a href=\"https://developer.mozilla.org/En/DragDrop/Recommended_Drag_Types#link\">recommended content types</a>.\r\n    </p>\r\n\r\n    <p>\r\n        For illustration, here's a quick snippet from the example code:\r\n    </p>\r\n    <pre lang=\"javascript\" line=\"1\">\r\nvar dt = ev.originalEvent.dataTransfer;    \r\ndt.setData('text/plain', $('#logo').parent().text());\r\ndt.setData('text/html', $('#logo').parent().html());\r\ndt.setData('text/uri-list', $('#logo')[0].src);\r\n    </pre>\r\n    </p><p>\r\n        On the other end, <code>getData()</code> allows you to query\r\n        for content by type (eg. <code>text/html</code> followed by\r\n        <code>text/plain</code>).  This, in turn, allows you to decide\r\n        on acceptable content types at the time of the\r\n        <code>drop</code> event or even during <code>dragover</code>\r\n\r\n        to offer feedback for unacceptable types during the drag.\r\n    </p><p>\r\n        Here's another example from the receiving end of the example code:\r\n    </p>\r\n    <pre lang=\"javascript\" line=\"1\">\r\nvar dt = ev.originalEvent.dataTransfer;    \r\n$('.content_url .content').text(dt.getData('text/uri-list'));\r\n$('.content_text .content').text(dt.getData('text/plain'));\r\n$('.content_html .content').html(dt.getData('text/html'));\r\n    </pre>\r\n    <p>\r\n        Where <code>dataTransfer</code> really shines, though, is that\r\n        it allows your drop targets to receive content from \r\n        sources outside your defined draggable elements and even from\r\n        outside the browser altogether.  Firefox accepts such drags, \r\n        and attempts to populate <code>dataTransfer</code> with\r\n        appropriate content types extracted from the external object.\r\n    </p><p>\r\n\r\n        Thus, you could select some text in a word processor window and\r\n        drop it into one of your elements, and at least expect to find\r\n        it available as <code>text/plain</code> content.  \r\n    </p><p>\r\n        You can also select content in \r\n        another browser window, and expect to see <code>text/html</code>\r\n        appear in your events.  Check out the \r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/outline.html\">outline editing demo</a>\r\n        and see what happens when you try dragging various elements \r\n        (eg. images, tables, and lists) and highlighted content from\r\n        other windows onto the items there.\r\n    </p>\r\n\r\n</div>\r\n\r\n<div id=\"dragfeedback\">\r\n    <h2>Using Drag Feedback Images</h2>\r\n    <p>\r\n       An important aspect of the drag and drop interaction is a\r\n       representation of the thing being dragged.  By default in\r\n       Firefox, this is a \"ghost\" image of the dragged element itself.  But,\r\n       the <code>dataTransfer</code> property of the original Event\r\n       object exposes the method <code>setDragImage()</code> for use\r\n       in customizing this representation.\r\n    </p><p>\r\n\r\n        There's\r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html#feedback_image\">a live demo</a> of this feature, as well as\r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/js/drag-feedback-images.js\">associated JS code</a> \r\n        available.  The gist, however, is sketched out in these code snippets:\r\n    </p>\r\n    <pre lang=\"javascript\" line=\"1\">\r\nvar dt = ev.originalEvent.dataTransfer;    \r\n\r\ndt.setDragImage( $('#feedback_image h2')[0], 0, 0);\r\n\r\ndt.setDragImage( $('#logo')[0], 32, 32); \r\n\r\nvar canvas = document.createElement(\"canvas\");\r\ncanvas.width = canvas.height = 50;\r\n\r\nvar ctx = canvas.getContext(\"2d\");\r\nctx.lineWidth = 8;\r\nctx.moveTo(25,0);\r\nctx.lineTo(50, 50);\r\nctx.lineTo(0, 50);\r\nctx.lineTo(25, 0);\r\nctx.stroke();\r\n\r\ndt.setDragImage(canvas, 25, 25);\r\n    </pre>\r\n    <p>\r\n        You can supply a DOM node as the first parameter to \r\n        <code>setDragImage()</code>, which includes everything from\r\n        text to images to <code>canvas</code> elements.  The\r\n        second two parameters indicate at what left and top offset\r\n        the mouse should appear in the image while dragging.\r\n    </p><p>\r\n\r\n        For example, since the <code>#logo</code> image is 64x64,\r\n        the parameters in the second <code>setDragImage()</code>\r\n        method places the mouse right in the center of the image.\r\n        On the other hand, the first call positions the feedback\r\n        image such that the mouse rests in the upper left corner.\r\n    </p><p>\r\n    </p>\r\n</div>\r\n\r\n<div id=\"dragfeedback\">\r\n\r\n    <h2>Using Drop Effects</h2>\r\n    <p>\r\n        As mentioned at the start of this article, the drag and drop\r\n        interaction has been used to support actions such as copying,\r\n        moving, and linking.  Accordingly, the HTML 5 specification \r\n        accomodates these operations in the form of the \r\n        <code>effectAllowed</code> and <code>dropEffect</code>\r\n        properties exposed by the Event object.\r\n    </p>\r\n    <p>\r\n\r\n        For a quick fix, check out the\r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html#drag_effects\">a live demo</a> \r\n        of this feature, as well as the\r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/js/drag-effects.js\">associated JS code</a>.\r\n    </p><p>\r\n        The basic idea is that the <code>dragstart</code> event\r\n        listener can set a value for <code>effectAllowed</code> like so:\r\n    </p>\r\n\r\n    <pre lang=\"javascript\" line=\"1\">\r\nvar dt = ev.originalEvent.dataTransfer;\r\nswitch (ev.target.id) {\r\n    case 'effectdrag0': dt.effectAllowed = 'copy'; break;\r\n    case 'effectdrag1': dt.effectAllowed = 'move'; break;\r\n    case 'effectdrag2': dt.effectAllowed = 'link'; break;\r\n    case 'effectdrag3': dt.effectAllowed = 'all'; break;\r\n    case 'effectdrag4': dt.effectAllowed = 'none'; break;\r\n}\r\n    </pre>\r\n    <p>The choices available for this property include the following:</p>\r\n    <dl> \r\n        <dt><code>none</code></dt><dd>no operation is permitted </dd>\r\n        <dt><code>copy</code></dt><dd>copy only </dd>\r\n\r\n        <dt><code>move</code></dt><dd>move only </dd>\r\n        <dt><code>link</code></dt><dd>link only </dd>\r\n        <dt><code>copyMove</code></dt><dd>copy or move only </dd>\r\n        <dt><code>copyLink</code></dt><dd>copy or link only </dd>\r\n        <dt><code>linkMove</code></dt><dd>link or move only </dd>\r\n\r\n        <dt><code>all</code></dt><dd>copy, move, or link </dd>\r\n    </dl>\r\n    <p>\r\n        On the other end, the <code>dragover</code> event listener \r\n        can set the value of the\r\n        <code>dropEffect</code> property to indicate the expected effect\r\n        invoked on a successful drop.  If the value does\r\n        not match up with <code>effectAllowed</code>, the drop will\r\n        be considered cancelled on completion.\r\n    </p><p>\r\n\r\n        In the \r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html#drag_effects\">a live demo</a>,\r\n        you should be able to see that only elements with matching\r\n        effects can be dropped into the appropriate drop zones.  This\r\n        is accomplished with code like the following:\r\n    </p>\r\n    <pre lang=\"javascript\" line=\"1\">\r\nvar dt = ev.originalEvent.dataTransfer;\r\nswitch (ev.target.id) {\r\n    case 'effectdrop0': dt.dropEffect = 'copy'; break;\r\n    case 'effectdrop1': dt.dropEffect = 'move'; break;\r\n    case 'effectdrop2': dt.dropEffect = 'link'; break;\r\n    case 'effectdrop3': dt.dropEffect = 'all'; break;\r\n    case 'effectdrop4': dt.dropEffect = 'none'; break;\r\n}\r\n    </pre>\r\n    <p>\r\n        Although the OS itself can provide some feedback, you \r\n        can also use these properties to update your own visible \r\n        feedback, both on the dragged element and on the drop zone\r\n        itself.\r\n    </p>\r\n\r\n</div>\r\n\r\n<div id=\"conclusion\">\r\n    <h2>Conclusion</h2>\r\n    <p>\r\n        The new first-class drag and drop events in HTML5 and Firefox\r\n        make supporting this form of UI interaction simple, concise,\r\n        and powerful in the browser.  But beyond the new simplicity of\r\n        these events, the ability to transfer content between\r\n        applications opens brand new avenues for web-based applications\r\n        and collaboration with desktop software in general.\r\n    </p><p>\r\n    </p><p>\r\n    </p>\r\n</div>\r\n\r\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221090962\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://lmframework.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=03dc722b1852367f02b0b21f02b10675&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://lmframework.com\">David Semeria</a>\n                </div>\n                <a href=\"#comment-221090962\" class=\"permalink\"><time datetime=\"2009-07-16T17:56:52\">2009-07-16T17:56:52</time></a>\n            </div>\n            <div class=\"content\"><p>Wow - thanks for a great introduction to D+D in HTML 5, I'm really looking forward to giving it a thorough road test. </p>\n\n<p>The key part of the implementation are the target listeners, because, as I'm sure you're aware, onmouseover would historically never fire over the target element because the dragged item would always 'cover it up'. BTW, my proposed solution was to add an 'event transparency' property, which would have made the dragged item invisible from the point of view of selected events, eg onmouseover.</p>\n\n<p>This implementation is going to take a lot of pain away. You have no idea how many hoops I had to jump through to get a fully generic D+D implementation working without these new calls.</p>\n\n<p>If you're interested, you can see it working here: http://lmframework.com/page.php?id=vd_twig_short_2</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090964\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=cee7ac3f63d7e8c1367e170bec302c14&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Alex</a>\n                </div>\n                <a href=\"#comment-221090964\" class=\"permalink\"><time datetime=\"2009-07-17T00:13:23\">2009-07-17T00:13:23</time></a>\n            </div>\n            <div class=\"content\"><p>Hey,</p>\n\n<p>Looks great and useful article.  For dragging from external applications (such as the Desktop) is a normal webpage able to get the data from the drop?  I was just playing with it and seem to always get what seems to be a security error with getData or mozGetDataAt.  However, the documentation seems to state that on drop that data should be made available to the page.  Likewise, in the same way an image can be dragged off the page onto the desktop, can an arbitrary element be dragged onto the desktop with whatever file content to be saved?  Thanks for the help.</p>\n\n<p>Alex</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090966\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://paulisageek.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b3bb70a4bace7f9bd49f48b149ab95f9&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://paulisageek.com/\">Paul Tarjan</a>\n                </div>\n                <a href=\"#comment-221090966\" class=\"permalink\"><time datetime=\"2009-07-17T04:52:54\">2009-07-17T04:52:54</time></a>\n            </div>\n            <div class=\"content\"><p>Very nice, I didn't know that FF 3.5 actually had this implemented. Time to start playing :)</p>\n\n<p>Also, how did you do your code posts? Was it just pasting in HTML or do you have a better setup?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090967\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=066d1e75c9b938053ee6b3d48b1c0f6a&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Animal</a>\n                </div>\n                <a href=\"#comment-221090967\" class=\"permalink\"><time datetime=\"2009-07-17T14:35:21\">2009-07-17T14:35:21</time></a>\n            </div>\n            <div class=\"content\"><p>Seems pretty pointless pressing ahead with this when you just can't write a web app to use it. There's no support. All a bunch of whizzy fun I'm sure, but sod-all use.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090969\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221090969\" class=\"permalink\"><time datetime=\"2009-07-17T16:23:10\">2009-07-17T16:23:10</time></a>\n            </div>\n            <div class=\"content\"><p>@Animal: Why can't you write a web app to use it?  It's in the HTML5 spec, works in Fx3.5 and Safari 4 / WebKit.  It doesn't have universal support yet, or course, but new standards never do.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090970\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.crearedesign.co.uk\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=87bf21798e390d9043dda7240c1b60f7&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.crearedesign.co.uk\">paul</a>\n                </div>\n                <a href=\"#comment-221090970\" class=\"permalink\"><time datetime=\"2009-07-21T08:08:26\">2009-07-21T08:08:26</time></a>\n            </div>\n            <div class=\"content\"><p>very nice indeed! i like this, it has definitely opened up new avenues for interaction without using flash. but it will take time before people upgrade to the new browser. a lot of people who browse the web wont realise what the technology will bring and will use their current browser because it does the job!</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090971\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=04de859cfd6ef0b75e4ea3cbea143190&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Joel</a>\n                </div>\n                <a href=\"#comment-221090971\" class=\"permalink\"><time datetime=\"2009-07-21T14:36:04\">2009-07-21T14:36:04</time></a>\n            </div>\n            <div class=\"content\"><p>Excellent demos of the new features.</p>\n\n<p>When using a feedback image on a zoomed in page, should the image not also be scaled up automatically?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090973\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=41708\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=6d3bf986abdbb431991c3b02eb6e2335&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=41708\">RenegadeX</a>\n                </div>\n                <a href=\"#comment-221090973\" class=\"permalink\"><time datetime=\"2009-07-22T04:13:46\">2009-07-22T04:13:46</time></a>\n            </div>\n            <div class=\"content\"><p>Dragging &amp; dropping <em>is</em> as you say, a \"one of the most fundamental interations\" that users of computer graphical interfaces have come to know, and expect.</p>\n\n<p>It therefore completes dumbfounds me how it is that we <em>still</em> can not natively drag &amp; scroll (&amp; then drop) in Firefox. We can only drag &amp; drop an item within the currently visible portion of a Firefox webpage or tab, no further up, no further down.</p>\n\n<p>That is should be limited makes absolutely no sense. Microsoft built the function into their Windows 3.x (file) Explorer, and then when visual browsers came along, naturally carried it through into Internet Explorer. </p>\n\n<p>Firefox Bug 41708, \"Should be able to scroll in the viewport while dragging\" was opened in June, 2000 (yes, 9 years ago!) and remains open, and is disregarded by Firefox developers as little more than a trivial little annoyance, and therefore is and should be treated as a low-importance 'enhancement' rather than as the 'standard feature' it should really be.</p>\n\n<p>If it weren't for the extension 'DragToScroll', which has been around for 3-1/2 years now (not updated in a long time but still works if you override version compatibility), I would have dumped Firefox and switched to a different browser (Maxthon 3, most likely).</p>\n\n<p>So, I'm wondering (and hoping) -- does the new HTML5 drag and drop specification include anything that if implemented properly would make it possible to scroll &amp; drag?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090974\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221090974\" class=\"permalink\"><time datetime=\"2009-07-22T13:57:42\">2009-07-22T13:57:42</time></a>\n            </div>\n            <div class=\"content\"><p>@RenegadeX: Ugh.  I don't work on the browser itself, but I noticed that unexpected behavior on drag &amp; drop.  The window really should scroll when you get toward the top or bottom while dragging - and, in fact, most pre-HTML5 JS frameworks do that in their own drag &amp; drop abstractions.  </p>\n\n<p>Until / unless Firefox gets this fixed, the same sort of auto-scrolling could be hacked in to HTML5 drag and drop.  Not perfect, but it's doable.  That is, in the drag event, you can check if the mouse is near the upper or lower edge of the viewport - and if so, start scrolling appropriately. That's pretty much how the JS frameworks do it with old-school D&D</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090975\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.copperbot.net\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=df48b2c2a3a2be51b1e15f10c5fb05da&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.copperbot.net\">CopperBot</a>\n                </div>\n                <a href=\"#comment-221090975\" class=\"permalink\"><time datetime=\"2009-07-23T21:41:07\">2009-07-23T21:41:07</time></a>\n            </div>\n            <div class=\"content\"><p>Very cool article! Thanks for sharing. HTML5 really is going to change everything about how we use and develop for the web. Pretty awesome!</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090976\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.AmnesiaGames.cl\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=14ad888c23e28c85c222a73b6c633570&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.AmnesiaGames.cl\">Alexos</a>\n                </div>\n                <a href=\"#comment-221090976\" class=\"permalink\"><time datetime=\"2009-07-26T05:05:44\">2009-07-26T05:05:44</time></a>\n            </div>\n            <div class=\"content\"><p>Hi, would DD work for uploading files? How can I display a progress bar?\nThanks! \nI've been looking for that several days, and found only applets which I can't use in my proyect :-)</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090977\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.sjlwebdesign.co.uk\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=185cd965e0e8ccd15df2f90977cbeaf3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.sjlwebdesign.co.uk\">Sam</a>\n                </div>\n                <a href=\"#comment-221090977\" class=\"permalink\"><time datetime=\"2009-07-28T13:54:26\">2009-07-28T13:54:26</time></a>\n            </div>\n            <div class=\"content\"><p>Looks fantastic, going to try it out now (once I have upgraded my FF)</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090978\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.dankantor.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=60fc8331f617fc905fd682bc4f41ce8d&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.dankantor.com\">Dan Kantor</a>\n                </div>\n                <a href=\"#comment-221090978\" class=\"permalink\"><time datetime=\"2009-07-30T03:10:25\">2009-07-30T03:10:25</time></a>\n            </div>\n            <div class=\"content\"><p>Looks like effectAllowed and dropEffect are not working for FF 3.5 on the Mac. I see effects on Windows and Safari 4 on Mac. I've been playing around with adding borders to the drop target, but the + icon for copy really helps a lot. Hopefully Mozilla will fix this next update.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090979\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.thecssninja.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8677c9f7c0f6d947bf318c1430d00bfd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.thecssninja.com/\">Ryan</a>\n                </div>\n                <a href=\"#comment-221090979\" class=\"permalink\"><time datetime=\"2009-09-01T02:33:06\">2009-09-01T02:33:06</time></a>\n            </div>\n            <div class=\"content\"><p>Great article it's good to see developments in this area. I wrote an article on the further extensions Firefox 3.6 has done with the dataTransfer method by adding the file attribute so you can access local files and upload them without the need for file inputs. http://www.thecssninja.com/javascript/drag-and-drop-upload</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090982\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=1ed4bbef573bfc014d32356d53103ca2&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">phil swenson</a>\n                </div>\n                <a href=\"#comment-221090982\" class=\"permalink\"><time datetime=\"2009-09-03T22:58:36\">2009-09-03T22:58:36</time></a>\n            </div>\n            <div class=\"content\"><p>Why not a first class WYSIWYG rich text editor with copy from clipboard image support?  </p>\n\n<p><em>NO ONE</em> has built a decent text editor in JavaScript - At least not that I've seen.  And browsers don't allow image paste for reasons I don't understand.  </p>\n\n<p>And by decent I mean just like you'd get in textmate or another editor.  Have the standard text editor features everyone expects:  tab, select indent/select unindent, resize image, home, end, duplicate line, delete line, styling, etc.</p>\n\n<p>would push the browser to the next level in killing the desktop.  non-techies hate wikis.  They want a real editor.  I do too actually.... would be great for forums, bug tracking system (imagine pasting screen shots in line with your bug desc), email, etc.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090983\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=deed51cddc830e162557b8f01383a057&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Jean-Denis</a>\n                </div>\n                <a href=\"#comment-221090983\" class=\"permalink\"><time datetime=\"2009-09-04T00:23:39\">2009-09-04T00:23:39</time></a>\n            </div>\n            <div class=\"content\"><p>Francisco Tomalski wrote up a nice piece on HTML 5 drag'n drop at http://www.alertdebugging.com/2009/08/16/on-html-5-drag-and-drop/</p>\n\n<p>where he uncovers that the proposed standard is partially broken. Any comment on his piece?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090984\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://html5tutorial.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=3876e030a3fc69a8b59a8c55829fb510&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://html5tutorial.net/\">Lisa</a>\n                </div>\n                <a href=\"#comment-221090984\" class=\"permalink\"><time datetime=\"2009-09-09T07:33:08\">2009-09-09T07:33:08</time></a>\n            </div>\n            <div class=\"content\"><p>This is a great move forward no more relying on 3rd party apps and extensions to play video or audio, i have been reading up on HTML 5 at the <a href=\"http://html5tutorial.net/\" title=\"HTML tutorials\" rel=\"nofollow\">HTML 5 Tutorials</a> website, i am now playing around with one of the free templates and was wondering how to embed audio, so thanks a lot, great information, lets hope more people lean towards HTML 5 and SOON!!!</p>\n\n<p>The drag and drop feature i did not notice was already working in FF 3.5, i was told to get Safari to see HTML 5 in action. Thanks for a great post</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090985\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.useragentman.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=9a579fa051b35266678735c8a3751771&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.useragentman.com\">Zoltan Hawryluk</a>\n                </div>\n                <a href=\"#comment-221090985\" class=\"permalink\"><time datetime=\"2010-01-11T15:14:48\">2010-01-11T15:14:48</time></a>\n            </div>\n            <div class=\"content\"><p>A million thank yous!  This article was great introduction to HTML5 D+D.  With it, I was able to extend it to other browsers.  It was a little painful at first because the browser implementations diverge in significant, but manageable ways.</p>\n\n<p>If you are interested, check out my article at http://www.useragentman.com/blog/2010/01/10/cross-browser-html5-drag-and-drop/ if you are interested in my results.</p>\n\n<p>I noticed you haven't blogged in a while - I hope you haven't stopped totally and continue to share with the webdev community.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090986\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.lingua-franka.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e65f416e42c12571ba1c86ae2dadd99f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.lingua-franka.com\">Raul</a>\n                </div>\n                <a href=\"#comment-221090986\" class=\"permalink\"><time datetime=\"2011-04-26T23:56:02\">2011-04-26T23:56:02</time></a>\n            </div>\n            <div class=\"content\"><p>Hi, Leslie. I've just come across a problem that's driving me nuts. I'm not fully comfortable with D&amp;D, but managed to move a crosshairs image over a map to very precisely controlled positions. It worked great on FF 3.6 and FF 4. After a couple of days of successful testing, the image suddenly refused to de dropped after being dragged (it rather flew back to its previous position). Do you know if there is a bug in FF that might cause this? </p>\n\n<p>BTW, during the programming process I updated Firebug, which also is getting a little cranky.</p>\n\n<p>Thanks for your prompt answer, Raul</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-324410737\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://disqus.com/api/users/avatars/google-4014af7ac4ea5d00df95bef4503b78dd.jpg\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Alexander Plutov</a>\n                </div>\n                <a href=\"#comment-324410737\" class=\"permalink\"><time datetime=\"2011-10-01T11:51:12\">2011-10-01T11:51:12</time></a>\n            </div>\n            <div class=\"content\">Good post about Drag & Drop http://plutov.by/post/html5_drag_and_drop</div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2009",
    "path": "2009/07/15/html5-drag-and-drop",
    "summary": "<p><i>\nOh hey, look! It&apos;s another blog post&#x2014;and this one\n<a href=\"http://hacks.mozilla.org/2009/07/html5-drag-and-drop/\">is cross-posted on hacks.mozilla.com</a>.\nI won&apos;t say this is the start of a renewed blogging habit, but let&apos;s see what happens.\n</i></p>\n\n<style type=\"text/css\">\ndl { margin-left: 2em; }\ndd { margin-left: 2em; margin-bottom: 0.25em; }\n</style>\n<div id=\"introduction\">\n    <p>\n        Drag and drop is one of the most fundamental interactions\n        afforded by graphical user interfaces.  In one gesture, it\n        allows users to pair the selection of an object with the\n        execution of an action, often including a second object in the\n        operation.  It&apos;s a simple yet powerful UI concept used to\n        support copying, list reordering, deletion (ala the Trash / Recycle Bin),\n        and even the creation of link relationships.\n    </p><p>\n        Since it&apos;s so fundamental, offering drag and drop in web\n        applications has been a no-brainer ever since browsers first\n        offered mouse events in DHTML.  But, although\n        <code>mousedown</code>, <code>mousemove</code>, and\n        <code>mouseup</code> made it possible, the implementation has been\n        limited to the bounds of the browser window.  Additionally,\n        since these events refer only to the object being dragged,\n        there&apos;s a challenge to find the subject of the drop when\n        the interaction is completed.\n    </p><p>\n\n</p><pre><code>    Of course, that doesn&apos;t prevent most modern JavaScript\n    frameworks from abstracting away most of the problems and\n    throwing in some flourishes while they&apos;re at it.  But, wouldn&apos;t\n    it be nice if browsers offered first-class support for drag and\n    drop, and maybe even extended it beyond the window sandbox?\n&lt;/p&gt;&lt;p&gt;\n    As it turns out, this very wish is answered by the HTML 5 specification \n    &lt;a target=&quot;_new&quot; href=&quot;http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#dnd&quot;&gt;section on new drag-and-drop events&lt;/a&gt;, and \n    &lt;a target=&quot;_new&quot; href=&quot;https://developer.mozilla.org/En/DragDrop/Drag_and_Drop&quot;&gt;Firefox 3.5 includes an implementation&lt;/a&gt; of those events.\n&lt;/p&gt;&lt;p&gt;\n    If you want to jump straight to the code, I&apos;ve put together \n    &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html&quot;&gt;some simple demos&lt;/a&gt; \n    of the new events.  \n&lt;/p&gt;&lt;p&gt;\n\n    I&apos;ve even scratched an itch of my own and\n    built &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/outline.html&quot;&gt;the beginnings of an outline editor&lt;/a&gt;,\n    where every draggable element is also a drop target&#x2014;of which\n    there could be dozens to hundreds in a complex document, something\n    that gave me some minor hair-tearing moments in the past\n    while trying to make do with plain old mouse events.\n&lt;/p&gt;&lt;p&gt;\n    And, all the above can be downloaded or cloned from \n    &lt;a href=&quot;http://github.com/lmorchard/fx35-drag-and-drop&quot;&gt;a GitHub repository&lt;/a&gt;\n    I&apos;ve created especially for this article&#x2014;which continues after the jump.\n&lt;/p&gt;</code></pre>\n</div>\n\n",
    "prevPostPath": "2009/08/20/professional-javascript-frameworks-is-a-real-book",
    "nextPostPath": "2009/05/30/controlled-monetization"
  },
  {
    "comments_archived": true,
    "date": "2008-11-01T19:23:23.000Z",
    "layout": "post",
    "tags": [
      "webdev",
      "js",
      "javascript",
      "entries",
      "jquery",
      "zope",
      "zpt",
      "tal",
      "templates"
    ],
    "title": "An unnecessary Template Attribute Language",
    "wordpress_id": 1450,
    "wordpress_slug": "an-unnecessary-template-attribute-language",
    "wordpress_url": "http://decafbad.com/blog/?p=1450",
    "year": "2008",
    "month": "11",
    "day": "01",
    "isDir": false,
    "slug": "an-unnecessary-template-attribute-language",
    "postName": "2008-11-01-an-unnecessary-template-attribute-language",
    "html": "<p>A funny thing happened on the way to building <a href=\"http://svn.mozilla.org/projects/lizardfeeder/trunk/\">a delayed real-time feed display</a>:  I got temporarily obsessed with implementing <a href=\"http://github.com/lmorchard/jquery-tal-template/tree/master\">a template language in JavaScript</a> that, as it turned out later, I didn&#39;t need.  About <a href=\"http://svn.mozilla.org/projects/lizardfeeder/trunk/\">the feed project itself</a>, I hope to write more soon—but for now I want to get this extra template language thing out of my system and see if anyone else might have a use for it.</p>\n<p>See, I had a notion it would be keen if I had access to the same template language on the client as on the server.  I needed to render a number of list items statically on the server with feed entries, then update that list with new entries on the client as they became available through JSON feed polling.  It&#39;d be a pain in the butt to maintain two separate list item templates for client and server, so I reached for a shared template language.</p>\n<p>Never mind that I&#39;d just gotten done writing <a href=\"http://www.amazon.com/gp/product/0470452021?ie=UTF8&amp;tag=0xdecafbad01-20&amp;linkCode=as2&amp;camp=1789&amp;c%0D%0Areative=9325&amp;creativeASIN=0470452021\">a small book on Dojo</a>, and was already aware of the existence of the <a href=\"http://svn.dojotoolkit.org/src/dojox/trunk/dtl/README\">DojoX Django Template Language</a>.  This might&#39;ve worked, since the server end of things was written in Python (though not with Django).  That the JavaScript side already used <a href=\"http://jquery.com/\">jQuery</a> wasn&#39;t <em>too</em> tall a hurdle.  Also, I&#39;m sure there are a handful of other JavaScript/Python template language match-ups to be found.</p>\n<p>But, let&#39;s be honest here:  I&#39;ve always been a fan of Zope&#39;s <a href=\"http://wiki.zope.org/ZPT/TALSpecification14\">Template Attribute Language</a> for their <a href=\"http://wiki.zope.org/ZPT/FrontPage\">Page Templates</a>, and have long wondered how hard it would be to implement.  The concept seems so much cleaner to me than most string-formatting template languages, and the workflow from mockup-to-template and back again has always been appealing to me when it works.  So, when my first few experimental steps in trying my hand at it actually started working, I couldn&#39;t stop coding.  </p>\n<p>And now, <a href=\"http://github.com/lmorchard/jquery-tal-template/tree/master/jquery.taltemplate.js\">the thing</a> is mostly done.  It has no tests, has features left undone, and probably yields plenty of bugs—but I finished it enough to use it practically, and that was long enough to convince me it wasn&#39;t the right tool for the job.  </p>\n<p>Still, though, I can&#39;t help thinking it might be the right tool for <em>some</em> job.  That could be because I spent a lot of time on it, or that I&#39;m unreasonably fond of <a href=\"http://wiki.zope.org/ZPT/TALSpecification14\">TAL</a>, but it still feels like a decent little plugin to have on hand.  Maybe someone reading this will have a similar conclusion.</p>\n<p>Oh and by the way, plain <a href=\"http://jquery.com/\">jQuery</a> turned out to be a better tool for <a href=\"http://svn.mozilla.org/projects/lizardfeeder/trunk/\">the job in question</a>.  This seems to nicely balance the duplicate effort between server and client, demanding only that I stick with semantically significant CSS class names in the server template—something I should be doing anyway:</p>\n<pre><code>        // Clone and populate a new entry.\n        var new_item = $(&#39;#feed-items .entry:last&#39;)\n            .clone()\n            .attr(&#39;class&#39;, entry_classes.join(&#39; &#39;)) \n            .find(&#39;.group span&#39;)\n                .text(tags[&#39;group&#39;])\n            .end()\n            .find(&#39;.title&#39;)\n                .find(&#39;.favicon&#39;)\n                    .attr(&#39;src&#39;, favicon)\n                .end()\n                .find(&#39;.link&#39;)\n                    .attr(&#39;href&#39;, entry.link)\n                    .text(entry.title)\n                .end()\n            .end()\n            .find(&#39;.updated&#39;)\n                .find(&#39;.timeago&#39;)\n                    .attr(&#39;title&#39;, entry.updated)\n                    .text(entry_updated.strftime(&#39;%+&#39;))\n                    .timeago()\n                .end()\n                .find(&#39;.time&#39;)\n                    .text(entry_updated.strftime(&#39;%I:%M %p&#39;))\n                .end()\n            .end()\n            .find(&#39;.author&#39;)\n                .text(entry.author || &#39;n/a&#39;)\n            .end()\n            .prependTo(&#39;#feed-items&#39;)\n            .hide();</code></pre>\n<p>Of course, <em>plain</em> is a relative term here.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221083366\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=3f398029eea744ce9ba9147aab627557&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">brad clements</a>\n</div>\n<a href=\"#comment-221083366\" class=\"permalink\"><time datetime=\"2008-11-03T21:26:42\">2008-11-03T21:26:42</time></a>\n</div>\n<div class=\"content\"><p>Groan,</p>\n<p>Too bad I haven't had a chance to finish documenting (and tweaking) the ATALi project.</p>\n<p>It's a collection of Alternative TAL Implementations.</p>\n<p>It currently has TAL for xslt (server side using libxslt directly or via lxml with metal support)</p>\n<p>and TAL for javascript (no libraries needed, though it does recognize mochikit iterators, no metal)</p>\n<p>https://launchpad.net/atali</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083367\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.jm3.net/\"><img src=\"http://disqus.com/api/users/avatars/jm3.jpg\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.jm3.net/\">John Manoogian III (jm3)</a>\n</div>\n<a href=\"#comment-221083367\" class=\"permalink\"><time datetime=\"2008-11-24T18:51:17\">2008-11-24T18:51:17</time></a>\n</div>\n<div class=\"content\"><p>Have you seen \"trimpath\"?</p>\n<p>http://code.google.com/p/trimpath/wiki/JavaScriptTemplates</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "A funny thing happened on the way to building [a delayed real-time feed display][lizardfeeder]:  I got temporarily obsessed with implementing [a template language in JavaScript][jqtal] that, as it turned out later, I didn't need.  About [the feed project itself][lizardfeeder], I hope to write more soon—but for now I want to get this extra template language thing out of my system and see if anyone else might have a use for it.\r\n\r\nSee, I had a notion it would be keen if I had access to the same template language on the client as on the server.  I needed to render a number of list items statically on the server with feed entries, then update that list with new entries on the client as they became available through JSON feed polling.  It'd be a pain in the butt to maintain two separate list item templates for client and server, so I reached for a shared template language.\r\n\r\nNever mind that I'd just gotten done writing [a small book on Dojo][book], and was already aware of the existence of the [DojoX Django Template Language][djt].  This might've worked, since the server end of things was written in Python (though not with Django).  That the JavaScript side already used [jQuery][] wasn't *too* tall a hurdle.  Also, I'm sure there are a handful of other JavaScript/Python template language match-ups to be found.\r\n\r\nBut, let's be honest here:  I've always been a fan of Zope's [Template Attribute Language][tal] for their [Page Templates][pt], and have long wondered how hard it would be to implement.  The concept seems so much cleaner to me than most string-formatting template languages, and the workflow from mockup-to-template and back again has always been appealing to me when it works.  So, when my first few experimental steps in trying my hand at it actually started working, I couldn't stop coding.  \r\n\r\nAnd now, [the thing][thing] is mostly done.  It has no tests, has features left undone, and probably yields plenty of bugs—but I finished it enough to use it practically, and that was long enough to convince me it wasn't the right tool for the job.  \r\n\r\nStill, though, I can't help thinking it might be the right tool for *some* job.  That could be because I spent a lot of time on it, or that I'm unreasonably fond of [TAL][tal], but it still feels like a decent little plugin to have on hand.  Maybe someone reading this will have a similar conclusion.\r\n\r\nOh and by the way, plain [jQuery][] turned out to be a better tool for [the job in question][lizardfeeder].  This seems to nicely balance the duplicate effort between server and client, demanding only that I stick with semantically significant CSS class names in the server template—something I should be doing anyway:\r\n\r\n            // Clone and populate a new entry.\r\n            var new_item = $('#feed-items .entry:last')\r\n                .clone()\r\n                .attr('class', entry_classes.join(' ')) \r\n                .find('.group span')\r\n                    .text(tags['group'])\r\n                .end()\r\n                .find('.title')\r\n                    .find('.favicon')\r\n                        .attr('src', favicon)\r\n                    .end()\r\n                    .find('.link')\r\n                        .attr('href', entry.link)\r\n                        .text(entry.title)\r\n                    .end()\r\n                .end()\r\n                .find('.updated')\r\n                    .find('.timeago')\r\n                        .attr('title', entry.updated)\r\n                        .text(entry_updated.strftime('%+'))\r\n                        .timeago()\r\n                    .end()\r\n                    .find('.time')\r\n                        .text(entry_updated.strftime('%I:%M %p'))\r\n                    .end()\r\n                .end()\r\n                .find('.author')\r\n                    .text(entry.author || 'n/a')\r\n                .end()\r\n                .prependTo('#feed-items')\r\n                .hide();\r\n\r\nOf course, *plain* is a relative term here.\r\n\r\n[jquery]: http://jquery.com/\r\n[tal]: http://wiki.zope.org/ZPT/TALSpecification14\r\n[pt]: http://wiki.zope.org/ZPT/FrontPage\r\n[book]: http://www.amazon.com/gp/product/0470452021?ie=UTF8&tag=0xdecafbad01-20&linkCode=as2&camp=1789&c%0D%0Areative=9325&creativeASIN=0470452021\r\n[djt]: http://svn.dojotoolkit.org/src/dojox/trunk/dtl/README\r\n[jqtal]: http://github.com/lmorchard/jquery-tal-template/tree/master\r\n[lizardfeeder]: http://svn.mozilla.org/projects/lizardfeeder/trunk/\r\n[thing]: http://github.com/lmorchard/jquery-tal-template/tree/master/jquery.taltemplate.js\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221083366\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=3f398029eea744ce9ba9147aab627557&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">brad clements</a>\n                </div>\n                <a href=\"#comment-221083366\" class=\"permalink\"><time datetime=\"2008-11-03T21:26:42\">2008-11-03T21:26:42</time></a>\n            </div>\n            <div class=\"content\"><p>Groan,</p>\n\n<p>Too bad I haven't had a chance to finish documenting (and tweaking) the ATALi project.</p>\n\n<p>It's a collection of Alternative TAL Implementations.</p>\n\n<p>It currently has TAL for xslt (server side using libxslt directly or via lxml with metal support)</p>\n\n<p>and TAL for javascript (no libraries needed, though it does recognize mochikit iterators, no metal)</p>\n\n<p>https://launchpad.net/atali</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083367\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.jm3.net/\"><img src=\"http://disqus.com/api/users/avatars/jm3.jpg\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.jm3.net/\">John Manoogian III (jm3)</a>\n                </div>\n                <a href=\"#comment-221083367\" class=\"permalink\"><time datetime=\"2008-11-24T18:51:17\">2008-11-24T18:51:17</time></a>\n            </div>\n            <div class=\"content\"><p>Have you seen \"trimpath\"?</p>\n\n<p>http://code.google.com/p/trimpath/wiki/JavaScriptTemplates</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2008",
    "path": "2008/11/01/an-unnecessary-template-attribute-language",
    "prevPostPath": "2008/12/20/the-concise-guide-to-dojo-is-a-real-book",
    "nextPostPath": "2008/10/29/jelly-stains-and-web-masons"
  },
  {
    "comments_archived": true,
    "date": "2008-09-01T04:37:03.000Z",
    "layout": "post",
    "tags": [
      "delicious",
      "webdev",
      "javascript",
      "greasemonkey",
      "entries",
      "mozilla",
      "ubiquity"
    ],
    "title": "Writing a Delicious command for Ubiquity",
    "wordpress_id": 1310,
    "wordpress_slug": "writing-a-delicious-command-for-ubiquity",
    "wordpress_url": "http://decafbad.com/blog/?p=1310",
    "year": "2008",
    "month": "09",
    "day": "01",
    "isDir": false,
    "slug": "writing-a-delicious-command-for-ubiquity",
    "postName": "2008-09-01-writing-a-delicious-command-for-ubiquity",
    "html": "<p>In my <a href=\"http://decafbad.com/blog/2008/08/31/ubiquity-cracks-open-personal-mashup-tinkering\" title=\"Ubiquity cracks open personal mashup tinkering\">last post</a>, I got all fluffy about how cool <a href=\"http://labs.mozilla.com/2008/08/introducing-ubiquity/\">Ubiquity</a> is but didn&#39;t share any code to prove the point.  As it happens, I have come up with at least one useful command that I&#39;m starting to use habitually in posting bookmarks to Delicious.  You can <a href=\"http://decafbad.com/UbiquityCommands/\">subscribe to my command</a> or <a href=\"http://decafbad.com/hg/UbiquityCommands/file/tip/delicious.ubiq.js\">check out the full source</a>—this post will serve as a dissection of the thing.  Since this will be fairly lengthy, follow along after the jump.</p>\n<p>Oh, and it&#39;s been awhile since I posted something this in-depth around here, so feel free to let me know how this first draft works.  And, bug reports and patches are of course welcome.</p>\n<!--more-->\n\n<p>To begin, consider the following code starting off the command source code:</p>\n<pre lang=\"javascript\" line=\"1\">\n/**\n * share-on-delicious - an Ubiquity command for sharing bookmarks on\n * delicious.com\n *\n * l.m.orchard@pobox.com\n * http://decafbad.com/\n * Share and Enjoy!\n */\nvar uext = Application.extensions.get('ubiquity@labs.mozilla.com');\n\nvar cookie_mgr = Components.classes[\"@mozilla.org/cookiemanager;1\"]\n    .getService(Components.interfaces.nsICookieManager);\n</pre>\n\n<p>The first thing to note here is that a short header comment introduces the command.  This isn&#39;t required, but it&#39;s a good idea.  It&#39;s also something you can&#39;t really do with bookmarklets.  On the other hand, Greasemonkey user scripts expect metadata about the script to be provided here, but Ubiquity doesn&#39;t use this convention.</p>\n<p>Second, notice that the code accesses some chrome-level resources.  Again, this is something unavailable to bookmarklets and Greasemonkey user scripts.  Just take a look at the <a href=\"http://developer.mozilla.org/en/FUEL\">FUEL library documentation</a> to get a quick sense of what&#39;s available using that simplified API, not to mention what&#39;s available using the lower-level browser APIs.</p>\n<p>Now, check out this next chunk of code, which begins the construction of an Ubiquity command:</p>\n<pre lang=\"javascript\" line=\"13\">\nCmdUtils.CreateCommand({\n\n    name:        \n        'share-on-delicious',\n    icon:\n        'http://delicious.com/favicon.ico',\n    description: \n        'Share the current page as a bookmark on delicious.com',\n    help:        \n        'Select text on the page to use as notes, or enter your own ' + \n        'text after the command word.  You can also assign tags to the '+ \n        'bookmark with the \"tagged\" modifier, and alter the bookmark ' + \n        'default page title with the \"entitled\" modifier.  Note that ' + \n        'you must also already be logged in at delicious.com to use ' +\n        'this command.',\n\n    homepage:   \n        'http://decafbad.com',\n    author: { \n        name: 'Leslie Michael Orchard', \n        email: 'l.m.orchard@pobox.com' \n    },\n    license:\n        'MPL/GPL/LGPL',\n</pre>\n\n<p>Whereas Greasemonkey scripts support metadata in the header comment, the Ubiquity command script API works a little differently.  </p>\n<p>The <a href=\"http://hg.toolness.com/ubiquity-firefox/file/tip/ubiquity/chrome/content/cmdutils.js\"><code>CmdUtils</code> module</a> provided by Ubiquity offers a <code>CreateCommand</code> function, which expects an object as a parameter.  The object literal whose construction is begun in the code above serves as a self-contained package for the command, bearing metadata describing the command as well as containing all the code necessary to implement it.</p>\n<p>So, in the above code block, you can see the machine-readable description of the command—including a command name, display icon, home page URL, author information, and license.  The command name (<code>share-on-delicious</code>) will be used by the Ubiquity command parser, but the rest of the description will also be used in the list of commands available to the user, invoked by the <code>command-list</code> command, like so:</p>\n<img src=\"/2008/ubiq-share-on-delicious-list.jpg\" style=\"border: 1px solid #333; margin: 0.25em; padding: 0.25em\" />\n\n<p>Moving along, this next chunk of code introduces the first functional bits of the command:</p>\n<pre lang=\"javascript\" line=\"37\">\n    takes: { notes: noun_arb_text },\n    modifiers: { \n        tagged:  noun_arb_text,\n        entitled: noun_arb_text\n    },\n</pre>\n\n<p>Like smart keyword shortcut bookmarks, Ubiquity commands accept user-supplied input.  But, what&#39;s unique to Ubiquity is that it employs a parser whose goal is to support something approximating natural language.  At present, this results in commands that support a single primary argument—declared above with the <code>takes</code> property—and any number of additional keyword modifiers—declared above by the <code>modifiers</code> property.</p>\n<p>For the command under construction here, this establishes a pattern something like the following:</p>\n<pre><code>share-on-delicious {notes} [tagged {tags} entitled {title}]</code></pre>\n<p>Content for the <code>{notes}</code> argument can either be typed directly by hand, or it can be supplied by text highlighted on the page.  To use highlighted text, you can either issue the command alone, or use the word <code>this</code> for the <code>{notes}</code> argument before including further modifiers.</p>\n<p>The modifiers <code>tagged</code> and <code>entitled</code> are optional, and can be used in any order.  Each of these keywords signifies the start of a different argument—which unfortunately can collide with the literal data supplied for notes, which will hopefully be a rare occurrence.</p>\n<p>All of this adds up command invocations including the following:</p>\n<pre><code>share-on-delicious\nshare-on-delicious I really like this page tagged nifty amusing\nshare-on-delicious this entitled This bookmark has no tags\nsh this tagged osx software apple entitled This is good OS X software</code></pre>\n<p>That last example is important—since I have no other commands starting with &quot;<code>sh</code>&quot;, I can abbreviate the full command.  Ubiquity only requires enough of a command name to disambiguate it within your collection of commands.</p>\n<p>Another thing to note is the use of the constant value <code>noun_arb_text</code>, which declares that these arguments should expect any arbitrary text as input.  </p>\n<p>This facility is not exploited for the present command, but Ubiquity defines <a href=\"http://hg.toolness.com/ubiquity-firefox/file/tip/ubiquity/chrome/content/nlparser/en/nountypes.js\">noun types</a>.  These include concepts such as plain text, dates, address book contacts, browser tabs, bookmark tags, and more.  You can define your own noun types, as well as implement suggestion schemes that help guide the user toward constructing useful input values in the command interface.  You can <a href=\"https://wiki.mozilla.org/Labs/Ubiquity/Ubiquity_0.1_Author_Tutorial#Introduction_to_Noun_Types\">read more about this</a> in the official author tutorial.</p>\n<p>Next up is a quick bit of command-specific configuration:</p>\n<pre lang=\"javascript\" line=\"42\">\n    /**\n     * Command configuration settings.\n     */\n    _config: {\n        // Base URL for the delicious v1 API\n        api_base:      'https://api.del.icio.us',\n\n        // Domain and name of the delicious login session cookie.\n        cookie_domain: '.delicious.com',\n        cookie_name:   '_user'\n    },\n</pre>\n\n<p>Since this command will be posting to Delicious via the V1 API, it&#39;s handy to declare the base URL for the API in an easily changed spot.  That way, you could change this value later on to point the command at another implementation of the API.</p>\n<p>Additionally, this command will employ a little-known authentication trick supported by the Delicious API that accepts the user&#39;s login cookie set by the Delicious website—this &quot;cookie god&quot; auth is used by the official Delicious addon for Firefox.  It&#39;s handy for piggybacking on the website login and removing the need to ask the user for their username and password again and possibly storing it in an insecure manner.</p>\n<p>In fact, this next chunk of code defines a utility method to rummage through the cookie jar:</p>\n<pre lang=\"javascript\" line=\"53\">\n    /**\n     * Dig up the Delicious login session cookie.\n     */\n    _getUserCookie: function() {\n        var iter = cookie_mgr.enumerator;\n        while (iter.hasMoreElements()) {\n            var cookie = iter.getNext();\n            if( cookie instanceof Components.interfaces.nsICookie && \n                cookie.host.indexOf(this._config.cookie_domain) != -1 && \n                cookie.name == this._config.cookie_name) {\n                return decodeURIComponent(cookie.value);\n            }\n        }\n    },\n</pre>\n\n<p>The method defined above, <code>._getUserCookie()</code>, uses the browser&#39;s cookie manager and the values defined in the previous configuration section to find the login session cookie set for Delicious.  Take note that this is far beyond the allowed capabilities of bookmarklets and Greasemoney user scripts—this is digging straight into the browser itself, skipping past the usual content-space security restrictions.  </p>\n<p>In other words: In Ubiquity, <em>the gun is loaded</em> and you should be careful.  </p>\n<p>Moving along, consider this next utility method:</p>\n<pre lang=\"javascript\" line=\"67\">\n    /**\n     * Given input data and modifiers, attempt to assemble data necessary to\n     * post a bookmark.\n     */\n    _extractBookmarkData: function(input_obj, mods) {\n        return {\n            _user:\n                this._getUserCookie(),\n            url:\n                context.focusedWindow.location,\n            description:\n                mods.entitled.text || context.focusedWindow.document.title,\n            extended: \n                input_obj.text,\n            tags:\n                mods.tagged.text\n        };\n    },\n</pre>\n\n<p>Named <code>._extractBookmarkData()</code>, this utility method accepts the results of Ubiquity&#39;s parser interpreting the primary argument and modifier arguments supplied by the user.  Using these data structures, it attempts to build a structure representing the fields of a Delicious bookmark.</p>\n<p>The <code>_user</code> field is used for authentication via the site login cookie.  The <code>url</code> is set from the location bar of the current page.  The <code>description</code>, or title, field of the bookmark is taken from either the <code>entitled</code> modifier or the title of the current page.  The <code>tags</code>, if any, come from the <code>tagged</code> modifier.  And, finally, the <code>extended</code> notes for the bookmark are taken from the primary input argument of the command.</p>\n<p>As you&#39;ll see shortly, this utility method will be used in both the preview and the execution of the command.</p>\n<p>Next, there&#39;s one more utility method to cover:</p>\n<pre lang=\"javascript\" line=\"85\">\n    /**\n     * Given an object, build a URL query string\n     */\n    _buildQueryString: function(data) {\n        var qs = [];\n        for (k in data) if (data[k]) \n            qs.push( encodeURIComponent(k) + '=' + \n                encodeURIComponent(data[k]) );\n        return qs.join('&');\n    },\n</pre>\n\n<p>In anticipation of using the Delicious V1 API, the <code>._buildQueryString()</code> method accepts an object and constructs a URL query string from the encoded properties of the object.  This will be paired with the <code>._extractBookmarkData()</code> method to supply data for API calls.</p>\n<p>Moving along, it&#39;s time to start digging into the meat of this Ubiquity command:</p>\n<pre lang=\"javascript\" line=\"95\">\n    /**\n     * Present a preview of the bookmark under construction during the course\n     * of composing the command.\n     */\n    preview: function(pblock, input_obj, mods) {\n\n        var bm          = this._extractBookmarkData(input_obj, mods);\n        var user_cookie = this._getUserCookie();\n        var user_name   = (user_cookie) ? user_cookie.split(' ')[0] : '';\n\n        var ns = { user_name: user_name, bm: bm };\n        var tmpl;\n</pre>\n\n<p>With this code, the implementation of command method <code>.preview()</code> has begun.  This method is used by Ubiquity to generate a live preview of the command.  Called with a DOM node (<code>pblock</code>) and partially completed command input (<code>input_obj</code> and <code>mods</code>), this method is expected to build a representation of the command&#39;s results in the DOM node.  As the user types, this method will be called over and over again, ideally offering feedback as the user composes a command.</p>\n<p>Continuing on, consider this next chunk of code checking the validity of command input:</p>\n<pre lang=\"javascript\" line=\"107\">\n        if (!user_name) {\n\n            // If there's no user name, there's no login, so this command won't work. \n            tmpl = [ \n                '<p style=\"color: #d44\">No active user found - log in at ', \n                '<img src=\"http://delicious.com/favicon.ico\"> ',\n                '<b><a style=\"color: #3774D0\" href=\"http://delicious.com\">delicious.com</a></b> ', \n                'to use this command.</p>'\n            ].join('');\n\n        } else if (!bm.description) {\n\n            // If there's no title, then this is an error too.\n            tmpl = [ \n                '<p style=\"color: #d44\">A title is required for bookmarks on ', \n                '<img src=\"http://delicious.com/favicon.ico\"> ',\n                '<b><a style=\"color: #3774D0\" href=\"http://delicious.com\">delicious.com</a></b> ', \n                '</p>'\n            ].join('');\n</pre>\n\n<p>This chunk of code first checks for a user name, which can be extracted from a valid Delicious login cookie, if one was found.  If not found, the command will fail—so the preview built here will instruct the user to login at Delicious before going further.</p>\n<p>The second precondition for using the command is that the bookmark has been given a title.  By default, this is the title of the current page—but, some pages don&#39;t offer titles.  So, an error needs to be flagged if the user hasn&#39;t manually supplied a title in this case.</p>\n<p>Finally, notice in both of these error cases, a string of HTML is composed in the variable <code>tmpl</code>.  This will be used at the end of the method to populate the DOM node passed in as <code>pblock</code>.</p>\n<p>Now, assuming that all the command&#39;s prerequisites have been met, it&#39;s time to try constructing a proper preview for the results of this command: </p>\n<pre lang=\"javascript\" line=\"126\">\n        } else {\n\n            // Attempt to construct a vaguely delicious-esque preview of a bookmark.\n            tmpl = [ \n                '<style type=\"text/css\">',\n                    '.preview a { color: #3774D0 }',\n                    '.del-bookmark { font: 12px arial; color: #ddd; background: #eee; line-height: 1.25em }',\n                    '.del-bookmark a.title { color: #1259C7 }',\n                    '.del-bookmark .full-url { color: #396C9B; font-size: 12px; display: block; padding: 0.25em 0 }',\n                    '.del-bookmark .notes { color: #4D4D4D }',\n                    '.del-bookmark .tags { color: #787878; padding-top: 0.25em; text-align: right }',\n                '</style>',\n                '<div class=\"preview\">',\n                    '<p>Share a bookmark at <img src=\"http://delicious.com/favicon.ico\"> ',\n                        '<b><a href=\"http://delicious.com/${user_name}\">delicious.com/${user_name}</a></b>:</p>',\n                    '<div class=\"del-bookmark\">',\n                        '<div style=\"padding: 1em;\">',\n                        '<a class=\"title\" href=\"${bm.url}\">${bm.description}</a>',\n                        '<a class=\"full-url\" href=\"${bm.url}\">${bm.url}</a>',\n                        bm.extended ? \n                            '<div class=\"notes\">${bm.extended}</div>' : '',\n                        bm.tags ?\n                            '<div class=\"tags\"><span>tags:</span> ${bm.tags}</div>' : '',\n                    '</div>',\n                '</div>'\n            ].join(\"\\n\");\n\n        }\n\n        pblock.innerHTML = CmdUtils.renderTemplate(tmpl, ns);\n    },\n</pre>\n\n<p>Building on the notion that previews are built in a DOM node, the code above uses both CSS and HTML to assemble a quick-and-dirty facsimile of a Delicious bookmark—which will be rendered like this:</p>\n<img src=\"/2008/ubiq-share-on-delicious-preview.jpg\" style=\"border: 1px solid #333; margin: 0.25em; padding: 0.25em\" />\n\n<p>Also note that Ubiquity provides a template engine for use in generating content—namely the <a href=\"http://code.google.com/p/trimpath/wiki/JavaScriptTemplates\">JavaScript Templates</a> engine from the <a href=\"http://code.google.com/p/trimpath/wiki/TrimPath\">TrimPath</a> project.  This engine may eventually be replaced with another, but the notion is that Ubiquity will provide tools to more easily generate previews and more.</p>\n<p>The conclusion of the <code>.preview()</code> method uses the template engine with a call to <code>CmdUtils.renderTemplate()</code> to inject content into the preview element by way of the <code>.innerHTML</code> property.</p>\n<p>Now that the preview is out of the way, it&#39;s time to get down to implementing the execution of the command:</p>\n<pre lang=\"javascript\" line=\"157\">    \n    /**\n     * Attempt to use the delicious v1 API to post a bookmark using the \n     * command input\n     */\n    execute: function(input_obj, mods) {\n        var bm          = this._extractBookmarkData(input_obj, mods);\n        var user_cookie = this._getUserCookie();\n        var user_name   = (user_cookie) ? user_cookie.split(' ')[0] : '';\n\n        if (!user_name) {\n            // If there's no user name, there's no login, so this command won't work. \n            displayMessage('No active user found - log in at delicious.com ' +\n                'to use this command.');\n            return false;\n        }\n\n        if (!bm.description) {\n            // If there's no title, somehow, then this is an error too.\n            displayMessage(\"A title is required for bookmarks at delicious.com\");\n            return false;\n        }\n</pre>\n\n<p>Mirroring the <code>.preview()</code> method, the <code>.execute()</code> method first checks for validity of the arguments given by the user.  A missing user name or title result in a notification that the command has failed.</p>\n<p>But, if the arguments are all valid, it&#39;s time to actually issue a request to the Delicious V1 API:</p>\n<pre lang=\"javascript\" line=\"178\">\n        var path = '/v1/posts/add';\n        var url  = this._config.api_base + path;\n\n        var req = Components.classes[\"@mozilla.org/xmlextras/xmlhttprequest;1\"].\n            createInstance();\n\n        req.open('POST', url, true);\n\n        req.onload = function(ev) { \n            displayMessage('Bookmark \"' + bm.description + '\" ' + \n                'shared at delicious.com/' + user_name);\n        }\n\n        req.onerror = function(ev) { \n            displayMessage('ERROR: Bookmark \"' + bm.description + '\" ' + \n                ' NOT shared on delicious.com/' + user_name);\n        }\n</pre>\n\n<p>Using the base URL for the Delicious API declared earlier in the configuration section, the <code>.execute()</code> method constructs an API URL for the <code>/v1/posts/add</code> method.  Then, it creates an instance of <code>XMLHttpRequest</code> from the browser to be used in sending the API request.  Event handlers are registered with the object to present notifications to the user indicating whether or not the API request was successful.</p>\n<p>At long last, it&#39;s time to wrap up this method and make the API request:</p>\n<pre lang=\"javascript\" line=\"195\">\n        req.setRequestHeader('Authorization', 'Basic Y29va2llOmNvb2tpZQ=='); // btoa('cookie:cookie')\n\n        var mediator = Components.classes[\"@mozilla.org/appshell/window-mediator;1\"].\n            getService(Components.interfaces.nsIWindowMediator);\n        var win = mediator.getMostRecentWindow(null);\n        var user_agent = win.navigator.userAgent + \";Ubiquity-share-on-delicious\";\n\n        req.setRequestHeader(\"User-Agent\", user_agent);      \n\n        req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n        req.send(this._buildQueryString(bm));\n    },\n\n    EOF:null // I hate trailing commas\n});\n</pre>\n\n<p>The login cookie authentication supported by the Delicious V1 API is triggered by supplying a user name / password pair of <code>cookie</code>, which is done by setting the <code>Authorization</code> request header.  The login cookie is then expected to be passed in as the POST variable <code>_user</code>, which is done in the <code>._extractBookmarkData()</code> utility method.</p>\n<p>Another bit here that shows more access of browser resources is the construction of a unique User-Agent header for this API call based on the browser&#39;s own User-Agent string, something that&#39;s suggested in the guidelines for using the Delicious API.</p>\n<p>Finally, the <code>.execute()</code> method—and the command itself—is wrapped up with by sending off the bookmark data encoded as POST form variables with the <code>._buildQueryString()</code> utility method.</p>\n<p>And, that&#39;s it—a command-driven Delicious browser extension in a little over 200 lines of code.  There&#39;s still more to be done to really make this thing full-featured, but I think this shows off the basic features of Ubiquity.  I&#39;m hoping to dig in deeper and explore further, taking a look at running Greasemonkey-style code at <a href=\"https://wiki.mozilla.org/Labs/Ubiquity/Ubiquity_0.1_Author_Tutorial#Running_on_page_load_and_startup\">browser startup and page load</a>, as well as playing with some more browser chrome features.  </p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221085986\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://jclark.org/weblog/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d0a9ab4b71ce193e98b7284ca257e327&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://jclark.org/weblog/\">Jason Clark</a>\n</div>\n<a href=\"#comment-221085986\" class=\"permalink\"><time datetime=\"2008-09-01T14:47:35\">2008-09-01T14:47:35</time></a>\n</div>\n<div class=\"content\"><p>First off-  fantastic post.  Great to see a lengthy post here again, although I'm one to talk.  This is an excellent introduction to Ubiquity command development, and tres useful to boot.</p>\n<p>I'm wondering why you chose to construct and post the XMLHttpRequest manually instead of using jQuery, which is included with Ubiquity.  I don't know that there's any benefit other than some simplicity, but I took a crack at converting your code to use jQuery, which works nicely.  In the 'execute' function, replace everything after \"var url  = this._config.api_base + path;\" with this (hope code blocks work in comments):</p>\n<p><code>\nvar win = context.focusedWindow;\nvar user_agent = win.navigator.userAgent + \";Ubiquity-share-on-delicious\";</code></p>\n<pre><code>    jQuery.ajax({\ntype: \"POST\",\nurl: url,\ndata: this._buildQueryString(bm),\nusername: \"cookie\",\npassword: \"cookie\",\nbeforeSend: function( req ) {\nreq.setRequestHeader(\"User-Agent\", user_agent); \n},\nerror: function() {\ndisplayMessage('ERROR: Bookmark \"' + bm.description + '\" ' + \n' NOT shared on delicious.com/' + user_name);\n},\nsuccess: function() {\ndisplayMessage('Bookmark \"' + bm.description + '\" ' + \n'shared at delicious.com/' + user_name);\n},\n});\n</code></pre>\n<p></p>\n<p>Also, with both versions of the code, I'm seeing some unexpected behavior around authentication.  Assume I'm logged in to delicious, with \"stay logged in\" checked, and I restart my browser.  Trying to post with the command fails with a 401 unauthorized, even though I can see the cookie was sent (via Live HTTP Headers extension).  Going to delicious.com shows me logged in, and once I've viewed the site, the command works.  Except that now I can't reproduce; but I know it happened because I've got the headers.  At any rate, it is working nicely, but the previous failure is bugging me... feel like I'm overlooking something.  </p>\n<p>Thanks again for an awesome post.  Hope to see more of the same.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221085988\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e799a79441c7543be48562403411cd13&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Ryan Scott Scheel</a>\n</div>\n<a href=\"#comment-221085988\" class=\"permalink\"><time datetime=\"2008-09-01T15:07:01\">2008-09-01T15:07:01</time></a>\n</div>\n<div class=\"content\"><p>You should be helping with the documentation, if you aren't already.  Very nice job with this article;</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221085991\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://azarask.in\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e4307f205d017ba76647806951e14bb0&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://azarask.in\">Aza Raskin</a>\n</div>\n<a href=\"#comment-221085991\" class=\"permalink\"><time datetime=\"2008-09-02T01:44:13\">2008-09-02T01:44:13</time></a>\n</div>\n<div class=\"content\"><p>Hi Leslie,</p>\n<p>This is a beautiful tutorial on writing a Ubiquity command. We'd love your help in making Ubiquity's documentation better (especially dev facing). You should totally link to this from the Ubiquity Wiki -- or even add the content in someway.</p>\n<p>Anyway, just wanted to say thanks.</p>\n<p>-- Aza</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221085993\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.slackorama.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=15b474c86cd73c2d12c1d77af11c1d8a&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.slackorama.com\">seth</a>\n</div>\n<a href=\"#comment-221085993\" class=\"permalink\"><time datetime=\"2008-09-08T17:30:16\">2008-09-08T17:30:16</time></a>\n</div>\n<div class=\"content\"><p>Am I doing something wrong?  </p>\n<p>When I enter in \"sh this tagged tag1 tag2 entitled This is a title\" everything after the tagged is added as a tag. It's not seeing the entitled part.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221085994\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://spyced.blogspot.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=849810634810c960e5e7c27fa54a0f5b&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://spyced.blogspot.com/\">http://spyced.blogspot.com/</a>\n</div>\n<a href=\"#comment-221085994\" class=\"permalink\"><time datetime=\"2008-09-15T19:12:58\">2008-09-15T19:12:58</time></a>\n</div>\n<div class=\"content\"><p>Did something break?  I'm getting a 404 accessing http://decafbad.com/hg/UbiquityCommands/file/tip/delicious.ubiq.js</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221085995\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221085995\" class=\"permalink\"><time datetime=\"2008-09-15T23:07:42\">2008-09-15T23:07:42</time></a>\n</div>\n<div class=\"content\"><p>Yeah, looks like I had a small snafu with switching back from Lighttpd to Apache.  Left out a rewrite rule - doh!</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221085996\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=357a20e8c56e69d6f9734d23ef9517e8&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Tony</a>\n</div>\n<a href=\"#comment-221085996\" class=\"permalink\"><time datetime=\"2008-10-22T04:56:03\">2008-10-22T04:56:03</time></a>\n</div>\n<div class=\"content\"><p>Great article. This is replacing my delicious bookmarklet. Thanks!</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221085997\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=31461076fcbce091ff822fc9ac31315d&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">dgtlchlk</a>\n</div>\n<a href=\"#comment-221085997\" class=\"permalink\"><time datetime=\"2009-04-14T01:06:57\">2009-04-14T01:06:57</time></a>\n</div>\n<div class=\"content\"><p>Great article and command.\nWish it worked correctly with the latest 0.1.8 release though. No matter what text you put in it adds everything as the notes. The tagged and entitled modifiers don't work.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221085999\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.nolanhergert.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=957e24509baf770ba57ad306e20f201c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.nolanhergert.com\">Nolan</a>\n</div>\n<a href=\"#comment-221085999\" class=\"permalink\"><time datetime=\"2009-04-16T03:10:07\">2009-04-16T03:10:07</time></a>\n</div>\n<div class=\"content\"><p>I second that comment. Delicious is actually saying the link given was \"chrome://browser/content/browser.xul\" and marking it as harmful inside delicious!</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221086002\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=3d056a5b07c384647fe0806b0dfc429e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Justin</a>\n</div>\n<a href=\"#comment-221086002\" class=\"permalink\"><time datetime=\"2009-07-06T12:39:39\">2009-07-06T12:39:39</time></a>\n</div>\n<div class=\"content\"><p>Hi Leslie,</p>\n<p>Thanks for the delicious ubiquity command. Unfortunately, as one of the commenters above mentions, the tagged modifier doesn't seem to work. I'm using Ubiquity 0.5 pre and typing the phrase:</p>\n<p>share tagged foo</p>\n<p>Adds the bookmark to Delicious with the note text \"tagged foo\"</p>\n<p>Cheers, Justin</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221086004\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://ericscalf.com/stream\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=0775f9beff626496b86d7cb602e5f46f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://ericscalf.com/stream\">Eric</a>\n</div>\n<a href=\"#comment-221086004\" class=\"permalink\"><time datetime=\"2009-07-20T22:43:17\">2009-07-20T22:43:17</time></a>\n</div>\n<div class=\"content\"><p>Echoing others.. I'm using the latest ubiquity (err, next to latest.. 0.1.8?), and doing \"share-on-delicious this is a note tagged testing\" saves the link with notes \"this is a note tagged testing\" and no tags. :(  Then again, the other delicious command I've found (by someone else) is having the same issue.</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "In my [last post][last], I got all fluffy about how cool [Ubiquity][] is but didn't share any code to prove the point.  As it happens, I have come up with at least one useful command that I'm starting to use habitually in posting bookmarks to Delicious.  You can [subscribe to my command][subs] or [check out the full source][source]—this post will serve as a dissection of the thing.  Since this will be fairly lengthy, follow along after the jump.\r\n\r\nOh, and it's been awhile since I posted something this in-depth around here, so feel free to let me know how this first draft works.  And, bug reports and patches are of course welcome.\r\n\r\n[ubiquity]: http://labs.mozilla.com/2008/08/introducing-ubiquity/\r\n[last]: http://decafbad.com/blog/2008/08/31/ubiquity-cracks-open-personal-mashup-tinkering \"Ubiquity cracks open personal mashup tinkering\"\r\n[subs]: http://decafbad.com/UbiquityCommands/\r\n[source]: http://decafbad.com/hg/UbiquityCommands/file/tip/delicious.ubiq.js\r\n\r\n<!--more-->\r\n\r\nTo begin, consider the following code starting off the command source code:\r\n\r\n<pre lang=\"javascript\" line=\"1\">\r\n/**\r\n * share-on-delicious - an Ubiquity command for sharing bookmarks on\r\n * delicious.com\r\n *\r\n * l.m.orchard@pobox.com\r\n * http://decafbad.com/\r\n * Share and Enjoy!\r\n */\r\nvar uext = Application.extensions.get('ubiquity@labs.mozilla.com');\r\n\r\nvar cookie_mgr = Components.classes[\"@mozilla.org/cookiemanager;1\"]\r\n    .getService(Components.interfaces.nsICookieManager);\r\n</pre>\r\n\r\nThe first thing to note here is that a short header comment introduces the command.  This isn't required, but it's a good idea.  It's also something you can't really do with bookmarklets.  On the other hand, Greasemonkey user scripts expect metadata about the script to be provided here, but Ubiquity doesn't use this convention.\r\n\r\nSecond, notice that the code accesses some chrome-level resources.  Again, this is something unavailable to bookmarklets and Greasemonkey user scripts.  Just take a look at the [FUEL library documentation][fuel] to get a quick sense of what's available using that simplified API, not to mention what's available using the lower-level browser APIs.\r\n\r\n[fuel]: http://developer.mozilla.org/en/FUEL\r\n\r\nNow, check out this next chunk of code, which begins the construction of an Ubiquity command:\r\n\r\n<pre lang=\"javascript\" line=\"13\">\r\nCmdUtils.CreateCommand({\r\n    \r\n    name:        \r\n        'share-on-delicious',\r\n    icon:\r\n        'http://delicious.com/favicon.ico',\r\n    description: \r\n        'Share the current page as a bookmark on delicious.com',\r\n    help:        \r\n        'Select text on the page to use as notes, or enter your own ' + \r\n        'text after the command word.  You can also assign tags to the '+ \r\n        'bookmark with the \"tagged\" modifier, and alter the bookmark ' + \r\n        'default page title with the \"entitled\" modifier.  Note that ' + \r\n        'you must also already be logged in at delicious.com to use ' +\r\n        'this command.',\r\n\r\n    homepage:   \r\n        'http://decafbad.com',\r\n    author: { \r\n        name: 'Leslie Michael Orchard', \r\n        email: 'l.m.orchard@pobox.com' \r\n    },\r\n    license:\r\n        'MPL/GPL/LGPL',\r\n</pre>\r\n\r\nWhereas Greasemonkey scripts support metadata in the header comment, the Ubiquity command script API works a little differently.  \r\n\r\nThe [`CmdUtils` module][cmdutils] provided by Ubiquity offers a `CreateCommand` function, which expects an object as a parameter.  The object literal whose construction is begun in the code above serves as a self-contained package for the command, bearing metadata describing the command as well as containing all the code necessary to implement it.\r\n\r\nSo, in the above code block, you can see the machine-readable description of the command—including a command name, display icon, home page URL, author information, and license.  The command name (`share-on-delicious`) will be used by the Ubiquity command parser, but the rest of the description will also be used in the list of commands available to the user, invoked by the `command-list` command, like so:\r\n\r\n<img src=\"/2008/ubiq-share-on-delicious-list.jpg\" style=\"border: 1px solid #333; margin: 0.25em; padding: 0.25em\" />\r\n\r\n[cmdutils]: http://hg.toolness.com/ubiquity-firefox/file/tip/ubiquity/chrome/content/cmdutils.js\r\n\r\nMoving along, this next chunk of code introduces the first functional bits of the command:\r\n\r\n<pre lang=\"javascript\" line=\"37\">\r\n    takes: { notes: noun_arb_text },\r\n    modifiers: { \r\n        tagged:  noun_arb_text,\r\n        entitled: noun_arb_text\r\n    },\r\n</pre>\r\n\r\nLike smart keyword shortcut bookmarks, Ubiquity commands accept user-supplied input.  But, what's unique to Ubiquity is that it employs a parser whose goal is to support something approximating natural language.  At present, this results in commands that support a single primary argument—declared above with the `takes` property—and any number of additional keyword modifiers—declared above by the `modifiers` property.\r\n\r\nFor the command under construction here, this establishes a pattern something like the following:\r\n\r\n    share-on-delicious {notes} [tagged {tags} entitled {title}]\r\n\r\nContent for the `{notes}` argument can either be typed directly by hand, or it can be supplied by text highlighted on the page.  To use highlighted text, you can either issue the command alone, or use the word `this` for the `{notes}` argument before including further modifiers.\r\n\r\nThe modifiers `tagged` and `entitled` are optional, and can be used in any order.  Each of these keywords signifies the start of a different argument—which unfortunately can collide with the literal data supplied for notes, which will hopefully be a rare occurrence.\r\n\r\nAll of this adds up command invocations including the following:\r\n\r\n    share-on-delicious\r\n    share-on-delicious I really like this page tagged nifty amusing\r\n    share-on-delicious this entitled This bookmark has no tags\r\n    sh this tagged osx software apple entitled This is good OS X software\r\n\r\nThat last example is important—since I have no other commands starting with \"`sh`\", I can abbreviate the full command.  Ubiquity only requires enough of a command name to disambiguate it within your collection of commands.\r\n\r\nAnother thing to note is the use of the constant value `noun_arb_text`, which declares that these arguments should expect any arbitrary text as input.  \r\n\r\nThis facility is not exploited for the present command, but Ubiquity defines [noun types][noun].  These include concepts such as plain text, dates, address book contacts, browser tabs, bookmark tags, and more.  You can define your own noun types, as well as implement suggestion schemes that help guide the user toward constructing useful input values in the command interface.  You can [read more about this][noun_tut] in the official author tutorial.\r\n\r\n[noun]: http://hg.toolness.com/ubiquity-firefox/file/tip/ubiquity/chrome/content/nlparser/en/nountypes.js\r\n[noun_tut]: https://wiki.mozilla.org/Labs/Ubiquity/Ubiquity_0.1_Author_Tutorial#Introduction_to_Noun_Types\r\n\r\nNext up is a quick bit of command-specific configuration:\r\n\r\n<pre lang=\"javascript\" line=\"42\">\r\n    /**\r\n     * Command configuration settings.\r\n     */\r\n    _config: {\r\n        // Base URL for the delicious v1 API\r\n        api_base:      'https://api.del.icio.us',\r\n\r\n        // Domain and name of the delicious login session cookie.\r\n        cookie_domain: '.delicious.com',\r\n        cookie_name:   '_user'\r\n    },\r\n</pre>\r\n\r\nSince this command will be posting to Delicious via the V1 API, it's handy to declare the base URL for the API in an easily changed spot.  That way, you could change this value later on to point the command at another implementation of the API.\r\n\r\nAdditionally, this command will employ a little-known authentication trick supported by the Delicious API that accepts the user's login cookie set by the Delicious website—this \"cookie god\" auth is used by the official Delicious addon for Firefox.  It's handy for piggybacking on the website login and removing the need to ask the user for their username and password again and possibly storing it in an insecure manner.\r\n\r\nIn fact, this next chunk of code defines a utility method to rummage through the cookie jar:\r\n\r\n<pre lang=\"javascript\" line=\"53\">\r\n    /**\r\n     * Dig up the Delicious login session cookie.\r\n     */\r\n    _getUserCookie: function() {\r\n        var iter = cookie_mgr.enumerator;\r\n        while (iter.hasMoreElements()) {\r\n            var cookie = iter.getNext();\r\n            if( cookie instanceof Components.interfaces.nsICookie && \r\n                cookie.host.indexOf(this._config.cookie_domain) != -1 && \r\n                cookie.name == this._config.cookie_name) {\r\n                return decodeURIComponent(cookie.value);\r\n            }\r\n        }\r\n    },\r\n</pre>\r\n\r\nThe method defined above, `._getUserCookie()`, uses the browser's cookie manager and the values defined in the previous configuration section to find the login session cookie set for Delicious.  Take note that this is far beyond the allowed capabilities of bookmarklets and Greasemoney user scripts—this is digging straight into the browser itself, skipping past the usual content-space security restrictions.  \r\n\r\nIn other words: In Ubiquity, *the gun is loaded* and you should be careful.  \r\n\r\nMoving along, consider this next utility method:\r\n\r\n<pre lang=\"javascript\" line=\"67\">\r\n    /**\r\n     * Given input data and modifiers, attempt to assemble data necessary to\r\n     * post a bookmark.\r\n     */\r\n    _extractBookmarkData: function(input_obj, mods) {\r\n        return {\r\n            _user:\r\n                this._getUserCookie(),\r\n            url:\r\n                context.focusedWindow.location,\r\n            description:\r\n                mods.entitled.text || context.focusedWindow.document.title,\r\n            extended: \r\n                input_obj.text,\r\n            tags:\r\n                mods.tagged.text\r\n        };\r\n    },\r\n</pre>\r\n\r\nNamed `._extractBookmarkData()`, this utility method accepts the results of Ubiquity's parser interpreting the primary argument and modifier arguments supplied by the user.  Using these data structures, it attempts to build a structure representing the fields of a Delicious bookmark.\r\n\r\nThe `_user` field is used for authentication via the site login cookie.  The `url` is set from the location bar of the current page.  The `description`, or title, field of the bookmark is taken from either the `entitled` modifier or the title of the current page.  The `tags`, if any, come from the `tagged` modifier.  And, finally, the `extended` notes for the bookmark are taken from the primary input argument of the command.\r\n\r\nAs you'll see shortly, this utility method will be used in both the preview and the execution of the command.\r\n\r\nNext, there's one more utility method to cover:\r\n\r\n<pre lang=\"javascript\" line=\"85\">\r\n    /**\r\n     * Given an object, build a URL query string\r\n     */\r\n    _buildQueryString: function(data) {\r\n        var qs = [];\r\n        for (k in data) if (data[k]) \r\n            qs.push( encodeURIComponent(k) + '=' + \r\n                encodeURIComponent(data[k]) );\r\n        return qs.join('&');\r\n    },\r\n</pre>\r\n\r\nIn anticipation of using the Delicious V1 API, the `._buildQueryString()` method accepts an object and constructs a URL query string from the encoded properties of the object.  This will be paired with the `._extractBookmarkData()` method to supply data for API calls.\r\n\r\nMoving along, it's time to start digging into the meat of this Ubiquity command:\r\n\r\n<pre lang=\"javascript\" line=\"95\">\r\n    /**\r\n     * Present a preview of the bookmark under construction during the course\r\n     * of composing the command.\r\n     */\r\n    preview: function(pblock, input_obj, mods) {\r\n\r\n        var bm          = this._extractBookmarkData(input_obj, mods);\r\n        var user_cookie = this._getUserCookie();\r\n        var user_name   = (user_cookie) ? user_cookie.split(' ')[0] : '';\r\n\r\n        var ns = { user_name: user_name, bm: bm };\r\n        var tmpl;\r\n</pre>\r\n\r\nWith this code, the implementation of command method `.preview()` has begun.  This method is used by Ubiquity to generate a live preview of the command.  Called with a DOM node (`pblock`) and partially completed command input (`input_obj` and `mods`), this method is expected to build a representation of the command's results in the DOM node.  As the user types, this method will be called over and over again, ideally offering feedback as the user composes a command.\r\n\r\nContinuing on, consider this next chunk of code checking the validity of command input:\r\n\r\n<pre lang=\"javascript\" line=\"107\">\r\n        if (!user_name) {\r\n\r\n            // If there's no user name, there's no login, so this command won't work. \r\n            tmpl = [ \r\n                '<p style=\"color: #d44\">No active user found - log in at ', \r\n                '<img src=\"http://delicious.com/favicon.ico\"> ',\r\n                '<b><a style=\"color: #3774D0\" href=\"http://delicious.com\">delicious.com</a></b> ', \r\n                'to use this command.</p>'\r\n            ].join('');\r\n\r\n        } else if (!bm.description) {\r\n\r\n            // If there's no title, then this is an error too.\r\n            tmpl = [ \r\n                '<p style=\"color: #d44\">A title is required for bookmarks on ', \r\n                '<img src=\"http://delicious.com/favicon.ico\"> ',\r\n                '<b><a style=\"color: #3774D0\" href=\"http://delicious.com\">delicious.com</a></b> ', \r\n                '</p>'\r\n            ].join('');\r\n</pre>\r\n\r\nThis chunk of code first checks for a user name, which can be extracted from a valid Delicious login cookie, if one was found.  If not found, the command will fail—so the preview built here will instruct the user to login at Delicious before going further.\r\n\r\nThe second precondition for using the command is that the bookmark has been given a title.  By default, this is the title of the current page—but, some pages don't offer titles.  So, an error needs to be flagged if the user hasn't manually supplied a title in this case.\r\n\r\nFinally, notice in both of these error cases, a string of HTML is composed in the variable `tmpl`.  This will be used at the end of the method to populate the DOM node passed in as `pblock`.\r\n\r\nNow, assuming that all the command's prerequisites have been met, it's time to try constructing a proper preview for the results of this command: \r\n\r\n<pre lang=\"javascript\" line=\"126\">\r\n        } else {\r\n\r\n            // Attempt to construct a vaguely delicious-esque preview of a bookmark.\r\n            tmpl = [ \r\n                '<style type=\"text/css\">',\r\n                    '.preview a { color: #3774D0 }',\r\n                    '.del-bookmark { font: 12px arial; color: #ddd; background: #eee; line-height: 1.25em }',\r\n                    '.del-bookmark a.title { color: #1259C7 }',\r\n                    '.del-bookmark .full-url { color: #396C9B; font-size: 12px; display: block; padding: 0.25em 0 }',\r\n                    '.del-bookmark .notes { color: #4D4D4D }',\r\n                    '.del-bookmark .tags { color: #787878; padding-top: 0.25em; text-align: right }',\r\n                '</style>',\r\n                '<div class=\"preview\">',\r\n                    '<p>Share a bookmark at <img src=\"http://delicious.com/favicon.ico\"> ',\r\n                        '<b><a href=\"http://delicious.com/${user_name}\">delicious.com/${user_name}</a></b>:</p>',\r\n                    '<div class=\"del-bookmark\">',\r\n                        '<div style=\"padding: 1em;\">',\r\n                        '<a class=\"title\" href=\"${bm.url}\">${bm.description}</a>',\r\n                        '<a class=\"full-url\" href=\"${bm.url}\">${bm.url}</a>',\r\n                        bm.extended ? \r\n                            '<div class=\"notes\">${bm.extended}</div>' : '',\r\n                        bm.tags ?\r\n                            '<div class=\"tags\"><span>tags:</span> ${bm.tags}</div>' : '',\r\n                    '</div>',\r\n                '</div>'\r\n            ].join(\"\\n\");\r\n\r\n        }\r\n\r\n        pblock.innerHTML = CmdUtils.renderTemplate(tmpl, ns);\r\n    },\r\n</pre>\r\n\r\nBuilding on the notion that previews are built in a DOM node, the code above uses both CSS and HTML to assemble a quick-and-dirty facsimile of a Delicious bookmark—which will be rendered like this:\r\n\r\n<img src=\"/2008/ubiq-share-on-delicious-preview.jpg\" style=\"border: 1px solid #333; margin: 0.25em; padding: 0.25em\" />\r\n\r\nAlso note that Ubiquity provides a template engine for use in generating content—namely the [JavaScript Templates][jst] engine from the [TrimPath][] project.  This engine may eventually be replaced with another, but the notion is that Ubiquity will provide tools to more easily generate previews and more.\r\n\r\nThe conclusion of the `.preview()` method uses the template engine with a call to `CmdUtils.renderTemplate()` to inject content into the preview element by way of the `.innerHTML` property.\r\n\r\n[jst]: http://code.google.com/p/trimpath/wiki/JavaScriptTemplates\r\n[trimpath]: http://code.google.com/p/trimpath/wiki/TrimPath\r\n\r\nNow that the preview is out of the way, it's time to get down to implementing the execution of the command:\r\n\r\n<pre lang=\"javascript\" line=\"157\">    \r\n    /**\r\n     * Attempt to use the delicious v1 API to post a bookmark using the \r\n     * command input\r\n     */\r\n    execute: function(input_obj, mods) {\r\n        var bm          = this._extractBookmarkData(input_obj, mods);\r\n        var user_cookie = this._getUserCookie();\r\n        var user_name   = (user_cookie) ? user_cookie.split(' ')[0] : '';\r\n\r\n        if (!user_name) {\r\n            // If there's no user name, there's no login, so this command won't work. \r\n            displayMessage('No active user found - log in at delicious.com ' +\r\n                'to use this command.');\r\n            return false;\r\n        }\r\n\r\n        if (!bm.description) {\r\n            // If there's no title, somehow, then this is an error too.\r\n            displayMessage(\"A title is required for bookmarks at delicious.com\");\r\n            return false;\r\n        }\r\n</pre>\r\n\r\nMirroring the `.preview()` method, the `.execute()` method first checks for validity of the arguments given by the user.  A missing user name or title result in a notification that the command has failed.\r\n\r\nBut, if the arguments are all valid, it's time to actually issue a request to the Delicious V1 API:\r\n\r\n<pre lang=\"javascript\" line=\"178\">\r\n        var path = '/v1/posts/add';\r\n        var url  = this._config.api_base + path;\r\n\r\n        var req = Components.classes[\"@mozilla.org/xmlextras/xmlhttprequest;1\"].\r\n            createInstance();\r\n\r\n        req.open('POST', url, true);\r\n\r\n        req.onload = function(ev) { \r\n            displayMessage('Bookmark \"' + bm.description + '\" ' + \r\n                'shared at delicious.com/' + user_name);\r\n        }\r\n\r\n        req.onerror = function(ev) { \r\n            displayMessage('ERROR: Bookmark \"' + bm.description + '\" ' + \r\n                ' NOT shared on delicious.com/' + user_name);\r\n        }\r\n</pre>\r\n\r\nUsing the base URL for the Delicious API declared earlier in the configuration section, the `.execute()` method constructs an API URL for the `/v1/posts/add` method.  Then, it creates an instance of `XMLHttpRequest` from the browser to be used in sending the API request.  Event handlers are registered with the object to present notifications to the user indicating whether or not the API request was successful.\r\n\r\nAt long last, it's time to wrap up this method and make the API request:\r\n\r\n<pre lang=\"javascript\" line=\"195\">\r\n        req.setRequestHeader('Authorization', 'Basic Y29va2llOmNvb2tpZQ=='); // btoa('cookie:cookie')\r\n\r\n        var mediator = Components.classes[\"@mozilla.org/appshell/window-mediator;1\"].\r\n            getService(Components.interfaces.nsIWindowMediator);\r\n        var win = mediator.getMostRecentWindow(null);\r\n        var user_agent = win.navigator.userAgent + \";Ubiquity-share-on-delicious\";\r\n\r\n        req.setRequestHeader(\"User-Agent\", user_agent);      \r\n\r\n        req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n        req.send(this._buildQueryString(bm));\r\n    },\r\n\r\n    EOF:null // I hate trailing commas\r\n});\r\n</pre>\r\n\r\nThe login cookie authentication supported by the Delicious V1 API is triggered by supplying a user name / password pair of `cookie`, which is done by setting the `Authorization` request header.  The login cookie is then expected to be passed in as the POST variable `_user`, which is done in the `._extractBookmarkData()` utility method.\r\n\r\nAnother bit here that shows more access of browser resources is the construction of a unique User-Agent header for this API call based on the browser's own User-Agent string, something that's suggested in the guidelines for using the Delicious API.\r\n\r\nFinally, the `.execute()` method—and the command itself—is wrapped up with by sending off the bookmark data encoded as POST form variables with the `._buildQueryString()` utility method.\r\n\r\nAnd, that's it—a command-driven Delicious browser extension in a little over 200 lines of code.  There's still more to be done to really make this thing full-featured, but I think this shows off the basic features of Ubiquity.  I'm hoping to dig in deeper and explore further, taking a look at running Greasemonkey-style code at [browser startup and page load][load], as well as playing with some more browser chrome features.  \r\n\r\n[load]: https://wiki.mozilla.org/Labs/Ubiquity/Ubiquity_0.1_Author_Tutorial#Running_on_page_load_and_startup\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221085986\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://jclark.org/weblog/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d0a9ab4b71ce193e98b7284ca257e327&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://jclark.org/weblog/\">Jason Clark</a>\n                </div>\n                <a href=\"#comment-221085986\" class=\"permalink\"><time datetime=\"2008-09-01T14:47:35\">2008-09-01T14:47:35</time></a>\n            </div>\n            <div class=\"content\"><p>First off-  fantastic post.  Great to see a lengthy post here again, although I'm one to talk.  This is an excellent introduction to Ubiquity command development, and tres useful to boot.</p>\n\n<p>I'm wondering why you chose to construct and post the XMLHttpRequest manually instead of using jQuery, which is included with Ubiquity.  I don't know that there's any benefit other than some simplicity, but I took a crack at converting your code to use jQuery, which works nicely.  In the 'execute' function, replace everything after \"var url  = this._config.api_base + path;\" with this (hope code blocks work in comments):</p>\n\n<p><code>\n        var win = context.focusedWindow;\n        var user_agent = win.navigator.userAgent + \";Ubiquity-share-on-delicious\";</code></p>\n\n<pre><code>    jQuery.ajax({\n      type: \"POST\",\n      url: url,\n      data: this._buildQueryString(bm),\n      username: \"cookie\",\n      password: \"cookie\",\n      beforeSend: function( req ) {\n        req.setRequestHeader(\"User-Agent\", user_agent); \n      },\n      error: function() {\n        displayMessage('ERROR: Bookmark \"' + bm.description + '\" ' + \n            ' NOT shared on delicious.com/' + user_name);\n      },\n      success: function() {\n        displayMessage('Bookmark \"' + bm.description + '\" ' + \n            'shared at delicious.com/' + user_name);\n      },\n    });\n</code></pre>\n\n<p></p>\n\n<p>Also, with both versions of the code, I'm seeing some unexpected behavior around authentication.  Assume I'm logged in to delicious, with \"stay logged in\" checked, and I restart my browser.  Trying to post with the command fails with a 401 unauthorized, even though I can see the cookie was sent (via Live HTTP Headers extension).  Going to delicious.com shows me logged in, and once I've viewed the site, the command works.  Except that now I can't reproduce; but I know it happened because I've got the headers.  At any rate, it is working nicely, but the previous failure is bugging me... feel like I'm overlooking something.  </p>\n\n<p>Thanks again for an awesome post.  Hope to see more of the same.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221085988\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e799a79441c7543be48562403411cd13&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Ryan Scott Scheel</a>\n                </div>\n                <a href=\"#comment-221085988\" class=\"permalink\"><time datetime=\"2008-09-01T15:07:01\">2008-09-01T15:07:01</time></a>\n            </div>\n            <div class=\"content\"><p>You should be helping with the documentation, if you aren't already.  Very nice job with this article;</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221085991\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://azarask.in\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e4307f205d017ba76647806951e14bb0&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://azarask.in\">Aza Raskin</a>\n                </div>\n                <a href=\"#comment-221085991\" class=\"permalink\"><time datetime=\"2008-09-02T01:44:13\">2008-09-02T01:44:13</time></a>\n            </div>\n            <div class=\"content\"><p>Hi Leslie,</p>\n\n<p>This is a beautiful tutorial on writing a Ubiquity command. We'd love your help in making Ubiquity's documentation better (especially dev facing). You should totally link to this from the Ubiquity Wiki -- or even add the content in someway.</p>\n\n<p>Anyway, just wanted to say thanks.</p>\n\n<p>-- Aza</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221085993\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.slackorama.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=15b474c86cd73c2d12c1d77af11c1d8a&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.slackorama.com\">seth</a>\n                </div>\n                <a href=\"#comment-221085993\" class=\"permalink\"><time datetime=\"2008-09-08T17:30:16\">2008-09-08T17:30:16</time></a>\n            </div>\n            <div class=\"content\"><p>Am I doing something wrong?  </p>\n\n<p>When I enter in \"sh this tagged tag1 tag2 entitled This is a title\" everything after the tagged is added as a tag. It's not seeing the entitled part.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221085994\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://spyced.blogspot.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=849810634810c960e5e7c27fa54a0f5b&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://spyced.blogspot.com/\">http://spyced.blogspot.com/</a>\n                </div>\n                <a href=\"#comment-221085994\" class=\"permalink\"><time datetime=\"2008-09-15T19:12:58\">2008-09-15T19:12:58</time></a>\n            </div>\n            <div class=\"content\"><p>Did something break?  I'm getting a 404 accessing http://decafbad.com/hg/UbiquityCommands/file/tip/delicious.ubiq.js</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221085995\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221085995\" class=\"permalink\"><time datetime=\"2008-09-15T23:07:42\">2008-09-15T23:07:42</time></a>\n            </div>\n            <div class=\"content\"><p>Yeah, looks like I had a small snafu with switching back from Lighttpd to Apache.  Left out a rewrite rule - doh!</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221085996\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=357a20e8c56e69d6f9734d23ef9517e8&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Tony</a>\n                </div>\n                <a href=\"#comment-221085996\" class=\"permalink\"><time datetime=\"2008-10-22T04:56:03\">2008-10-22T04:56:03</time></a>\n            </div>\n            <div class=\"content\"><p>Great article. This is replacing my delicious bookmarklet. Thanks!</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221085997\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=31461076fcbce091ff822fc9ac31315d&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">dgtlchlk</a>\n                </div>\n                <a href=\"#comment-221085997\" class=\"permalink\"><time datetime=\"2009-04-14T01:06:57\">2009-04-14T01:06:57</time></a>\n            </div>\n            <div class=\"content\"><p>Great article and command.\nWish it worked correctly with the latest 0.1.8 release though. No matter what text you put in it adds everything as the notes. The tagged and entitled modifiers don't work.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221085999\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.nolanhergert.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=957e24509baf770ba57ad306e20f201c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.nolanhergert.com\">Nolan</a>\n                </div>\n                <a href=\"#comment-221085999\" class=\"permalink\"><time datetime=\"2009-04-16T03:10:07\">2009-04-16T03:10:07</time></a>\n            </div>\n            <div class=\"content\"><p>I second that comment. Delicious is actually saying the link given was \"chrome://browser/content/browser.xul\" and marking it as harmful inside delicious!</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221086002\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=3d056a5b07c384647fe0806b0dfc429e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Justin</a>\n                </div>\n                <a href=\"#comment-221086002\" class=\"permalink\"><time datetime=\"2009-07-06T12:39:39\">2009-07-06T12:39:39</time></a>\n            </div>\n            <div class=\"content\"><p>Hi Leslie,</p>\n\n<p>Thanks for the delicious ubiquity command. Unfortunately, as one of the commenters above mentions, the tagged modifier doesn't seem to work. I'm using Ubiquity 0.5 pre and typing the phrase:</p>\n\n<p>share tagged foo</p>\n\n<p>Adds the bookmark to Delicious with the note text \"tagged foo\"</p>\n\n<p>Cheers, Justin</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221086004\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://ericscalf.com/stream\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=0775f9beff626496b86d7cb602e5f46f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://ericscalf.com/stream\">Eric</a>\n                </div>\n                <a href=\"#comment-221086004\" class=\"permalink\"><time datetime=\"2009-07-20T22:43:17\">2009-07-20T22:43:17</time></a>\n            </div>\n            <div class=\"content\"><p>Echoing others.. I'm using the latest ubiquity (err, next to latest.. 0.1.8?), and doing \"share-on-delicious this is a note tagged testing\" saves the link with notes \"this is a note tagged testing\" and no tags. :(  Then again, the other delicious command I've found (by someone else) is having the same issue.</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2008",
    "path": "2008/09/01/writing-a-delicious-command-for-ubiquity",
    "thumbnail": "/blog.lmorchard.com/2008/ubiq-share-on-delicious-list.jpg",
    "summary": "<p>In my <a href=\"http://decafbad.com/blog/2008/08/31/ubiquity-cracks-open-personal-mashup-tinkering\" title=\"Ubiquity cracks open personal mashup tinkering\">last post</a>, I got all fluffy about how cool <a href=\"http://labs.mozilla.com/2008/08/introducing-ubiquity/\">Ubiquity</a> is but didn&apos;t share any code to prove the point.  As it happens, I have come up with at least one useful command that I&apos;m starting to use habitually in posting bookmarks to Delicious.  You can <a href=\"http://decafbad.com/UbiquityCommands/\">subscribe to my command</a> or <a href=\"http://decafbad.com/hg/UbiquityCommands/file/tip/delicious.ubiq.js\">check out the full source</a>&#x2014;this post will serve as a dissection of the thing.  Since this will be fairly lengthy, follow along after the jump.</p>\n<p>Oh, and it&apos;s been awhile since I posted something this in-depth around here, so feel free to let me know how this first draft works.  And, bug reports and patches are of course welcome.</p>\n",
    "prevPostPath": "2008/09/02/the-more-things-change",
    "nextPostPath": "2008/08/31/ubiquity-cracks-open-personal-mashup-tinkering"
  },
  {
    "comments_archived": true,
    "date": "2008-08-31T04:07:22.000Z",
    "layout": "post",
    "tags": [
      "webdev",
      "mashups",
      "javascript",
      "entries",
      "mozilla",
      "ubiquity"
    ],
    "title": "Ubiquity cracks open personal mashup tinkering",
    "wordpress_id": 1286,
    "wordpress_slug": "ubiquity-cracks-open-personal-mashup-tinkering",
    "wordpress_url": "http://decafbad.com/blog/?p=1286",
    "year": "2008",
    "month": "08",
    "day": "31",
    "isDir": false,
    "slug": "ubiquity-cracks-open-personal-mashup-tinkering",
    "postName": "2008-08-31-ubiquity-cracks-open-personal-mashup-tinkering",
    "html": "<p>When I was a wee hacker, I lived my digital life though a <a href=\"http://www.virtualsky.net/iadoremyc64/\">Commodore 64</a>.  I played games on it, did homework, talked to people far away—you know, all the stuff they showed in the pictures on the box.  I also took things apart—both the machine itself and software running on it.  I grew up learning that my digital environment was ultimately understandable, <a href=\"http://cbm.csbruce.com/~csbruce/cbm/transactor/\">susceptible to tinkering</a>, and open to being bent to my own purposes.</p>\n<p>From the Commodore 64, I graduated eventually to terminals and text editors, opening portals mostly onto computers elsewhere via powerful UNIX command shells.  And, of course, over the past decade, this has largely given way to life in a browser.  </p>\n<p>Yet, for a little while, particularly in the first few years of browsers, freedom to tinker seemed cramped.  JavaScript had yet to arrive, and was a little messy when it did.  There was no relatively easy addon development.  And, though the portals opened by a browser were richer than those provided by terminals, the paths of navigation defined by links controlled by site owners offered less freedom of movement than UNIX commands.  I could create my own pages, but I couldn&#39;t do much to others&#39; pages.</p>\n<p>But then, javascript: URLs came around, dots were connected, and <a href=\"http://en.wikipedia.org/wiki/Bookmarklet\">bookmarklets</a> were born.  Suddenly, it was possible to customize <em>my</em> browsing environment with arbitrary JavaScript code having access to the current page—no matter <em>whose</em> page it was.  And, through the various tricks of the AJAX trade, bookmarklets have only gotten more capable throughout the years.</p>\n<p><a href=\"http://www.mozilla.org/docs/end-user/keywords.html\">Smart keyword shortcuts</a> came around a little later, allowing quick access to bookmarks via simple keywords typed into the location bar.  The smart part, though, came in the form of bookmarked URLs with placeholders and keywords given arguments to fill the placeholders—allowing not only quick access to bookmarked pages but also search engine forms bookmarked with late-bound fields.</p>\n<p>Bookmarklets inherited the benefits of smart keyword shortcuts.  The same placeholder in http: URLs can be inserted into the code of a javascript: URL, thus parameterizing the JavaScript code and incidentally turning the location bar into a kind of primitive command line.  For example, one of my most heavily used &quot;<a href=\"http://naeblis.cx/weblog/2004/08/09/DeliciousAddresslets\">addresslets</a>&quot; is based on <a href=\"http://ejohn.org/blog/super-fast-delicious-bookmarklet/\">John Resig&#39;s original &quot;Super-Fast Delicious Bookmarklet&quot;</a>.</p>\n<p>Another leap in prying open the browser tinkering space came in the form of <a href=\"http://www.greasespot.net/\">Greasemonkey</a>—an addon-powered environment created explicitly for the purpose of end-user scripting applied to others&#39; pages.  <a href=\"http://www.greasespot.net/\">Greasemonkey</a> user scripts can do more than bookmarklets, and with a much better development environment to boot.  And, though a user script can&#39;t do quite as much as a proper browser addon, they&#39;re much easier to hack on and distribute.</p>\n<p>Now, consider one of <a href=\"http://labs.mozilla.com/\">Mozilla Labs</a>&#39; <a href=\"http://labs.mozilla.com/2008/08/introducing-ubiquity/\">newest projects</a>, named <a href=\"http://labs.mozilla.com/2008/08/introducing-ubiquity/\">Ubiquity</a>.  This rough and experimental addon for Firefox combines and improves upon everything I&#39;ve described so far:</p>\n<ul>\n<li><a href=\"http://labs.mozilla.com/2008/08/introducing-ubiquity/\">Ubiquity</a> is a hackable command line environment, better than <a href=\"http://en.wikipedia.org/wiki/Bookmarklet\">bookmarklets</a> and smart <a href=\"http://www.mozilla.org/docs/end-user/keywords.html\">keyword shortcuts</a>;</li>\n<li><a href=\"http://labs.mozilla.com/2008/08/introducing-ubiquity/\">Ubiquity</a> enables persistent customization of others&#39; pages, not unlike <a href=\"http://www.greasespot.net/\">Greasemonkey</a>; </li>\n<li><a href=\"http://labs.mozilla.com/2008/08/introducing-ubiquity/\">Ubiquity</a> facilitates live in-browser creation and web-based subscription to user commands and scripts;</li>\n<li><a href=\"http://labs.mozilla.com/2008/08/introducing-ubiquity/\">Ubiquity</a> gives access to browser chrome resources without a need for frequent restarts;</li>\n</ul>\n<p>So far, most of the <a href=\"https://labs.toolness.com/ubiquity-herd/\">commands</a> I see popping up since the 0.1 release have not accomplished much more than <a href=\"http://www.mozilla.org/docs/end-user/keywords.html\">smart keyword shortcuts</a> in the location bar could.  But, it&#39;s early yet, and <a href=\"http://labs.mozilla.com/2008/08/introducing-ubiquity/\">Ubiquity</a> is far from limited to these commands.</p>\n<p>Once the basics have been well-explored, I expect to see more people taking a crack at the broader capabilities offered by <a href=\"http://labs.mozilla.com/2008/08/introducing-ubiquity/\">Ubiquity</a>.  <a href=\"http://en.wikipedia.org/wiki/Bookmarklet\">Bookmarklets</a> and <a href=\"http://www.greasespot.net/\">Greasemonkey</a> can&#39;t access browser chrome—but <a href=\"http://labs.mozilla.com/2008/08/introducing-ubiquity/\">Ubiquity</a> can.  <a href=\"http://labs.mozilla.com/2008/08/introducing-ubiquity/\">Ubiquity</a> also offers a user interface that&#39;s so much more promising than keyword shortcuts, including command previews and typed parameters with suggestions.</p>\n<p>Ubiquity promises web-wide mashups directed by a conversational command interface.  All in all, the potential of this makes me feel like my digital environment—browser and web as a whole—is getting even more intimately, personally hackable.  </p>\n<p>It&#39;ll be very interesting to see where this project goes.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221089574\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=22b4e824255828f5aedd0e6e2558dc52&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Raul</a>\n</div>\n<a href=\"#comment-221089574\" class=\"permalink\"><time datetime=\"2008-08-31T10:20:58\">2008-08-31T10:20:58</time></a>\n</div>\n<div class=\"content\"><p>Hi, was using the original delicious command linked from the Ubiquity wiki, just tried yours and its definitely more polished and functional. Great job with the preview and the extra functionality. Only thing is 'share-to-delicious' is too much to type so I unsubscribed the previous command and changed the namespace in yours. This is clearly going to become a problems as the commands proliferate.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221089575\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221089575\" class=\"permalink\"><time datetime=\"2008-08-31T14:43:39\">2008-08-31T14:43:39</time></a>\n</div>\n<div class=\"content\"><p>@Raul: \"share-to-delicious\" is long, but keep in mind is that you only need to type enough of the command to disambiguate it.  That is, all I type is \"sh this tagged osx software apple\" because I have no other commands starting with \"sh\".  Watch the list of commands in the preview as you type.  Those tell you what the parser thinks of what you're typing as you type.  It's like automatic tab-completion.</p>\n<p>Also, I think there's work planned to put some usage based sorting into the command parser, preferring the commands you use most in order of disambiguation.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221089576\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://abcdefu.wordpress.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=af8b180d6d4092fb42fe6b5e0b21536c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://abcdefu.wordpress.com\">Abi</a>\n</div>\n<a href=\"#comment-221089576\" class=\"permalink\"><time datetime=\"2008-08-31T15:33:24\">2008-08-31T15:33:24</time></a>\n</div>\n<div class=\"content\"><p>Nice post. I share your sentiment with regards to Ubiquity commands. A lot of commands that I see are just plain simple searches. I hope developers will work on more interesting things. For example, even things like auto-form filling for this comment (possibly even on page load without having to type a command) could be done by Ubiquity. There's still a lot more room for experimentation.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221089578\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://abcdefu.wordpress.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=af8b180d6d4092fb42fe6b5e0b21536c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://abcdefu.wordpress.com\">Abi</a>\n</div>\n<a href=\"#comment-221089578\" class=\"permalink\"><time datetime=\"2008-08-31T15:45:59\">2008-08-31T15:45:59</time></a>\n</div>\n<div class=\"content\"><p></p>\n<p>But otherwise, I <em>really</em> like your command especially the preivew. We should include it as a builtin command, if you don't mind. :)</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221089580\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://abcdefu.wordpress.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=af8b180d6d4092fb42fe6b5e0b21536c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://abcdefu.wordpress.com\">Abi</a>\n</div>\n<a href=\"#comment-221089580\" class=\"permalink\"><time datetime=\"2008-08-31T15:51:20\">2008-08-31T15:51:20</time></a>\n</div>\n<div class=\"content\"><p>I noticed a bug in your command. If I select some text in the awesomebar, the bookmark url is chrome. You should use something the command utils to get the url, instead.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221089582\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221089582\" class=\"permalink\"><time datetime=\"2008-09-01T06:17:37\">2008-09-01T06:17:37</time></a>\n</div>\n<div class=\"content\"><p>@Abi: Making this a built-in command is totally fine by me!  It can use more work, though, for sure.</p>\n<p>Also, I can reproduce that bug.  Ugh.  I can't find any methods in the CmdUtils to get the current page URL, though.  I'll keep poking a bit though.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221089584\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://abcdefu.wordpress.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=af8b180d6d4092fb42fe6b5e0b21536c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://abcdefu.wordpress.com\">Abi</a>\n</div>\n<a href=\"#comment-221089584\" class=\"permalink\"><time datetime=\"2008-09-01T06:50:23\">2008-09-01T06:50:23</time></a>\n</div>\n<div class=\"content\"><p>Your blog seems to be rejecting code (that's why I had so many posts in the first place). You can get the current page url using (with dots):</p>\n<p>CmdUtils  getDocumentInsecure() location href</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221089586\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://theunfocused.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=738af918f39d544f8b0d765850c986f8&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://theunfocused.net/\">Blair McBride</a>\n</div>\n<a href=\"#comment-221089586\" class=\"permalink\"><time datetime=\"2008-09-02T02:50:12\">2008-09-02T02:50:12</time></a>\n</div>\n<div class=\"content\"><p>I recommend against using getDocumentInsecure() - its got \"Insecure\" in its name for a reason! Instead, you should use:</p>\n<p>Application.activeWindow.activeTab.uri.spec</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "When I was a wee hacker, I lived my digital life though a [Commodore 64][c64].  I played games on it, did homework, talked to people far away—you know, all the stuff they showed in the pictures on the box.  I also took things apart—both the machine itself and software running on it.  I grew up learning that my digital environment was ultimately understandable, [susceptible to tinkering][transactor], and open to being bent to my own purposes.\r\n\r\nFrom the Commodore 64, I graduated eventually to terminals and text editors, opening portals mostly onto computers elsewhere via powerful UNIX command shells.  And, of course, over the past decade, this has largely given way to life in a browser.  \r\n\r\nYet, for a little while, particularly in the first few years of browsers, freedom to tinker seemed cramped.  JavaScript had yet to arrive, and was a little messy when it did.  There was no relatively easy addon development.  And, though the portals opened by a browser were richer than those provided by terminals, the paths of navigation defined by links controlled by site owners offered less freedom of movement than UNIX commands.  I could create my own pages, but I couldn't do much to others' pages.\r\n\r\nBut then, javascript: URLs came around, dots were connected, and [bookmarklets][] were born.  Suddenly, it was possible to customize *my* browsing environment with arbitrary JavaScript code having access to the current page—no matter *whose* page it was.  And, through the various tricks of the AJAX trade, bookmarklets have only gotten more capable throughout the years.\r\n\r\n[Smart keyword shortcuts][shortcuts] came around a little later, allowing quick access to bookmarks via simple keywords typed into the location bar.  The smart part, though, came in the form of bookmarked URLs with placeholders and keywords given arguments to fill the placeholders—allowing not only quick access to bookmarked pages but also search engine forms bookmarked with late-bound fields.\r\n\r\nBookmarklets inherited the benefits of smart keyword shortcuts.  The same placeholder in http: URLs can be inserted into the code of a javascript: URL, thus parameterizing the JavaScript code and incidentally turning the location bar into a kind of primitive command line.  For example, one of my most heavily used \"[addresslets](http://naeblis.cx/weblog/2004/08/09/DeliciousAddresslets)\" is based on [John Resig's original \"Super-Fast Delicious Bookmarklet\"](http://ejohn.org/blog/super-fast-delicious-bookmarklet/).\r\n\r\nAnother leap in prying open the browser tinkering space came in the form of [Greasemonkey][]—an addon-powered environment created explicitly for the purpose of end-user scripting applied to others' pages.  [Greasemonkey][] user scripts can do more than bookmarklets, and with a much better development environment to boot.  And, though a user script can't do quite as much as a proper browser addon, they're much easier to hack on and distribute.\r\n\r\nNow, consider one of [Mozilla Labs][labs]' [newest projects][ubiquity], named [Ubiquity][].  This rough and experimental addon for Firefox combines and improves upon everything I've described so far:\r\n\r\n* [Ubiquity][] is a hackable command line environment, better than [bookmarklets][] and smart [keyword shortcuts][shortcuts];\r\n* [Ubiquity][] enables persistent customization of others' pages, not unlike [Greasemonkey][]; \r\n* [Ubiquity][] facilitates live in-browser creation and web-based subscription to user commands and scripts;\r\n* [Ubiquity][] gives access to browser chrome resources without a need for frequent restarts;\r\n\r\nSo far, most of the [commands][] I see popping up since the 0.1 release have not accomplished much more than [smart keyword shortcuts][shortcuts] in the location bar could.  But, it's early yet, and [Ubiquity][] is far from limited to these commands.\r\n\r\nOnce the basics have been well-explored, I expect to see more people taking a crack at the broader capabilities offered by [Ubiquity][].  [Bookmarklets][] and [Greasemonkey][] can't access browser chrome—but [Ubiquity][] can.  [Ubiquity][] also offers a user interface that's so much more promising than keyword shortcuts, including command previews and typed parameters with suggestions.\r\n\r\nUbiquity promises web-wide mashups directed by a conversational command interface.  All in all, the potential of this makes me feel like my digital environment—browser and web as a whole—is getting even more intimately, personally hackable.  \r\n\r\nIt'll be very interesting to see where this project goes.\r\n\r\n[labs]: http://labs.mozilla.com/\r\n[transactor]: http://cbm.csbruce.com/~csbruce/cbm/transactor/\r\n[c64]: http://www.virtualsky.net/iadoremyc64/\r\n[shortcuts]: http://www.mozilla.org/docs/end-user/keywords.html\r\n[greasemonkey]: http://www.greasespot.net/\r\n[bookmarklets]: http://en.wikipedia.org/wiki/Bookmarklet\r\n[ubiquity]: http://labs.mozilla.com/2008/08/introducing-ubiquity/\r\n[commands]: https://labs.toolness.com/ubiquity-herd/\r\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221089574\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=22b4e824255828f5aedd0e6e2558dc52&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Raul</a>\n                </div>\n                <a href=\"#comment-221089574\" class=\"permalink\"><time datetime=\"2008-08-31T10:20:58\">2008-08-31T10:20:58</time></a>\n            </div>\n            <div class=\"content\"><p>Hi, was using the original delicious command linked from the Ubiquity wiki, just tried yours and its definitely more polished and functional. Great job with the preview and the extra functionality. Only thing is 'share-to-delicious' is too much to type so I unsubscribed the previous command and changed the namespace in yours. This is clearly going to become a problems as the commands proliferate.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221089575\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221089575\" class=\"permalink\"><time datetime=\"2008-08-31T14:43:39\">2008-08-31T14:43:39</time></a>\n            </div>\n            <div class=\"content\"><p>@Raul: \"share-to-delicious\" is long, but keep in mind is that you only need to type enough of the command to disambiguate it.  That is, all I type is \"sh this tagged osx software apple\" because I have no other commands starting with \"sh\".  Watch the list of commands in the preview as you type.  Those tell you what the parser thinks of what you're typing as you type.  It's like automatic tab-completion.</p>\n\n<p>Also, I think there's work planned to put some usage based sorting into the command parser, preferring the commands you use most in order of disambiguation.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221089576\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://abcdefu.wordpress.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=af8b180d6d4092fb42fe6b5e0b21536c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://abcdefu.wordpress.com\">Abi</a>\n                </div>\n                <a href=\"#comment-221089576\" class=\"permalink\"><time datetime=\"2008-08-31T15:33:24\">2008-08-31T15:33:24</time></a>\n            </div>\n            <div class=\"content\"><p>Nice post. I share your sentiment with regards to Ubiquity commands. A lot of commands that I see are just plain simple searches. I hope developers will work on more interesting things. For example, even things like auto-form filling for this comment (possibly even on page load without having to type a command) could be done by Ubiquity. There's still a lot more room for experimentation.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221089578\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://abcdefu.wordpress.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=af8b180d6d4092fb42fe6b5e0b21536c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://abcdefu.wordpress.com\">Abi</a>\n                </div>\n                <a href=\"#comment-221089578\" class=\"permalink\"><time datetime=\"2008-08-31T15:45:59\">2008-08-31T15:45:59</time></a>\n            </div>\n            <div class=\"content\"><p></p>\n\n<p>But otherwise, I <em>really</em> like your command especially the preivew. We should include it as a builtin command, if you don't mind. :)</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221089580\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://abcdefu.wordpress.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=af8b180d6d4092fb42fe6b5e0b21536c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://abcdefu.wordpress.com\">Abi</a>\n                </div>\n                <a href=\"#comment-221089580\" class=\"permalink\"><time datetime=\"2008-08-31T15:51:20\">2008-08-31T15:51:20</time></a>\n            </div>\n            <div class=\"content\"><p>I noticed a bug in your command. If I select some text in the awesomebar, the bookmark url is chrome. You should use something the command utils to get the url, instead.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221089582\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221089582\" class=\"permalink\"><time datetime=\"2008-09-01T06:17:37\">2008-09-01T06:17:37</time></a>\n            </div>\n            <div class=\"content\"><p>@Abi: Making this a built-in command is totally fine by me!  It can use more work, though, for sure.</p>\n\n<p>Also, I can reproduce that bug.  Ugh.  I can't find any methods in the CmdUtils to get the current page URL, though.  I'll keep poking a bit though.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221089584\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://abcdefu.wordpress.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=af8b180d6d4092fb42fe6b5e0b21536c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://abcdefu.wordpress.com\">Abi</a>\n                </div>\n                <a href=\"#comment-221089584\" class=\"permalink\"><time datetime=\"2008-09-01T06:50:23\">2008-09-01T06:50:23</time></a>\n            </div>\n            <div class=\"content\"><p>Your blog seems to be rejecting code (that's why I had so many posts in the first place). You can get the current page url using (with dots):</p>\n\n<p>CmdUtils  getDocumentInsecure() location href</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221089586\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://theunfocused.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=738af918f39d544f8b0d765850c986f8&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://theunfocused.net/\">Blair McBride</a>\n                </div>\n                <a href=\"#comment-221089586\" class=\"permalink\"><time datetime=\"2008-09-02T02:50:12\">2008-09-02T02:50:12</time></a>\n            </div>\n            <div class=\"content\"><p>I recommend against using getDocumentInsecure() - its got \"Insecure\" in its name for a reason! Instead, you should use:</p>\n\n<p>Application.activeWindow.activeTab.uri.spec</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2008",
    "path": "2008/08/31/ubiquity-cracks-open-personal-mashup-tinkering",
    "prevPostPath": "2008/09/01/writing-a-delicious-command-for-ubiquity",
    "nextPostPath": "2008/08/04/moz08-rockslides-and-blackouts-and-bears-oh-my"
  },
  {
    "comments_archived": true,
    "date": "2006-12-21T02:55:45.000Z",
    "layout": "post",
    "tags": [
      "asides",
      "json",
      "webdev",
      "webservices",
      "javascript",
      "ws"
    ],
    "title": "do not taunt happy fun JSON",
    "wordpress_id": 1029,
    "wordpress_slug": "do-not-taunt-happy-fun-json",
    "wordpress_url": "http://decafbad.com/blog/2006/12/20/do-not-taunt-happy-fun-json",
    "year": "2006",
    "month": "12",
    "day": "20",
    "isDir": false,
    "slug": "do-not-taunt-happy-fun-json",
    "postName": "2006-12-20-do-not-taunt-happy-fun-json",
    "html": "<p>Allow me to repeat myself somewhat and clarify my general opinion of JSON and its use in cross-domain browser scripting:</p>\n<p>Happy Fun JSON is not really an API. Happy Fun JSON is not a bold declaration of side-taking in the grand war of web service specifications. Do not base business models on Happy Fun JSON. Caution: Happy Fun JSON may suddenly accelerate to dangerous speeds or stop altogether. Happy Fun JSON contains a liquid core, which, if exposed due to rupture, should not be touched, inhaled, or looked at. Ingredients of Happy Fun JSON include an unknown glowing substance which fell to Earth, presumably from outer space. If Happy Fun JSON begins to smoke, get away immediately. Seek shelter and cover head.</p>\n<p>Do not taunt Happy Fun JSON.</p>\n<p>Having said all that?  Happy Fun JSON is pretty fun to throw around.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221087880\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://gfmorris.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=505e3b39dcea29b3ded74a5494c493eb&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://gfmorris.net/\">Geof F. Morris</a>\n</div>\n<a href=\"#comment-221087880\" class=\"permalink\"><time datetime=\"2006-12-21T03:34:19\">2006-12-21T03:34:19</time></a>\n</div>\n<div class=\"content\"><p>Did it hurt when Happy Fun JSON fell from Heaven?  ;)</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087884\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://franklinmint.fm\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b9ed774661a22ff8797a1e0e24f0baf3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://franklinmint.fm\">Robert Sayre</a>\n</div>\n<a href=\"#comment-221087884\" class=\"permalink\"><time datetime=\"2006-12-21T03:55:47\">2006-12-21T03:55:47</time></a>\n</div>\n<div class=\"content\"><p>Obviously, the new del.icio.us JSON url feed is crushing blow against XML Web Enterprise Services Declarative Net Neutrality.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087886\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=c82c72ca4f9eab33a80a7bd839c1ae0b&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">jamesv</a>\n</div>\n<a href=\"#comment-221087886\" class=\"permalink\"><time datetime=\"2006-12-21T15:14:24\">2006-12-21T15:14:24</time></a>\n</div>\n<div class=\"content\"><p>I only wish you could pass Happy Fun JSON into Flash via FlashVars in IE. FF and Safari seem to have no problems with it.</p>\n<p>It would make authoring a richer content version of sIFR much, much easier.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087889\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.litfuel.net/plush\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=048d90bde20830d1e4fdec860321a5a6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.litfuel.net/plush\">Jim Plush</a>\n</div>\n<a href=\"#comment-221087889\" class=\"permalink\"><time datetime=\"2006-12-22T19:22:48\">2006-12-22T19:22:48</time></a>\n</div>\n<div class=\"content\"><p>You should be banned from talking about JSON if you think you have to choose one or the other. A place for everything and everything in it's place.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087893\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=7028f422ca6da0180de6c9d922a3228f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\">Danny</a>\n</div>\n<a href=\"#comment-221087893\" class=\"permalink\"><time datetime=\"2006-12-31T18:11:19\">2006-12-31T18:11:19</time></a>\n</div>\n<div class=\"content\"><p>All this lynch talk - I just got throttled! </p>\n<p>Running the script <a href=\"http://dannyayers.com/2006/12/29/del\" rel=\"nofollow\">here</a> on a series of URIs got me the 999 error (no sure how many had run). There's a 2 second pause between calls, I thought that would be polite enough. Still throttled now, maybe 10 mins later. Any suggestions for what would prevent throttling? How long it needs to recover?</p>\n<p>btw, I think Happy Fun JSON is great, and not unreasonable for interop. But what isn't so good for interop is inventing a new HTTP code when there's <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4\" rel=\"nofollow\">503 Service Unavailable</a> (and a Retry-After header would be handy).</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087896\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.alleged.org.uk/pdc/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=5b7d6aea7a0ef515700985bb17cdc5a0&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.alleged.org.uk/pdc/\">Damian Cugley</a>\n</div>\n<a href=\"#comment-221087896\" class=\"permalink\"><time datetime=\"2007-01-22T14:16:27\">2007-01-22T14:16:27</time></a>\n</div>\n<div class=\"content\"><p>@jamesv: The first thing I did with JSON at work was pass it in to a Flash movie via FlashVars. This used a JSON decode written in ActionScript grabbed from JSON.org, plus a JSON encoder written in C# (it did not take long to write because I  did not attempt to serialize arbitrary objects).  Some gratuitous URL-encoding was also involved. Compared with passing the same data structure via URL-encoded XML to be picked apart by ActionScript's DOM support, it was easy and much more like fun.</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "Allow me to repeat myself somewhat and clarify my general opinion of JSON and its use in cross-domain browser scripting:\r\n\r\nHappy Fun JSON is not really an API. Happy Fun JSON is not a bold declaration of side-taking in the grand war of web service specifications. Do not base business models on Happy Fun JSON. Caution: Happy Fun JSON may suddenly accelerate to dangerous speeds or stop altogether. Happy Fun JSON contains a liquid core, which, if exposed due to rupture, should not be touched, inhaled, or looked at. Ingredients of Happy Fun JSON include an unknown glowing substance which fell to Earth, presumably from outer space. If Happy Fun JSON begins to smoke, get away immediately. Seek shelter and cover head.\r\n\r\nDo not taunt Happy Fun JSON.\r\n\r\nHaving said all that?  Happy Fun JSON is pretty fun to throw around.\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221087880\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://gfmorris.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=505e3b39dcea29b3ded74a5494c493eb&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://gfmorris.net/\">Geof F. Morris</a>\n                </div>\n                <a href=\"#comment-221087880\" class=\"permalink\"><time datetime=\"2006-12-21T03:34:19\">2006-12-21T03:34:19</time></a>\n            </div>\n            <div class=\"content\"><p>Did it hurt when Happy Fun JSON fell from Heaven?  ;)</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087884\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://franklinmint.fm\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b9ed774661a22ff8797a1e0e24f0baf3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://franklinmint.fm\">Robert Sayre</a>\n                </div>\n                <a href=\"#comment-221087884\" class=\"permalink\"><time datetime=\"2006-12-21T03:55:47\">2006-12-21T03:55:47</time></a>\n            </div>\n            <div class=\"content\"><p>Obviously, the new del.icio.us JSON url feed is crushing blow against XML Web Enterprise Services Declarative Net Neutrality.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087886\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=c82c72ca4f9eab33a80a7bd839c1ae0b&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">jamesv</a>\n                </div>\n                <a href=\"#comment-221087886\" class=\"permalink\"><time datetime=\"2006-12-21T15:14:24\">2006-12-21T15:14:24</time></a>\n            </div>\n            <div class=\"content\"><p>I only wish you could pass Happy Fun JSON into Flash via FlashVars in IE. FF and Safari seem to have no problems with it.</p>\n\n<p>It would make authoring a richer content version of sIFR much, much easier.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087889\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.litfuel.net/plush\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=048d90bde20830d1e4fdec860321a5a6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.litfuel.net/plush\">Jim Plush</a>\n                </div>\n                <a href=\"#comment-221087889\" class=\"permalink\"><time datetime=\"2006-12-22T19:22:48\">2006-12-22T19:22:48</time></a>\n            </div>\n            <div class=\"content\"><p>You should be banned from talking about JSON if you think you have to choose one or the other. A place for everything and everything in it's place.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087893\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=7028f422ca6da0180de6c9d922a3228f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://dannyayers.com\">Danny</a>\n                </div>\n                <a href=\"#comment-221087893\" class=\"permalink\"><time datetime=\"2006-12-31T18:11:19\">2006-12-31T18:11:19</time></a>\n            </div>\n            <div class=\"content\"><p>All this lynch talk - I just got throttled! </p>\n\n<p>Running the script <a href=\"http://dannyayers.com/2006/12/29/del\" rel=\"nofollow\">here</a> on a series of URIs got me the 999 error (no sure how many had run). There's a 2 second pause between calls, I thought that would be polite enough. Still throttled now, maybe 10 mins later. Any suggestions for what would prevent throttling? How long it needs to recover?</p>\n\n<p>btw, I think Happy Fun JSON is great, and not unreasonable for interop. But what isn't so good for interop is inventing a new HTTP code when there's <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4\" rel=\"nofollow\">503 Service Unavailable</a> (and a Retry-After header would be handy).</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087896\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.alleged.org.uk/pdc/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=5b7d6aea7a0ef515700985bb17cdc5a0&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.alleged.org.uk/pdc/\">Damian Cugley</a>\n                </div>\n                <a href=\"#comment-221087896\" class=\"permalink\"><time datetime=\"2007-01-22T14:16:27\">2007-01-22T14:16:27</time></a>\n            </div>\n            <div class=\"content\"><p>@jamesv: The first thing I did with JSON at work was pass it in to a Flash movie via FlashVars. This used a JSON decode written in ActionScript grabbed from JSON.org, plus a JSON encoder written in C# (it did not take long to write because I  did not attempt to serialize arbitrary objects).  Some gratuitous URL-encoding was also involved. Compared with passing the same data structure via URL-encoded XML to be picked apart by ActionScript's DOM support, it was easy and much more like fun.</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/12/21/do-not-taunt-happy-fun-json",
    "prevPostPath": "2006/12/21/my-semi-annual-blogger-navel-gazing-post",
    "nextPostPath": "2006/12/21/correlation-is-not-causation"
  },
  {
    "comments_archived": true,
    "date": "2006-12-19T16:21:40.000Z",
    "layout": "post",
    "tags": [
      "asides",
      "webdev",
      "firefox",
      "javascript",
      "dhtml",
      "xoxooutliner"
    ],
    "title": "drag and drop and the missing mouseup",
    "wordpress_id": 1026,
    "wordpress_slug": "drag-and-drop-and-the-missing-mouseup",
    "wordpress_url": "http://decafbad.com/blog/2006/12/19/drag-and-drop-and-the-missing-mouseup",
    "year": "2006",
    "month": "12",
    "day": "19",
    "isDir": false,
    "slug": "drag-and-drop-and-the-missing-mouseup",
    "postName": "2006-12-19-drag-and-drop-and-the-missing-mouseup",
    "html": "<blockquote cite=\"http://www.thinkvitamin.com/features/design/create-cross-browser-vector-graphics#comment-34453\">With the draggable circles - click, drag, move the mouse outside the rectangle, release the mouse button. Now move the mouse back inside the rectangle, and it still thinks your dragging, even though you’ve mouse-up’d.<br /><br />I guess this is because it’s not catching the onmouseup when you’re outside it’s “domain”. Perhaps make it automatically trigger the mouseup when the pointer leaves the area?</blockquote><div class=\"quotesource\">Source: <a href=\"http://www.thinkvitamin.com/features/design/create-cross-browser-vector-graphics#comment-34453\">Vitamin Features » Create cross browser vector graphics - Comment by Steve</a></div>\n\n<p>So, that <code>dojo.gfx</code> thing is cool - but what caught my eye in the above-linked article is the above-quoted comment.  Drag and drop and missed mouseups seem to be an issue everywhere.  I can&#39;t seem to get around them in my <a href=\"http://decafbad.com/trac/wiki/XoxoOutliner\">XoxoOutliner</a> drag code, <a href=\"http://developer.yahoo.com/yui/examples/dragdrop/drag.html?mode=dist\">YUI DnD examples</a> seem to suffer from it, and hell - even Firefox itself doesn&#39;t seem immune:  Try drag-selecting some text, wander off-window with the mouse, release the mouse button.  For me at least, on my Mac, the drag-selection keeps doing its thing when I wander back on-window.   No me gusta.</p>\n",
    "body": "<blockquote cite=\"http://www.thinkvitamin.com/features/design/create-cross-browser-vector-graphics#comment-34453\">With the draggable circles - click, drag, move the mouse outside the rectangle, release the mouse button. Now move the mouse back inside the rectangle, and it still thinks your dragging, even though you’ve mouse-up’d.<br /><br />I guess this is because it’s not catching the onmouseup when you’re outside it’s “domain”. Perhaps make it automatically trigger the mouseup when the pointer leaves the area?</blockquote><div class=\"quotesource\">Source: <a href=\"http://www.thinkvitamin.com/features/design/create-cross-browser-vector-graphics#comment-34453\">Vitamin Features » Create cross browser vector graphics - Comment by Steve</a></div>\r\n\r\nSo, that <code>dojo.gfx</code> thing is cool - but what caught my eye in the above-linked article is the above-quoted comment.  Drag and drop and missed mouseups seem to be an issue everywhere.  I can't seem to get around them in my [XoxoOutliner](http://decafbad.com/trac/wiki/XoxoOutliner) drag code, [YUI DnD examples](http://developer.yahoo.com/yui/examples/dragdrop/drag.html?mode=dist) seem to suffer from it, and hell - even Firefox itself doesn't seem immune:  Try drag-selecting some text, wander off-window with the mouse, release the mouse button.  For me at least, on my Mac, the drag-selection keeps doing its thing when I wander back on-window.   No me gusta.\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/12/19/drag-and-drop-and-the-missing-mouseup",
    "prevPostPath": "2006/12/21/tagometers-and-travesties",
    "nextPostPath": "2006/12/02/yahoo-tv-refreshed-redux-and-rejected"
  },
  {
    "comments_archived": true,
    "date": "2006-11-12T05:25:40.000Z",
    "layout": "post",
    "tags": [
      "webdev",
      "javascript",
      "xoxooutliner",
      "xoxo",
      "microformats"
    ],
    "title": "XoxoOutliner shows some signs of life",
    "wordpress_id": 1017,
    "wordpress_slug": "xoxooutliner-shows-some-signs-of-life",
    "wordpress_url": "http://decafbad.com/blog/2006/11/12/xoxooutliner-shows-some-signs-of-life",
    "year": "2006",
    "month": "11",
    "day": "12",
    "isDir": false,
    "slug": "xoxooutliner-shows-some-signs-of-life",
    "postName": "2006-11-12-xoxooutliner-shows-some-signs-of-life",
    "html": "<p>Remember when I <a href=\"http://decafbad.com/blog/2006/03/25/about-xoxooutliner\">started writing about</a> <a href=\"http://decafbad.com/trac/wiki/XoxoOutliner\">XoxoOutliner</a> around 8 months ago?  Yeah, lots has happened with life in general between then and now - but lately I&#39;ve been <a href=\"http://decafbad.com/blog/2006/11/06/xoxooutliner-rewrite-coming-now-with-event-delegation\">working on code</a> for it again.  As you might see from <a href=\"http://decafbad.com/trac/timeline\">my Trac timeline</a>, I&#39;ve got lots of new code checked in.  And I mean <a href=\"http://decafbad.com/trac/changeset/765\">lots</a>.</p>\n<p>If I can keep up this bout of <a href=\"http://decafbad.com/blog/2006/05/26/confessions-of-a-serial-enthusiast\">serial enthusiasm</a> for the project, you&#39;ll be hearing lots more about it soon.</p>\n<p>For now, check out the new static <a href=\"http://decafbad.com/2006/11/XoxoOutliner/README.html\">README.html</a> and the <a href=\"http://decafbad.com/2006/11/XoxoOutliner/\">live demo</a>.  It&#39;s extremely bugful, but it might do interesting things for Firefox and Safari users.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221087237\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://vdm.cc/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a4dae25fe0faeec4f9ff1ad769a52b36&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://vdm.cc/\">Vincent D Murphy</a>\n</div>\n<a href=\"#comment-221087237\" class=\"permalink\"><time datetime=\"2006-11-12T09:14:26\">2006-11-12T09:14:26</time></a>\n</div>\n<div class=\"content\"><p>Wow!</p>\n<p>This thing is such an improvement. I love that the README is an outline.</p>\n<p>I think this is really powerful. I think an outliner should eliminate the need for a lot of rich text browser editors. Outlines inherently break text into small little chunks, which are stylable (and potentially URL addressable, for block-level comments). I think this thing would rock in a wiki.</p>\n<p>Keep up the good work!</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087241\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://db79.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=db8059b0ce0b3cf393f4de0ad7af758f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://db79.com\">Shawn Medero</a>\n</div>\n<a href=\"#comment-221087241\" class=\"permalink\"><time datetime=\"2006-11-13T12:59:18\">2006-11-13T12:59:18</time></a>\n</div>\n<div class=\"content\"><p>Bravo! This is a great set of updates and works well in Safari (haven't had the time yet to test in Firefox.)</p>\n<p>I've been thinking about using some portion of these tools in my wiki software to dress up outlines. I'm not sure yet... sometimes I feel like editing an outline  (well a simple one I'd use on a wiki at least) is quicker manually with something like Markdown.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087243\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.gibberish.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d78a376f93e23dd093abe8d280198ebd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.gibberish.com\">misuba</a>\n</div>\n<a href=\"#comment-221087243\" class=\"permalink\"><time datetime=\"2006-11-14T00:15:01\">2006-11-14T00:15:01</time></a>\n</div>\n<div class=\"content\"><p>Rad!</p>\n<p>Keep this up and I won't have to finish mine. :-)</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "Remember when I [started writing about][st] [XoxoOutliner][xo] around 8 months ago?  Yeah, lots has happened with life in general between then and now - but lately I've been [working on code][wo] for it again.  As you might see from [my Trac timeline][time], I've got lots of new code checked in.  And I mean [lots][lots].\r\n\r\nIf I can keep up this bout of [serial enthusiasm][se] for the project, you'll be hearing lots more about it soon.\r\n\r\nFor now, check out the new static [README.html][re] and the [live demo][demo].  It's extremely bugful, but it might do interesting things for Firefox and Safari users.\r\n\r\n[se]: http://decafbad.com/blog/2006/05/26/confessions-of-a-serial-enthusiast\r\n[re]:http://decafbad.com/2006/11/XoxoOutliner/README.html\r\n[demo]: http://decafbad.com/2006/11/XoxoOutliner/\r\n[lots]: http://decafbad.com/trac/changeset/765\r\n[time]: http://decafbad.com/trac/timeline\r\n[wo]: http://decafbad.com/blog/2006/11/06/xoxooutliner-rewrite-coming-now-with-event-delegation\r\n[xo]: http://decafbad.com/trac/wiki/XoxoOutliner\r\n[st]: http://decafbad.com/blog/2006/03/25/about-xoxooutliner \n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221087237\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://vdm.cc/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a4dae25fe0faeec4f9ff1ad769a52b36&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://vdm.cc/\">Vincent D Murphy</a>\n                </div>\n                <a href=\"#comment-221087237\" class=\"permalink\"><time datetime=\"2006-11-12T09:14:26\">2006-11-12T09:14:26</time></a>\n            </div>\n            <div class=\"content\"><p>Wow!</p>\n\n<p>This thing is such an improvement. I love that the README is an outline.</p>\n\n<p>I think this is really powerful. I think an outliner should eliminate the need for a lot of rich text browser editors. Outlines inherently break text into small little chunks, which are stylable (and potentially URL addressable, for block-level comments). I think this thing would rock in a wiki.</p>\n\n<p>Keep up the good work!</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087241\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://db79.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=db8059b0ce0b3cf393f4de0ad7af758f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://db79.com\">Shawn Medero</a>\n                </div>\n                <a href=\"#comment-221087241\" class=\"permalink\"><time datetime=\"2006-11-13T12:59:18\">2006-11-13T12:59:18</time></a>\n            </div>\n            <div class=\"content\"><p>Bravo! This is a great set of updates and works well in Safari (haven't had the time yet to test in Firefox.)</p>\n\n<p>I've been thinking about using some portion of these tools in my wiki software to dress up outlines. I'm not sure yet... sometimes I feel like editing an outline  (well a simple one I'd use on a wiki at least) is quicker manually with something like Markdown.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087243\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.gibberish.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d78a376f93e23dd093abe8d280198ebd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.gibberish.com\">misuba</a>\n                </div>\n                <a href=\"#comment-221087243\" class=\"permalink\"><time datetime=\"2006-11-14T00:15:01\">2006-11-14T00:15:01</time></a>\n            </div>\n            <div class=\"content\"><p>Rad!</p>\n\n<p>Keep this up and I won't have to finish mine. :-)</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/11/12/xoxooutliner-shows-some-signs-of-life",
    "prevPostPath": "2006/11/13/xoxooutliner-and-suboutline-addressing",
    "nextPostPath": "2006/11/08/of-sheep-farming-and-retirement"
  },
  {
    "comments_archived": true,
    "date": "2006-11-06T18:14:26.000Z",
    "layout": "post",
    "tags": [
      "asides",
      "webdev",
      "outliners",
      "javascript",
      "xoxooutliner",
      "projects",
      "eventdelegation"
    ],
    "title": "XoxoOutliner rewrite coming, now with event delegation",
    "wordpress_id": 1013,
    "wordpress_slug": "xoxooutliner-rewrite-coming-now-with-event-delegation",
    "wordpress_url": "http://decafbad.com/blog/2006/11/06/xoxooutliner-rewrite-coming-now-with-event-delegation",
    "year": "2006",
    "month": "11",
    "day": "06",
    "isDir": false,
    "slug": "xoxooutliner-rewrite-coming-now-with-event-delegation",
    "postName": "2006-11-06-xoxooutliner-rewrite-coming-now-with-event-delegation",
    "html": "<p>For what it&#39;s worth: I&#39;ve answered my own <a href=\"http://decafbad.com/blog/2006/10/31/event-delegation-based-dhtml-drag-and-drop\">question about event delegation based drag and drop</a>.  It seems to work quite well on my machine, which is quite a bit beefier than my old machine.  I should try it out on there soon.  But, I&#39;ll hopefully be releasing it soon in the form of a mostly-rewritten <a href=\"http://decafbad.com/trac/wiki/XoxoOutliner\">XoxoOutliner</a> that will feature drag and drop outline items as well as keyboard navigation/control and in-place editing.  And, it should actually start to become useful, since I plan to also whip up a PHP-based server side bit that will handle loading and saving outlines, as well as possibly a client-side bit that can save outlines using local browser storage.  I have the technology - we&#39;ll see how far my ambitious plans take me during this hobbling sprint of development.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221087316\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://db79.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=db8059b0ce0b3cf393f4de0ad7af758f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://db79.com\">Shawn Medero</a>\n</div>\n<a href=\"#comment-221087316\" class=\"permalink\"><time datetime=\"2006-11-07T11:01:11\">2006-11-07T11:01:11</time></a>\n</div>\n<div class=\"content\"><p>Great news Les! I had checked out the souce of XoxoOutliner and was thinking about playing around myself. Let me know if you'd like an additional tester. :)</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087318\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://overstimulate.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=50d10a8864accf0b2522c326381a4702&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://overstimulate.com\">Jesse Andrews</a>\n</div>\n<a href=\"#comment-221087318\" class=\"permalink\"><time datetime=\"2006-11-08T18:18:11\">2006-11-08T18:18:11</time></a>\n</div>\n<div class=\"content\"><p>Is there a demo of the event delegation framework you are building posted?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087319\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221087319\" class=\"permalink\"><time datetime=\"2006-11-08T18:23:29\">2006-11-08T18:23:29</time></a>\n</div>\n<div class=\"content\"><p>Nope, nothing available or posted yet.  Soon, though - hoping to check the works in before the end of the week.  It's a bit in pieces right now</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087320\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://codinginparadise.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=96da1b3d8858bfa0306b7c55d3e48270&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://codinginparadise.org\">Brad Neuberg</a>\n</div>\n<a href=\"#comment-221087320\" class=\"permalink\"><time datetime=\"2006-11-29T09:57:04\">2006-11-29T09:57:04</time></a>\n</div>\n<div class=\"content\"><p>Les, very exciting that you're jumping back into the XoXoOutliner code! I can't wait to try to hook it up to HyperScope and play with it some more. It's the best open source DHTMLly outliner out there.</p>\n<p>Two things that might help you; for local storage, I just checked in a new storage provider for Dojo Storage that will use the native storage abilities in Firefox 2 if they are available, in an automagic way; if they aren't there, then it will revert to hidden Flash like it's worked in the past. This might be useful for you; don't know what you were thinking about for local storage. There's a page up with better docs on Dojo Storage now at http://manual.dojotoolkit.org/WikiHome/DojoDotBook/Book50</p>\n<p>The second thing is I just finished an HTML to OPML outline transformer; right now it adds in the line for the HyperScope XSLT stylesheet, but it can be used by any OPML hackers who want to play with bringing HTML into the OPML world, including for things like experimenting with the kind of OPath, deep linking, and inclusion work you've hinted about in other blog entries. A blog post on it is here: http://codinginparadise.org/weblog/2006/11/html-transformer-for-hyperscope-apply.html . Might be fun for you to use in your hacking.</p>\n<p>We still need to grab drinks some time! How is your leg healing up? Hope you had a great thanksgiving.</p>\n<p>Best,\nBrad</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "For what it's worth: I've answered my own [question about event delegation based drag and drop][ednd].  It seems to work quite well on my machine, which is quite a bit beefier than my old machine.  I should try it out on there soon.  But, I'll hopefully be releasing it soon in the form of a mostly-rewritten [XoxoOutliner][xo] that will feature drag and drop outline items as well as keyboard navigation/control and in-place editing.  And, it should actually start to become useful, since I plan to also whip up a PHP-based server side bit that will handle loading and saving outlines, as well as possibly a client-side bit that can save outlines using local browser storage.  I have the technology - we'll see how far my ambitious plans take me during this hobbling sprint of development.\r\n\r\n[xo]: http://decafbad.com/trac/wiki/XoxoOutliner\r\n[ednd]: http://decafbad.com/blog/2006/10/31/event-delegation-based-dhtml-drag-and-drop\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221087316\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://db79.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=db8059b0ce0b3cf393f4de0ad7af758f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://db79.com\">Shawn Medero</a>\n                </div>\n                <a href=\"#comment-221087316\" class=\"permalink\"><time datetime=\"2006-11-07T11:01:11\">2006-11-07T11:01:11</time></a>\n            </div>\n            <div class=\"content\"><p>Great news Les! I had checked out the souce of XoxoOutliner and was thinking about playing around myself. Let me know if you'd like an additional tester. :)</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087318\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://overstimulate.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=50d10a8864accf0b2522c326381a4702&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://overstimulate.com\">Jesse Andrews</a>\n                </div>\n                <a href=\"#comment-221087318\" class=\"permalink\"><time datetime=\"2006-11-08T18:18:11\">2006-11-08T18:18:11</time></a>\n            </div>\n            <div class=\"content\"><p>Is there a demo of the event delegation framework you are building posted?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087319\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221087319\" class=\"permalink\"><time datetime=\"2006-11-08T18:23:29\">2006-11-08T18:23:29</time></a>\n            </div>\n            <div class=\"content\"><p>Nope, nothing available or posted yet.  Soon, though - hoping to check the works in before the end of the week.  It's a bit in pieces right now</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221087320\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://codinginparadise.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=96da1b3d8858bfa0306b7c55d3e48270&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://codinginparadise.org\">Brad Neuberg</a>\n                </div>\n                <a href=\"#comment-221087320\" class=\"permalink\"><time datetime=\"2006-11-29T09:57:04\">2006-11-29T09:57:04</time></a>\n            </div>\n            <div class=\"content\"><p>Les, very exciting that you're jumping back into the XoXoOutliner code! I can't wait to try to hook it up to HyperScope and play with it some more. It's the best open source DHTMLly outliner out there.</p>\n\n<p>Two things that might help you; for local storage, I just checked in a new storage provider for Dojo Storage that will use the native storage abilities in Firefox 2 if they are available, in an automagic way; if they aren't there, then it will revert to hidden Flash like it's worked in the past. This might be useful for you; don't know what you were thinking about for local storage. There's a page up with better docs on Dojo Storage now at http://manual.dojotoolkit.org/WikiHome/DojoDotBook/Book50</p>\n\n<p>The second thing is I just finished an HTML to OPML outline transformer; right now it adds in the line for the HyperScope XSLT stylesheet, but it can be used by any OPML hackers who want to play with bringing HTML into the OPML world, including for things like experimenting with the kind of OPath, deep linking, and inclusion work you've hinted about in other blog entries. A blog post on it is here: http://codinginparadise.org/weblog/2006/11/html-transformer-for-hyperscope-apply.html . Might be fun for you to use in your hacking.</p>\n\n<p>We still need to grab drinks some time! How is your leg healing up? Hope you had a great thanksgiving.</p>\n\n<p>Best,\n  Brad</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/11/06/xoxooutliner-rewrite-coming-now-with-event-delegation",
    "prevPostPath": "2006/11/07/firefox-rss-xsl-from-anger-to-apathy",
    "nextPostPath": "2006/11/02/firefox-20-breaks-client-side-xsl-for-rss-and-atom-feeds"
  },
  {
    "comments_archived": true,
    "date": "2006-10-31T21:46:40.000Z",
    "layout": "post",
    "tags": [
      "webdev",
      "js",
      "outliners",
      "outlining",
      "javascript",
      "dhtml",
      "yui"
    ],
    "title": "Event Delegation based DHTML Drag and Drop?",
    "wordpress_id": 1011,
    "wordpress_slug": "event-delegation-based-dhtml-drag-and-drop",
    "wordpress_url": "http://decafbad.com/blog/2006/10/31/event-delegation-based-dhtml-drag-and-drop",
    "year": "2006",
    "month": "10",
    "day": "31",
    "isDir": false,
    "slug": "event-delegation-based-dhtml-drag-and-drop",
    "postName": "2006-10-31-event-delegation-based-dhtml-drag-and-drop",
    "html": "<p>So, as the urge to tinker rises again, I&#39;ve started playing with <a href=\"http://developer.yahoo.com/yui/\">YUI</a> and cracked open some <a href=\"http://decafbad.com/trac/wiki/XoxoOutliner\">XoxoOutliner</a> code again.  One of the things that struck me like a bolt from the blue recently is the notion of <a href=\"http://icant.co.uk/sandbox/eventdelegation/\">event delegation</a>.  For the most part, I&#39;ve treated event bubbling as a nuisance, except for where it came in handy in keyboard input handling.  But avoiding the need to individually track events on every list element on the page via instantiated objects and methods is <em>hot</em> and <em>forehead-slappingly obvious</em> once you&#39;ve seen it working.  Just implement one set of event handlers on the outline root element (ie. UL or OL), and do the right thing as events come in from the list child elements.</p>\n<p>Thus, while I can do outline node expand/collapse with ease, my goal is to implement an <a href=\"http://icant.co.uk/sandbox/eventdelegation/\">event delegation</a> based approach to dragging outline nodes around.  Apropos of that, I&#39;ve been poking at <a href=\"http://yuiblog.com/sandbox/yui/v0114/examples/event/delegation.php\">how event delegation it works in YUI</a>.  While there&#39;s nothing much special about it in general, I&#39;ve run into a bit of a snag when it comes to drag-and-drop.</p>\n<p>See, YUI comes with a <a href=\"http://developer.yahoo.com/yui/dragdrop/\">rather nice drag-and-drop abstraction</a> that I&#39;d like to use.  That abstraction, however, requires the instantiation of lots of little objects - one per outline node.  Definitely not delegation-based: The problem is that I&#39;ll be adding and removing outline nodes at whim throughout the lifetime of the page, which would require lots of care to ensure that I&#39;m maintaining drag-and-drop wrapper objects.  I&#39;ve done that a bit in <a href=\"http://decafbad.com/trac/wiki/XoxoOutliner\">XoxoOutliner</a>; it sucks.</p>\n<p>So, I was able to build part of a delegation-based drag tracker from scratch.  I&#39;m sad to lose the other niceties that the YUI DnD offers, but it works.  The problem now, though, is the <em>drop</em> part of the equation.  I can drag elements around the page until my heart&#39;s content, but I can never quite tell in what context I&#39;ve dropped it.</p>\n<p>I poured through the source code for the YUI DnD implementation, as well as the implementation of a few other JS frameworks&#39; DnD offerings.  The general solution seems to be calculating and caching the page coordinate regions for each element relevant in the drop operation.  In my case, that usually includes every outline node on the page.  That&#39;s easy when you have lots of little objects instantiated - you just iterate through them and match up regions with the coordinates where the drag stopped.  But, part of my win with event delegation was that I don&#39;t have to maintain a pile of objects.</p>\n<p>Oh yeah, and did I mention that I don&#39;t assign IDs to all the little list items making up my outline?  And that I don&#39;t particularly feel like doing so?  That also throws a monkey wrench in the YUI DnD paradigm.</p>\n<p>The only idea I have so far is that I need to at least build a cache mapping regions to outline nodes, and keep it fairly well maintained.  That should be lighterweight than a fleet of DOM event wrappers, but still annoying.  I could trigger a cache refresh when a drag first starts, but that will probably drag down UI response.  I could trigger it whenever the outline changes, but that&#39;s just moving the burden.  And then, who knows how I&#39;ll map ID-less elements to their respective regions, while ensuring I stay clear of memory leaks.  That&#39;s still semi-voodoo to me, and I feel ashamed of that.</p>\n<p>Eh, maybe it won&#39;t be as bad as I think.  But, to anyone who understands what I just spewed:  Any ideas?</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221083066\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2d870e8df3af0d62fa636b336b17cd60&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Nick</a>\n</div>\n<a href=\"#comment-221083066\" class=\"permalink\"><time datetime=\"2006-11-01T00:19:27\">2006-11-01T00:19:27</time></a>\n</div>\n<div class=\"content\"><p>You know, Marty and I were talking tonight about how some of your posts make NO sense to us.  She even said \"it's like he's talking another fucking language\".</p>\n<p>Damn Programmers!!</p>\n<p>--nick</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083067\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://gandrew.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=de0d80e531fef9095048375a247d1149&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://gandrew.com\">Gareth Andrew</a>\n</div>\n<a href=\"#comment-221083067\" class=\"permalink\"><time datetime=\"2006-11-01T18:57:21\">2006-11-01T18:57:21</time></a>\n</div>\n<div class=\"content\"><p>I'm sure I've missed something obvious - why can't you simply use the same event delegation approach on the mouseUp event?  getTarget should return the node you've dropped on, what else do you need?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083074\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221083074\" class=\"permalink\"><time datetime=\"2006-11-01T19:18:52\">2006-11-01T19:18:52</time></a>\n</div>\n<div class=\"content\"><p>Gareth: Yup, the issue I have with the mouseUp is that getTarget gives me what was under the mouse when I let go of the button - namely, the element I've been dragging around, not the element under the thing being dragged.  In addition, for user feedback <em>during</em> the drag (ie. at mouseMove time), I want to know what's under the dragged element - so I can highlight the potential landing spot, etc.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083075\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.fluffy.co.uk/stediting/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a660afb8f1f22ce1b03ad3b532aa05b5&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.fluffy.co.uk/stediting/\">Ben</a>\n</div>\n<a href=\"#comment-221083075\" class=\"permalink\"><time datetime=\"2006-11-02T13:10:53\">2006-11-02T13:10:53</time></a>\n</div>\n<div class=\"content\"><p>I presume the problem is that, given a point on the screen, you want to find exactly what DOM element is beneath it.</p>\n<p>I found a solution for this in my proof-of-concept structured editor http://www.fluffy.co.uk/stediting/ -- you need to know where the mouse was clicked to insert the caret.</p>\n<p>It might be a start anyway.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083078\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.gibberish.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d78a376f93e23dd093abe8d280198ebd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.gibberish.com\">misuba</a>\n</div>\n<a href=\"#comment-221083078\" class=\"permalink\"><time datetime=\"2006-11-06T02:40:19\">2006-11-06T02:40:19</time></a>\n</div>\n<div class=\"content\"><p>I think the dragdrop stuff in scriptaculous would get you most of this... at least, it is good about draggable elements having handles you can specify (e.g. child elements of the thing you want to drag), and flexible about what sorts of targets you can land on.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083084\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221083084\" class=\"permalink\"><time datetime=\"2006-11-06T19:06:03\">2006-11-06T19:06:03</time></a>\n</div>\n<div class=\"content\"><p>misuba: Nope, the Scriptaculous approach gives me problems too.  The first is that I don't like Prototype, unless they've stopped messing with Object.prototype since I last checked.  The second is that DnD in Scriptaculous involves juggling lots of little objects ilke most other DnD implementations I've found.  When I have an outline of 100's to 1000's of items, that really blows.  I think I've got an approach working now that's significantly lighter weight.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083085\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.gibberish.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d78a376f93e23dd093abe8d280198ebd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.gibberish.com\">misuba</a>\n</div>\n<a href=\"#comment-221083085\" class=\"permalink\"><time datetime=\"2006-11-06T22:26:55\">2006-11-06T22:26:55</time></a>\n</div>\n<div class=\"content\"><p>I'm interested to see your approach. (FWIW, Proto hasn't touched Object.prototype for a couple of versions now.)</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083086\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://javascriptmvc.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=10b3282aac613831755e42ac74acbc41&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://javascriptmvc.com\">Justin Meyer</a>\n</div>\n<a href=\"#comment-221083086\" class=\"permalink\"><time datetime=\"2008-05-31T07:43:52\">2008-05-31T07:43:52</time></a>\n</div>\n<div class=\"content\"><p>I am working on the exact same issue for JavaScriptMVC.  If you haven't seen JavaScriptMVC, check out its trunk.  In the controller2 plugin, you'll find a really nice event delegation library.</p>\n<p>I've only thought of 1 way to do event delegation drops.  It's crazy, but it might work.</p>\n<p>First, style Drags so their z-Index is LOWER than the Drops.  You want your mouse to hit the droppable areas.</p>\n<p>Once a droppable is moused over by dragging a drag to it, it creates a transparent element in the exact same position as the Droppable.  It also lowers the droppable z-Index.  This gives the appearance that the draggable is over the droppable.</p>\n<p>To simulate movement, the transparent droppable's mouseovers are sent to the draggable.</p>\n<p>On mousing out of the transparent Droppable, it sets everything back to normal.</p>\n<p>I haven't tried this yet.  The biggest issue I see is that when you grab a draggable in the middle, half of it will be behind the droppable until the mouseover happens.  This isn't ideal, but maybe there is something that can be done about that.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083088\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8f18d2579d5c8f2fb2a79c09a9234e6e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Batiste</a>\n</div>\n<a href=\"#comment-221083088\" class=\"permalink\"><time datetime=\"2009-01-20T10:06:54\">2009-01-20T10:06:54</time></a>\n</div>\n<div class=\"content\"><p>A jQuery solution for Drag and Drop with event delegation :</p>\n<p>http://batiste.dosimple.ch/blog/posts/2008-05-18-1/jquery-drag-and-drop-and-resize-event-delegation.html</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "So, as the urge to tinker rises again, I've started playing with [YUI][] and cracked open some [XoxoOutliner][] code again.  One of the things that struck me like a bolt from the blue recently is the notion of [event delegation][ed].  For the most part, I've treated event bubbling as a nuisance, except for where it came in handy in keyboard input handling.  But avoiding the need to individually track events on every list element on the page via instantiated objects and methods is *hot* and *forehead-slappingly obvious* once you've seen it working.  Just implement one set of event handlers on the outline root element (ie. UL or OL), and do the right thing as events come in from the list child elements.\r\n\r\nThus, while I can do outline node expand/collapse with ease, my goal is to implement an [event delegation][ed] based approach to dragging outline nodes around.  Apropos of that, I've been poking at [how event delegation it works in YUI][edy].  While there's nothing much special about it in general, I've run into a bit of a snag when it comes to drag-and-drop.\r\n\r\nSee, YUI comes with a [rather nice drag-and-drop abstraction][yuidd] that I'd like to use.  That abstraction, however, requires the instantiation of lots of little objects - one per outline node.  Definitely not delegation-based: The problem is that I'll be adding and removing outline nodes at whim throughout the lifetime of the page, which would require lots of care to ensure that I'm maintaining drag-and-drop wrapper objects.  I've done that a bit in [XoxoOutliner][]; it sucks.\r\n\r\nSo, I was able to build part of a delegation-based drag tracker from scratch.  I'm sad to lose the other niceties that the YUI DnD offers, but it works.  The problem now, though, is the *drop* part of the equation.  I can drag elements around the page until my heart's content, but I can never quite tell in what context I've dropped it.\r\n\r\nI poured through the source code for the YUI DnD implementation, as well as the implementation of a few other JS frameworks' DnD offerings.  The general solution seems to be calculating and caching the page coordinate regions for each element relevant in the drop operation.  In my case, that usually includes every outline node on the page.  That's easy when you have lots of little objects instantiated - you just iterate through them and match up regions with the coordinates where the drag stopped.  But, part of my win with event delegation was that I don't have to maintain a pile of objects.\r\n\r\nOh yeah, and did I mention that I don't assign IDs to all the little list items making up my outline?  And that I don't particularly feel like doing so?  That also throws a monkey wrench in the YUI DnD paradigm.\r\n\r\nThe only idea I have so far is that I need to at least build a cache mapping regions to outline nodes, and keep it fairly well maintained.  That should be lighterweight than a fleet of DOM event wrappers, but still annoying.  I could trigger a cache refresh when a drag first starts, but that will probably drag down UI response.  I could trigger it whenever the outline changes, but that's just moving the burden.  And then, who knows how I'll map ID-less elements to their respective regions, while ensuring I stay clear of memory leaks.  That's still semi-voodoo to me, and I feel ashamed of that.\r\n\r\nEh, maybe it won't be as bad as I think.  But, to anyone who understands what I just spewed:  Any ideas?\r\n\r\n[yui]: http://developer.yahoo.com/yui/\r\n[xoxooutliner]: http://decafbad.com/trac/wiki/XoxoOutliner\r\n[ed]: http://icant.co.uk/sandbox/eventdelegation/\r\n[edy]: http://yuiblog.com/sandbox/yui/v0114/examples/event/delegation.php\r\n[yuidd]: http://developer.yahoo.com/yui/dragdrop/\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221083066\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2d870e8df3af0d62fa636b336b17cd60&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Nick</a>\n                </div>\n                <a href=\"#comment-221083066\" class=\"permalink\"><time datetime=\"2006-11-01T00:19:27\">2006-11-01T00:19:27</time></a>\n            </div>\n            <div class=\"content\"><p>You know, Marty and I were talking tonight about how some of your posts make NO sense to us.  She even said \"it's like he's talking another fucking language\".</p>\n\n<p>Damn Programmers!!</p>\n\n<p>--nick</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083067\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://gandrew.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=de0d80e531fef9095048375a247d1149&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://gandrew.com\">Gareth Andrew</a>\n                </div>\n                <a href=\"#comment-221083067\" class=\"permalink\"><time datetime=\"2006-11-01T18:57:21\">2006-11-01T18:57:21</time></a>\n            </div>\n            <div class=\"content\"><p>I'm sure I've missed something obvious - why can't you simply use the same event delegation approach on the mouseUp event?  getTarget should return the node you've dropped on, what else do you need?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083074\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221083074\" class=\"permalink\"><time datetime=\"2006-11-01T19:18:52\">2006-11-01T19:18:52</time></a>\n            </div>\n            <div class=\"content\"><p>Gareth: Yup, the issue I have with the mouseUp is that getTarget gives me what was under the mouse when I let go of the button - namely, the element I've been dragging around, not the element under the thing being dragged.  In addition, for user feedback <em>during</em> the drag (ie. at mouseMove time), I want to know what's under the dragged element - so I can highlight the potential landing spot, etc.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083075\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.fluffy.co.uk/stediting/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a660afb8f1f22ce1b03ad3b532aa05b5&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.fluffy.co.uk/stediting/\">Ben</a>\n                </div>\n                <a href=\"#comment-221083075\" class=\"permalink\"><time datetime=\"2006-11-02T13:10:53\">2006-11-02T13:10:53</time></a>\n            </div>\n            <div class=\"content\"><p>I presume the problem is that, given a point on the screen, you want to find exactly what DOM element is beneath it.</p>\n\n<p>I found a solution for this in my proof-of-concept structured editor http://www.fluffy.co.uk/stediting/ -- you need to know where the mouse was clicked to insert the caret.</p>\n\n<p>It might be a start anyway.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083078\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.gibberish.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d78a376f93e23dd093abe8d280198ebd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.gibberish.com\">misuba</a>\n                </div>\n                <a href=\"#comment-221083078\" class=\"permalink\"><time datetime=\"2006-11-06T02:40:19\">2006-11-06T02:40:19</time></a>\n            </div>\n            <div class=\"content\"><p>I think the dragdrop stuff in scriptaculous would get you most of this... at least, it is good about draggable elements having handles you can specify (e.g. child elements of the thing you want to drag), and flexible about what sorts of targets you can land on.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083084\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221083084\" class=\"permalink\"><time datetime=\"2006-11-06T19:06:03\">2006-11-06T19:06:03</time></a>\n            </div>\n            <div class=\"content\"><p>misuba: Nope, the Scriptaculous approach gives me problems too.  The first is that I don't like Prototype, unless they've stopped messing with Object.prototype since I last checked.  The second is that DnD in Scriptaculous involves juggling lots of little objects ilke most other DnD implementations I've found.  When I have an outline of 100's to 1000's of items, that really blows.  I think I've got an approach working now that's significantly lighter weight.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083085\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.gibberish.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d78a376f93e23dd093abe8d280198ebd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.gibberish.com\">misuba</a>\n                </div>\n                <a href=\"#comment-221083085\" class=\"permalink\"><time datetime=\"2006-11-06T22:26:55\">2006-11-06T22:26:55</time></a>\n            </div>\n            <div class=\"content\"><p>I'm interested to see your approach. (FWIW, Proto hasn't touched Object.prototype for a couple of versions now.)</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083086\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://javascriptmvc.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=10b3282aac613831755e42ac74acbc41&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://javascriptmvc.com\">Justin Meyer</a>\n                </div>\n                <a href=\"#comment-221083086\" class=\"permalink\"><time datetime=\"2008-05-31T07:43:52\">2008-05-31T07:43:52</time></a>\n            </div>\n            <div class=\"content\"><p>I am working on the exact same issue for JavaScriptMVC.  If you haven't seen JavaScriptMVC, check out its trunk.  In the controller2 plugin, you'll find a really nice event delegation library.</p>\n\n<p>I've only thought of 1 way to do event delegation drops.  It's crazy, but it might work.</p>\n\n<p>First, style Drags so their z-Index is LOWER than the Drops.  You want your mouse to hit the droppable areas.</p>\n\n<p>Once a droppable is moused over by dragging a drag to it, it creates a transparent element in the exact same position as the Droppable.  It also lowers the droppable z-Index.  This gives the appearance that the draggable is over the droppable.</p>\n\n<p>To simulate movement, the transparent droppable's mouseovers are sent to the draggable.</p>\n\n<p>On mousing out of the transparent Droppable, it sets everything back to normal.</p>\n\n<p>I haven't tried this yet.  The biggest issue I see is that when you grab a draggable in the middle, half of it will be behind the droppable until the mouseover happens.  This isn't ideal, but maybe there is something that can be done about that.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083088\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8f18d2579d5c8f2fb2a79c09a9234e6e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Batiste</a>\n                </div>\n                <a href=\"#comment-221083088\" class=\"permalink\"><time datetime=\"2009-01-20T10:06:54\">2009-01-20T10:06:54</time></a>\n            </div>\n            <div class=\"content\"><p>A jQuery solution for Drag and Drop with event delegation :</p>\n\n<p>http://batiste.dosimple.ch/blog/posts/2008-05-18-1/jquery-drag-and-drop-and-resize-event-delegation.html</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/10/31/event-delegation-based-dhtml-drag-and-drop",
    "prevPostPath": "2006/11/02/firefox-20-breaks-client-side-xsl-for-rss-and-atom-feeds",
    "nextPostPath": "2006/10/29/microsummaries-and-content-type-mysteries"
  },
  {
    "comments_archived": true,
    "date": "2005-12-19T03:59:31.000Z",
    "layout": "post",
    "tags": [
      "asides",
      "webdev",
      "javascript"
    ],
    "title": "JS versus PHP?",
    "wordpress_id": 804,
    "wordpress_slug": "js-versus-php",
    "wordpress_url": "http://decafbad.com/blog/?p=804",
    "year": "2005",
    "month": "12",
    "day": "18",
    "isDir": false,
    "slug": "js-versus-php",
    "postName": "2005-12-18-js-versus-php",
    "html": "<p>...on the other hand:  With all these people getting reacquainted with JavaScript by way of AJAX, wouldn&#39;t it be cool if we had something as easy to deploy as PHP but based on JavaScript?</p>\n<!-- tags: javascript webdev php -->\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221090997\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.snook.ca/jonathan/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=ce0f8df84e1e4edb3d9999740472261a&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.snook.ca/jonathan/\">Jonathan Snook</a>\n</div>\n<a href=\"#comment-221090997\" class=\"permalink\"><time datetime=\"2005-12-19T04:26:31\">2005-12-19T04:26:31</time></a>\n</div>\n<div class=\"content\"><p>Isn't that ASP?</p>\n<p>I know I've liked the idea of doing JavaScript on the server and client. Less confusing.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090999\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://admin.support.journurl.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=5f89d3df08b8dedac1a0fde900a586db&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://admin.support.journurl.com/\">Roger Benningfield</a>\n</div>\n<a href=\"#comment-221090999\" class=\"permalink\"><time datetime=\"2005-12-19T15:10:28\">2005-12-19T15:10:28</time></a>\n</div>\n<div class=\"content\"><p>As of CFMX, the CFScript sub-branch of the language is similar to Javascript... the handling of curly brackets is the same, and Coldfusion Components are basically a server-side implementation of Javascript's approach to objects.</p>\n<p>The big difference is in operators. For some reason, they stuck with CF's standard, text-based operators, so you end up with stuff like this:</p>\n<p>if (i=1;i LT 10;i = i + 1) {\n// do something\n}</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221091000\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221091000\" class=\"permalink\"><time datetime=\"2005-12-19T18:23:36\">2005-12-19T18:23:36</time></a>\n</div>\n<div class=\"content\"><p>Jonathan: Well, yeah, JScript is one of the languages available in ASP...  but ASP isn't a quick configure-and-make module for Apache.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221091001\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=47a5b72b5be083e6dd744f59ab6143c5&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Stephen De Gabrielle</a>\n</div>\n<a href=\"#comment-221091001\" class=\"permalink\"><time datetime=\"2005-12-21T07:31:52\">2005-12-21T07:31:52</time></a>\n</div>\n<div class=\"content\"><p>Isn't Rhino the obvious solution? I'm sure there is an opensource jvm/compiler that it will run on too?</p>\n<p>http://www.mozilla.org/rhino/</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221091002\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.vivabit.com/bollocks\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=6ab593768880d22b442d964443b4e4c5&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.vivabit.com/bollocks\">Dan Webb</a>\n</div>\n<a href=\"#comment-221091002\" class=\"permalink\"><time datetime=\"2006-04-04T23:18:43\">2006-04-04T23:18:43</time></a>\n</div>\n<div class=\"content\"><p>I'd love to give that a go.  I like RoR for large applications but having an apache mod that interpeted JS along with some APIs to access the system and server environment would be great.</p>\n<p>I've been looking for someone to start that project with because unfortunately I know hardly any C.  If anyone does an is interested then I'd love to give it a shot.  </p>\n<p>I think mod_javascript was started years ago but stalled eventually before it came to anything.  I think spidermonkey would be a better basis that rhino to get in all to run as fast as possible which is a shame because I can code Java..</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "...on the other hand:  With all these people getting reacquainted with JavaScript by way of AJAX, wouldn't it be cool if we had something as easy to deploy as PHP but based on JavaScript?\r\n\r\n<!-- tags: javascript webdev php -->\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221090997\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.snook.ca/jonathan/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=ce0f8df84e1e4edb3d9999740472261a&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.snook.ca/jonathan/\">Jonathan Snook</a>\r\n                </div>\r\n                <a href=\"#comment-221090997\" class=\"permalink\"><time datetime=\"2005-12-19T04:26:31\">2005-12-19T04:26:31</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Isn't that ASP?</p>\r\n\r\n<p>I know I've liked the idea of doing JavaScript on the server and client. Less confusing.</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221090999\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://admin.support.journurl.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=5f89d3df08b8dedac1a0fde900a586db&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://admin.support.journurl.com/\">Roger Benningfield</a>\r\n                </div>\r\n                <a href=\"#comment-221090999\" class=\"permalink\"><time datetime=\"2005-12-19T15:10:28\">2005-12-19T15:10:28</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>As of CFMX, the CFScript sub-branch of the language is similar to Javascript... the handling of curly brackets is the same, and Coldfusion Components are basically a server-side implementation of Javascript's approach to objects.</p>\r\n\r\n<p>The big difference is in operators. For some reason, they stuck with CF's standard, text-based operators, so you end up with stuff like this:</p>\r\n\r\n<p>if (i=1;i LT 10;i = i + 1) {\r\n// do something\r\n}</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221091000\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\r\n                </div>\r\n                <a href=\"#comment-221091000\" class=\"permalink\"><time datetime=\"2005-12-19T18:23:36\">2005-12-19T18:23:36</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Jonathan: Well, yeah, JScript is one of the languages available in ASP...  but ASP isn't a quick configure-and-make module for Apache.</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221091001\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=47a5b72b5be083e6dd744f59ab6143c5&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"\">Stephen De Gabrielle</a>\r\n                </div>\r\n                <a href=\"#comment-221091001\" class=\"permalink\"><time datetime=\"2005-12-21T07:31:52\">2005-12-21T07:31:52</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Isn't Rhino the obvious solution? I'm sure there is an opensource jvm/compiler that it will run on too?</p>\r\n\r\n<p>http://www.mozilla.org/rhino/</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221091002\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.vivabit.com/bollocks\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=6ab593768880d22b442d964443b4e4c5&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.vivabit.com/bollocks\">Dan Webb</a>\r\n                </div>\r\n                <a href=\"#comment-221091002\" class=\"permalink\"><time datetime=\"2006-04-04T23:18:43\">2006-04-04T23:18:43</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>I'd love to give that a go.  I like RoR for large applications but having an apache mod that interpeted JS along with some APIs to access the system and server environment would be great.</p>\r\n\r\n<p>I've been looking for someone to start that project with because unfortunately I know hardly any C.  If anyone does an is interested then I'd love to give it a shot.  </p>\r\n\r\n<p>I think mod_javascript was started years ago but stalled eventually before it came to anything.  I think spidermonkey would be a better basis that rhino to get in all to run as fast as possible which is a shame because I can code Java..</p></div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2005",
    "path": "2005/12/19/js-versus-php",
    "prevPostPath": "2005/12/19/okay-okay-json-is-pretty-hot",
    "nextPostPath": "2005/12/19/not-so-deep-php-thoughts"
  },
  {
    "comments_archived": true,
    "date": "2005-12-19T03:01:51.000Z",
    "layout": "post",
    "tags": [
      "asides",
      "ajax",
      "json",
      "webdev",
      "web20",
      "rss",
      "syndication",
      "atom",
      "javascript"
    ],
    "title": "FeedMagick gains an RSS-to-JSON filter",
    "wordpress_id": 801,
    "wordpress_slug": "feedmagick-gains-an-rss-to-json-filter",
    "wordpress_url": "http://decafbad.com/blog/?p=801",
    "year": "2005",
    "month": "12",
    "day": "18",
    "isDir": false,
    "slug": "feedmagick-gains-an-rss-to-json-filter",
    "postName": "2005-12-18-feedmagick-gains-an-rss-to-json-filter",
    "html": "<p>So, I put <a href=\"http://decafbad.com/2005/12/FeedMagick/\">some more infrastructure</a> behind <a href=\"http://decafbad.com/trac/wiki/FeedMagick\">FeedMagick</a> and lifted <a href=\"http://ejohn.org/projects/rss2json/\">a RSS-to-JSON idea from John Resig</a> to transform from <a href=\"http://magpierss.sourceforge.net/\">MagpieRSS</a> parsing to JSON output.  </p>\n<p>Here&#39;s <a href=\"http://decafbad.com/2005/12/FeedMagick/docs/json-demo.html\">a spiffy JSON-enriched demo</a>.  It was surprisingly easy, all told.</p>\n<p>I&#39;m not sure how much time I&#39;ll have to really put into this project, but this is the first decent effort I&#39;ve put into a URL-line suite in a long time.  I&#39;m trying to throw in some bits to make it easy to build, document, and use these feed processing commands.</p>\n<!-- tags: rss json php syndication atom javascript webdev ajax web20 -->\n\n",
    "body": "So, I put [some more infrastructure][in] behind [FeedMagick][fm] and lifted [a RSS-to-JSON idea from John Resig][jr] to transform from [MagpieRSS][mr] parsing to JSON output.  \r\n\r\nHere's [a spiffy JSON-enriched demo][jd].  It was surprisingly easy, all told.\r\n\r\nI'm not sure how much time I'll have to really put into this project, but this is the first decent effort I've put into a URL-line suite in a long time.  I'm trying to throw in some bits to make it easy to build, document, and use these feed processing commands.\r\n\r\n<!-- tags: rss json php syndication atom javascript webdev ajax web20 -->\r\n\r\n[mr]: http://magpierss.sourceforge.net/\r\n[jd]: http://decafbad.com/2005/12/FeedMagick/docs/json-demo.html\r\n[in]: http://decafbad.com/2005/12/FeedMagick/\r\n[jr]: http://ejohn.org/projects/rss2json/\r\n[fm]: http://decafbad.com/trac/wiki/FeedMagick\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2005",
    "path": "2005/12/19/feedmagick-gains-an-rss-to-json-filter",
    "prevPostPath": "2005/12/19/not-so-deep-php-thoughts",
    "nextPostPath": "2005/12/15/stupid-fun-with-fax-machines"
  },
  {
    "comments_archived": true,
    "date": "2005-10-08T17:21:30.000Z",
    "layout": "post",
    "tags": [
      "asides",
      "webdev",
      "writing",
      "javascript",
      "books"
    ],
    "title": "DOM Scripting sounds like a fine book",
    "wordpress_id": 726,
    "wordpress_slug": "dom-scripting-sounds-like-a-fine-book",
    "wordpress_url": "http://decafbad.com/blog/?p=726",
    "year": "2005",
    "month": "10",
    "day": "08",
    "isDir": false,
    "slug": "dom-scripting-sounds-like-a-fine-book",
    "postName": "2005-10-08-dom-scripting-sounds-like-a-fine-book",
    "html": "<blockquote cite=\"http://domscripting.com/blog/display.php/21\">Flicking through the book, it does give the impression of being full of code. I hope that doesn’t scare off any potential buyers.</blockquote>\n<small style=\"text-align:right; display:block\">Source: <a href=\"http://domscripting.com/blog/display.php/21\">DOM Scripting: The book has landed</a></small><br />\nThis is one thing I'd worried about with [my book][book], but on the other hand [I always wanted to write for The Transactor][trans].  And what I wanted to write was a book <i>I</i> would've wanted to buy, if I hadn't written it.\n\n<p>By the sounds of it, <a href=\"http://domscripting.com/book/\">DOM Scripting</a> has turned out brilliantly.  I&#39;m looking forward to checking it out!  It&#39;s described as a book targeted at designers versus coders—but a lot of times, it&#39;s easier to show-don&#39;t-tell with code than with prose. </p>\n<blockquote cite=\"http://domscripting.com/blog/display.php/21\">Apart from those minor quibbles, I’m pleased as punch. I still can’t quite believe that I wrote an honest-to-goodness book. Some form of celebration is called for.</blockquote>\n\n<p>This is exactly how I felt, too.  Congratulations, Jeremy!  I&#39;m going to have to pick up <a href=\"http://domscripting.com/book/\">a copy of this book</a> for myself!</p>\n<!-- tags: books writing javascript webdev -->\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221087064\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://domscripting.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b92a329df428bcda0822b25a110ab5ac&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://domscripting.com/\">Jeremy Keith</a>\n</div>\n<a href=\"#comment-221087064\" class=\"permalink\"><time datetime=\"2005-10-09T00:42:48\">2005-10-09T00:42:48</time></a>\n</div>\n<div class=\"content\"><p>Thanks, Leslie. I think you can relate to how I'm feeling right now.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087066\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://bt2net.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=61087c5f5f3f410280fb5c9dd4786582&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://bt2net.org/\">Warren Fischer</a>\n</div>\n<a href=\"#comment-221087066\" class=\"permalink\"><time datetime=\"2005-10-09T10:51:38\">2005-10-09T10:51:38</time></a>\n</div>\n<div class=\"content\"><p>This book makes sense in a clear, and consice way that most tech books don't. His examples are great, and his writing style is very readable. Thanks!</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "<blockquote cite=\"http://domscripting.com/blog/display.php/21\">Flicking through the book, it does give the impression of being full of code. I hope that doesn’t scare off any potential buyers.</blockquote>\r\n<small style=\"text-align:right; display:block\">Source: <a href=\"http://domscripting.com/blog/display.php/21\">DOM Scripting: The book has landed</a></small><br />\r\nThis is one thing I'd worried about with [my book][book], but on the other hand [I always wanted to write for The Transactor][trans].  And what I wanted to write was a book <i>I</i> would've wanted to buy, if I hadn't written it.\r\n\r\nBy the sounds of it, [DOM Scripting][dom] has turned out brilliantly.  I'm looking forward to checking it out!  It's described as a book targeted at designers versus coders—but a lot of times, it's easier to show-don't-tell with code than with prose. \r\n\r\n<blockquote cite=\"http://domscripting.com/blog/display.php/21\">Apart from those minor quibbles, I’m pleased as punch. I still can’t quite believe that I wrote an honest-to-goodness book. Some form of celebration is called for.</blockquote>\r\n\r\nThis is exactly how I felt, too.  Congratulations, Jeremy!  I'm going to have to pick up [a copy of this book][dom] for myself!\r\n\r\n[dom]: http://domscripting.com/book/\r\n[book]: http://www.amazon.com/exec/obidos/ASIN/0764597582/0xdecafbad01-20?creative=327641&camp=14573&link_code=as1\r\n[trans]: http://decafbad.com/blog/2004/05/25/i-was-a-pre-teen-transactor-author-wannabe-and-still-am\r\n\r\n<!-- tags: books writing javascript webdev -->\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221087064\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://domscripting.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b92a329df428bcda0822b25a110ab5ac&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://domscripting.com/\">Jeremy Keith</a>\r\n                </div>\r\n                <a href=\"#comment-221087064\" class=\"permalink\"><time datetime=\"2005-10-09T00:42:48\">2005-10-09T00:42:48</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Thanks, Leslie. I think you can relate to how I'm feeling right now.</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087066\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://bt2net.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=61087c5f5f3f410280fb5c9dd4786582&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://bt2net.org/\">Warren Fischer</a>\r\n                </div>\r\n                <a href=\"#comment-221087066\" class=\"permalink\"><time datetime=\"2005-10-09T10:51:38\">2005-10-09T10:51:38</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>This book makes sense in a clear, and consice way that most tech books don't. His examples are great, and his writing style is very readable. Thanks!</p></div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2005",
    "path": "2005/10/08/dom-scripting-sounds-like-a-fine-book",
    "prevPostPath": "2005/10/08/google-reader-is-good",
    "nextPostPath": "2005/10/08/too-hard-on-google-reader"
  }
]