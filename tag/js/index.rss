<?xml version="1.0" encoding="UTF-8"?>
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>Tag: js - blog.lmorchard.com</title>
      <description>It&#39;s all spinning wheels &amp; self-doubt until the first pot of coffee.</description>
      <link>https://lmorchard.github.io/blog.lmorchard.com</link>
      <atom:link href="https://lmorchard.github.io/blog.lmorchard.com/index.rss" rel="self" type="application/rss+xml" />      
      <item>
          <title>Continual Blogployment</title>
          <description>Ever since I switched this blog over to a Gulp-based toolchain - holy crap, 2 years ago - I had a TODO to wire this thing up for continual deployment. Well, today I finally did it.</description>
          
          <pubDate>Thu, 22 Oct 2015 12:00:00 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2015/10/22/blogging-via-travis/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2015/10/22/blogging-via-travis/</guid>
        </item><item>
          <title>Static blog generation with Gulp and S3</title>
          <description>I&#39;ve long agreed that many sites, like blogs, are better baked than
fried. It makes for web hosting that&#39;s cheaper to run and simpler to
maintain. I&#39;ve also often thought that using a database can be an
anti-pattern for managing content. But, what I&#39;ve also found is
that baked sites often yield a poor writing environment. That said, I think
I&#39;m going to give it another try, because I think I might have found a new
approach that works for me.</description>
          
          <pubDate>Mon, 20 Oct 2014 12:00:00 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2014/10/20/static-blog-generation-with-gulp/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2014/10/20/static-blog-generation-with-gulp/</guid>
        </item><item>
          <title>Case Study: Building a Bookmark Management UI for Mozilla&#39;s BYOB</title>
          
          
          <pubDate>Tue, 22 Jun 2010 22:16:24 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2010/06/22/case-study-building-a-bookmark-management-ui-for-mozillas-byob/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2010/06/22/case-study-building-a-bookmark-management-ui-for-mozillas-byob/</guid>
        </item><item>
          <title>HTML5 drag and drop in Firefox 3.5</title>
          <description>Oh hey, look! It&#39;s another blog post—and this one
is cross-posted on hacks.mozilla.com.
I won&#39;t say this is the start of a renewed blogging habit, but let&#39;s see what happens.




    
        Drag and drop is one of the most fundamental interactions
        afforded by graphical user interfaces.  In one gesture, it
        allows users to pair the selection of an object with the
        execution of an action, often including a second object in the
        operation.  It&#39;s a simple yet powerful UI concept used to
        support copying, list reordering, deletion (ala the Trash / Recycle Bin),
        and even the creation of link relationships.
    
        Since it&#39;s so fundamental, offering drag and drop in web
        applications has been a no-brainer ever since browsers first
        offered mouse events in DHTML.  But, although
        mousedown, mousemove, and
        mouseup made it possible, the implementation has been
        limited to the bounds of the browser window.  Additionally,
        since these events refer only to the object being dragged,
        there&#39;s a challenge to find the subject of the drop when
        the interaction is completed.
    

    Of course, that doesn&#39;t prevent most modern JavaScript
    frameworks from abstracting away most of the problems and
    throwing in some flourishes while they&#39;re at it.  But, wouldn&#39;t
    it be nice if browsers offered first-class support for drag and
    drop, and maybe even extended it beyond the window sandbox?
&lt;/p&gt;&lt;p&gt;
    As it turns out, this very wish is answered by the HTML 5 specification 
    &lt;a target=&quot;_new&quot; href=&quot;http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#dnd&quot;&gt;section on new drag-and-drop events&lt;/a&gt;, and 
    &lt;a target=&quot;_new&quot; href=&quot;https://developer.mozilla.org/En/DragDrop/Drag_and_Drop&quot;&gt;Firefox 3.5 includes an implementation&lt;/a&gt; of those events.
&lt;/p&gt;&lt;p&gt;
    If you want to jump straight to the code, I&#39;ve put together 
    &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html&quot;&gt;some simple demos&lt;/a&gt; 
    of the new events.  
&lt;/p&gt;&lt;p&gt;

    I&#39;ve even scratched an itch of my own and
    built &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/outline.html&quot;&gt;the beginnings of an outline editor&lt;/a&gt;,
    where every draggable element is also a drop target—of which
    there could be dozens to hundreds in a complex document, something
    that gave me some minor hair-tearing moments in the past
    while trying to make do with plain old mouse events.
&lt;/p&gt;&lt;p&gt;
    And, all the above can be downloaded or cloned from 
    &lt;a href=&quot;http://github.com/lmorchard/fx35-drag-and-drop&quot;&gt;a GitHub repository&lt;/a&gt;
    I&#39;ve created especially for this article—which continues after the jump.
&lt;/p&gt;</description>
          
          <pubDate>Wed, 15 Jul 2009 15:26:40 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2009/07/15/html5-drag-and-drop/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2009/07/15/html5-drag-and-drop/</guid>
        </item><item>
          <title>An unnecessary Template Attribute Language</title>
          
          
          <pubDate>Sat, 01 Nov 2008 19:23:23 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2008/11/01/an-unnecessary-template-attribute-language/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2008/11/01/an-unnecessary-template-attribute-language/</guid>
        </item><item>
          <title>rss feeds of bookmarklets?</title>
          
          
          <pubDate>Wed, 03 Jan 2007 20:29:31 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2007/01/03/rss-feeds-of-bookmarklets/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2007/01/03/rss-feeds-of-bookmarklets/</guid>
        </item><item>
          <title>Event Delegation based DHTML Drag and Drop?</title>
          
          
          <pubDate>Tue, 31 Oct 2006 21:46:40 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2006/10/31/event-delegation-based-dhtml-drag-and-drop/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2006/10/31/event-delegation-based-dhtml-drag-and-drop/</guid>
        </item><item>
          <title>Futility in alternate pasts and futures in human augmentation</title>
          
          
          <pubDate>Wed, 06 Sep 2006 19:57:42 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com/2006/09/06/futility-in-alternate-pasts-and-futures-in-human-augmentation/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com/2006/09/06/futility-in-alternate-pasts-and-futures-in-human-augmentation/</guid>
        </item>
    </channel>
  </rss>