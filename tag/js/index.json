[
  {
    "title": "Continual Blogployment",
    "tags": [
      "metablogging",
      "webdev",
      "js",
      "gulp",
      "github",
      "travis",
      "s3",
      "amazon",
      "devops"
    ],
    "year": "2015",
    "month": "10",
    "day": "22",
    "isDir": false,
    "slug": "blogging-via-travis",
    "date": "2015-10-22T12:00:00.000Z",
    "postName": "2015-10-22-blogging-via-travis",
    "html": "<p>Ever since <a href=\"http://blog.lmorchard.com/2014/10/20/static-blog-generation-with-gulp/\">I switched this blog over to a Gulp-based toolchain</a> - <em>holy crap, 2 years ago</em> - I had a TODO to wire this thing up for continual deployment. Well, today I finally did it. </p>\n<!--more-->\n\n<p>Just to test the cloud machinery I&#39;m (ab)using here, I&#39;m writing this post as a new commit on GitHub in a browser. When I get done and commit this, Travis CI will fire up, install my node-based blog code and build all the content. Assuming that goes well, my code on Travis will then publish any changes in the content to Amazon S3. And, voila, I will have blogged via the magic of cheap cloud infrastructure.</p>\n<p>Up until now, I&#39;ve been doing this all from my laptop: Write a post in Vim, commit to git, build &amp; deploy from my local machine. I&#39;d push to GitHub to work in the open and have a handy backup. But from here on, the push to GitHub will actually make the magic happen!</p>\n<p>If you&#39;re curious about the plumbing, <a href=\"https://github.com/lmorchard/blog.lmorchard.com/compare/5992311ade7acc0e9dbeb0352ac4097c687be1a5...10149c0e520f7e75536535ff563dfe42aa30b960\">the changes in my recent commits</a> can tell the exact story. But, what I did in a nutshell is this:</p>\n<ul>\n<li><a href=\"https://github.com/lmorchard/blog.lmorchard.com/commit/4c029ab9a6d3f5869cee02b7265e0ad41908a8c4\">Switched to using environment vars to configure AWS credentials for S3 publishing</a>.</li>\n<li>Used <a href=\"http://docs.travis-ci.com/user/environment-variables/#Encrypted-Variables\"><code>travis secure</code></a> to supply credentials in encrypted environment vars.</li>\n<li>Started <a href=\"https://github.com/lmorchard/blog.lmorchard.com/commit/4b525710760ad70c0d83d910585e7bd9ddd80583\">maintaining a copy of file hashes on the site</a> so that <a href=\"https://www.npmjs.com/package/gulp-awspublish\">gulp-awspublish</a> will only publish changes.</li>\n<li>Composed a <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/.travis.yml\">.travis.yml</a> to build &amp; deploy everything.</li>\n</ul>\n<p>And, if you&#39;re reading this post, then that means everything worked when I hit the &quot;Commit new file&quot; button! (And, if you&#39;re reading <em>this</em> sentence, then I was able to update this post, too!)</p>\n",
    "body": "Ever since [I switched this blog over to a Gulp-based toolchain][gulp-blog] - *holy crap, 2 years ago* - I had a TODO to wire this thing up for continual deployment. Well, today I finally did it. \n\n<!--more-->\n\nJust to test the cloud machinery I'm (ab)using here, I'm writing this post as a new commit on GitHub in a browser. When I get done and commit this, Travis CI will fire up, install my node-based blog code and build all the content. Assuming that goes well, my code on Travis will then publish any changes in the content to Amazon S3. And, voila, I will have blogged via the magic of cheap cloud infrastructure.\n\nUp until now, I've been doing this all from my laptop: Write a post in Vim, commit to git, build & deploy from my local machine. I'd push to GitHub to work in the open and have a handy backup. But from here on, the push to GitHub will actually make the magic happen!\n\nIf you're curious about the plumbing, [the changes in my recent commits][recent-commits] can tell the exact story. But, what I did in a nutshell is this:\n\n* [Switched to using environment vars to configure AWS credentials for S3 publishing][env-config].\n* Used [`travis secure`][travis-secure] to supply credentials in encrypted environment vars.\n* Started [maintaining a copy of file hashes on the site][hash-stash] so that [gulp-awspublish][] will only publish changes.\n* Composed a [.travis.yml][travis-yml] to build & deploy everything.\n\nAnd, if you're reading this post, then that means everything worked when I hit the \"Commit new file\" button! (And, if you're reading *this* sentence, then I was able to update this post, too!)\n\n[env-config]: https://github.com/lmorchard/blog.lmorchard.com/commit/4c029ab9a6d3f5869cee02b7265e0ad41908a8c4\n[gulp-awspublish]: https://www.npmjs.com/package/gulp-awspublish\n[hash-stash]: https://github.com/lmorchard/blog.lmorchard.com/commit/4b525710760ad70c0d83d910585e7bd9ddd80583\n[travis-yml]: https://github.com/lmorchard/blog.lmorchard.com/blob/master/.travis.yml\n[travis-secure]: http://docs.travis-ci.com/user/environment-variables/#Encrypted-Variables\n[recent-commits]: https://github.com/lmorchard/blog.lmorchard.com/compare/5992311ade7acc0e9dbeb0352ac4097c687be1a5...10149c0e520f7e75536535ff563dfe42aa30b960\n[gulp-blog]: http://blog.lmorchard.com/2014/10/20/static-blog-generation-with-gulp/\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2015",
    "path": "2015/10/22/blogging-via-travis",
    "summary": "<p>Ever since <a href=\"http://blog.lmorchard.com/2014/10/20/static-blog-generation-with-gulp/\">I switched this blog over to a Gulp-based toolchain</a> - <em>holy crap, 2 years ago</em> - I had a TODO to wire this thing up for continual deployment. Well, today I finally did it. </p>\n",
    "prevPostPath": "2015/10/28/catbearcoin",
    "nextPostPath": "2015/10/18/being-nice-at-alterconf"
  },
  {
    "title": "Static blog generation with Gulp and S3",
    "tags": [
      "metablogging",
      "webdev",
      "js",
      "gulp",
      "jekyll",
      "wordpress"
    ],
    "year": "2014",
    "month": "10",
    "day": "20",
    "isDir": false,
    "slug": "static-blog-generation-with-gulp",
    "date": "2014-10-20T12:00:00.000Z",
    "postName": "2014-10-20-static-blog-generation-with-gulp",
    "html": "<p>I&#39;ve long agreed that many sites, like blogs, are better <a href=\"http://www.aaronsw.com/weblog/000404\">baked than\nfried</a>. It makes for web hosting that&#39;s cheaper to run and simpler to\nmaintain. I&#39;ve also often thought that <a href=\"https://indiewebcamp.com/database-antipattern\">using a database can be an\nanti-pattern</a> for managing content. But, what I&#39;ve also found is\nthat baked sites often yield a poor writing environment. That said, I think\nI&#39;m going to give it another try, because I think I might have found a new\napproach that works for me.</p>\n<!--more-->\n\n<h2 id=\"from-wordpress-to-jekyll-to-wordpress\">From WordPress to Jekyll to WordPress</h2>\n<p><a href=\"http://decafbad.com/blog/2011/06/08/moved-to-jekyll/\">As I&#39;ve mentioned before</a>, I&#39;ve flirted with a variety of\nplatforms for putting stuff from my brain on the web. But, the last time I\nswitched away from WordPress to Jekyll, I ended up switching right back again.</p>\n<p>Jekyll <a href=\"http://blog.lmorchard.com/2012/06/16/blogging-like-a-blogger/\">took <em>way</em> too long</a> to generate my site and its 1150 posts, and I\ncouldn&#39;t figure out how to speed that up for previewing drafts without moving\nfiles around.  I tried a few different external tools like\n<a href=\"http://25.io/mou/\">Mou</a> and <a href=\"http://marked2app.com/\">Marked</a>, but the process\nnever clicked. I&#39;ve also never quite gotten along with Ruby, so I didn&#39;t go\nfar with scratching my own itches on Jekyll.</p>\n<p>On the other hand, WordPress has a nicer writing experience. But, it&#39;s clunky\nin other ways. I&#39;m always worried about all that PHP code sitting around\nfrying up page views, hoping no one figures out how to get at the publishing\nmachinery. I&#39;m also less interested in hacking on PHP for fun, these days.</p>\n<h2 id=\"gulp-is-great\">Gulp is great</h2>\n<p>The place where I&#39;ve been having a lot of hacking fun over the past few years\nis in node.js. So, when I was thinking about trying static hosting for\nmy blog again, I started looking into node.js-based Jekyll clones.</p>\n<p>But then, it occurred to me that <a href=\"http://gulpjs.com/\">Gulp</a> would be a fine tool for the job. In\na nutshell, like unix tools pipe character streams between tools, Gulp pipes\nstreams of files between small utility functions. All I had to do was build up\na small collection of file processing functions and glue them together. </p>\n<h2 id=\"copying-riokis-homework\">Copying Rioki&#39;s homework</h2>\n<p>As it happens, <a href=\"http://www.rioki.org/2014/06/09/jekyll-to-gulp.html\">someone else had already started that work for me</a>! The\ncore of it, handling the posts, looks something <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L34\">like this</a>:</p>\n<pre><code class=\"language-javascript\">function posts (path) {\n  return gulp.src(path)\n    .pipe(frontMatter({property: &#39;page&#39;, remove: true}))\n    .pipe(taskUtils.filename2date())\n    .pipe(marked())\n    .pipe(taskUtils.summarize(&#39;&lt;!--more--&gt;&#39;))\n    .pipe(rename(taskUtils.postNameToDatePath))\n    .pipe(taskUtils.applyTemplate(&#39;design/layouts/post.html&#39;))\n    .pipe(gulp.dest(&#39;build&#39;));\n}</code></pre>\n<p>Pretty clean &amp; straightforward, at least to my eyes.</p>\n<p>Starting from <a href=\"https://github.com/rioki/www.rioki.org/blob/master/gulpfile.js\">Rioki&#39;s gulpfile.js</a>, I hacked and iterated until I had\na <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/gulpfile.js\">gulpfile.js</a> of my own, split into <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L34\">a directory of small task\nmodules</a>.  At this point, I&#39;ve got a bunch of in-memory post indexes,\ndate &amp; tag based archive pages, RSS feeds, and a handful of other templated\npages. I can push all the content to an Amazon S3 bucket <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/gulpfile.js#L32\">with one\ncommand</a>. </p>\n<p>Oh, and building the whole site only takes around 30 seconds. Still, that&#39;s\nnot fast enough for running previews while writing. So, I&#39;ve broken things up so \n<a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L13\">new &amp; draft posts lead to quick rebuilds when their files change</a> - and I even <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L29\">trigger a LiveReload\nservice</a>\nthat keeps a browser tab updated as I make changes in Vim.</p>\n<p>And, best of all, I understand how the whole thing works. This stuff feels\nnicely maintainable and fun to expand in the future as a\n<a href=\"https://www.stephencovey.com/7habits/7habits-habit7.php\">saw-sharpening</a> / yak-shaving opportunity. I might even take a shot\nat spinning off all the code from the content and release it as a standalone\nmodule installable from <a href=\"http://npmjs.org\">NPM</a> in case anyone else wants to\ntry it out.</p>\n<h2 id=\"from-wordpress-and-jekyll-to-gulp\">From WordPress and Jekyll to Gulp</h2>\n<p>I found <a href=\"https://github.com/benbalter/wordpress-to-jekyll-exporter\">a WordPress-to-Jekyll exporter plugin</a>. It\ngenerates a nice zip file download right from the site admin. That let me\ndump the 50 posts I&#39;ve accumulated since the last switch.</p>\n<p>And, a great thing about the YAML-and-markdown file format used by Jekyll is\nthat I was able to merge my posts from both decafbad.com and\nblog.lmorchard.com just by copying them into the same directory. So, I&#39;m\nthinking that I&#39;ll revive my old blog by squashing it right on into the\nnew, and set up a handful of redirects to unify the whole mess.</p>\n<h2 id=\"amazon-s3-deployment\">Amazon S3 deployment</h2>\n<p><a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html\">Hosting a static website on Amazon S3</a> is cheap and fast and low\nmaintenance. And, a module called <a href=\"https://github.com/pgherveou/gulp-awspublish\">gulp-awspublish</a> can handle pushing this\nwhole site to S3 <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/gulpfile.js#L32\">really easily</a>.</p>\n<p>Turns out I generate around 4750 files, between all the posts and tags and dates. \nIt takes about 30 minutes to upload the first time. But, <a href=\"https://github.com/pgherveou/gulp-awspublish\">gulp-awspublish</a>\nkeeps track of MD5 hashes. So, next time I generate and upload, it skips all the\npages that haven&#39;t changed. That&#39;s just a handful of files, if\nall I&#39;m doing is publishing one new post.</p>\n<p>It also seems like this module uploads one file at a time. I wonder if I might\nhack it to queue up a few dozen or so in parallel to speed things up? I doubt\nthat uploading thousands of files was the original use case, so it might do\nwith some tweaking.</p>\n<h2 id=\"page-sections-loaded-via-ajax\">Page sections loaded via AJAX</h2>\n<p>I&#39;ve got a simple template for this new blog, and I hope to keep it that way.\nBut, there&#39;s a lot of stuff in that sidebar. Well, I decided to tweak a few\nthings and suddenly I had 4750 files to upload to S3.</p>\n<p>Just because the site is statically published doesn&#39;t mean some parts\ncan&#39;t be dynamic with the help of the client. Rather than put up wth\nregenerating &amp; uploading all the things in the future, I yanked the sidebar\nout of almost every page and generated it as <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/design/sidebar.html\">a separate resource</a>.</p>\n<p>Then, with <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/design/js/main.js\">a tiny bit of jQuery magic</a>, I load that sidebar into\nthe page via AJAX. That shrank the size of the site overall, and it&#39;s so fast\nand cacheable that I never see any difference.</p>\n<p>I think this will be one of the little keys to maintaining the site: Try to\nextract any common element used throughout the site, and push it into a\ndynamically loaded asset. Not everything can be done that way, but I think\nplenty can.</p>\n<h2 id=\"disqus-and-comment-archival\">Disqus and comment archival</h2>\n<p>I&#39;m also back to using Disqus for comments. They&#39;ve got a great service, and\nthey&#39;re not a roach motel. They have a great API, and I even wrote a Python\nscript for decafbad.com that <a href=\"https://github.com/lmorchard/blog.decafbad.com/blob/master/_bin/archive_disqus_comments.py\">archives comments from closed\nthreads</a> right into the blog post itself.</p>\n<p>At some point, I need to get that working again and maybe transliterate it\nover to node.js. </p>\n<h2 id=\"next-steps\">Next steps</h2>\n<p>I&#39;ve got some more I&#39;d like to do with this stuff, but the main next steps are\nthese:</p>\n<ul>\n<li>Write more often</li>\n<li>Write more consistently</li>\n</ul>\n<p>Of course, having skimmed through my posts over the years on this blog, I&#39;d\nestimate about 25% of the whole thing is me grousing out loud about the long\nstretches I spend neglecting this place. </p>\n<p>So, who knows? Maybe you&#39;ll see my\nnext post show up sometime next June!</p>\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "body": "I've long agreed that many sites, like blogs, are better [baked than\r\nfried][bake]. It makes for web hosting that's cheaper to run and simpler to\r\nmaintain. I've also often thought that [using a database can be an\r\nanti-pattern][antidatabase] for managing content. But, what I've also found is\r\nthat baked sites often yield a poor writing environment. That said, I think\r\nI'm going to give it another try, because I think I might have found a new\r\napproach that works for me.\r\n\r\n<!--more-->\r\n\r\n## From WordPress to Jekyll to WordPress\r\n\r\n[As I've mentioned before][platforms], I've flirted with a variety of\r\nplatforms for putting stuff from my brain on the web. But, the last time I\r\nswitched away from WordPress to Jekyll, I ended up switching right back again.\r\n\r\nJekyll [took *way* too long][jekyllslow] to generate my site and its 1150 posts, and I\r\ncouldn't figure out how to speed that up for previewing drafts without moving\r\nfiles around.  I tried a few different external tools like\r\n[Mou](http://25.io/mou/) and [Marked](http://marked2app.com/), but the process\r\nnever clicked. I've also never quite gotten along with Ruby, so I didn't go\r\nfar with scratching my own itches on Jekyll.\r\n\r\n[jekyllslow]: http://blog.lmorchard.com/2012/06/16/blogging-like-a-blogger/\r\n\r\nOn the other hand, WordPress has a nicer writing experience. But, it's clunky\r\nin other ways. I'm always worried about all that PHP code sitting around\r\nfrying up page views, hoping no one figures out how to get at the publishing\r\nmachinery. I'm also less interested in hacking on PHP for fun, these days.\r\n\r\n## Gulp is great\r\n\r\nThe place where I've been having a lot of hacking fun over the past few years\r\nis in node.js. So, when I was thinking about trying static hosting for\r\nmy blog again, I started looking into node.js-based Jekyll clones.\r\n\r\nBut then, it occurred to me that [Gulp][] would be a fine tool for the job. In\r\na nutshell, like unix tools pipe character streams between tools, Gulp pipes\r\nstreams of files between small utility functions. All I had to do was build up\r\na small collection of file processing functions and glue them together. \r\n\r\n## Copying Rioki's homework\r\n\r\nAs it happens, [someone else had already started that work for me][rioki]! The\r\ncore of it, handling the posts, looks something [like this][tasks]:\r\n\r\n```javascript\r\nfunction posts (path) {\r\n  return gulp.src(path)\r\n    .pipe(frontMatter({property: 'page', remove: true}))\r\n    .pipe(taskUtils.filename2date())\r\n    .pipe(marked())\r\n    .pipe(taskUtils.summarize('<!--more-->'))\r\n    .pipe(rename(taskUtils.postNameToDatePath))\r\n    .pipe(taskUtils.applyTemplate('design/layouts/post.html'))\r\n    .pipe(gulp.dest('build'));\r\n}\r\n```\r\n\r\nPretty clean & straightforward, at least to my eyes.\r\n\r\nStarting from [Rioki's gulpfile.js][rioki2], I hacked and iterated until I had\r\na [gulpfile.js][] of my own, split into [a directory of small task\r\nmodules][tasks].  At this point, I've got a bunch of in-memory post indexes,\r\ndate & tag based archive pages, RSS feeds, and a handful of other templated\r\npages. I can push all the content to an Amazon S3 bucket [with one\r\ncommand][deploy]. \r\n\r\n[deploy]: https://github.com/lmorchard/blog.lmorchard.com/blob/master/gulpfile.js#L32\r\n[tasks]: https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L34\r\n[gulpfile.js]: https://github.com/lmorchard/blog.lmorchard.com/blob/master/gulpfile.js\r\n\r\nOh, and building the whole site only takes around 30 seconds. Still, that's\r\nnot fast enough for running previews while writing. So, I've broken things up so \r\n[new & draft posts lead to quick rebuilds when their files change](https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L13) - and I even [trigger a LiveReload\r\nservice](https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L29)\r\nthat keeps a browser tab updated as I make changes in Vim.\r\n\r\nAnd, best of all, I understand how the whole thing works. This stuff feels\r\nnicely maintainable and fun to expand in the future as a\r\n[saw-sharpening][sharpen] / yak-shaving opportunity. I might even take a shot\r\nat spinning off all the code from the content and release it as a standalone\r\nmodule installable from [NPM](http://npmjs.org) in case anyone else wants to\r\ntry it out.\r\n\r\n## From WordPress and Jekyll to Gulp\r\n\r\nI found [a WordPress-to-Jekyll exporter plugin][exporter]. It\r\ngenerates a nice zip file download right from the site admin. That let me\r\ndump the 50 posts I've accumulated since the last switch.\r\n\r\nAnd, a great thing about the YAML-and-markdown file format used by Jekyll is\r\nthat I was able to merge my posts from both decafbad.com and\r\nblog.lmorchard.com just by copying them into the same directory. So, I'm\r\nthinking that I'll revive my old blog by squashing it right on into the\r\nnew, and set up a handful of redirects to unify the whole mess.\r\n\r\n## Amazon S3 deployment\r\n\r\n[Hosting a static website on Amazon S3][static] is cheap and fast and low\r\nmaintenance. And, a module called [gulp-awspublish][] can handle pushing this\r\nwhole site to S3 [really easily][deploy].\r\n\r\n[static]: http://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html\r\n\r\nTurns out I generate around 4750 files, between all the posts and tags and dates. \r\nIt takes about 30 minutes to upload the first time. But, [gulp-awspublish][]\r\nkeeps track of MD5 hashes. So, next time I generate and upload, it skips all the\r\npages that haven't changed. That's just a handful of files, if\r\nall I'm doing is publishing one new post.\r\n\r\nIt also seems like this module uploads one file at a time. I wonder if I might\r\nhack it to queue up a few dozen or so in parallel to speed things up? I doubt\r\nthat uploading thousands of files was the original use case, so it might do\r\nwith some tweaking.\r\n\r\n[gulp-awspublish]: https://github.com/pgherveou/gulp-awspublish\r\n\r\n## Page sections loaded via AJAX\r\n\r\nI've got a simple template for this new blog, and I hope to keep it that way.\r\nBut, there's a lot of stuff in that sidebar. Well, I decided to tweak a few\r\nthings and suddenly I had 4750 files to upload to S3.\r\n\r\nJust because the site is statically published doesn't mean some parts\r\ncan't be dynamic with the help of the client. Rather than put up wth\r\nregenerating & uploading all the things in the future, I yanked the sidebar\r\nout of almost every page and generated it as [a separate resource][sidebar].\r\n\r\nThen, with [a tiny bit of jQuery magic][sidebarajax], I load that sidebar into\r\nthe page via AJAX. That shrank the size of the site overall, and it's so fast\r\nand cacheable that I never see any difference.\r\n\r\nI think this will be one of the little keys to maintaining the site: Try to\r\nextract any common element used throughout the site, and push it into a\r\ndynamically loaded asset. Not everything can be done that way, but I think\r\nplenty can.\r\n\r\n[sidebar]: https://github.com/lmorchard/blog.lmorchard.com/blob/master/design/sidebar.html\r\n[sidebarajax]: https://github.com/lmorchard/blog.lmorchard.com/blob/master/design/js/main.js\r\n\r\n## Disqus and comment archival\r\n\r\nI'm also back to using Disqus for comments. They've got a great service, and\r\nthey're not a roach motel. They have a great API, and I even wrote a Python\r\nscript for decafbad.com that [archives comments from closed\r\nthreads][commentarchiver] right into the blog post itself.\r\n\r\n[commentarchiver]: https://github.com/lmorchard/blog.decafbad.com/blob/master/_bin/archive_disqus_comments.py\r\n\r\nAt some point, I need to get that working again and maybe transliterate it\r\nover to node.js. \r\n\r\n## Next steps\r\n\r\nI've got some more I'd like to do with this stuff, but the main next steps are\r\nthese:\r\n\r\n* Write more often\r\n* Write more consistently\r\n\r\nOf course, having skimmed through my posts over the years on this blog, I'd\r\nestimate about 25% of the whole thing is me grousing out loud about the long\r\nstretches I spend neglecting this place. \r\n\r\nSo, who knows? Maybe you'll see my\r\nnext post show up sometime next June!\r\n\r\n[bake]: http://www.aaronsw.com/weblog/000404\r\n[rioki]: http://www.rioki.org/2014/06/09/jekyll-to-gulp.html\r\n[antidatabase]: https://indiewebcamp.com/database-antipattern\r\n[exporter]: https://github.com/benbalter/wordpress-to-jekyll-exporter\r\n[platforms]: http://decafbad.com/blog/2011/06/08/moved-to-jekyll/\r\n\r\n[gulp]: http://gulpjs.com/\r\n[enthusiasm]: http://decafbad.com/blog/2006/05/26/confessions-of-a-serial-enthusiast\r\n[sharpen]: https://www.stephencovey.com/7habits/7habits-habit7.php\r\n[rioki2]: https://github.com/rioki/www.rioki.org/blob/master/gulpfile.js\r\n\r\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/10/20/static-blog-generation-with-gulp",
    "summary": "<p>I&apos;ve long agreed that many sites, like blogs, are better <a href=\"http://www.aaronsw.com/weblog/000404\">baked than\nfried</a>. It makes for web hosting that&apos;s cheaper to run and simpler to\nmaintain. I&apos;ve also often thought that <a href=\"https://indiewebcamp.com/database-antipattern\">using a database can be an\nanti-pattern</a> for managing content. But, what I&apos;ve also found is\nthat baked sites often yield a poor writing environment. That said, I think\nI&apos;m going to give it another try, because I think I might have found a new\napproach that works for me.</p>\n",
    "prevPostPath": "2014/10/23/wtfomgbullets",
    "nextPostPath": "2014/10/11/tootr-1"
  },
  {
    "comments_archived": true,
    "date": "2010-06-22T22:16:24.000Z",
    "layout": "post",
    "tags": [
      "webdev",
      "js",
      "entries",
      "mozilla",
      "byob"
    ],
    "title": "Case Study: Building a Bookmark Management UI for Mozilla's BYOB",
    "wordpress_id": 1935,
    "wordpress_slug": "case-study-building-a-bookmark-management-ui-for-mozillas-byob",
    "wordpress_url": "http://decafbad.com/blog/?p=1935",
    "year": "2010",
    "month": "06",
    "day": "22",
    "isDir": false,
    "slug": "case-study-building-a-bookmark-management-ui-for-mozillas-byob",
    "postName": "2010-06-22-case-study-building-a-bookmark-management-ui-for-mozillas-byob",
    "html": "<p><em><strong>TL;DR:</strong> I just wrote <a href=\"http://decafbad.com/2010/06/byob-bookmarks-ui/\">a <strong>long</strong> case-study about my process in building a bookmark management feature</a> for Mozilla&#39;s <a href=\"http://byob.mozilla.com/\">Build Your Own Browser</a> web application.</em></p>\n<p><a href=\"http://decafbad.com/2010/06/byob-bookmarks-ui/\"><img src=\"http://decafbad.com/2010/06/byob-bookmarks-ui/img/bookmarks.png\" width=\"600\" /></a></p>\n<p>So, remember that <a href=\"http://decafbad.com/blog/2010/06/07/tinderbox-article-tutorial\">tutorial I wrote about writing an article in Tinderbox</a>? I&#39;d mentioned that it was a digression from another, different article. </p>\n<p>Well, I just finished a first draft of that article: </p>\n<p><a href=\"http://decafbad.com/2010/06/byob-bookmarks-ui/\">It&#39;s a case study about building a bookmark management feature for Mozilla&#39;s BYOB</a>.</p>\n<p>Light on code but heavy on narration, it&#39;s about what I did and what I was thinking while I did it. There are links to the end product for reference, but it isn&#39;t a demonstration of some new trick. Rather, it&#39;s a look at my process as a whole.</p>\n<p>I wrote this, in part, for myself: The writing has helped me review things. But, I&#39;m hoping someone else reads it, and then picks up something new or can offer some interesting critique in return.</p>\n<p>And, because I&#39;m curious and like looking behind the scenes, I&#39;d love to see this kind of write-up from more webdevs. There don&#39;t seem to be a lot of detailed case studies versus quick one-shot tutorials on isolated techniques. It&#39;s probably because the writing is time-consuming, as is the reading. It&#39;s not in the genre of bite-sized attractions optimized for promoting blog traffic, but I&#39;d like to see more of them all the same.</p>\n",
    "body": "<em><strong>TL;DR:</strong> I just wrote [a **long** case-study about my process in building a bookmark management feature][article] for Mozilla's [Build Your Own Browser][byob] web application.</em>\r\n\r\n[<img src=\"http://decafbad.com/2010/06/byob-bookmarks-ui/img/bookmarks.png\" width=\"600\" />][article]\r\n\r\nSo, remember that [tutorial I wrote about writing an article in Tinderbox][tinderbox]? I'd mentioned that it was a digression from another, different article. \r\n\r\nWell, I just finished a first draft of that article: \r\n\r\n[It's a case study about building a bookmark management feature for Mozilla's BYOB][article].\r\n\r\nLight on code but heavy on narration, it's about what I did and what I was thinking while I did it. There are links to the end product for reference, but it isn't a demonstration of some new trick. Rather, it's a look at my process as a whole.\r\n\r\nI wrote this, in part, for myself: The writing has helped me review things. But, I'm hoping someone else reads it, and then picks up something new or can offer some interesting critique in return.\r\n\r\nAnd, because I'm curious and like looking behind the scenes, I'd love to see this kind of write-up from more webdevs. There don't seem to be a lot of detailed case studies versus quick one-shot tutorials on isolated techniques. It's probably because the writing is time-consuming, as is the reading. It's not in the genre of bite-sized attractions optimized for promoting blog traffic, but I'd like to see more of them all the same.\r\n\r\n[tinderbox]: http://decafbad.com/blog/2010/06/07/tinderbox-article-tutorial\r\n[byob]: http://byob.mozilla.com/\r\n[article]: http://decafbad.com/2010/06/byob-bookmarks-ui/\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2010",
    "path": "2010/06/22/case-study-building-a-bookmark-management-ui-for-mozillas-byob",
    "thumbnail": "http://decafbad.com/2010/06/byob-bookmarks-ui/img/bookmarks.png",
    "prevPostPath": "2010/07/05/firefox-sync-server-on-google-app-engine",
    "nextPostPath": "2010/06/07/tinderbox-article-tutorial"
  },
  {
    "comments_archived": true,
    "date": "2009-07-15T15:26:40.000Z",
    "layout": "post",
    "tags": [
      "webdev",
      "firefox",
      "js",
      "outliners",
      "outlining",
      "javascript",
      "dhtml",
      "eventdelegation",
      "entries",
      "mozilla",
      "draganddrop"
    ],
    "title": "HTML5 drag and drop in Firefox 3.5",
    "wordpress_id": 1793,
    "wordpress_slug": "html5-drag-and-drop",
    "wordpress_url": "http://decafbad.com/blog/?p=1793",
    "year": "2009",
    "month": "07",
    "day": "15",
    "isDir": false,
    "slug": "html5-drag-and-drop",
    "postName": "2009-07-15-html5-drag-and-drop",
    "html": "<p><i>\nOh hey, look! It's another blog post—and this one\n<a href=\"http://hacks.mozilla.org/2009/07/html5-drag-and-drop/\">is cross-posted on hacks.mozilla.com</a>.\nI won't say this is the start of a renewed blogging habit, but let's see what happens.\n</i></p>\n\n<style type=\"text/css\">\ndl { margin-left: 2em; }\ndd { margin-left: 2em; margin-bottom: 0.25em; }\n</style>\n<div id=\"introduction\">\n    <p>\n        Drag and drop is one of the most fundamental interactions\n        afforded by graphical user interfaces.  In one gesture, it\n        allows users to pair the selection of an object with the\n        execution of an action, often including a second object in the\n        operation.  It's a simple yet powerful UI concept used to\n        support copying, list reordering, deletion (ala the Trash / Recycle Bin),\n        and even the creation of link relationships.\n    </p><p>\n        Since it's so fundamental, offering drag and drop in web\n        applications has been a no-brainer ever since browsers first\n        offered mouse events in DHTML.  But, although\n        <code>mousedown</code>, <code>mousemove</code>, and\n        <code>mouseup</code> made it possible, the implementation has been\n        limited to the bounds of the browser window.  Additionally,\n        since these events refer only to the object being dragged,\n        there's a challenge to find the subject of the drop when\n        the interaction is completed.\n    </p><p>\n\n<pre><code>    Of course, that doesn&#39;t prevent most modern JavaScript\n    frameworks from abstracting away most of the problems and\n    throwing in some flourishes while they&#39;re at it.  But, wouldn&#39;t\n    it be nice if browsers offered first-class support for drag and\n    drop, and maybe even extended it beyond the window sandbox?\n&lt;/p&gt;&lt;p&gt;\n    As it turns out, this very wish is answered by the HTML 5 specification \n    &lt;a target=&quot;_new&quot; href=&quot;http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#dnd&quot;&gt;section on new drag-and-drop events&lt;/a&gt;, and \n    &lt;a target=&quot;_new&quot; href=&quot;https://developer.mozilla.org/En/DragDrop/Drag_and_Drop&quot;&gt;Firefox 3.5 includes an implementation&lt;/a&gt; of those events.\n&lt;/p&gt;&lt;p&gt;\n    If you want to jump straight to the code, I&#39;ve put together \n    &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html&quot;&gt;some simple demos&lt;/a&gt; \n    of the new events.  \n&lt;/p&gt;&lt;p&gt;\n\n    I&#39;ve even scratched an itch of my own and\n    built &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/outline.html&quot;&gt;the beginnings of an outline editor&lt;/a&gt;,\n    where every draggable element is also a drop target—of which\n    there could be dozens to hundreds in a complex document, something\n    that gave me some minor hair-tearing moments in the past\n    while trying to make do with plain old mouse events.\n&lt;/p&gt;&lt;p&gt;\n    And, all the above can be downloaded or cloned from \n    &lt;a href=&quot;http://github.com/lmorchard/fx35-drag-and-drop&quot;&gt;a GitHub repository&lt;/a&gt;\n    I&#39;ve created especially for this article—which continues after the jump.\n&lt;/p&gt;</code></pre>\n</div>\n\n<!--more-->\n\n<div id=\"events\">\n\n<pre><code>&lt;h2&gt;The New Drag and Drop Events&lt;/h2&gt;\n&lt;p&gt;\n    So, with no further ado, here are the new drag and drop events,\n    in roughly the order you might expect to see them fired:\n&lt;/p&gt;\n&lt;dl&gt;\n    &lt;dt&gt;&lt;code&gt;dragstart&lt;/code&gt;&lt;/dt&gt;\n    &lt;dd&gt;\n        A drag has been initiated, with the dragged element as the\n        event target.\n    &lt;/dd&gt;\n\n    &lt;dt&gt;&lt;code&gt;drag&lt;/code&gt;&lt;/dt&gt;\n    &lt;dd&gt;\n        The mouse has moved, with the dragged element as the event target.\n    &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;dragenter&lt;/code&gt;&lt;/dt&gt;\n    &lt;dd&gt;\n        The dragged element has been moved into a drop listener,\n        with the drop listener element as the event target.\n    &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;dragover&lt;/code&gt;&lt;/dt&gt;\n\n    &lt;dd&gt;\n        The dragged element has been moved over a drop listener,\n        with the drop listener element as the event target.  Since\n        the default behavior is to cancel drops, returning\n        &lt;code&gt;false&lt;/code&gt; or calling &lt;code&gt;preventDefault()&lt;/code&gt; in\n        the event handler indicates that a drop is allowed here.\n    &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;dragleave&lt;/code&gt;&lt;/dt&gt;\n    &lt;dd&gt;\n        The dragged element has been moved out of a drop listener,\n        with the drop listener element as the event target.\n    &lt;/dd&gt;\n\n    &lt;dt&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/dt&gt;\n    &lt;dd&gt;\n        The dragged element has been successfully dropped on a drop\n        listener, with the drop listener element as the event\n        target.\n    &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;dragend&lt;/code&gt;&lt;/dt&gt;\n    &lt;dd&gt;\n        A drag has been ended, successfully or not, with the\n        dragged element as the event target.\n    &lt;/dd&gt;\n&lt;/dl&gt;\n\n&lt;p&gt;\n    Like the mouse events of yore, listeners can be attached to\n    elements using &lt;code&gt;addEventListener()&lt;/code&gt; \n    directly or by way of your favorite JS library.  \n&lt;/p&gt;&lt;p&gt;\n    Consider the following example using jQuery, \n    &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html#newschool&quot;&gt;also available as a live demo&lt;/a&gt;:\n&lt;/p&gt;\n&lt;pre lang=&quot;javascript&quot; line=&quot;1&quot;&gt;</code></pre>\n<div id=\"newschool\">\n    <div class=\"dragme\">Drag me!</div>\n    <div class=\"drophere\">Drop here!</div>\n</div>\n\n<script type=\"text/javascript\">\n    $(document).ready(function() {\n        $('#newschool .dragme')\n            .attr('draggable', 'true')\n            .bind('dragstart', function(ev) {\n                var dt = ev.originalEvent.dataTransfer;\n                dt.setData(\"Text\", \"Dropped in zone!\");\n                return true;\n            })\n            .bind('dragend', function(ev) {\n                return false;\n            });\n        $('#newschool .drophere')\n            .bind('dragenter', function(ev) {\n                $(ev.target).addClass('dragover');\n                return false;\n            })\n            .bind('dragleave', function(ev) {\n                $(ev.target).removeClass('dragover');\n                return false;\n            })\n            .bind('dragover', function(ev) {\n                return false;\n            })\n            .bind('drop', function(ev) {\n                var dt = ev.originalEvent.dataTransfer;\n                alert(dt.getData('Text'));\n                return false;\n            });\n    });\n</script>\n<pre><code>&lt;/pre&gt;\n&lt;p&gt;\n    Thanks to the new events and jQuery, this example is both short\n    and simple—but it packs in a lot of functionality, as the rest\n    of this article will explain.  \n&lt;/p&gt;&lt;p&gt;\n    Before moving on, there are at least three things about the above\n    code that are worth mentioning:\n&lt;/p&gt;\n&lt;ul&gt;\n    &lt;li&gt;\n\n        &lt;p&gt;\n            Drop targets are enabled by virtue of having\n            listeners for drop events.  But, \n            &lt;a target=&quot;_new&quot; href=&quot;http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#drag-and-drop-processing-model&quot;&gt;per the HTML 5 spec&lt;/a&gt;,\n            draggable elements need an\n            attribute of &lt;code&gt;draggable=&quot;true&quot;&lt;/code&gt;, set either in\n            markup or in JavaScript.  \n        &lt;/p&gt;\n        &lt;p&gt;\n            Thus, &lt;code&gt;$(&#39;#newschool&amp;nbsp;.dragme&#39;).attr(&#39;draggable&#39;, &#39;true&#39;)&lt;/code&gt;.\n        &lt;/p&gt;\n\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;p&gt;\n            The original DOM event (as opposed to jQuery&#39;s event\n            wrapper) offers a property called &lt;code&gt;dataTransfer&lt;/code&gt;.\n            Beyond just manipulating elements, the new drag and drop\n            events accomodate the transmission of user-definable data\n            during the course of the interaction.  \n        &lt;/p&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;p&gt;\n\n            Since these are first-class events, you can apply \n            &lt;a target=&quot;_new&quot; href=&quot;http://icant.co.uk/sandbox/eventdelegation/&quot;&gt;the technique of Event Delegation&lt;/a&gt;.\n        &lt;/p&gt;&lt;p&gt;\n            What&#39;s that?  Well, imagine you have a list of 1000\n            list items—as part of a deeply-nested outline document,\n            for instance.  Rather than needing to attach listeners\n            or otherwise fiddle with all 1000 items, simply attach\n            a listener to the parent node (eg. the\n            &lt;code&gt;&lt;ul&gt;&lt;/code&gt; element) and all events from\n            the children will propagate up to the single parent listener.\n            As a bonus, all new child elements added after page\n            load will enjoy the same benefits.\n        &lt;/p&gt;&lt;p&gt;\n            &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html#delegated&quot;&gt;Check out this demo&lt;/a&gt;, \n            and \n            &lt;a target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/js/drag-delegated.js&quot;&gt;the associated JS code&lt;/a&gt; \n            to see more about these events and Event Delegation.\n        &lt;/p&gt;\n\n    &lt;/li&gt;\n&lt;/ul&gt;</code></pre>\n</div>\n\n<div id=\"datatransfer\">\n    <h2>Using dataTransfer</h2>\n    <p>\n        As mentioned in the last section, the new drag and drop events\n        let you send data along with a dragged element.  But, it's even\n        better than that:  Your drop targets can receive data\n        transferred by content objects dragged into the window from \n        other browser windows, and even <i>other applications</i>.\n    </p><p>\n\n<pre><code>    Since the example is a bit longer,  \n    &lt;a target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html#data_transfer&quot;&gt;check out the live demo&lt;/a&gt;\n    and \n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/js/drag-datatransfer.js&quot;&gt;associated code&lt;/a&gt;\n    to get an idea of what&#39;s possible with &lt;code&gt;dataTransfer&lt;/code&gt;.\n&lt;/p&gt;&lt;p&gt;\n    In a nutshell, the stars of this show are the\n    &lt;code&gt;setData()&lt;/code&gt; and &lt;code&gt;getData()&lt;/code&gt; methods of\n    the &lt;code&gt;dataTransfer&lt;/code&gt; property exposed by the Event object.\n&lt;/p&gt;\n\n&lt;p&gt;\n    The &lt;code&gt;setData()&lt;/code&gt; method is typically called in the \n    &lt;code&gt;dragstart&lt;/code&gt; listener, loading &lt;code&gt;dataTransfer&lt;/code&gt;\n    up with one or more strings of content with associated\n    &lt;a href=&quot;https://developer.mozilla.org/En/DragDrop/Recommended_Drag_Types#link&quot;&gt;recommended content types&lt;/a&gt;.\n&lt;/p&gt;\n\n&lt;p&gt;\n    For illustration, here&#39;s a quick snippet from the example code:\n&lt;/p&gt;\n&lt;pre lang=&quot;javascript&quot; line=&quot;1&quot;&gt;</code></pre>\n<p>var dt = ev.originalEvent.dataTransfer;<br>dt.setData(&#39;text/plain&#39;, $(&#39;#logo&#39;).parent().text());\ndt.setData(&#39;text/html&#39;, $(&#39;#logo&#39;).parent().html());\ndt.setData(&#39;text/uri-list&#39;, $(&#39;#logo&#39;)[0].src);\n    </pre>\n    </p><p>\n        On the other end, <code>getData()</code> allows you to query\n        for content by type (eg. <code>text/html</code> followed by\n        <code>text/plain</code>).  This, in turn, allows you to decide\n        on acceptable content types at the time of the\n        <code>drop</code> event or even during <code>dragover</code></p>\n<pre><code>    to offer feedback for unacceptable types during the drag.\n&lt;/p&gt;&lt;p&gt;\n    Here&#39;s another example from the receiving end of the example code:\n&lt;/p&gt;\n&lt;pre lang=&quot;javascript&quot; line=&quot;1&quot;&gt;</code></pre>\n<p>var dt = ev.originalEvent.dataTransfer;<br>$(&#39;.content_url .content&#39;).text(dt.getData(&#39;text/uri-list&#39;));\n$(&#39;.content_text .content&#39;).text(dt.getData(&#39;text/plain&#39;));\n$(&#39;.content_html .content&#39;).html(dt.getData(&#39;text/html&#39;));\n    </pre>\n    <p>\n        Where <code>dataTransfer</code> really shines, though, is that\n        it allows your drop targets to receive content from \n        sources outside your defined draggable elements and even from\n        outside the browser altogether.  Firefox accepts such drags, \n        and attempts to populate <code>dataTransfer</code> with\n        appropriate content types extracted from the external object.\n    </p><p></p>\n<pre><code>    Thus, you could select some text in a word processor window and\n    drop it into one of your elements, and at least expect to find\n    it available as &lt;code&gt;text/plain&lt;/code&gt; content.  \n&lt;/p&gt;&lt;p&gt;\n    You can also select content in \n    another browser window, and expect to see &lt;code&gt;text/html&lt;/code&gt;\n    appear in your events.  Check out the \n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/outline.html&quot;&gt;outline editing demo&lt;/a&gt;\n    and see what happens when you try dragging various elements \n    (eg. images, tables, and lists) and highlighted content from\n    other windows onto the items there.\n&lt;/p&gt;</code></pre>\n</div>\n\n<div id=\"dragfeedback\">\n    <h2>Using Drag Feedback Images</h2>\n    <p>\n       An important aspect of the drag and drop interaction is a\n       representation of the thing being dragged.  By default in\n       Firefox, this is a \"ghost\" image of the dragged element itself.  But,\n       the <code>dataTransfer</code> property of the original Event\n       object exposes the method <code>setDragImage()</code> for use\n       in customizing this representation.\n    </p><p>\n\n<pre><code>    There&#39;s\n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html#feedback_image&quot;&gt;a live demo&lt;/a&gt; of this feature, as well as\n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/js/drag-feedback-images.js&quot;&gt;associated JS code&lt;/a&gt; \n    available.  The gist, however, is sketched out in these code snippets:\n&lt;/p&gt;\n&lt;pre lang=&quot;javascript&quot; line=&quot;1&quot;&gt;</code></pre>\n<p>var dt = ev.originalEvent.dataTransfer;    </p>\n<p>dt.setDragImage( $(&#39;#feedback_image h2&#39;)[0], 0, 0);</p>\n<p>dt.setDragImage( $(&#39;#logo&#39;)[0], 32, 32); </p>\n<p>var canvas = document.createElement(&quot;canvas&quot;);\ncanvas.width = canvas.height = 50;</p>\n<p>var ctx = canvas.getContext(&quot;2d&quot;);\nctx.lineWidth = 8;\nctx.moveTo(25,0);\nctx.lineTo(50, 50);\nctx.lineTo(0, 50);\nctx.lineTo(25, 0);\nctx.stroke();</p>\n<p>dt.setDragImage(canvas, 25, 25);\n    </pre>\n    <p>\n        You can supply a DOM node as the first parameter to \n        <code>setDragImage()</code>, which includes everything from\n        text to images to <code>canvas</code> elements.  The\n        second two parameters indicate at what left and top offset\n        the mouse should appear in the image while dragging.\n    </p><p></p>\n<pre><code>    For example, since the &lt;code&gt;#logo&lt;/code&gt; image is 64x64,\n    the parameters in the second &lt;code&gt;setDragImage()&lt;/code&gt;\n    method places the mouse right in the center of the image.\n    On the other hand, the first call positions the feedback\n    image such that the mouse rests in the upper left corner.\n&lt;/p&gt;&lt;p&gt;\n&lt;/p&gt;</code></pre>\n</div>\n\n<div id=\"dragfeedback\">\n\n<pre><code>&lt;h2&gt;Using Drop Effects&lt;/h2&gt;\n&lt;p&gt;\n    As mentioned at the start of this article, the drag and drop\n    interaction has been used to support actions such as copying,\n    moving, and linking.  Accordingly, the HTML 5 specification \n    accomodates these operations in the form of the \n    &lt;code&gt;effectAllowed&lt;/code&gt; and &lt;code&gt;dropEffect&lt;/code&gt;\n    properties exposed by the Event object.\n&lt;/p&gt;\n&lt;p&gt;\n\n    For a quick fix, check out the\n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html#drag_effects&quot;&gt;a live demo&lt;/a&gt; \n    of this feature, as well as the\n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/js/drag-effects.js&quot;&gt;associated JS code&lt;/a&gt;.\n&lt;/p&gt;&lt;p&gt;\n    The basic idea is that the &lt;code&gt;dragstart&lt;/code&gt; event\n    listener can set a value for &lt;code&gt;effectAllowed&lt;/code&gt; like so:\n&lt;/p&gt;\n\n&lt;pre lang=&quot;javascript&quot; line=&quot;1&quot;&gt;</code></pre>\n<p>var dt = ev.originalEvent.dataTransfer;\nswitch (ev.target.id) {\n    case &#39;effectdrag0&#39;: dt.effectAllowed = &#39;copy&#39;; break;\n    case &#39;effectdrag1&#39;: dt.effectAllowed = &#39;move&#39;; break;\n    case &#39;effectdrag2&#39;: dt.effectAllowed = &#39;link&#39;; break;\n    case &#39;effectdrag3&#39;: dt.effectAllowed = &#39;all&#39;; break;\n    case &#39;effectdrag4&#39;: dt.effectAllowed = &#39;none&#39;; break;\n}\n    </pre>\n    <p>The choices available for this property include the following:</p>\n    <dl> \n        <dt><code>none</code></dt><dd>no operation is permitted </dd>\n        <dt><code>copy</code></dt><dd>copy only </dd></p>\n<pre><code>    &lt;dt&gt;&lt;code&gt;move&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;move only &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;link&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;link only &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;copyMove&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;copy or move only &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;copyLink&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;copy or link only &lt;/dd&gt;\n    &lt;dt&gt;&lt;code&gt;linkMove&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;link or move only &lt;/dd&gt;\n\n    &lt;dt&gt;&lt;code&gt;all&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;copy, move, or link &lt;/dd&gt;\n&lt;/dl&gt;\n&lt;p&gt;\n    On the other end, the &lt;code&gt;dragover&lt;/code&gt; event listener \n    can set the value of the\n    &lt;code&gt;dropEffect&lt;/code&gt; property to indicate the expected effect\n    invoked on a successful drop.  If the value does\n    not match up with &lt;code&gt;effectAllowed&lt;/code&gt;, the drop will\n    be considered cancelled on completion.\n&lt;/p&gt;&lt;p&gt;\n\n    In the \n    &lt;a target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html#drag_effects&quot;&gt;a live demo&lt;/a&gt;,\n    you should be able to see that only elements with matching\n    effects can be dropped into the appropriate drop zones.  This\n    is accomplished with code like the following:\n&lt;/p&gt;\n&lt;pre lang=&quot;javascript&quot; line=&quot;1&quot;&gt;</code></pre>\n<p>var dt = ev.originalEvent.dataTransfer;\nswitch (ev.target.id) {\n    case &#39;effectdrop0&#39;: dt.dropEffect = &#39;copy&#39;; break;\n    case &#39;effectdrop1&#39;: dt.dropEffect = &#39;move&#39;; break;\n    case &#39;effectdrop2&#39;: dt.dropEffect = &#39;link&#39;; break;\n    case &#39;effectdrop3&#39;: dt.dropEffect = &#39;all&#39;; break;\n    case &#39;effectdrop4&#39;: dt.dropEffect = &#39;none&#39;; break;\n}\n    </pre>\n    <p>\n        Although the OS itself can provide some feedback, you \n        can also use these properties to update your own visible \n        feedback, both on the dragged element and on the drop zone\n        itself.\n    </p></p>\n</div>\n\n<div id=\"conclusion\">\n    <h2>Conclusion</h2>\n    <p>\n        The new first-class drag and drop events in HTML5 and Firefox\n        make supporting this form of UI interaction simple, concise,\n        and powerful in the browser.  But beyond the new simplicity of\n        these events, the ability to transfer content between\n        applications opens brand new avenues for web-based applications\n        and collaboration with desktop software in general.\n    </p><p>\n    </p><p>\n    </p>\n</div>\n\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221090962\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://lmframework.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=03dc722b1852367f02b0b21f02b10675&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://lmframework.com\">David Semeria</a>\n</div>\n<a href=\"#comment-221090962\" class=\"permalink\"><time datetime=\"2009-07-16T17:56:52\">2009-07-16T17:56:52</time></a>\n</div>\n<div class=\"content\"><p>Wow - thanks for a great introduction to D+D in HTML 5, I'm really looking forward to giving it a thorough road test. </p>\n<p>The key part of the implementation are the target listeners, because, as I'm sure you're aware, onmouseover would historically never fire over the target element because the dragged item would always 'cover it up'. BTW, my proposed solution was to add an 'event transparency' property, which would have made the dragged item invisible from the point of view of selected events, eg onmouseover.</p>\n<p>This implementation is going to take a lot of pain away. You have no idea how many hoops I had to jump through to get a fully generic D+D implementation working without these new calls.</p>\n<p>If you're interested, you can see it working here: http://lmframework.com/page.php?id=vd_twig_short_2</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090964\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=cee7ac3f63d7e8c1367e170bec302c14&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Alex</a>\n</div>\n<a href=\"#comment-221090964\" class=\"permalink\"><time datetime=\"2009-07-17T00:13:23\">2009-07-17T00:13:23</time></a>\n</div>\n<div class=\"content\"><p>Hey,</p>\n<p>Looks great and useful article.  For dragging from external applications (such as the Desktop) is a normal webpage able to get the data from the drop?  I was just playing with it and seem to always get what seems to be a security error with getData or mozGetDataAt.  However, the documentation seems to state that on drop that data should be made available to the page.  Likewise, in the same way an image can be dragged off the page onto the desktop, can an arbitrary element be dragged onto the desktop with whatever file content to be saved?  Thanks for the help.</p>\n<p>Alex</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090966\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://paulisageek.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b3bb70a4bace7f9bd49f48b149ab95f9&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://paulisageek.com/\">Paul Tarjan</a>\n</div>\n<a href=\"#comment-221090966\" class=\"permalink\"><time datetime=\"2009-07-17T04:52:54\">2009-07-17T04:52:54</time></a>\n</div>\n<div class=\"content\"><p>Very nice, I didn't know that FF 3.5 actually had this implemented. Time to start playing :)</p>\n<p>Also, how did you do your code posts? Was it just pasting in HTML or do you have a better setup?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090967\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=066d1e75c9b938053ee6b3d48b1c0f6a&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Animal</a>\n</div>\n<a href=\"#comment-221090967\" class=\"permalink\"><time datetime=\"2009-07-17T14:35:21\">2009-07-17T14:35:21</time></a>\n</div>\n<div class=\"content\"><p>Seems pretty pointless pressing ahead with this when you just can't write a web app to use it. There's no support. All a bunch of whizzy fun I'm sure, but sod-all use.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090969\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221090969\" class=\"permalink\"><time datetime=\"2009-07-17T16:23:10\">2009-07-17T16:23:10</time></a>\n</div>\n<div class=\"content\"><p>@Animal: Why can't you write a web app to use it?  It's in the HTML5 spec, works in Fx3.5 and Safari 4 / WebKit.  It doesn't have universal support yet, or course, but new standards never do.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090970\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.crearedesign.co.uk\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=87bf21798e390d9043dda7240c1b60f7&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.crearedesign.co.uk\">paul</a>\n</div>\n<a href=\"#comment-221090970\" class=\"permalink\"><time datetime=\"2009-07-21T08:08:26\">2009-07-21T08:08:26</time></a>\n</div>\n<div class=\"content\"><p>very nice indeed! i like this, it has definitely opened up new avenues for interaction without using flash. but it will take time before people upgrade to the new browser. a lot of people who browse the web wont realise what the technology will bring and will use their current browser because it does the job!</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090971\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=04de859cfd6ef0b75e4ea3cbea143190&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Joel</a>\n</div>\n<a href=\"#comment-221090971\" class=\"permalink\"><time datetime=\"2009-07-21T14:36:04\">2009-07-21T14:36:04</time></a>\n</div>\n<div class=\"content\"><p>Excellent demos of the new features.</p>\n<p>When using a feedback image on a zoomed in page, should the image not also be scaled up automatically?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090973\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"https://bugzilla.mozilla.org/show_bug.cgi?id=41708\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=6d3bf986abdbb431991c3b02eb6e2335&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"https://bugzilla.mozilla.org/show_bug.cgi?id=41708\">RenegadeX</a>\n</div>\n<a href=\"#comment-221090973\" class=\"permalink\"><time datetime=\"2009-07-22T04:13:46\">2009-07-22T04:13:46</time></a>\n</div>\n<div class=\"content\"><p>Dragging &amp; dropping <em>is</em> as you say, a \"one of the most fundamental interations\" that users of computer graphical interfaces have come to know, and expect.</p>\n<p>It therefore completes dumbfounds me how it is that we <em>still</em> can not natively drag &amp; scroll (&amp; then drop) in Firefox. We can only drag &amp; drop an item within the currently visible portion of a Firefox webpage or tab, no further up, no further down.</p>\n<p>That is should be limited makes absolutely no sense. Microsoft built the function into their Windows 3.x (file) Explorer, and then when visual browsers came along, naturally carried it through into Internet Explorer. </p>\n<p>Firefox Bug 41708, \"Should be able to scroll in the viewport while dragging\" was opened in June, 2000 (yes, 9 years ago!) and remains open, and is disregarded by Firefox developers as little more than a trivial little annoyance, and therefore is and should be treated as a low-importance 'enhancement' rather than as the 'standard feature' it should really be.</p>\n<p>If it weren't for the extension 'DragToScroll', which has been around for 3-1/2 years now (not updated in a long time but still works if you override version compatibility), I would have dumped Firefox and switched to a different browser (Maxthon 3, most likely).</p>\n<p>So, I'm wondering (and hoping) -- does the new HTML5 drag and drop specification include anything that if implemented properly would make it possible to scroll &amp; drag?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090974\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221090974\" class=\"permalink\"><time datetime=\"2009-07-22T13:57:42\">2009-07-22T13:57:42</time></a>\n</div>\n<div class=\"content\"><p>@RenegadeX: Ugh.  I don't work on the browser itself, but I noticed that unexpected behavior on drag &amp; drop.  The window really should scroll when you get toward the top or bottom while dragging - and, in fact, most pre-HTML5 JS frameworks do that in their own drag &amp; drop abstractions.  </p>\n<p>Until / unless Firefox gets this fixed, the same sort of auto-scrolling could be hacked in to HTML5 drag and drop.  Not perfect, but it's doable.  That is, in the drag event, you can check if the mouse is near the upper or lower edge of the viewport - and if so, start scrolling appropriately. That's pretty much how the JS frameworks do it with old-school D&D</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090975\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.copperbot.net\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=df48b2c2a3a2be51b1e15f10c5fb05da&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.copperbot.net\">CopperBot</a>\n</div>\n<a href=\"#comment-221090975\" class=\"permalink\"><time datetime=\"2009-07-23T21:41:07\">2009-07-23T21:41:07</time></a>\n</div>\n<div class=\"content\"><p>Very cool article! Thanks for sharing. HTML5 really is going to change everything about how we use and develop for the web. Pretty awesome!</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090976\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.AmnesiaGames.cl\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=14ad888c23e28c85c222a73b6c633570&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.AmnesiaGames.cl\">Alexos</a>\n</div>\n<a href=\"#comment-221090976\" class=\"permalink\"><time datetime=\"2009-07-26T05:05:44\">2009-07-26T05:05:44</time></a>\n</div>\n<div class=\"content\"><p>Hi, would DD work for uploading files? How can I display a progress bar?\nThanks! \nI've been looking for that several days, and found only applets which I can't use in my proyect :-)</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090977\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.sjlwebdesign.co.uk\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=185cd965e0e8ccd15df2f90977cbeaf3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.sjlwebdesign.co.uk\">Sam</a>\n</div>\n<a href=\"#comment-221090977\" class=\"permalink\"><time datetime=\"2009-07-28T13:54:26\">2009-07-28T13:54:26</time></a>\n</div>\n<div class=\"content\"><p>Looks fantastic, going to try it out now (once I have upgraded my FF)</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090978\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.dankantor.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=60fc8331f617fc905fd682bc4f41ce8d&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.dankantor.com\">Dan Kantor</a>\n</div>\n<a href=\"#comment-221090978\" class=\"permalink\"><time datetime=\"2009-07-30T03:10:25\">2009-07-30T03:10:25</time></a>\n</div>\n<div class=\"content\"><p>Looks like effectAllowed and dropEffect are not working for FF 3.5 on the Mac. I see effects on Windows and Safari 4 on Mac. I've been playing around with adding borders to the drop target, but the + icon for copy really helps a lot. Hopefully Mozilla will fix this next update.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090979\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.thecssninja.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8677c9f7c0f6d947bf318c1430d00bfd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.thecssninja.com/\">Ryan</a>\n</div>\n<a href=\"#comment-221090979\" class=\"permalink\"><time datetime=\"2009-09-01T02:33:06\">2009-09-01T02:33:06</time></a>\n</div>\n<div class=\"content\"><p>Great article it's good to see developments in this area. I wrote an article on the further extensions Firefox 3.6 has done with the dataTransfer method by adding the file attribute so you can access local files and upload them without the need for file inputs. http://www.thecssninja.com/javascript/drag-and-drop-upload</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090982\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=1ed4bbef573bfc014d32356d53103ca2&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">phil swenson</a>\n</div>\n<a href=\"#comment-221090982\" class=\"permalink\"><time datetime=\"2009-09-03T22:58:36\">2009-09-03T22:58:36</time></a>\n</div>\n<div class=\"content\"><p>Why not a first class WYSIWYG rich text editor with copy from clipboard image support?  </p>\n<p><em>NO ONE</em> has built a decent text editor in JavaScript - At least not that I've seen.  And browsers don't allow image paste for reasons I don't understand.  </p>\n<p>And by decent I mean just like you'd get in textmate or another editor.  Have the standard text editor features everyone expects:  tab, select indent/select unindent, resize image, home, end, duplicate line, delete line, styling, etc.</p>\n<p>would push the browser to the next level in killing the desktop.  non-techies hate wikis.  They want a real editor.  I do too actually.... would be great for forums, bug tracking system (imagine pasting screen shots in line with your bug desc), email, etc.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090983\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=deed51cddc830e162557b8f01383a057&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Jean-Denis</a>\n</div>\n<a href=\"#comment-221090983\" class=\"permalink\"><time datetime=\"2009-09-04T00:23:39\">2009-09-04T00:23:39</time></a>\n</div>\n<div class=\"content\"><p>Francisco Tomalski wrote up a nice piece on HTML 5 drag'n drop at http://www.alertdebugging.com/2009/08/16/on-html-5-drag-and-drop/</p>\n<p>where he uncovers that the proposed standard is partially broken. Any comment on his piece?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090984\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://html5tutorial.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=3876e030a3fc69a8b59a8c55829fb510&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://html5tutorial.net/\">Lisa</a>\n</div>\n<a href=\"#comment-221090984\" class=\"permalink\"><time datetime=\"2009-09-09T07:33:08\">2009-09-09T07:33:08</time></a>\n</div>\n<div class=\"content\"><p>This is a great move forward no more relying on 3rd party apps and extensions to play video or audio, i have been reading up on HTML 5 at the <a href=\"http://html5tutorial.net/\" title=\"HTML tutorials\" rel=\"nofollow\">HTML 5 Tutorials</a> website, i am now playing around with one of the free templates and was wondering how to embed audio, so thanks a lot, great information, lets hope more people lean towards HTML 5 and SOON!!!</p>\n<p>The drag and drop feature i did not notice was already working in FF 3.5, i was told to get Safari to see HTML 5 in action. Thanks for a great post</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090985\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.useragentman.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=9a579fa051b35266678735c8a3751771&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.useragentman.com\">Zoltan Hawryluk</a>\n</div>\n<a href=\"#comment-221090985\" class=\"permalink\"><time datetime=\"2010-01-11T15:14:48\">2010-01-11T15:14:48</time></a>\n</div>\n<div class=\"content\"><p>A million thank yous!  This article was great introduction to HTML5 D+D.  With it, I was able to extend it to other browsers.  It was a little painful at first because the browser implementations diverge in significant, but manageable ways.</p>\n<p>If you are interested, check out my article at http://www.useragentman.com/blog/2010/01/10/cross-browser-html5-drag-and-drop/ if you are interested in my results.</p>\n<p>I noticed you haven't blogged in a while - I hope you haven't stopped totally and continue to share with the webdev community.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090986\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.lingua-franka.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e65f416e42c12571ba1c86ae2dadd99f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.lingua-franka.com\">Raul</a>\n</div>\n<a href=\"#comment-221090986\" class=\"permalink\"><time datetime=\"2011-04-26T23:56:02\">2011-04-26T23:56:02</time></a>\n</div>\n<div class=\"content\"><p>Hi, Leslie. I've just come across a problem that's driving me nuts. I'm not fully comfortable with D&amp;D, but managed to move a crosshairs image over a map to very precisely controlled positions. It worked great on FF 3.6 and FF 4. After a couple of days of successful testing, the image suddenly refused to de dropped after being dragged (it rather flew back to its previous position). Do you know if there is a bug in FF that might cause this? </p>\n<p>BTW, during the programming process I updated Firebug, which also is getting a little cranky.</p>\n<p>Thanks for your prompt answer, Raul</p></div>\n</li>\n<li class=\"comment\" id=\"comment-324410737\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://disqus.com/api/users/avatars/google-4014af7ac4ea5d00df95bef4503b78dd.jpg\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Alexander Plutov</a>\n</div>\n<a href=\"#comment-324410737\" class=\"permalink\"><time datetime=\"2011-10-01T11:51:12\">2011-10-01T11:51:12</time></a>\n</div>\n<div class=\"content\">Good post about Drag & Drop http://plutov.by/post/html5_drag_and_drop</div>\n</li>\n</ul>\n</div>\n",
    "body": "<p><i>\r\nOh hey, look! It's another blog post—and this one\r\n<a href=\"http://hacks.mozilla.org/2009/07/html5-drag-and-drop/\">is cross-posted on hacks.mozilla.com</a>.\r\nI won't say this is the start of a renewed blogging habit, but let's see what happens.\r\n</i></p>\r\n\r\n<style type=\"text/css\">\r\ndl { margin-left: 2em; }\r\ndd { margin-left: 2em; margin-bottom: 0.25em; }\r\n</style>\r\n<div id=\"introduction\">\r\n    <p>\r\n        Drag and drop is one of the most fundamental interactions\r\n        afforded by graphical user interfaces.  In one gesture, it\r\n        allows users to pair the selection of an object with the\r\n        execution of an action, often including a second object in the\r\n        operation.  It's a simple yet powerful UI concept used to\r\n        support copying, list reordering, deletion (ala the Trash / Recycle Bin),\r\n        and even the creation of link relationships.\r\n    </p><p>\r\n        Since it's so fundamental, offering drag and drop in web\r\n        applications has been a no-brainer ever since browsers first\r\n        offered mouse events in DHTML.  But, although\r\n        <code>mousedown</code>, <code>mousemove</code>, and\r\n        <code>mouseup</code> made it possible, the implementation has been\r\n        limited to the bounds of the browser window.  Additionally,\r\n        since these events refer only to the object being dragged,\r\n        there's a challenge to find the subject of the drop when\r\n        the interaction is completed.\r\n    </p><p>\r\n\r\n        Of course, that doesn't prevent most modern JavaScript\r\n        frameworks from abstracting away most of the problems and\r\n        throwing in some flourishes while they're at it.  But, wouldn't\r\n        it be nice if browsers offered first-class support for drag and\r\n        drop, and maybe even extended it beyond the window sandbox?\r\n    </p><p>\r\n        As it turns out, this very wish is answered by the HTML 5 specification \r\n        <a target=\"_new\" href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#dnd\">section on new drag-and-drop events</a>, and \r\n        <a target=\"_new\" href=\"https://developer.mozilla.org/En/DragDrop/Drag_and_Drop\">Firefox 3.5 includes an implementation</a> of those events.\r\n    </p><p>\r\n        If you want to jump straight to the code, I've put together \r\n        <a target=\"_new\" target=\"_new\" target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html\">some simple demos</a> \r\n        of the new events.  \r\n    </p><p>\r\n\r\n        I've even scratched an itch of my own and\r\n        built <a target=\"_new\" target=\"_new\" target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/outline.html\">the beginnings of an outline editor</a>,\r\n        where every draggable element is also a drop target—of which\r\n        there could be dozens to hundreds in a complex document, something\r\n        that gave me some minor hair-tearing moments in the past\r\n        while trying to make do with plain old mouse events.\r\n    </p><p>\r\n        And, all the above can be downloaded or cloned from \r\n        <a href=\"http://github.com/lmorchard/fx35-drag-and-drop\">a GitHub repository</a>\r\n        I've created especially for this article—which continues after the jump.\r\n    </p>\r\n</div>\r\n\r\n<!--more-->\r\n\r\n<div id=\"events\">\r\n\r\n    <h2>The New Drag and Drop Events</h2>\r\n    <p>\r\n        So, with no further ado, here are the new drag and drop events,\r\n        in roughly the order you might expect to see them fired:\r\n    </p>\r\n    <dl>\r\n        <dt><code>dragstart</code></dt>\r\n        <dd>\r\n            A drag has been initiated, with the dragged element as the\r\n            event target.\r\n        </dd>\r\n\r\n        <dt><code>drag</code></dt>\r\n        <dd>\r\n            The mouse has moved, with the dragged element as the event target.\r\n        </dd>\r\n        <dt><code>dragenter</code></dt>\r\n        <dd>\r\n            The dragged element has been moved into a drop listener,\r\n            with the drop listener element as the event target.\r\n        </dd>\r\n        <dt><code>dragover</code></dt>\r\n\r\n        <dd>\r\n            The dragged element has been moved over a drop listener,\r\n            with the drop listener element as the event target.  Since\r\n            the default behavior is to cancel drops, returning\r\n            <code>false</code> or calling <code>preventDefault()</code> in\r\n            the event handler indicates that a drop is allowed here.\r\n        </dd>\r\n        <dt><code>dragleave</code></dt>\r\n        <dd>\r\n            The dragged element has been moved out of a drop listener,\r\n            with the drop listener element as the event target.\r\n        </dd>\r\n\r\n        <dt><code>drop</code></dt>\r\n        <dd>\r\n            The dragged element has been successfully dropped on a drop\r\n            listener, with the drop listener element as the event\r\n            target.\r\n        </dd>\r\n        <dt><code>dragend</code></dt>\r\n        <dd>\r\n            A drag has been ended, successfully or not, with the\r\n            dragged element as the event target.\r\n        </dd>\r\n    </dl>\r\n\r\n    <p>\r\n        Like the mouse events of yore, listeners can be attached to\r\n        elements using <code>addEventListener()</code> \r\n        directly or by way of your favorite JS library.  \r\n    </p><p>\r\n        Consider the following example using jQuery, \r\n        <a target=\"_new\" target=\"_new\" target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html#newschool\">also available as a live demo</a>:\r\n    </p>\r\n    <pre lang=\"javascript\" line=\"1\">\r\n<div id=\"newschool\">\r\n    <div class=\"dragme\">Drag me!</div>\r\n    <div class=\"drophere\">Drop here!</div>\r\n</div>\r\n\r\n<script type=\"text/javascript\">\r\n    $(document).ready(function() {\r\n        $('#newschool .dragme')\r\n            .attr('draggable', 'true')\r\n            .bind('dragstart', function(ev) {\r\n                var dt = ev.originalEvent.dataTransfer;\r\n                dt.setData(\"Text\", \"Dropped in zone!\");\r\n                return true;\r\n            })\r\n            .bind('dragend', function(ev) {\r\n                return false;\r\n            });\r\n        $('#newschool .drophere')\r\n            .bind('dragenter', function(ev) {\r\n                $(ev.target).addClass('dragover');\r\n                return false;\r\n            })\r\n            .bind('dragleave', function(ev) {\r\n                $(ev.target).removeClass('dragover');\r\n                return false;\r\n            })\r\n            .bind('dragover', function(ev) {\r\n                return false;\r\n            })\r\n            .bind('drop', function(ev) {\r\n                var dt = ev.originalEvent.dataTransfer;\r\n                alert(dt.getData('Text'));\r\n                return false;\r\n            });\r\n    });\r\n</script>\r\n    </pre>\r\n    <p>\r\n        Thanks to the new events and jQuery, this example is both short\r\n        and simple—but it packs in a lot of functionality, as the rest\r\n        of this article will explain.  \r\n    </p><p>\r\n        Before moving on, there are at least three things about the above\r\n        code that are worth mentioning:\r\n    </p>\r\n    <ul>\r\n        <li>\r\n\r\n            <p>\r\n                Drop targets are enabled by virtue of having\r\n                listeners for drop events.  But, \r\n                <a target=\"_new\" href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#drag-and-drop-processing-model\">per the HTML 5 spec</a>,\r\n                draggable elements need an\r\n                attribute of <code>draggable=\"true\"</code>, set either in\r\n                markup or in JavaScript.  \r\n            </p>\r\n            <p>\r\n                Thus, <code>$('#newschool&nbsp;.dragme').attr('draggable', 'true')</code>.\r\n            </p>\r\n\r\n        </li>\r\n        <li>\r\n            <p>\r\n                The original DOM event (as opposed to jQuery's event\r\n                wrapper) offers a property called <code>dataTransfer</code>.\r\n                Beyond just manipulating elements, the new drag and drop\r\n                events accomodate the transmission of user-definable data\r\n                during the course of the interaction.  \r\n            </p>\r\n        </li>\r\n        <li>\r\n            <p>\r\n\r\n                Since these are first-class events, you can apply \r\n                <a target=\"_new\" href=\"http://icant.co.uk/sandbox/eventdelegation/\">the technique of Event Delegation</a>.\r\n            </p><p>\r\n                What's that?  Well, imagine you have a list of 1000\r\n                list items—as part of a deeply-nested outline document,\r\n                for instance.  Rather than needing to attach listeners\r\n                or otherwise fiddle with all 1000 items, simply attach\r\n                a listener to the parent node (eg. the\r\n                <code><ul></code> element) and all events from\r\n                the children will propagate up to the single parent listener.\r\n                As a bonus, all new child elements added after page\r\n                load will enjoy the same benefits.\r\n            </p><p>\r\n                <a target=\"_new\" target=\"_new\" target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html#delegated\">Check out this demo</a>, \r\n                and \r\n                <a target=\"_new\" target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/js/drag-delegated.js\">the associated JS code</a> \r\n                to see more about these events and Event Delegation.\r\n            </p>\r\n\r\n        </li>\r\n    </ul>\r\n</div>\r\n\r\n<div id=\"datatransfer\">\r\n    <h2>Using dataTransfer</h2>\r\n    <p>\r\n        As mentioned in the last section, the new drag and drop events\r\n        let you send data along with a dragged element.  But, it's even\r\n        better than that:  Your drop targets can receive data\r\n        transferred by content objects dragged into the window from \r\n        other browser windows, and even <i>other applications</i>.\r\n    </p><p>\r\n\r\n        Since the example is a bit longer,  \r\n        <a target=\"_new\" target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html#data_transfer\">check out the live demo</a>\r\n        and \r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/js/drag-datatransfer.js\">associated code</a>\r\n        to get an idea of what's possible with <code>dataTransfer</code>.\r\n    </p><p>\r\n        In a nutshell, the stars of this show are the\r\n        <code>setData()</code> and <code>getData()</code> methods of\r\n        the <code>dataTransfer</code> property exposed by the Event object.\r\n    </p>\r\n\r\n    <p>\r\n        The <code>setData()</code> method is typically called in the \r\n        <code>dragstart</code> listener, loading <code>dataTransfer</code>\r\n        up with one or more strings of content with associated\r\n        <a href=\"https://developer.mozilla.org/En/DragDrop/Recommended_Drag_Types#link\">recommended content types</a>.\r\n    </p>\r\n\r\n    <p>\r\n        For illustration, here's a quick snippet from the example code:\r\n    </p>\r\n    <pre lang=\"javascript\" line=\"1\">\r\nvar dt = ev.originalEvent.dataTransfer;    \r\ndt.setData('text/plain', $('#logo').parent().text());\r\ndt.setData('text/html', $('#logo').parent().html());\r\ndt.setData('text/uri-list', $('#logo')[0].src);\r\n    </pre>\r\n    </p><p>\r\n        On the other end, <code>getData()</code> allows you to query\r\n        for content by type (eg. <code>text/html</code> followed by\r\n        <code>text/plain</code>).  This, in turn, allows you to decide\r\n        on acceptable content types at the time of the\r\n        <code>drop</code> event or even during <code>dragover</code>\r\n\r\n        to offer feedback for unacceptable types during the drag.\r\n    </p><p>\r\n        Here's another example from the receiving end of the example code:\r\n    </p>\r\n    <pre lang=\"javascript\" line=\"1\">\r\nvar dt = ev.originalEvent.dataTransfer;    \r\n$('.content_url .content').text(dt.getData('text/uri-list'));\r\n$('.content_text .content').text(dt.getData('text/plain'));\r\n$('.content_html .content').html(dt.getData('text/html'));\r\n    </pre>\r\n    <p>\r\n        Where <code>dataTransfer</code> really shines, though, is that\r\n        it allows your drop targets to receive content from \r\n        sources outside your defined draggable elements and even from\r\n        outside the browser altogether.  Firefox accepts such drags, \r\n        and attempts to populate <code>dataTransfer</code> with\r\n        appropriate content types extracted from the external object.\r\n    </p><p>\r\n\r\n        Thus, you could select some text in a word processor window and\r\n        drop it into one of your elements, and at least expect to find\r\n        it available as <code>text/plain</code> content.  \r\n    </p><p>\r\n        You can also select content in \r\n        another browser window, and expect to see <code>text/html</code>\r\n        appear in your events.  Check out the \r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/outline.html\">outline editing demo</a>\r\n        and see what happens when you try dragging various elements \r\n        (eg. images, tables, and lists) and highlighted content from\r\n        other windows onto the items there.\r\n    </p>\r\n\r\n</div>\r\n\r\n<div id=\"dragfeedback\">\r\n    <h2>Using Drag Feedback Images</h2>\r\n    <p>\r\n       An important aspect of the drag and drop interaction is a\r\n       representation of the thing being dragged.  By default in\r\n       Firefox, this is a \"ghost\" image of the dragged element itself.  But,\r\n       the <code>dataTransfer</code> property of the original Event\r\n       object exposes the method <code>setDragImage()</code> for use\r\n       in customizing this representation.\r\n    </p><p>\r\n\r\n        There's\r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html#feedback_image\">a live demo</a> of this feature, as well as\r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/js/drag-feedback-images.js\">associated JS code</a> \r\n        available.  The gist, however, is sketched out in these code snippets:\r\n    </p>\r\n    <pre lang=\"javascript\" line=\"1\">\r\nvar dt = ev.originalEvent.dataTransfer;    \r\n\r\ndt.setDragImage( $('#feedback_image h2')[0], 0, 0);\r\n\r\ndt.setDragImage( $('#logo')[0], 32, 32); \r\n\r\nvar canvas = document.createElement(\"canvas\");\r\ncanvas.width = canvas.height = 50;\r\n\r\nvar ctx = canvas.getContext(\"2d\");\r\nctx.lineWidth = 8;\r\nctx.moveTo(25,0);\r\nctx.lineTo(50, 50);\r\nctx.lineTo(0, 50);\r\nctx.lineTo(25, 0);\r\nctx.stroke();\r\n\r\ndt.setDragImage(canvas, 25, 25);\r\n    </pre>\r\n    <p>\r\n        You can supply a DOM node as the first parameter to \r\n        <code>setDragImage()</code>, which includes everything from\r\n        text to images to <code>canvas</code> elements.  The\r\n        second two parameters indicate at what left and top offset\r\n        the mouse should appear in the image while dragging.\r\n    </p><p>\r\n\r\n        For example, since the <code>#logo</code> image is 64x64,\r\n        the parameters in the second <code>setDragImage()</code>\r\n        method places the mouse right in the center of the image.\r\n        On the other hand, the first call positions the feedback\r\n        image such that the mouse rests in the upper left corner.\r\n    </p><p>\r\n    </p>\r\n</div>\r\n\r\n<div id=\"dragfeedback\">\r\n\r\n    <h2>Using Drop Effects</h2>\r\n    <p>\r\n        As mentioned at the start of this article, the drag and drop\r\n        interaction has been used to support actions such as copying,\r\n        moving, and linking.  Accordingly, the HTML 5 specification \r\n        accomodates these operations in the form of the \r\n        <code>effectAllowed</code> and <code>dropEffect</code>\r\n        properties exposed by the Event object.\r\n    </p>\r\n    <p>\r\n\r\n        For a quick fix, check out the\r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html#drag_effects\">a live demo</a> \r\n        of this feature, as well as the\r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/js/drag-effects.js\">associated JS code</a>.\r\n    </p><p>\r\n        The basic idea is that the <code>dragstart</code> event\r\n        listener can set a value for <code>effectAllowed</code> like so:\r\n    </p>\r\n\r\n    <pre lang=\"javascript\" line=\"1\">\r\nvar dt = ev.originalEvent.dataTransfer;\r\nswitch (ev.target.id) {\r\n    case 'effectdrag0': dt.effectAllowed = 'copy'; break;\r\n    case 'effectdrag1': dt.effectAllowed = 'move'; break;\r\n    case 'effectdrag2': dt.effectAllowed = 'link'; break;\r\n    case 'effectdrag3': dt.effectAllowed = 'all'; break;\r\n    case 'effectdrag4': dt.effectAllowed = 'none'; break;\r\n}\r\n    </pre>\r\n    <p>The choices available for this property include the following:</p>\r\n    <dl> \r\n        <dt><code>none</code></dt><dd>no operation is permitted </dd>\r\n        <dt><code>copy</code></dt><dd>copy only </dd>\r\n\r\n        <dt><code>move</code></dt><dd>move only </dd>\r\n        <dt><code>link</code></dt><dd>link only </dd>\r\n        <dt><code>copyMove</code></dt><dd>copy or move only </dd>\r\n        <dt><code>copyLink</code></dt><dd>copy or link only </dd>\r\n        <dt><code>linkMove</code></dt><dd>link or move only </dd>\r\n\r\n        <dt><code>all</code></dt><dd>copy, move, or link </dd>\r\n    </dl>\r\n    <p>\r\n        On the other end, the <code>dragover</code> event listener \r\n        can set the value of the\r\n        <code>dropEffect</code> property to indicate the expected effect\r\n        invoked on a successful drop.  If the value does\r\n        not match up with <code>effectAllowed</code>, the drop will\r\n        be considered cancelled on completion.\r\n    </p><p>\r\n\r\n        In the \r\n        <a target=\"_new\" href=\"http://decafbad.com/2009/07/drag-and-drop/api-demos.html#drag_effects\">a live demo</a>,\r\n        you should be able to see that only elements with matching\r\n        effects can be dropped into the appropriate drop zones.  This\r\n        is accomplished with code like the following:\r\n    </p>\r\n    <pre lang=\"javascript\" line=\"1\">\r\nvar dt = ev.originalEvent.dataTransfer;\r\nswitch (ev.target.id) {\r\n    case 'effectdrop0': dt.dropEffect = 'copy'; break;\r\n    case 'effectdrop1': dt.dropEffect = 'move'; break;\r\n    case 'effectdrop2': dt.dropEffect = 'link'; break;\r\n    case 'effectdrop3': dt.dropEffect = 'all'; break;\r\n    case 'effectdrop4': dt.dropEffect = 'none'; break;\r\n}\r\n    </pre>\r\n    <p>\r\n        Although the OS itself can provide some feedback, you \r\n        can also use these properties to update your own visible \r\n        feedback, both on the dragged element and on the drop zone\r\n        itself.\r\n    </p>\r\n\r\n</div>\r\n\r\n<div id=\"conclusion\">\r\n    <h2>Conclusion</h2>\r\n    <p>\r\n        The new first-class drag and drop events in HTML5 and Firefox\r\n        make supporting this form of UI interaction simple, concise,\r\n        and powerful in the browser.  But beyond the new simplicity of\r\n        these events, the ability to transfer content between\r\n        applications opens brand new avenues for web-based applications\r\n        and collaboration with desktop software in general.\r\n    </p><p>\r\n    </p><p>\r\n    </p>\r\n</div>\r\n\r\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221090962\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://lmframework.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=03dc722b1852367f02b0b21f02b10675&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://lmframework.com\">David Semeria</a>\n                </div>\n                <a href=\"#comment-221090962\" class=\"permalink\"><time datetime=\"2009-07-16T17:56:52\">2009-07-16T17:56:52</time></a>\n            </div>\n            <div class=\"content\"><p>Wow - thanks for a great introduction to D+D in HTML 5, I'm really looking forward to giving it a thorough road test. </p>\n\n<p>The key part of the implementation are the target listeners, because, as I'm sure you're aware, onmouseover would historically never fire over the target element because the dragged item would always 'cover it up'. BTW, my proposed solution was to add an 'event transparency' property, which would have made the dragged item invisible from the point of view of selected events, eg onmouseover.</p>\n\n<p>This implementation is going to take a lot of pain away. You have no idea how many hoops I had to jump through to get a fully generic D+D implementation working without these new calls.</p>\n\n<p>If you're interested, you can see it working here: http://lmframework.com/page.php?id=vd_twig_short_2</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090964\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=cee7ac3f63d7e8c1367e170bec302c14&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Alex</a>\n                </div>\n                <a href=\"#comment-221090964\" class=\"permalink\"><time datetime=\"2009-07-17T00:13:23\">2009-07-17T00:13:23</time></a>\n            </div>\n            <div class=\"content\"><p>Hey,</p>\n\n<p>Looks great and useful article.  For dragging from external applications (such as the Desktop) is a normal webpage able to get the data from the drop?  I was just playing with it and seem to always get what seems to be a security error with getData or mozGetDataAt.  However, the documentation seems to state that on drop that data should be made available to the page.  Likewise, in the same way an image can be dragged off the page onto the desktop, can an arbitrary element be dragged onto the desktop with whatever file content to be saved?  Thanks for the help.</p>\n\n<p>Alex</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090966\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://paulisageek.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b3bb70a4bace7f9bd49f48b149ab95f9&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://paulisageek.com/\">Paul Tarjan</a>\n                </div>\n                <a href=\"#comment-221090966\" class=\"permalink\"><time datetime=\"2009-07-17T04:52:54\">2009-07-17T04:52:54</time></a>\n            </div>\n            <div class=\"content\"><p>Very nice, I didn't know that FF 3.5 actually had this implemented. Time to start playing :)</p>\n\n<p>Also, how did you do your code posts? Was it just pasting in HTML or do you have a better setup?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090967\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=066d1e75c9b938053ee6b3d48b1c0f6a&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Animal</a>\n                </div>\n                <a href=\"#comment-221090967\" class=\"permalink\"><time datetime=\"2009-07-17T14:35:21\">2009-07-17T14:35:21</time></a>\n            </div>\n            <div class=\"content\"><p>Seems pretty pointless pressing ahead with this when you just can't write a web app to use it. There's no support. All a bunch of whizzy fun I'm sure, but sod-all use.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090969\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221090969\" class=\"permalink\"><time datetime=\"2009-07-17T16:23:10\">2009-07-17T16:23:10</time></a>\n            </div>\n            <div class=\"content\"><p>@Animal: Why can't you write a web app to use it?  It's in the HTML5 spec, works in Fx3.5 and Safari 4 / WebKit.  It doesn't have universal support yet, or course, but new standards never do.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090970\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.crearedesign.co.uk\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=87bf21798e390d9043dda7240c1b60f7&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.crearedesign.co.uk\">paul</a>\n                </div>\n                <a href=\"#comment-221090970\" class=\"permalink\"><time datetime=\"2009-07-21T08:08:26\">2009-07-21T08:08:26</time></a>\n            </div>\n            <div class=\"content\"><p>very nice indeed! i like this, it has definitely opened up new avenues for interaction without using flash. but it will take time before people upgrade to the new browser. a lot of people who browse the web wont realise what the technology will bring and will use their current browser because it does the job!</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090971\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=04de859cfd6ef0b75e4ea3cbea143190&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Joel</a>\n                </div>\n                <a href=\"#comment-221090971\" class=\"permalink\"><time datetime=\"2009-07-21T14:36:04\">2009-07-21T14:36:04</time></a>\n            </div>\n            <div class=\"content\"><p>Excellent demos of the new features.</p>\n\n<p>When using a feedback image on a zoomed in page, should the image not also be scaled up automatically?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090973\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=41708\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=6d3bf986abdbb431991c3b02eb6e2335&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=41708\">RenegadeX</a>\n                </div>\n                <a href=\"#comment-221090973\" class=\"permalink\"><time datetime=\"2009-07-22T04:13:46\">2009-07-22T04:13:46</time></a>\n            </div>\n            <div class=\"content\"><p>Dragging &amp; dropping <em>is</em> as you say, a \"one of the most fundamental interations\" that users of computer graphical interfaces have come to know, and expect.</p>\n\n<p>It therefore completes dumbfounds me how it is that we <em>still</em> can not natively drag &amp; scroll (&amp; then drop) in Firefox. We can only drag &amp; drop an item within the currently visible portion of a Firefox webpage or tab, no further up, no further down.</p>\n\n<p>That is should be limited makes absolutely no sense. Microsoft built the function into their Windows 3.x (file) Explorer, and then when visual browsers came along, naturally carried it through into Internet Explorer. </p>\n\n<p>Firefox Bug 41708, \"Should be able to scroll in the viewport while dragging\" was opened in June, 2000 (yes, 9 years ago!) and remains open, and is disregarded by Firefox developers as little more than a trivial little annoyance, and therefore is and should be treated as a low-importance 'enhancement' rather than as the 'standard feature' it should really be.</p>\n\n<p>If it weren't for the extension 'DragToScroll', which has been around for 3-1/2 years now (not updated in a long time but still works if you override version compatibility), I would have dumped Firefox and switched to a different browser (Maxthon 3, most likely).</p>\n\n<p>So, I'm wondering (and hoping) -- does the new HTML5 drag and drop specification include anything that if implemented properly would make it possible to scroll &amp; drag?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090974\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221090974\" class=\"permalink\"><time datetime=\"2009-07-22T13:57:42\">2009-07-22T13:57:42</time></a>\n            </div>\n            <div class=\"content\"><p>@RenegadeX: Ugh.  I don't work on the browser itself, but I noticed that unexpected behavior on drag &amp; drop.  The window really should scroll when you get toward the top or bottom while dragging - and, in fact, most pre-HTML5 JS frameworks do that in their own drag &amp; drop abstractions.  </p>\n\n<p>Until / unless Firefox gets this fixed, the same sort of auto-scrolling could be hacked in to HTML5 drag and drop.  Not perfect, but it's doable.  That is, in the drag event, you can check if the mouse is near the upper or lower edge of the viewport - and if so, start scrolling appropriately. That's pretty much how the JS frameworks do it with old-school D&D</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090975\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.copperbot.net\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=df48b2c2a3a2be51b1e15f10c5fb05da&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.copperbot.net\">CopperBot</a>\n                </div>\n                <a href=\"#comment-221090975\" class=\"permalink\"><time datetime=\"2009-07-23T21:41:07\">2009-07-23T21:41:07</time></a>\n            </div>\n            <div class=\"content\"><p>Very cool article! Thanks for sharing. HTML5 really is going to change everything about how we use and develop for the web. Pretty awesome!</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090976\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.AmnesiaGames.cl\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=14ad888c23e28c85c222a73b6c633570&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.AmnesiaGames.cl\">Alexos</a>\n                </div>\n                <a href=\"#comment-221090976\" class=\"permalink\"><time datetime=\"2009-07-26T05:05:44\">2009-07-26T05:05:44</time></a>\n            </div>\n            <div class=\"content\"><p>Hi, would DD work for uploading files? How can I display a progress bar?\nThanks! \nI've been looking for that several days, and found only applets which I can't use in my proyect :-)</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090977\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.sjlwebdesign.co.uk\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=185cd965e0e8ccd15df2f90977cbeaf3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.sjlwebdesign.co.uk\">Sam</a>\n                </div>\n                <a href=\"#comment-221090977\" class=\"permalink\"><time datetime=\"2009-07-28T13:54:26\">2009-07-28T13:54:26</time></a>\n            </div>\n            <div class=\"content\"><p>Looks fantastic, going to try it out now (once I have upgraded my FF)</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090978\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.dankantor.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=60fc8331f617fc905fd682bc4f41ce8d&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.dankantor.com\">Dan Kantor</a>\n                </div>\n                <a href=\"#comment-221090978\" class=\"permalink\"><time datetime=\"2009-07-30T03:10:25\">2009-07-30T03:10:25</time></a>\n            </div>\n            <div class=\"content\"><p>Looks like effectAllowed and dropEffect are not working for FF 3.5 on the Mac. I see effects on Windows and Safari 4 on Mac. I've been playing around with adding borders to the drop target, but the + icon for copy really helps a lot. Hopefully Mozilla will fix this next update.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090979\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.thecssninja.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8677c9f7c0f6d947bf318c1430d00bfd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.thecssninja.com/\">Ryan</a>\n                </div>\n                <a href=\"#comment-221090979\" class=\"permalink\"><time datetime=\"2009-09-01T02:33:06\">2009-09-01T02:33:06</time></a>\n            </div>\n            <div class=\"content\"><p>Great article it's good to see developments in this area. I wrote an article on the further extensions Firefox 3.6 has done with the dataTransfer method by adding the file attribute so you can access local files and upload them without the need for file inputs. http://www.thecssninja.com/javascript/drag-and-drop-upload</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090982\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=1ed4bbef573bfc014d32356d53103ca2&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">phil swenson</a>\n                </div>\n                <a href=\"#comment-221090982\" class=\"permalink\"><time datetime=\"2009-09-03T22:58:36\">2009-09-03T22:58:36</time></a>\n            </div>\n            <div class=\"content\"><p>Why not a first class WYSIWYG rich text editor with copy from clipboard image support?  </p>\n\n<p><em>NO ONE</em> has built a decent text editor in JavaScript - At least not that I've seen.  And browsers don't allow image paste for reasons I don't understand.  </p>\n\n<p>And by decent I mean just like you'd get in textmate or another editor.  Have the standard text editor features everyone expects:  tab, select indent/select unindent, resize image, home, end, duplicate line, delete line, styling, etc.</p>\n\n<p>would push the browser to the next level in killing the desktop.  non-techies hate wikis.  They want a real editor.  I do too actually.... would be great for forums, bug tracking system (imagine pasting screen shots in line with your bug desc), email, etc.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090983\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=deed51cddc830e162557b8f01383a057&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Jean-Denis</a>\n                </div>\n                <a href=\"#comment-221090983\" class=\"permalink\"><time datetime=\"2009-09-04T00:23:39\">2009-09-04T00:23:39</time></a>\n            </div>\n            <div class=\"content\"><p>Francisco Tomalski wrote up a nice piece on HTML 5 drag'n drop at http://www.alertdebugging.com/2009/08/16/on-html-5-drag-and-drop/</p>\n\n<p>where he uncovers that the proposed standard is partially broken. Any comment on his piece?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090984\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://html5tutorial.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=3876e030a3fc69a8b59a8c55829fb510&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://html5tutorial.net/\">Lisa</a>\n                </div>\n                <a href=\"#comment-221090984\" class=\"permalink\"><time datetime=\"2009-09-09T07:33:08\">2009-09-09T07:33:08</time></a>\n            </div>\n            <div class=\"content\"><p>This is a great move forward no more relying on 3rd party apps and extensions to play video or audio, i have been reading up on HTML 5 at the <a href=\"http://html5tutorial.net/\" title=\"HTML tutorials\" rel=\"nofollow\">HTML 5 Tutorials</a> website, i am now playing around with one of the free templates and was wondering how to embed audio, so thanks a lot, great information, lets hope more people lean towards HTML 5 and SOON!!!</p>\n\n<p>The drag and drop feature i did not notice was already working in FF 3.5, i was told to get Safari to see HTML 5 in action. Thanks for a great post</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090985\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.useragentman.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=9a579fa051b35266678735c8a3751771&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.useragentman.com\">Zoltan Hawryluk</a>\n                </div>\n                <a href=\"#comment-221090985\" class=\"permalink\"><time datetime=\"2010-01-11T15:14:48\">2010-01-11T15:14:48</time></a>\n            </div>\n            <div class=\"content\"><p>A million thank yous!  This article was great introduction to HTML5 D+D.  With it, I was able to extend it to other browsers.  It was a little painful at first because the browser implementations diverge in significant, but manageable ways.</p>\n\n<p>If you are interested, check out my article at http://www.useragentman.com/blog/2010/01/10/cross-browser-html5-drag-and-drop/ if you are interested in my results.</p>\n\n<p>I noticed you haven't blogged in a while - I hope you haven't stopped totally and continue to share with the webdev community.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221090986\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.lingua-franka.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e65f416e42c12571ba1c86ae2dadd99f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.lingua-franka.com\">Raul</a>\n                </div>\n                <a href=\"#comment-221090986\" class=\"permalink\"><time datetime=\"2011-04-26T23:56:02\">2011-04-26T23:56:02</time></a>\n            </div>\n            <div class=\"content\"><p>Hi, Leslie. I've just come across a problem that's driving me nuts. I'm not fully comfortable with D&amp;D, but managed to move a crosshairs image over a map to very precisely controlled positions. It worked great on FF 3.6 and FF 4. After a couple of days of successful testing, the image suddenly refused to de dropped after being dragged (it rather flew back to its previous position). Do you know if there is a bug in FF that might cause this? </p>\n\n<p>BTW, during the programming process I updated Firebug, which also is getting a little cranky.</p>\n\n<p>Thanks for your prompt answer, Raul</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-324410737\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://disqus.com/api/users/avatars/google-4014af7ac4ea5d00df95bef4503b78dd.jpg\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Alexander Plutov</a>\n                </div>\n                <a href=\"#comment-324410737\" class=\"permalink\"><time datetime=\"2011-10-01T11:51:12\">2011-10-01T11:51:12</time></a>\n            </div>\n            <div class=\"content\">Good post about Drag & Drop http://plutov.by/post/html5_drag_and_drop</div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2009",
    "path": "2009/07/15/html5-drag-and-drop",
    "summary": "<p><i>\nOh hey, look! It&apos;s another blog post&#x2014;and this one\n<a href=\"http://hacks.mozilla.org/2009/07/html5-drag-and-drop/\">is cross-posted on hacks.mozilla.com</a>.\nI won&apos;t say this is the start of a renewed blogging habit, but let&apos;s see what happens.\n</i></p>\n\n<style type=\"text/css\">\ndl { margin-left: 2em; }\ndd { margin-left: 2em; margin-bottom: 0.25em; }\n</style>\n<div id=\"introduction\">\n    <p>\n        Drag and drop is one of the most fundamental interactions\n        afforded by graphical user interfaces.  In one gesture, it\n        allows users to pair the selection of an object with the\n        execution of an action, often including a second object in the\n        operation.  It&apos;s a simple yet powerful UI concept used to\n        support copying, list reordering, deletion (ala the Trash / Recycle Bin),\n        and even the creation of link relationships.\n    </p><p>\n        Since it&apos;s so fundamental, offering drag and drop in web\n        applications has been a no-brainer ever since browsers first\n        offered mouse events in DHTML.  But, although\n        <code>mousedown</code>, <code>mousemove</code>, and\n        <code>mouseup</code> made it possible, the implementation has been\n        limited to the bounds of the browser window.  Additionally,\n        since these events refer only to the object being dragged,\n        there&apos;s a challenge to find the subject of the drop when\n        the interaction is completed.\n    </p><p>\n\n</p><pre><code>    Of course, that doesn&apos;t prevent most modern JavaScript\n    frameworks from abstracting away most of the problems and\n    throwing in some flourishes while they&apos;re at it.  But, wouldn&apos;t\n    it be nice if browsers offered first-class support for drag and\n    drop, and maybe even extended it beyond the window sandbox?\n&lt;/p&gt;&lt;p&gt;\n    As it turns out, this very wish is answered by the HTML 5 specification \n    &lt;a target=&quot;_new&quot; href=&quot;http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#dnd&quot;&gt;section on new drag-and-drop events&lt;/a&gt;, and \n    &lt;a target=&quot;_new&quot; href=&quot;https://developer.mozilla.org/En/DragDrop/Drag_and_Drop&quot;&gt;Firefox 3.5 includes an implementation&lt;/a&gt; of those events.\n&lt;/p&gt;&lt;p&gt;\n    If you want to jump straight to the code, I&apos;ve put together \n    &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/api-demos.html&quot;&gt;some simple demos&lt;/a&gt; \n    of the new events.  \n&lt;/p&gt;&lt;p&gt;\n\n    I&apos;ve even scratched an itch of my own and\n    built &lt;a target=&quot;_new&quot; target=&quot;_new&quot; target=&quot;_new&quot; href=&quot;http://decafbad.com/2009/07/drag-and-drop/outline.html&quot;&gt;the beginnings of an outline editor&lt;/a&gt;,\n    where every draggable element is also a drop target&#x2014;of which\n    there could be dozens to hundreds in a complex document, something\n    that gave me some minor hair-tearing moments in the past\n    while trying to make do with plain old mouse events.\n&lt;/p&gt;&lt;p&gt;\n    And, all the above can be downloaded or cloned from \n    &lt;a href=&quot;http://github.com/lmorchard/fx35-drag-and-drop&quot;&gt;a GitHub repository&lt;/a&gt;\n    I&apos;ve created especially for this article&#x2014;which continues after the jump.\n&lt;/p&gt;</code></pre>\n</div>\n\n",
    "prevPostPath": "2009/08/20/professional-javascript-frameworks-is-a-real-book",
    "nextPostPath": "2009/05/30/controlled-monetization"
  },
  {
    "comments_archived": true,
    "date": "2008-11-01T19:23:23.000Z",
    "layout": "post",
    "tags": [
      "webdev",
      "js",
      "javascript",
      "entries",
      "jquery",
      "zope",
      "zpt",
      "tal",
      "templates"
    ],
    "title": "An unnecessary Template Attribute Language",
    "wordpress_id": 1450,
    "wordpress_slug": "an-unnecessary-template-attribute-language",
    "wordpress_url": "http://decafbad.com/blog/?p=1450",
    "year": "2008",
    "month": "11",
    "day": "01",
    "isDir": false,
    "slug": "an-unnecessary-template-attribute-language",
    "postName": "2008-11-01-an-unnecessary-template-attribute-language",
    "html": "<p>A funny thing happened on the way to building <a href=\"http://svn.mozilla.org/projects/lizardfeeder/trunk/\">a delayed real-time feed display</a>:  I got temporarily obsessed with implementing <a href=\"http://github.com/lmorchard/jquery-tal-template/tree/master\">a template language in JavaScript</a> that, as it turned out later, I didn&#39;t need.  About <a href=\"http://svn.mozilla.org/projects/lizardfeeder/trunk/\">the feed project itself</a>, I hope to write more soon—but for now I want to get this extra template language thing out of my system and see if anyone else might have a use for it.</p>\n<p>See, I had a notion it would be keen if I had access to the same template language on the client as on the server.  I needed to render a number of list items statically on the server with feed entries, then update that list with new entries on the client as they became available through JSON feed polling.  It&#39;d be a pain in the butt to maintain two separate list item templates for client and server, so I reached for a shared template language.</p>\n<p>Never mind that I&#39;d just gotten done writing <a href=\"http://www.amazon.com/gp/product/0470452021?ie=UTF8&amp;tag=0xdecafbad01-20&amp;linkCode=as2&amp;camp=1789&amp;c%0D%0Areative=9325&amp;creativeASIN=0470452021\">a small book on Dojo</a>, and was already aware of the existence of the <a href=\"http://svn.dojotoolkit.org/src/dojox/trunk/dtl/README\">DojoX Django Template Language</a>.  This might&#39;ve worked, since the server end of things was written in Python (though not with Django).  That the JavaScript side already used <a href=\"http://jquery.com/\">jQuery</a> wasn&#39;t <em>too</em> tall a hurdle.  Also, I&#39;m sure there are a handful of other JavaScript/Python template language match-ups to be found.</p>\n<p>But, let&#39;s be honest here:  I&#39;ve always been a fan of Zope&#39;s <a href=\"http://wiki.zope.org/ZPT/TALSpecification14\">Template Attribute Language</a> for their <a href=\"http://wiki.zope.org/ZPT/FrontPage\">Page Templates</a>, and have long wondered how hard it would be to implement.  The concept seems so much cleaner to me than most string-formatting template languages, and the workflow from mockup-to-template and back again has always been appealing to me when it works.  So, when my first few experimental steps in trying my hand at it actually started working, I couldn&#39;t stop coding.  </p>\n<p>And now, <a href=\"http://github.com/lmorchard/jquery-tal-template/tree/master/jquery.taltemplate.js\">the thing</a> is mostly done.  It has no tests, has features left undone, and probably yields plenty of bugs—but I finished it enough to use it practically, and that was long enough to convince me it wasn&#39;t the right tool for the job.  </p>\n<p>Still, though, I can&#39;t help thinking it might be the right tool for <em>some</em> job.  That could be because I spent a lot of time on it, or that I&#39;m unreasonably fond of <a href=\"http://wiki.zope.org/ZPT/TALSpecification14\">TAL</a>, but it still feels like a decent little plugin to have on hand.  Maybe someone reading this will have a similar conclusion.</p>\n<p>Oh and by the way, plain <a href=\"http://jquery.com/\">jQuery</a> turned out to be a better tool for <a href=\"http://svn.mozilla.org/projects/lizardfeeder/trunk/\">the job in question</a>.  This seems to nicely balance the duplicate effort between server and client, demanding only that I stick with semantically significant CSS class names in the server template—something I should be doing anyway:</p>\n<pre><code>        // Clone and populate a new entry.\n        var new_item = $(&#39;#feed-items .entry:last&#39;)\n            .clone()\n            .attr(&#39;class&#39;, entry_classes.join(&#39; &#39;)) \n            .find(&#39;.group span&#39;)\n                .text(tags[&#39;group&#39;])\n            .end()\n            .find(&#39;.title&#39;)\n                .find(&#39;.favicon&#39;)\n                    .attr(&#39;src&#39;, favicon)\n                .end()\n                .find(&#39;.link&#39;)\n                    .attr(&#39;href&#39;, entry.link)\n                    .text(entry.title)\n                .end()\n            .end()\n            .find(&#39;.updated&#39;)\n                .find(&#39;.timeago&#39;)\n                    .attr(&#39;title&#39;, entry.updated)\n                    .text(entry_updated.strftime(&#39;%+&#39;))\n                    .timeago()\n                .end()\n                .find(&#39;.time&#39;)\n                    .text(entry_updated.strftime(&#39;%I:%M %p&#39;))\n                .end()\n            .end()\n            .find(&#39;.author&#39;)\n                .text(entry.author || &#39;n/a&#39;)\n            .end()\n            .prependTo(&#39;#feed-items&#39;)\n            .hide();</code></pre>\n<p>Of course, <em>plain</em> is a relative term here.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221083366\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=3f398029eea744ce9ba9147aab627557&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">brad clements</a>\n</div>\n<a href=\"#comment-221083366\" class=\"permalink\"><time datetime=\"2008-11-03T21:26:42\">2008-11-03T21:26:42</time></a>\n</div>\n<div class=\"content\"><p>Groan,</p>\n<p>Too bad I haven't had a chance to finish documenting (and tweaking) the ATALi project.</p>\n<p>It's a collection of Alternative TAL Implementations.</p>\n<p>It currently has TAL for xslt (server side using libxslt directly or via lxml with metal support)</p>\n<p>and TAL for javascript (no libraries needed, though it does recognize mochikit iterators, no metal)</p>\n<p>https://launchpad.net/atali</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083367\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.jm3.net/\"><img src=\"http://disqus.com/api/users/avatars/jm3.jpg\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.jm3.net/\">John Manoogian III (jm3)</a>\n</div>\n<a href=\"#comment-221083367\" class=\"permalink\"><time datetime=\"2008-11-24T18:51:17\">2008-11-24T18:51:17</time></a>\n</div>\n<div class=\"content\"><p>Have you seen \"trimpath\"?</p>\n<p>http://code.google.com/p/trimpath/wiki/JavaScriptTemplates</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "A funny thing happened on the way to building [a delayed real-time feed display][lizardfeeder]:  I got temporarily obsessed with implementing [a template language in JavaScript][jqtal] that, as it turned out later, I didn't need.  About [the feed project itself][lizardfeeder], I hope to write more soon—but for now I want to get this extra template language thing out of my system and see if anyone else might have a use for it.\r\n\r\nSee, I had a notion it would be keen if I had access to the same template language on the client as on the server.  I needed to render a number of list items statically on the server with feed entries, then update that list with new entries on the client as they became available through JSON feed polling.  It'd be a pain in the butt to maintain two separate list item templates for client and server, so I reached for a shared template language.\r\n\r\nNever mind that I'd just gotten done writing [a small book on Dojo][book], and was already aware of the existence of the [DojoX Django Template Language][djt].  This might've worked, since the server end of things was written in Python (though not with Django).  That the JavaScript side already used [jQuery][] wasn't *too* tall a hurdle.  Also, I'm sure there are a handful of other JavaScript/Python template language match-ups to be found.\r\n\r\nBut, let's be honest here:  I've always been a fan of Zope's [Template Attribute Language][tal] for their [Page Templates][pt], and have long wondered how hard it would be to implement.  The concept seems so much cleaner to me than most string-formatting template languages, and the workflow from mockup-to-template and back again has always been appealing to me when it works.  So, when my first few experimental steps in trying my hand at it actually started working, I couldn't stop coding.  \r\n\r\nAnd now, [the thing][thing] is mostly done.  It has no tests, has features left undone, and probably yields plenty of bugs—but I finished it enough to use it practically, and that was long enough to convince me it wasn't the right tool for the job.  \r\n\r\nStill, though, I can't help thinking it might be the right tool for *some* job.  That could be because I spent a lot of time on it, or that I'm unreasonably fond of [TAL][tal], but it still feels like a decent little plugin to have on hand.  Maybe someone reading this will have a similar conclusion.\r\n\r\nOh and by the way, plain [jQuery][] turned out to be a better tool for [the job in question][lizardfeeder].  This seems to nicely balance the duplicate effort between server and client, demanding only that I stick with semantically significant CSS class names in the server template—something I should be doing anyway:\r\n\r\n            // Clone and populate a new entry.\r\n            var new_item = $('#feed-items .entry:last')\r\n                .clone()\r\n                .attr('class', entry_classes.join(' ')) \r\n                .find('.group span')\r\n                    .text(tags['group'])\r\n                .end()\r\n                .find('.title')\r\n                    .find('.favicon')\r\n                        .attr('src', favicon)\r\n                    .end()\r\n                    .find('.link')\r\n                        .attr('href', entry.link)\r\n                        .text(entry.title)\r\n                    .end()\r\n                .end()\r\n                .find('.updated')\r\n                    .find('.timeago')\r\n                        .attr('title', entry.updated)\r\n                        .text(entry_updated.strftime('%+'))\r\n                        .timeago()\r\n                    .end()\r\n                    .find('.time')\r\n                        .text(entry_updated.strftime('%I:%M %p'))\r\n                    .end()\r\n                .end()\r\n                .find('.author')\r\n                    .text(entry.author || 'n/a')\r\n                .end()\r\n                .prependTo('#feed-items')\r\n                .hide();\r\n\r\nOf course, *plain* is a relative term here.\r\n\r\n[jquery]: http://jquery.com/\r\n[tal]: http://wiki.zope.org/ZPT/TALSpecification14\r\n[pt]: http://wiki.zope.org/ZPT/FrontPage\r\n[book]: http://www.amazon.com/gp/product/0470452021?ie=UTF8&tag=0xdecafbad01-20&linkCode=as2&camp=1789&c%0D%0Areative=9325&creativeASIN=0470452021\r\n[djt]: http://svn.dojotoolkit.org/src/dojox/trunk/dtl/README\r\n[jqtal]: http://github.com/lmorchard/jquery-tal-template/tree/master\r\n[lizardfeeder]: http://svn.mozilla.org/projects/lizardfeeder/trunk/\r\n[thing]: http://github.com/lmorchard/jquery-tal-template/tree/master/jquery.taltemplate.js\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221083366\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=3f398029eea744ce9ba9147aab627557&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">brad clements</a>\n                </div>\n                <a href=\"#comment-221083366\" class=\"permalink\"><time datetime=\"2008-11-03T21:26:42\">2008-11-03T21:26:42</time></a>\n            </div>\n            <div class=\"content\"><p>Groan,</p>\n\n<p>Too bad I haven't had a chance to finish documenting (and tweaking) the ATALi project.</p>\n\n<p>It's a collection of Alternative TAL Implementations.</p>\n\n<p>It currently has TAL for xslt (server side using libxslt directly or via lxml with metal support)</p>\n\n<p>and TAL for javascript (no libraries needed, though it does recognize mochikit iterators, no metal)</p>\n\n<p>https://launchpad.net/atali</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083367\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.jm3.net/\"><img src=\"http://disqus.com/api/users/avatars/jm3.jpg\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.jm3.net/\">John Manoogian III (jm3)</a>\n                </div>\n                <a href=\"#comment-221083367\" class=\"permalink\"><time datetime=\"2008-11-24T18:51:17\">2008-11-24T18:51:17</time></a>\n            </div>\n            <div class=\"content\"><p>Have you seen \"trimpath\"?</p>\n\n<p>http://code.google.com/p/trimpath/wiki/JavaScriptTemplates</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2008",
    "path": "2008/11/01/an-unnecessary-template-attribute-language",
    "prevPostPath": "2008/12/20/the-concise-guide-to-dojo-is-a-real-book",
    "nextPostPath": "2008/10/29/jelly-stains-and-web-masons"
  },
  {
    "comments_archived": true,
    "date": "2007-01-03T20:29:31.000Z",
    "layout": "post",
    "tags": [
      "asides",
      "webdev",
      "rss",
      "js",
      "xoxooutliner",
      "bookmarklets"
    ],
    "title": "rss feeds of bookmarklets?",
    "wordpress_id": 1033,
    "wordpress_slug": "rss-feeds-of-bookmarklets",
    "wordpress_url": "http://decafbad.com/blog/2007/01/03/rss-feeds-of-bookmarklets",
    "year": "2007",
    "month": "01",
    "day": "03",
    "isDir": false,
    "slug": "rss-feeds-of-bookmarklets",
    "postName": "2007-01-03-rss-feeds-of-bookmarklets",
    "html": "<p>Hmm, a quick idea:  Has anyone yet tried making an RSS feed of bookmarklets?  I&#39;d use it by dragging it to the Firefox bookmark toolbar to get a drop-down menu of usable bookmarklets, dynamically generated by an online app.  In particular, say I had an outline in XoxoOutliner, and I wanted to treat the first level of items each as a loosely categorized inbox for ideas.  The RSS feed would offer bookmarklets to append a new idea via quick pop-up to each of the top-level branches.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221090498\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://stadik.net\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=c28fdb5b196caeb5d37101b73b50ae26&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://stadik.net\">Scytrin dai Kinthra</a>\n</div>\n<a href=\"#comment-221090498\" class=\"permalink\"><time datetime=\"2007-01-03T23:30:42\">2007-01-03T23:30:42</time></a>\n</div>\n<div class=\"content\"><p>I used to do this from my home page once browsers started integrating rss into bookmark thingies.\nThese days I've been using the Firefox del.icio.us 1.3.x extention and store my bookmarklets and smart bookmarks (hello galeon) on my account.\nHowever, del.icio.us doesn't allow sharing of certain types of bookmarks and bookmarklets are one of them (being javascript and all), so sharing of them is not very well enabled.\nIt'd be nice being able to peruse a del.icio.us/tag/bookmarklet and pickout nifties.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090499\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://factoryjoe.com/blog\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d187daa261d3472b7e07f38f8e5c010e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://factoryjoe.com/blog\">Chris Messina</a>\n</div>\n<a href=\"#comment-221090499\" class=\"permalink\"><time datetime=\"2007-01-03T23:32:42\">2007-01-03T23:32:42</time></a>\n</div>\n<div class=\"content\"><p>Not sure, but that's a great idea! The bookmarklets that load remote scripts and are therefore always up to date IMO are genius... this simply adds some depth to them I guess... and takes advantage of the Firefox UI.</p>\n<p>Would you be able to execute Javascript loaded from feeds that aren't top level locations? That seems like a security issue, no?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090501\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.robinsonhouse.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=04dbf0ad0e3154fad1b02345d8668b72&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.robinsonhouse.com/\">James Robinson, III</a>\n</div>\n<a href=\"#comment-221090501\" class=\"permalink\"><time datetime=\"2007-01-04T01:34:56\">2007-01-04T01:34:56</time></a>\n</div>\n<div class=\"content\"><p>Haven't tried it in FF 2.0.0.1, but older versions filtered out bookmarklets from the feed due to the JS.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090502\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://db79.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d527b871fc097b317f7993bdac0d349e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://db79.com\">Shawn Medero</a>\n</div>\n<a href=\"#comment-221090502\" class=\"permalink\"><time datetime=\"2007-01-04T05:03:17\">2007-01-04T05:03:17</time></a>\n</div>\n<div class=\"content\"><p>James is right about Firefox - I wanted to have a feed of bookmarklets as a live bookmark that people at work would subscribe to for a certain project but Firefox 1.x filtered out any Javascript. Going back to unstable Firefox (it worked up until 0.9 or something) didn't seem like a great idea so I canned it. Kinda stinks because it would be really useful for internal usage where security shouldn't be an issue.</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "Hmm, a quick idea:  Has anyone yet tried making an RSS feed of bookmarklets?  I'd use it by dragging it to the Firefox bookmark toolbar to get a drop-down menu of usable bookmarklets, dynamically generated by an online app.  In particular, say I had an outline in XoxoOutliner, and I wanted to treat the first level of items each as a loosely categorized inbox for ideas.  The RSS feed would offer bookmarklets to append a new idea via quick pop-up to each of the top-level branches.\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221090498\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://stadik.net\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=c28fdb5b196caeb5d37101b73b50ae26&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://stadik.net\">Scytrin dai Kinthra</a>\r\n                </div>\r\n                <a href=\"#comment-221090498\" class=\"permalink\"><time datetime=\"2007-01-03T23:30:42\">2007-01-03T23:30:42</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>I used to do this from my home page once browsers started integrating rss into bookmark thingies.\r\nThese days I've been using the Firefox del.icio.us 1.3.x extention and store my bookmarklets and smart bookmarks (hello galeon) on my account.\r\nHowever, del.icio.us doesn't allow sharing of certain types of bookmarks and bookmarklets are one of them (being javascript and all), so sharing of them is not very well enabled.\r\nIt'd be nice being able to peruse a del.icio.us/tag/bookmarklet and pickout nifties.</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221090499\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://factoryjoe.com/blog\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d187daa261d3472b7e07f38f8e5c010e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://factoryjoe.com/blog\">Chris Messina</a>\r\n                </div>\r\n                <a href=\"#comment-221090499\" class=\"permalink\"><time datetime=\"2007-01-03T23:32:42\">2007-01-03T23:32:42</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Not sure, but that's a great idea! The bookmarklets that load remote scripts and are therefore always up to date IMO are genius... this simply adds some depth to them I guess... and takes advantage of the Firefox UI.</p>\r\n\r\n<p>Would you be able to execute Javascript loaded from feeds that aren't top level locations? That seems like a security issue, no?</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221090501\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.robinsonhouse.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=04dbf0ad0e3154fad1b02345d8668b72&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.robinsonhouse.com/\">James Robinson, III</a>\r\n                </div>\r\n                <a href=\"#comment-221090501\" class=\"permalink\"><time datetime=\"2007-01-04T01:34:56\">2007-01-04T01:34:56</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Haven't tried it in FF 2.0.0.1, but older versions filtered out bookmarklets from the feed due to the JS.</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221090502\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://db79.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d527b871fc097b317f7993bdac0d349e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://db79.com\">Shawn Medero</a>\r\n                </div>\r\n                <a href=\"#comment-221090502\" class=\"permalink\"><time datetime=\"2007-01-04T05:03:17\">2007-01-04T05:03:17</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>James is right about Firefox - I wanted to have a feed of bookmarklets as a live bookmark that people at work would subscribe to for a certain project but Firefox 1.x filtered out any Javascript. Going back to unstable Firefox (it worked up until 0.9 or something) didn't seem like a great idea so I canned it. Kinda stinks because it would be really useful for internal usage where security shouldn't be an issue.</p></div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2007",
    "path": "2007/01/03/rss-feeds-of-bookmarklets",
    "prevPostPath": "2007/01/12/the-iphone-will-not-be-your-new-mobile-computer",
    "nextPostPath": "2007/01/03/the-auction-house-is-the-game"
  },
  {
    "comments_archived": true,
    "date": "2006-10-31T21:46:40.000Z",
    "layout": "post",
    "tags": [
      "webdev",
      "js",
      "outliners",
      "outlining",
      "javascript",
      "dhtml",
      "yui"
    ],
    "title": "Event Delegation based DHTML Drag and Drop?",
    "wordpress_id": 1011,
    "wordpress_slug": "event-delegation-based-dhtml-drag-and-drop",
    "wordpress_url": "http://decafbad.com/blog/2006/10/31/event-delegation-based-dhtml-drag-and-drop",
    "year": "2006",
    "month": "10",
    "day": "31",
    "isDir": false,
    "slug": "event-delegation-based-dhtml-drag-and-drop",
    "postName": "2006-10-31-event-delegation-based-dhtml-drag-and-drop",
    "html": "<p>So, as the urge to tinker rises again, I&#39;ve started playing with <a href=\"http://developer.yahoo.com/yui/\">YUI</a> and cracked open some <a href=\"http://decafbad.com/trac/wiki/XoxoOutliner\">XoxoOutliner</a> code again.  One of the things that struck me like a bolt from the blue recently is the notion of <a href=\"http://icant.co.uk/sandbox/eventdelegation/\">event delegation</a>.  For the most part, I&#39;ve treated event bubbling as a nuisance, except for where it came in handy in keyboard input handling.  But avoiding the need to individually track events on every list element on the page via instantiated objects and methods is <em>hot</em> and <em>forehead-slappingly obvious</em> once you&#39;ve seen it working.  Just implement one set of event handlers on the outline root element (ie. UL or OL), and do the right thing as events come in from the list child elements.</p>\n<p>Thus, while I can do outline node expand/collapse with ease, my goal is to implement an <a href=\"http://icant.co.uk/sandbox/eventdelegation/\">event delegation</a> based approach to dragging outline nodes around.  Apropos of that, I&#39;ve been poking at <a href=\"http://yuiblog.com/sandbox/yui/v0114/examples/event/delegation.php\">how event delegation it works in YUI</a>.  While there&#39;s nothing much special about it in general, I&#39;ve run into a bit of a snag when it comes to drag-and-drop.</p>\n<p>See, YUI comes with a <a href=\"http://developer.yahoo.com/yui/dragdrop/\">rather nice drag-and-drop abstraction</a> that I&#39;d like to use.  That abstraction, however, requires the instantiation of lots of little objects - one per outline node.  Definitely not delegation-based: The problem is that I&#39;ll be adding and removing outline nodes at whim throughout the lifetime of the page, which would require lots of care to ensure that I&#39;m maintaining drag-and-drop wrapper objects.  I&#39;ve done that a bit in <a href=\"http://decafbad.com/trac/wiki/XoxoOutliner\">XoxoOutliner</a>; it sucks.</p>\n<p>So, I was able to build part of a delegation-based drag tracker from scratch.  I&#39;m sad to lose the other niceties that the YUI DnD offers, but it works.  The problem now, though, is the <em>drop</em> part of the equation.  I can drag elements around the page until my heart&#39;s content, but I can never quite tell in what context I&#39;ve dropped it.</p>\n<p>I poured through the source code for the YUI DnD implementation, as well as the implementation of a few other JS frameworks&#39; DnD offerings.  The general solution seems to be calculating and caching the page coordinate regions for each element relevant in the drop operation.  In my case, that usually includes every outline node on the page.  That&#39;s easy when you have lots of little objects instantiated - you just iterate through them and match up regions with the coordinates where the drag stopped.  But, part of my win with event delegation was that I don&#39;t have to maintain a pile of objects.</p>\n<p>Oh yeah, and did I mention that I don&#39;t assign IDs to all the little list items making up my outline?  And that I don&#39;t particularly feel like doing so?  That also throws a monkey wrench in the YUI DnD paradigm.</p>\n<p>The only idea I have so far is that I need to at least build a cache mapping regions to outline nodes, and keep it fairly well maintained.  That should be lighterweight than a fleet of DOM event wrappers, but still annoying.  I could trigger a cache refresh when a drag first starts, but that will probably drag down UI response.  I could trigger it whenever the outline changes, but that&#39;s just moving the burden.  And then, who knows how I&#39;ll map ID-less elements to their respective regions, while ensuring I stay clear of memory leaks.  That&#39;s still semi-voodoo to me, and I feel ashamed of that.</p>\n<p>Eh, maybe it won&#39;t be as bad as I think.  But, to anyone who understands what I just spewed:  Any ideas?</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221083066\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2d870e8df3af0d62fa636b336b17cd60&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Nick</a>\n</div>\n<a href=\"#comment-221083066\" class=\"permalink\"><time datetime=\"2006-11-01T00:19:27\">2006-11-01T00:19:27</time></a>\n</div>\n<div class=\"content\"><p>You know, Marty and I were talking tonight about how some of your posts make NO sense to us.  She even said \"it's like he's talking another fucking language\".</p>\n<p>Damn Programmers!!</p>\n<p>--nick</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083067\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://gandrew.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=de0d80e531fef9095048375a247d1149&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://gandrew.com\">Gareth Andrew</a>\n</div>\n<a href=\"#comment-221083067\" class=\"permalink\"><time datetime=\"2006-11-01T18:57:21\">2006-11-01T18:57:21</time></a>\n</div>\n<div class=\"content\"><p>I'm sure I've missed something obvious - why can't you simply use the same event delegation approach on the mouseUp event?  getTarget should return the node you've dropped on, what else do you need?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083074\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221083074\" class=\"permalink\"><time datetime=\"2006-11-01T19:18:52\">2006-11-01T19:18:52</time></a>\n</div>\n<div class=\"content\"><p>Gareth: Yup, the issue I have with the mouseUp is that getTarget gives me what was under the mouse when I let go of the button - namely, the element I've been dragging around, not the element under the thing being dragged.  In addition, for user feedback <em>during</em> the drag (ie. at mouseMove time), I want to know what's under the dragged element - so I can highlight the potential landing spot, etc.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083075\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.fluffy.co.uk/stediting/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a660afb8f1f22ce1b03ad3b532aa05b5&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.fluffy.co.uk/stediting/\">Ben</a>\n</div>\n<a href=\"#comment-221083075\" class=\"permalink\"><time datetime=\"2006-11-02T13:10:53\">2006-11-02T13:10:53</time></a>\n</div>\n<div class=\"content\"><p>I presume the problem is that, given a point on the screen, you want to find exactly what DOM element is beneath it.</p>\n<p>I found a solution for this in my proof-of-concept structured editor http://www.fluffy.co.uk/stediting/ -- you need to know where the mouse was clicked to insert the caret.</p>\n<p>It might be a start anyway.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083078\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.gibberish.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d78a376f93e23dd093abe8d280198ebd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.gibberish.com\">misuba</a>\n</div>\n<a href=\"#comment-221083078\" class=\"permalink\"><time datetime=\"2006-11-06T02:40:19\">2006-11-06T02:40:19</time></a>\n</div>\n<div class=\"content\"><p>I think the dragdrop stuff in scriptaculous would get you most of this... at least, it is good about draggable elements having handles you can specify (e.g. child elements of the thing you want to drag), and flexible about what sorts of targets you can land on.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083084\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221083084\" class=\"permalink\"><time datetime=\"2006-11-06T19:06:03\">2006-11-06T19:06:03</time></a>\n</div>\n<div class=\"content\"><p>misuba: Nope, the Scriptaculous approach gives me problems too.  The first is that I don't like Prototype, unless they've stopped messing with Object.prototype since I last checked.  The second is that DnD in Scriptaculous involves juggling lots of little objects ilke most other DnD implementations I've found.  When I have an outline of 100's to 1000's of items, that really blows.  I think I've got an approach working now that's significantly lighter weight.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083085\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.gibberish.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d78a376f93e23dd093abe8d280198ebd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.gibberish.com\">misuba</a>\n</div>\n<a href=\"#comment-221083085\" class=\"permalink\"><time datetime=\"2006-11-06T22:26:55\">2006-11-06T22:26:55</time></a>\n</div>\n<div class=\"content\"><p>I'm interested to see your approach. (FWIW, Proto hasn't touched Object.prototype for a couple of versions now.)</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083086\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://javascriptmvc.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=10b3282aac613831755e42ac74acbc41&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://javascriptmvc.com\">Justin Meyer</a>\n</div>\n<a href=\"#comment-221083086\" class=\"permalink\"><time datetime=\"2008-05-31T07:43:52\">2008-05-31T07:43:52</time></a>\n</div>\n<div class=\"content\"><p>I am working on the exact same issue for JavaScriptMVC.  If you haven't seen JavaScriptMVC, check out its trunk.  In the controller2 plugin, you'll find a really nice event delegation library.</p>\n<p>I've only thought of 1 way to do event delegation drops.  It's crazy, but it might work.</p>\n<p>First, style Drags so their z-Index is LOWER than the Drops.  You want your mouse to hit the droppable areas.</p>\n<p>Once a droppable is moused over by dragging a drag to it, it creates a transparent element in the exact same position as the Droppable.  It also lowers the droppable z-Index.  This gives the appearance that the draggable is over the droppable.</p>\n<p>To simulate movement, the transparent droppable's mouseovers are sent to the draggable.</p>\n<p>On mousing out of the transparent Droppable, it sets everything back to normal.</p>\n<p>I haven't tried this yet.  The biggest issue I see is that when you grab a draggable in the middle, half of it will be behind the droppable until the mouseover happens.  This isn't ideal, but maybe there is something that can be done about that.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221083088\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8f18d2579d5c8f2fb2a79c09a9234e6e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Batiste</a>\n</div>\n<a href=\"#comment-221083088\" class=\"permalink\"><time datetime=\"2009-01-20T10:06:54\">2009-01-20T10:06:54</time></a>\n</div>\n<div class=\"content\"><p>A jQuery solution for Drag and Drop with event delegation :</p>\n<p>http://batiste.dosimple.ch/blog/posts/2008-05-18-1/jquery-drag-and-drop-and-resize-event-delegation.html</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "So, as the urge to tinker rises again, I've started playing with [YUI][] and cracked open some [XoxoOutliner][] code again.  One of the things that struck me like a bolt from the blue recently is the notion of [event delegation][ed].  For the most part, I've treated event bubbling as a nuisance, except for where it came in handy in keyboard input handling.  But avoiding the need to individually track events on every list element on the page via instantiated objects and methods is *hot* and *forehead-slappingly obvious* once you've seen it working.  Just implement one set of event handlers on the outline root element (ie. UL or OL), and do the right thing as events come in from the list child elements.\r\n\r\nThus, while I can do outline node expand/collapse with ease, my goal is to implement an [event delegation][ed] based approach to dragging outline nodes around.  Apropos of that, I've been poking at [how event delegation it works in YUI][edy].  While there's nothing much special about it in general, I've run into a bit of a snag when it comes to drag-and-drop.\r\n\r\nSee, YUI comes with a [rather nice drag-and-drop abstraction][yuidd] that I'd like to use.  That abstraction, however, requires the instantiation of lots of little objects - one per outline node.  Definitely not delegation-based: The problem is that I'll be adding and removing outline nodes at whim throughout the lifetime of the page, which would require lots of care to ensure that I'm maintaining drag-and-drop wrapper objects.  I've done that a bit in [XoxoOutliner][]; it sucks.\r\n\r\nSo, I was able to build part of a delegation-based drag tracker from scratch.  I'm sad to lose the other niceties that the YUI DnD offers, but it works.  The problem now, though, is the *drop* part of the equation.  I can drag elements around the page until my heart's content, but I can never quite tell in what context I've dropped it.\r\n\r\nI poured through the source code for the YUI DnD implementation, as well as the implementation of a few other JS frameworks' DnD offerings.  The general solution seems to be calculating and caching the page coordinate regions for each element relevant in the drop operation.  In my case, that usually includes every outline node on the page.  That's easy when you have lots of little objects instantiated - you just iterate through them and match up regions with the coordinates where the drag stopped.  But, part of my win with event delegation was that I don't have to maintain a pile of objects.\r\n\r\nOh yeah, and did I mention that I don't assign IDs to all the little list items making up my outline?  And that I don't particularly feel like doing so?  That also throws a monkey wrench in the YUI DnD paradigm.\r\n\r\nThe only idea I have so far is that I need to at least build a cache mapping regions to outline nodes, and keep it fairly well maintained.  That should be lighterweight than a fleet of DOM event wrappers, but still annoying.  I could trigger a cache refresh when a drag first starts, but that will probably drag down UI response.  I could trigger it whenever the outline changes, but that's just moving the burden.  And then, who knows how I'll map ID-less elements to their respective regions, while ensuring I stay clear of memory leaks.  That's still semi-voodoo to me, and I feel ashamed of that.\r\n\r\nEh, maybe it won't be as bad as I think.  But, to anyone who understands what I just spewed:  Any ideas?\r\n\r\n[yui]: http://developer.yahoo.com/yui/\r\n[xoxooutliner]: http://decafbad.com/trac/wiki/XoxoOutliner\r\n[ed]: http://icant.co.uk/sandbox/eventdelegation/\r\n[edy]: http://yuiblog.com/sandbox/yui/v0114/examples/event/delegation.php\r\n[yuidd]: http://developer.yahoo.com/yui/dragdrop/\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221083066\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2d870e8df3af0d62fa636b336b17cd60&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Nick</a>\n                </div>\n                <a href=\"#comment-221083066\" class=\"permalink\"><time datetime=\"2006-11-01T00:19:27\">2006-11-01T00:19:27</time></a>\n            </div>\n            <div class=\"content\"><p>You know, Marty and I were talking tonight about how some of your posts make NO sense to us.  She even said \"it's like he's talking another fucking language\".</p>\n\n<p>Damn Programmers!!</p>\n\n<p>--nick</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083067\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://gandrew.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=de0d80e531fef9095048375a247d1149&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://gandrew.com\">Gareth Andrew</a>\n                </div>\n                <a href=\"#comment-221083067\" class=\"permalink\"><time datetime=\"2006-11-01T18:57:21\">2006-11-01T18:57:21</time></a>\n            </div>\n            <div class=\"content\"><p>I'm sure I've missed something obvious - why can't you simply use the same event delegation approach on the mouseUp event?  getTarget should return the node you've dropped on, what else do you need?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083074\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221083074\" class=\"permalink\"><time datetime=\"2006-11-01T19:18:52\">2006-11-01T19:18:52</time></a>\n            </div>\n            <div class=\"content\"><p>Gareth: Yup, the issue I have with the mouseUp is that getTarget gives me what was under the mouse when I let go of the button - namely, the element I've been dragging around, not the element under the thing being dragged.  In addition, for user feedback <em>during</em> the drag (ie. at mouseMove time), I want to know what's under the dragged element - so I can highlight the potential landing spot, etc.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083075\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.fluffy.co.uk/stediting/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a660afb8f1f22ce1b03ad3b532aa05b5&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.fluffy.co.uk/stediting/\">Ben</a>\n                </div>\n                <a href=\"#comment-221083075\" class=\"permalink\"><time datetime=\"2006-11-02T13:10:53\">2006-11-02T13:10:53</time></a>\n            </div>\n            <div class=\"content\"><p>I presume the problem is that, given a point on the screen, you want to find exactly what DOM element is beneath it.</p>\n\n<p>I found a solution for this in my proof-of-concept structured editor http://www.fluffy.co.uk/stediting/ -- you need to know where the mouse was clicked to insert the caret.</p>\n\n<p>It might be a start anyway.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083078\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.gibberish.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d78a376f93e23dd093abe8d280198ebd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.gibberish.com\">misuba</a>\n                </div>\n                <a href=\"#comment-221083078\" class=\"permalink\"><time datetime=\"2006-11-06T02:40:19\">2006-11-06T02:40:19</time></a>\n            </div>\n            <div class=\"content\"><p>I think the dragdrop stuff in scriptaculous would get you most of this... at least, it is good about draggable elements having handles you can specify (e.g. child elements of the thing you want to drag), and flexible about what sorts of targets you can land on.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083084\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221083084\" class=\"permalink\"><time datetime=\"2006-11-06T19:06:03\">2006-11-06T19:06:03</time></a>\n            </div>\n            <div class=\"content\"><p>misuba: Nope, the Scriptaculous approach gives me problems too.  The first is that I don't like Prototype, unless they've stopped messing with Object.prototype since I last checked.  The second is that DnD in Scriptaculous involves juggling lots of little objects ilke most other DnD implementations I've found.  When I have an outline of 100's to 1000's of items, that really blows.  I think I've got an approach working now that's significantly lighter weight.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083085\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.gibberish.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=d78a376f93e23dd093abe8d280198ebd&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.gibberish.com\">misuba</a>\n                </div>\n                <a href=\"#comment-221083085\" class=\"permalink\"><time datetime=\"2006-11-06T22:26:55\">2006-11-06T22:26:55</time></a>\n            </div>\n            <div class=\"content\"><p>I'm interested to see your approach. (FWIW, Proto hasn't touched Object.prototype for a couple of versions now.)</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083086\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://javascriptmvc.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=10b3282aac613831755e42ac74acbc41&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://javascriptmvc.com\">Justin Meyer</a>\n                </div>\n                <a href=\"#comment-221083086\" class=\"permalink\"><time datetime=\"2008-05-31T07:43:52\">2008-05-31T07:43:52</time></a>\n            </div>\n            <div class=\"content\"><p>I am working on the exact same issue for JavaScriptMVC.  If you haven't seen JavaScriptMVC, check out its trunk.  In the controller2 plugin, you'll find a really nice event delegation library.</p>\n\n<p>I've only thought of 1 way to do event delegation drops.  It's crazy, but it might work.</p>\n\n<p>First, style Drags so their z-Index is LOWER than the Drops.  You want your mouse to hit the droppable areas.</p>\n\n<p>Once a droppable is moused over by dragging a drag to it, it creates a transparent element in the exact same position as the Droppable.  It also lowers the droppable z-Index.  This gives the appearance that the draggable is over the droppable.</p>\n\n<p>To simulate movement, the transparent droppable's mouseovers are sent to the draggable.</p>\n\n<p>On mousing out of the transparent Droppable, it sets everything back to normal.</p>\n\n<p>I haven't tried this yet.  The biggest issue I see is that when you grab a draggable in the middle, half of it will be behind the droppable until the mouseover happens.  This isn't ideal, but maybe there is something that can be done about that.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221083088\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8f18d2579d5c8f2fb2a79c09a9234e6e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"\">Batiste</a>\n                </div>\n                <a href=\"#comment-221083088\" class=\"permalink\"><time datetime=\"2009-01-20T10:06:54\">2009-01-20T10:06:54</time></a>\n            </div>\n            <div class=\"content\"><p>A jQuery solution for Drag and Drop with event delegation :</p>\n\n<p>http://batiste.dosimple.ch/blog/posts/2008-05-18-1/jquery-drag-and-drop-and-resize-event-delegation.html</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/10/31/event-delegation-based-dhtml-drag-and-drop",
    "prevPostPath": "2006/11/02/firefox-20-breaks-client-side-xsl-for-rss-and-atom-feeds",
    "nextPostPath": "2006/10/29/microsummaries-and-content-type-mysteries"
  },
  {
    "comments_archived": true,
    "date": "2006-09-06T19:57:42.000Z",
    "layout": "post",
    "tags": [
      "ajax",
      "webdev",
      "hyperscope",
      "engelbart",
      "augment",
      "js",
      "outliners"
    ],
    "title": "Futility in alternate pasts and futures in human augmentation",
    "wordpress_id": 992,
    "wordpress_slug": "futility-in-alternate-pasts-and-futures-in-human-augmentation",
    "wordpress_url": "http://decafbad.com/blog/2006/09/06/futility-in-alternate-pasts-and-futures-in-human-augmentation",
    "year": "2006",
    "month": "09",
    "day": "06",
    "isDir": false,
    "slug": "futility-in-alternate-pasts-and-futures-in-human-augmentation",
    "postName": "2006-09-06-futility-in-alternate-pasts-and-futures-in-human-augmentation",
    "html": "<blockquote cite=\"http://www.adaptivepath.com/blog/2006/09/05/the-futility-of-designing-for-an-alternate-past/\">While it’s great to draw inspiration and ideas from the past, recreating the past in the hope that it becomes the future seems like a futile idea. Does anyone really want to return to a command-line interface to manipulate documents? It’s designing for a past that never happened, one where we all became computer scientists and enjoyed manipulating documents via arcane commands.<br />...<br />A better, more productive, use of time would have been to say, what inspiration can still be gained from Engelbart’s ideas? There’s still a lot to be gleaned from his 1962 (!) paper [Augmenting Human Intellect](http://www.bootstrap.org/augdocs/friedewald030402/augmentinghumanintellect/ahi62index.html). How might some of his thoughts on collaborative intelligence be implemented in our world now, in 2006, within the technology we have now? That’s the question waiting to be solved.</blockquote><div class=\"quotesource\">Source: <a href=\"http://www.adaptivepath.com/blog/2006/09/05/the-futility-of-designing-for-an-alternate-past/\">adaptive path » blog » blog archive » The Futility of Designing for an Alternate Past</a></div>\n\n<p>Allow me to engage in some Devil&#39;s Advocacy here - although I really am an Engelbart sympathizer:  </p>\n<p>Consider a program like Microsoft Word, with all its ribbons and toolbars and menus and animated assistance.  When you first started working with it, you probably spent time navigating these visual and guided parts of the user interface to get your job done.  But, after awhile, you probably discovered keyboard shortcuts and accellerators - CTRL-s to save, for instance.  These have likely been invaluable in speeding up your work and helping the application get out of your way.  So, having reached this point, do you ever really have a use for the &quot;user friendly&quot; bits anymore?  Or, have you graduated to &quot;manipulating documents via arcane commands&quot;?</p>\n<p>What if this application had never sugar-coated things and had instead optimized for efficiency and ergonomics in daily expert operation, trading an &quot;intuitive interface&quot; for an offer to incrementally train on its necessarily complex functionality?  After awhile, you&#39;ll have it all down, and be ready to shed the training wheels.</p>\n<p>What if - instead of a maze of menus and toolbar icons - your mouse just had dozens of easily-accessible buttons?  You&#39;re used to only having a left and a right click from which to choose.  If you&#39;ve splurged, you might have the more expansive choices offered by a fancier pointing device.  But, what if you had a chording keyboard under your off-mouse hand, offering an order of magnitude more mouse pointer actions?  </p>\n<p>For example, how about a &quot;delete word&quot; mouse button?  Or a &quot;copy sentence&quot; button?  Or maybe even a &quot;jump to the selected link with a custom view filter&quot; button?  The important part is that these commands act <strong>immediately</strong>, <em>just like a mouse button</em>, upon whatever&#39;s under the pointer.  There&#39;s no left-click then CTRL-x to Cut - no, you just point at a word, and say &quot;cut that&quot;.  There&#39;s a lot of power and efficiency here.</p>\n<p>These &quot;what if&quot; scenarios are not just wishful thinking, though.  They&#39;re what Doug Engelbart and crew implemented.  These are things I picked up after being invited to try a hands-on self-guided tour of <a href=\"http://codinginparadise.org/weblog/2006/03/new-screencast-of-douglas-engelbarts.html\">Augment</a>.  I only wish I&#39;d had a chording keyboard to get the full experience.  The interface was like a mouse-heavy <a href=\"http://www.vim.org/\">VIM</a>, with verb-object command patterns and structured document interactions.  (Or, rather, <a href=\"http://www.vim.org/\">VIM</a> is like a mouse- and outline-deficient derivation of Augment.)  </p>\n<p>The basic core of this facet of <a href=\"http://codinginparadise.org/weblog/2006/03/new-screencast-of-douglas-engelbarts.html\">Augment</a> is this:  Computers are powerful tools with great potential to augment human intellect.  As such, they offer a lot of complex functionality.  But, human beings are trainable, and can assimilate this functionality.  Once assimilated, it&#39;s best to squeeze out all the performance you can.  You don&#39;t see today&#39;s degree of computer &quot;user friendliness&quot; in chainsaws, tanks, jack-hammers, semi-trucks, or fighter jets.  These things are necessarily complex and require training.  Why should the most powerful of intelligence enhancement tools offered by computers be any different?  Of course, you generally won&#39;t lose a limb to a computer, but you might be mentally impaired or lose valuable work in the process.</p>\n<p>This is, I think, one of the still-relevant central facets of Doug Engelbart&#39;s ideas that could use some re-examination today.  It could just be because I&#39;m an übernerd who thinks it&#39;s fun to self-train on things like <a href=\"http://www.vim.org/\">VIM</a> and <a href=\"http://codinginparadise.org/weblog/2006/03/new-screencast-of-douglas-engelbarts.html\">Augment</a>, but I also think that there&#39;s a lot of potential to be unlocked once you clear away expectations of &quot;intuitive interfaces&quot; that are <a href=\"http://www.greenend.org.uk/rjk/2002/08/nipple.html\">decidedly not nipples</a>.  </p>\n<p>And, since I&#39;ve <a href=\"http://decafbad.com/blog/2006/09/06/world-of-warcraft-is-my-world-of-warcraft\">admitted my recently acquired semi-addiction</a>, consider World of Warcraft as an expert application.  Advanced players could never succeed by navigating a complex yet &quot;friendly&quot; UI to invoke various spells and skills and in-game actions.  Just take a look at some of the customizations and UI revisions being offered at <a href=\"http://ui.worldofwar.net/\">this site</a>.  Some configurations of this game smack me as eerily similar to the principles of Augment.  In fact, just this weekend, I was considering blowing the dust off <a href=\"http://www.avault.com/hardware/getreview.asp?review=msstratcom\">this keyset controller</a> I used to use with Everquest, years ago.</p>\n<p>Then again, maybe it&#39;s a matter of intensity.  Coordinating with a 40-player guild to slay something from the molten bowels of the earth is a slightly different activity than composing a memo or even a few-dozen-page report.  On the other hand, I really would&#39;ve liked to strip away most of the Word interface while writing my <a href=\"#text-2\">two books</a>.  And someday, who&#39;s to say that online interpersonal collaboration in the general case won&#39;t more closely resemble a World of Warcraft raid?  Having <a href=\"http://decafbad.vox.com/library/post/reading-vernor-vinges-new-novel.html\">just read</a> <a href=\"http://www.amazon.com/exec/obidos/ASIN/0312856849/0xdecafbad01-20\">Vernor Vinge&#39;s latest book Rainbows End</a>, he makes a lot of intelligence augmentation and collaboration tasks look just like WoW.</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221085202\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://webseitz.fluxent.com/wiki\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8157a5907b244071cda98ba5aa7a9635&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://webseitz.fluxent.com/wiki\">Bill Seitz</a>\n</div>\n<a href=\"#comment-221085202\" class=\"permalink\"><time datetime=\"2006-09-06T21:58:26\">2006-09-06T21:58:26</time></a>\n</div>\n<div class=\"content\"><p>The fighter-jet metaphor is interesting. Obviously a fighter has a narrower scope/focus than the general computer. But perhaps there's a narrower technique/practice of intelligence augmentation that warrants a more specialized/locally-optimized interface design.</p>\n<p>But then maybe the Engelbart work isn't focused <em>enough</em> on a particular context and associated method-of-use?</p>\n<p>To relate this to a similar software offering, how important are the specific Compendium features compared to the process of IBIS?</p>\n<p>And a big factor in the ChangeFunction is how critical the problem/pain is being solved by the new offering. Can you convince people that there will be a pay-back for learning to use HyperScope that compensates for the investment, compared to other uses of your time?</p>\n<p>Let's put it this way: if you were picking between 2 start-ups to invest in, how much weight would you associate with 1 of the teams using HyperScope? How does this compare to betting on a dogfight where 1 party has an F-15 and the other a Cessna?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221085203\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.synaesmedia.net\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=248a3c4ba8f2972427222d46954f9c1c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.synaesmedia.net\">phil jones</a>\n</div>\n<a href=\"#comment-221085203\" class=\"permalink\"><time datetime=\"2006-09-07T22:22:40\">2006-09-07T22:22:40</time></a>\n</div>\n<div class=\"content\"><p>Very nice post. </p>\n<p>And Bill's comments too. They remind me of the LEO editor for Python which was always touted as having great productivity benefits if only your team would undergo the three month training required to use it properly. Not sure if it ever took off or could. But there's something nice about the idea that LEO empowered programmers could outperform the norm.</p>\n<p>I'm convinced that there are certainly productivity improvements available to power-users, beyond anything currently dreamed of, once we step away from the assumption that \"ease of use\" equals \"1-to-1 correspondance between functionality and UI objects\".</p>\n<p>As every nerd knows, real (interesting) productivity, comes from higher levels of abstraction. And maybe what's really important about the outliner tradition (from HyperScope to MORE / UserLand / OPML to LEO) is that it remains loyal to this notion. When you collapse a block of text and ideas down to a single-line, you are essentially abstracting away from that detail and working with the higher-level description. </p>\n<p>OTOH, the Xerox Parc tradition of the GUI and direct manipulation, lost this core ideal. (At least as it was spread via Apple and Microsoft, although obviously you can probably do all sorts of powerful abstractions via a Smalltalk interface)</p>\n<p>I'm pretty sure that this insight is general. The really interesting innovations beyond HyperScope are going to be new ways of giving the power-users yet more abstract ways of manipulating their information. Either by folding more of it together as complex aggrogates, or allowing large-scale cross-cutting processing. (Maybe style-sheets in Word are the only other surviving popular example.)</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221085205\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://harold.hotelling.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=5183bee2961385af94a500759bb7a372&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://harold.hotelling.net/\">Harold</a>\n</div>\n<a href=\"#comment-221085205\" class=\"permalink\"><time datetime=\"2006-09-08T22:45:31\">2006-09-08T22:45:31</time></a>\n</div>\n<div class=\"content\"><p>Y'know - this is what it is like to be an Emacs user. I've come to the opinion that the set of document formats you can work with, and the set of commands you can perform on them, should be somewhat-to-completely separate from the UI.</p>\n<p>That way, you can have a learners/beginners UI to get people up to speed, then they graduate to the intermediate UI that assumes knowledge of things like C-s, C-o, C-q etc. And of course, if an application follows strong UI design guidelines, experienced computer users might be able to start a new program in the intermediate UI. Gosh! C-o opens a file in Excel too!</p>\n<p>Then, I think there should be a choice of expert-level UIs. For example, VIM and Emacs have both grown together (VIM started small, light and fast, and Emacs stared with everything AND the kitchen sink), so that they both represent reasonable choices for a power-user's text editor.</p>\n<p>This is also one of the problems that web developers are working on (or working around). Google and others have started introducing intermediate level UI features in web apps (like shortcut keys), but try building a site that looks and feels like WoW...</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221085206\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://mozdawg.blogspot.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2c2c2c8f9e42a145f54f257111c6e84d&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://mozdawg.blogspot.com\">Ben Tremblay</a>\n</div>\n<a href=\"#comment-221085206\" class=\"permalink\"><time datetime=\"2006-09-12T20:35:09\">2006-09-12T20:35:09</time></a>\n</div>\n<div class=\"content\"><p>What still catches me with systems like Augment (I would call Neuberg's new incarnation \"hyperScope\".) is precisely the mousing.</p>\n<p>The war is long lost but I recall with fond pleasure how I blew a Word user away by using WP5.2 ... ^F6-P <em>boom</em> And when I rolled out the functions I'd cobbled together with WP's lovely macro language? Sonic boom. The key in that situation was that I had a large number of unique tasks and a small very number of tasks carrying a huge workload (MILSPEC change management). So it was ideal for hot-keyed macros: like shooting fish in a barrel.</p>\n<p>For one thing, unless I'm reading passively or doing some flavour of CAD my hands are nowhere near the mouse. Or, to invert that, when I'm keyboarding I have to routinely suppress my resentment with reach, swivel, click, drag, select, click, select ... interminable menus and options bla-bla-blah, and nowhere muscle memory comes into play. But even with that aside, to have to right click and then select Delete from a menu /after/ having dragged to select a block ... I can outshoot that action stream using keystrokes anyday, if the app allowed me to.</p>\n<p>I don't disagree with the fundamental insight ... far from it. But we've just barely begun to implement the foundational cognitive ergonomics. (I was gratified to see in one thread that Brad explicated his having moved Help to the upper right ... cuz that's where it is most often. When it works it works cuz it works. Tradition is sometimes/often arbitrary; life's like that and we should sometimes just suck it up.)</p>\n<p>Harold's point about expert users is, I think, key. It's merely foolish to impose a system that makes good use of habituation onto a newly arrived visitor. I'm quite sure that attentive study shows a clustering or quantum of user intention and expertise ... until and unless we contrive some seamless continuum (a terrible distraction inspired by naive perfectionism) we should focus on differentiating expters from n00bs (no diss) and serve both well. \"Intermediate level\" sounds quite appropriate ... so long as this isn't just a maelstrum of fish/foul goat/sheep confounds.</p>\n<p>Alternatively we can always fall back on the old TRW concept of making people think more like machines. There might be funding for that.\n;-P</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221085208\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://mozdawg.blogspot.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2c2c2c8f9e42a145f54f257111c6e84d&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://mozdawg.blogspot.com\">Ben Tremblay</a>\n</div>\n<a href=\"#comment-221085208\" class=\"permalink\"><time datetime=\"2006-09-12T20:39:47\">2006-09-12T20:39:47</time></a>\n</div>\n<div class=\"content\"><p>Muscle memory just jumped up and reminded me of this: in a situation where I was doing Print Preview a gazillion times a day Shift-F7 6 was as effortless as breathing. <em>snap</em></p></div>\n</li>\n<li class=\"comment\" id=\"comment-221085209\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://vielmetti.typepad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e377f3e2140297d32460ae9a4b38ff98&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://vielmetti.typepad.com\">Edward Vielmetti</a>\n</div>\n<a href=\"#comment-221085209\" class=\"permalink\"><time datetime=\"2006-10-18T06:00:17\">2006-10-18T06:00:17</time></a>\n</div>\n<div class=\"content\"><p>I can speak as a former Emacs user and coder that the only reason I gave it up for vi was that it hurt my hands too much to make all of those funky keyboard chords, and it started to hurt my head to remember all of the time-saving things I had built.</p>\n<p>Classically there's a tradeoff between the ease of typing something and the amount of think time you have to put into remembering what to type.</p>\n<p>One thing I am annoyed by on too many blogs is the inability to tab from the comment field to the \"submit\" button, which forces a mouse event and a scroll event.</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "<blockquote cite=\"http://www.adaptivepath.com/blog/2006/09/05/the-futility-of-designing-for-an-alternate-past/\">While it’s great to draw inspiration and ideas from the past, recreating the past in the hope that it becomes the future seems like a futile idea. Does anyone really want to return to a command-line interface to manipulate documents? It’s designing for a past that never happened, one where we all became computer scientists and enjoyed manipulating documents via arcane commands.<br />...<br />A better, more productive, use of time would have been to say, what inspiration can still be gained from Engelbart’s ideas? There’s still a lot to be gleaned from his 1962 (!) paper [Augmenting Human Intellect](http://www.bootstrap.org/augdocs/friedewald030402/augmentinghumanintellect/ahi62index.html). How might some of his thoughts on collaborative intelligence be implemented in our world now, in 2006, within the technology we have now? That’s the question waiting to be solved.</blockquote><div class=\"quotesource\">Source: <a href=\"http://www.adaptivepath.com/blog/2006/09/05/the-futility-of-designing-for-an-alternate-past/\">adaptive path » blog » blog archive » The Futility of Designing for an Alternate Past</a></div>\r\n\r\nAllow me to engage in some Devil's Advocacy here - although I really am an Engelbart sympathizer:  \r\n\r\nConsider a program like Microsoft Word, with all its ribbons and toolbars and menus and animated assistance.  When you first started working with it, you probably spent time navigating these visual and guided parts of the user interface to get your job done.  But, after awhile, you probably discovered keyboard shortcuts and accellerators - CTRL-s to save, for instance.  These have likely been invaluable in speeding up your work and helping the application get out of your way.  So, having reached this point, do you ever really have a use for the \"user friendly\" bits anymore?  Or, have you graduated to \"manipulating documents via arcane commands\"?\r\n\r\nWhat if this application had never sugar-coated things and had instead optimized for efficiency and ergonomics in daily expert operation, trading an \"intuitive interface\" for an offer to incrementally train on its necessarily complex functionality?  After awhile, you'll have it all down, and be ready to shed the training wheels.\r\n\r\nWhat if - instead of a maze of menus and toolbar icons - your mouse just had dozens of easily-accessible buttons?  You're used to only having a left and a right click from which to choose.  If you've splurged, you might have the more expansive choices offered by a fancier pointing device.  But, what if you had a chording keyboard under your off-mouse hand, offering an order of magnitude more mouse pointer actions?  \r\n\r\nFor example, how about a \"delete word\" mouse button?  Or a \"copy sentence\" button?  Or maybe even a \"jump to the selected link with a custom view filter\" button?  The important part is that these commands act **immediately**, *just like a mouse button*, upon whatever's under the pointer.  There's no left-click then CTRL-x to Cut - no, you just point at a word, and say \"cut that\".  There's a lot of power and efficiency here.\r\n\r\nThese \"what if\" scenarios are not just wishful thinking, though.  They're what Doug Engelbart and crew implemented.  These are things I picked up after being invited to try a hands-on self-guided tour of [Augment][].  I only wish I'd had a chording keyboard to get the full experience.  The interface was like a mouse-heavy [VIM][], with verb-object command patterns and structured document interactions.  (Or, rather, [VIM][] is like a mouse- and outline-deficient derivation of Augment.)  \r\n\r\nThe basic core of this facet of [Augment][] is this:  Computers are powerful tools with great potential to augment human intellect.  As such, they offer a lot of complex functionality.  But, human beings are trainable, and can assimilate this functionality.  Once assimilated, it's best to squeeze out all the performance you can.  You don't see today's degree of computer \"user friendliness\" in chainsaws, tanks, jack-hammers, semi-trucks, or fighter jets.  These things are necessarily complex and require training.  Why should the most powerful of intelligence enhancement tools offered by computers be any different?  Of course, you generally won't lose a limb to a computer, but you might be mentally impaired or lose valuable work in the process.\r\n\r\nThis is, I think, one of the still-relevant central facets of Doug Engelbart's ideas that could use some re-examination today.  It could just be because I'm an übernerd who thinks it's fun to self-train on things like [VIM][] and [Augment][], but I also think that there's a lot of potential to be unlocked once you clear away expectations of \"intuitive interfaces\" that are [decidedly not nipples][nip].  \r\n\r\nAnd, since I've [admitted my recently acquired semi-addiction][wow], consider World of Warcraft as an expert application.  Advanced players could never succeed by navigating a complex yet \"friendly\" UI to invoke various spells and skills and in-game actions.  Just take a look at some of the customizations and UI revisions being offered at [this site][wowui].  Some configurations of this game smack me as eerily similar to the principles of Augment.  In fact, just this weekend, I was considering blowing the dust off [this keyset controller](http://www.avault.com/hardware/getreview.asp?review=msstratcom) I used to use with Everquest, years ago.\r\n\r\nThen again, maybe it's a matter of intensity.  Coordinating with a 40-player guild to slay something from the molten bowels of the earth is a slightly different activity than composing a memo or even a few-dozen-page report.  On the other hand, I really would've liked to strip away most of the Word interface while writing my [two books](#text-2).  And someday, who's to say that online interpersonal collaboration in the general case won't more closely resemble a World of Warcraft raid?  Having [just read][read] [Vernor Vinge's latest book Rainbows End][re], he makes a lot of intelligence augmentation and collaboration tasks look just like WoW.\r\n\r\n[re]: http://www.amazon.com/exec/obidos/ASIN/0312856849/0xdecafbad01-20\r\n[read]: http://decafbad.vox.com/library/post/reading-vernor-vinges-new-novel.html\r\n[wowui]: http://ui.worldofwar.net/\r\n[wow]: http://decafbad.com/blog/2006/09/06/world-of-warcraft-is-my-world-of-warcraft\r\n[nip]: http://www.greenend.org.uk/rjk/2002/08/nipple.html\r\n[vim]: http://www.vim.org/\r\n[augment]: http://codinginparadise.org/weblog/2006/03/new-screencast-of-douglas-engelbarts.html\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221085202\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://webseitz.fluxent.com/wiki\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8157a5907b244071cda98ba5aa7a9635&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://webseitz.fluxent.com/wiki\">Bill Seitz</a>\n                </div>\n                <a href=\"#comment-221085202\" class=\"permalink\"><time datetime=\"2006-09-06T21:58:26\">2006-09-06T21:58:26</time></a>\n            </div>\n            <div class=\"content\"><p>The fighter-jet metaphor is interesting. Obviously a fighter has a narrower scope/focus than the general computer. But perhaps there's a narrower technique/practice of intelligence augmentation that warrants a more specialized/locally-optimized interface design.</p>\n\n<p>But then maybe the Engelbart work isn't focused <em>enough</em> on a particular context and associated method-of-use?</p>\n\n<p>To relate this to a similar software offering, how important are the specific Compendium features compared to the process of IBIS?</p>\n\n<p>And a big factor in the ChangeFunction is how critical the problem/pain is being solved by the new offering. Can you convince people that there will be a pay-back for learning to use HyperScope that compensates for the investment, compared to other uses of your time?</p>\n\n<p>Let's put it this way: if you were picking between 2 start-ups to invest in, how much weight would you associate with 1 of the teams using HyperScope? How does this compare to betting on a dogfight where 1 party has an F-15 and the other a Cessna?</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221085203\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.synaesmedia.net\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=248a3c4ba8f2972427222d46954f9c1c&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.synaesmedia.net\">phil jones</a>\n                </div>\n                <a href=\"#comment-221085203\" class=\"permalink\"><time datetime=\"2006-09-07T22:22:40\">2006-09-07T22:22:40</time></a>\n            </div>\n            <div class=\"content\"><p>Very nice post. </p>\n\n<p>And Bill's comments too. They remind me of the LEO editor for Python which was always touted as having great productivity benefits if only your team would undergo the three month training required to use it properly. Not sure if it ever took off or could. But there's something nice about the idea that LEO empowered programmers could outperform the norm.</p>\n\n<p>I'm convinced that there are certainly productivity improvements available to power-users, beyond anything currently dreamed of, once we step away from the assumption that \"ease of use\" equals \"1-to-1 correspondance between functionality and UI objects\".</p>\n\n<p>As every nerd knows, real (interesting) productivity, comes from higher levels of abstraction. And maybe what's really important about the outliner tradition (from HyperScope to MORE / UserLand / OPML to LEO) is that it remains loyal to this notion. When you collapse a block of text and ideas down to a single-line, you are essentially abstracting away from that detail and working with the higher-level description. </p>\n\n<p>OTOH, the Xerox Parc tradition of the GUI and direct manipulation, lost this core ideal. (At least as it was spread via Apple and Microsoft, although obviously you can probably do all sorts of powerful abstractions via a Smalltalk interface)</p>\n\n<p>I'm pretty sure that this insight is general. The really interesting innovations beyond HyperScope are going to be new ways of giving the power-users yet more abstract ways of manipulating their information. Either by folding more of it together as complex aggrogates, or allowing large-scale cross-cutting processing. (Maybe style-sheets in Word are the only other surviving popular example.)</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221085205\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://harold.hotelling.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=5183bee2961385af94a500759bb7a372&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://harold.hotelling.net/\">Harold</a>\n                </div>\n                <a href=\"#comment-221085205\" class=\"permalink\"><time datetime=\"2006-09-08T22:45:31\">2006-09-08T22:45:31</time></a>\n            </div>\n            <div class=\"content\"><p>Y'know - this is what it is like to be an Emacs user. I've come to the opinion that the set of document formats you can work with, and the set of commands you can perform on them, should be somewhat-to-completely separate from the UI.</p>\n\n<p>That way, you can have a learners/beginners UI to get people up to speed, then they graduate to the intermediate UI that assumes knowledge of things like C-s, C-o, C-q etc. And of course, if an application follows strong UI design guidelines, experienced computer users might be able to start a new program in the intermediate UI. Gosh! C-o opens a file in Excel too!</p>\n\n<p>Then, I think there should be a choice of expert-level UIs. For example, VIM and Emacs have both grown together (VIM started small, light and fast, and Emacs stared with everything AND the kitchen sink), so that they both represent reasonable choices for a power-user's text editor.</p>\n\n<p>This is also one of the problems that web developers are working on (or working around). Google and others have started introducing intermediate level UI features in web apps (like shortcut keys), but try building a site that looks and feels like WoW...</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221085206\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://mozdawg.blogspot.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2c2c2c8f9e42a145f54f257111c6e84d&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://mozdawg.blogspot.com\">Ben Tremblay</a>\n                </div>\n                <a href=\"#comment-221085206\" class=\"permalink\"><time datetime=\"2006-09-12T20:35:09\">2006-09-12T20:35:09</time></a>\n            </div>\n            <div class=\"content\"><p>What still catches me with systems like Augment (I would call Neuberg's new incarnation \"hyperScope\".) is precisely the mousing.</p>\n\n<p>The war is long lost but I recall with fond pleasure how I blew a Word user away by using WP5.2 ... ^F6-P <em>boom</em> And when I rolled out the functions I'd cobbled together with WP's lovely macro language? Sonic boom. The key in that situation was that I had a large number of unique tasks and a small very number of tasks carrying a huge workload (MILSPEC change management). So it was ideal for hot-keyed macros: like shooting fish in a barrel.</p>\n\n<p>For one thing, unless I'm reading passively or doing some flavour of CAD my hands are nowhere near the mouse. Or, to invert that, when I'm keyboarding I have to routinely suppress my resentment with reach, swivel, click, drag, select, click, select ... interminable menus and options bla-bla-blah, and nowhere muscle memory comes into play. But even with that aside, to have to right click and then select Delete from a menu /after/ having dragged to select a block ... I can outshoot that action stream using keystrokes anyday, if the app allowed me to.</p>\n\n<p>I don't disagree with the fundamental insight ... far from it. But we've just barely begun to implement the foundational cognitive ergonomics. (I was gratified to see in one thread that Brad explicated his having moved Help to the upper right ... cuz that's where it is most often. When it works it works cuz it works. Tradition is sometimes/often arbitrary; life's like that and we should sometimes just suck it up.)</p>\n\n<p>Harold's point about expert users is, I think, key. It's merely foolish to impose a system that makes good use of habituation onto a newly arrived visitor. I'm quite sure that attentive study shows a clustering or quantum of user intention and expertise ... until and unless we contrive some seamless continuum (a terrible distraction inspired by naive perfectionism) we should focus on differentiating expters from n00bs (no diss) and serve both well. \"Intermediate level\" sounds quite appropriate ... so long as this isn't just a maelstrum of fish/foul goat/sheep confounds.</p>\n\n<p>Alternatively we can always fall back on the old TRW concept of making people think more like machines. There might be funding for that.\n;-P</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221085208\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://mozdawg.blogspot.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2c2c2c8f9e42a145f54f257111c6e84d&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://mozdawg.blogspot.com\">Ben Tremblay</a>\n                </div>\n                <a href=\"#comment-221085208\" class=\"permalink\"><time datetime=\"2006-09-12T20:39:47\">2006-09-12T20:39:47</time></a>\n            </div>\n            <div class=\"content\"><p>Muscle memory just jumped up and reminded me of this: in a situation where I was doing Print Preview a gazillion times a day Shift-F7 6 was as effortless as breathing. <em>snap</em></p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221085209\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://vielmetti.typepad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e377f3e2140297d32460ae9a4b38ff98&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://vielmetti.typepad.com\">Edward Vielmetti</a>\n                </div>\n                <a href=\"#comment-221085209\" class=\"permalink\"><time datetime=\"2006-10-18T06:00:17\">2006-10-18T06:00:17</time></a>\n            </div>\n            <div class=\"content\"><p>I can speak as a former Emacs user and coder that the only reason I gave it up for vi was that it hurt my hands too much to make all of those funky keyboard chords, and it started to hurt my head to remember all of the time-saving things I had built.</p>\n\n<p>Classically there's a tradeoff between the ease of typing something and the amount of think time you have to put into remembering what to type.</p>\n\n<p>One thing I am annoyed by on too many blogs is the inability to tab from the comment field to the \"submit\" button, which forces a mouse event and a scroll event.</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/09/06/futility-in-alternate-pasts-and-futures-in-human-augmentation",
    "prevPostPath": "2006/09/06/mc-chris-ftw",
    "nextPostPath": "2006/09/06/world-of-warcraft-is-my-world-of-warcraft"
  }
]