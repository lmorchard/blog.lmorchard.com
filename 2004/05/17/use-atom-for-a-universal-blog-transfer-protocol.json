{"comments_archived":true,"date":"2004-05-17T00:00:00.000Z","excerpt":"You could use some mashup of RSS and XML-RPC for a Universal Blog\nTransfer Protocol, but I&#8217;d suggest using Atom. It&#8217;s a data\nmodel and an API, where the data model represents blog content quite\nwell and the API complements it for the purposes of shuffling things\naround. With a mix of XML-RPC and RSS, I could only imagine lots of\nfiddling going on to transliterate between RSS and metaWeblog API structs\nor whatnot.","layout":"post","tags":["syndication"],"title":"Use Atom for a Universal Blog Transfer Protocol","wordpress_id":524,"wordpress_slug":"use-atom-for-a-universal-blog-transfer-protocol","wordpress_url":"http://www.decafbad.com/blog/?p=524","url":"/2004/05/17/use-atom-for-a-universal-blog-transfer-protocol/","path":"2004/05/17/use-atom-for-a-universal-blog-transfer-protocol","content":"<blockquote>\n<p>One of the options in Tinderbox is to download your most recent posts from your current MT/Radio/Blogger blog into a Tinderbox document, which in turn could be easily turned into a Tinderbox weblog.</p>\n</blockquote>\n<blockquote>\n<p>Could XML-RPC and RSS some kind of universal blog transfer protocol to move sites from one blogging tool to another? It seems to me that RSS should/could have most of the information needed to translate one file format to another.</p>\n</blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\n\"http://www.ahawkins.org/mt/archives/000641.html\">Universal Blog Transfer Protocol</a></cite></small></div>\n\n<p>Hmm - I was going to drop a note in comments on the above entry, but I see that they&#39;re disabled.  So...  I&#39;m off to post a trackback from my own blog!</p>\n<p>You could use some mashup of RSS and XML-RPC for this, but I&#39;d suggest using Atom.  It&#39;s a data model <em>and</em> an API, where the data model represents blog content quite well and the API complements it for the purposes of shuffling things around.  With a mix of XML-RPC and RSS, I could only imagine <a href=\"http://www.xml.com/pub/a/2003/10/15/dive.html\" title=\"Mark Pilgrim&#39;s overview of the Atom API.  In particular, check out the section about the metaWeblog API&#39;s relationship to RSS 2.0\">lots of fiddling</a> going on to transliterate between RSS and <a href=\"http://www.xmlrpc.com/metaWeblogApi\" title=\"The metaWeblog API specification\">metaWeblog API structs</a> or whatnot.</p>\n<p>Practically speaking, it seems to me that it&#39;d be <a href=\"http://www.atomenabled.org/developers/tutorials/api-quick-guide.php\" title=\"All the pieces are here in an Atom API tutorial\">pretty trivial</a> to build a little conduit between <a href=\"http://www.atomenabled.org/\">Atom Enabled</a> blogs.  Make a request to blog #1 for entries, then turn around and take the data returned by that request and post directly to blog #2.  I imagine there&#39;d be just a <em>tad</em> more to do than that, such as splitting up the list of entries and posting each individually.  But since it&#39;s all Atom for input and output, there&#39;s not much massaging of the data that needs to go on along the way. </p>\n<p>If I get a few round tuits, maybe I&#39;ll take a stab at whipping up a sort of Atom-to-Atom-Copy command as an example.  </p>\n<p>(And, as an aside, I&#39;d love it if <a href=\"http://www.eastgate.com/Tinderbox/\" title=\"Great app for catching and developing ideas\">Tinderbox</a> supported the Atom API--especially since I&#39;m <a href=\"http://www.xml.com/pub/a/2004/04/14/atomwiki.html\" title=\"Joe Gregorio explores Atom-Powered Wiki\">hearing noises</a> toward <a href=\"http://www.ecyrd.com/ButtUgly/Wiki.jsp?page=Main_blogentry_160504_2\" title=\"Wherein the author of JSPWiki entertains the notion of an Atom API\">wikis supporting the Atom API</a>!)</p>\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n\n        <ul class=\"comments\">\n\n        <li class=\"comment\" id=\"comment-221082868\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://markpasc.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=30e5bdec1073df6350d27b8145bf0dab&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://markpasc.org/\">Mark Paschal</a>\n                </div>\n                <a href=\"#comment-221082868\" class=\"permalink\"><time datetime=\"2004-05-17T21:21:28\">2004-05-17T21:21:28</time></a>\n            </div>\n            <div class=\"content\">I wrote a script to export an MT weblog to an Atom feed, but the new reality of web hosting servers killing &quot;runaway&quot; processes makes it a terrible pain for large archives. It has to export X entries, then have the browser make a new request to push the next X. The script exports in text chunks, so that&#39;s okay, but I couldn&#39;t figure how to parse an XML document in parts similarly.\n\nI was planning to use that to transport my weblog from MT 2 to MT 3, but I ended up writing the sqlite schema upgrade code instead.</div>\n\n<pre><code>    &lt;/li&gt;\n\n    &lt;li class=&quot;comment&quot; id=&quot;comment-221082869&quot;&gt;\n        &lt;div class=&quot;meta&quot;&gt;\n            &lt;div class=&quot;author&quot;&gt;\n                &lt;a class=&quot;avatar image&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://techno-weenie.net&quot;&gt;&lt;img src=&quot;http://www.gravatar.com/avatar.php?gravatar_id=7f9a6fc2f4c8bca376ff85c205c35b3c&amp;amp;size=32&amp;amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png&quot;/&gt;&lt;/a&gt;\n                &lt;a class=&quot;avatar name&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://techno-weenie.net&quot;&gt;rick&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;a href=&quot;#comment-221082869&quot; class=&quot;permalink&quot;&gt;&lt;time datetime=&quot;2004-05-17T22:39:56&quot;&gt;2004-05-17T22:39:56&lt;/time&gt;&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;content&quot;&gt;Yes!  This is what I&#39;ve been trying to say.  Use RSS as a simple syndication feed, but Atom when you need a rich data model and API.\n</code></pre><p>Having drop-dead-simple Atom import/export in MT (and all blogging tools) should reduce any fears of lock-in.</div></p>\n<pre><code>    &lt;/li&gt;\n\n    &lt;li class=&quot;comment&quot; id=&quot;comment-221082871&quot;&gt;\n        &lt;div class=&quot;meta&quot;&gt;\n            &lt;div class=&quot;author&quot;&gt;\n                &lt;a class=&quot;avatar image&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://www.markBernstein.org/&quot;&gt;&lt;img src=&quot;http://www.gravatar.com/avatar.php?gravatar_id=cdb20bf8e09680028612532944833686&amp;amp;size=32&amp;amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png&quot;/&gt;&lt;/a&gt;\n                &lt;a class=&quot;avatar name&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://www.markBernstein.org/&quot;&gt;Mark Bernstein&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;a href=&quot;#comment-221082871&quot; class=&quot;permalink&quot;&gt;&lt;time datetime=&quot;2004-05-17T22:48:09&quot;&gt;2004-05-17T22:48:09&lt;/time&gt;&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;content&quot;&gt;Tinderbox will support the Atom API, once it&#39;s actually an API.  There&#39;s still a lot of uncertainty what the real atom API will look like, either on paper or as implemented in deployed systems.\n</code></pre><p>For now, Metaweblog and Blogger API should work with most of the tools you want to work with...</div></p>\n<pre><code>    &lt;/li&gt;\n\n    &lt;li class=&quot;comment&quot; id=&quot;comment-221082873&quot;&gt;\n        &lt;div class=&quot;meta&quot;&gt;\n            &lt;div class=&quot;author&quot;&gt;\n                &lt;a class=&quot;avatar image&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://www.decafbad.com/&quot;&gt;&lt;img src=&quot;http://www.gravatar.com/avatar.php?gravatar_id=8a5273f79cfe7579ad46023f93377aa8&amp;amp;size=32&amp;amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png&quot;/&gt;&lt;/a&gt;\n                &lt;a class=&quot;avatar name&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://www.decafbad.com/&quot;&gt;l.m.orchard&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;a href=&quot;#comment-221082873&quot; class=&quot;permalink&quot;&gt;&lt;time datetime=&quot;2004-05-17T23:53:39&quot;&gt;2004-05-17T23:53:39&lt;/time&gt;&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;content&quot;&gt;Mark:  Fair enough - I can respect you not wanting to track a moving target of an API.  So far I like the direction it has been taking, though.\n</code></pre><p>Oh, and thanks again for Tinderbox!</div></p>\n<pre><code>    &lt;/li&gt;\n\n    &lt;/ul&gt;\n\n    &lt;/div&gt;\n</code></pre>"}