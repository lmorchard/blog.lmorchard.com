[
  {
    "comments_archived": true,
    "date": "2004-08-31T01:37:42.000Z",
    "excerpt": "Work has been insanely busy lately, but I have made some more progress with [`dbagg3`][dbagg3].  The code is all in CVS, so feel free to take a gander-- I don't have a ton of time for a proper write up, but I do want to spew a little bit.",
    "layout": "post",
    "tags": [
      "hacks",
      "syndication",
      "xml"
    ],
    "title": "Making progress on dbagg3",
    "wordpress_id": 543,
    "wordpress_slug": "dbagg3-makingprogress",
    "wordpress_url": "http://www.decafbad.com/blog/?p=543",
    "year": "2004",
    "month": "08",
    "day": "30",
    "isDir": false,
    "slug": "dbagg3-makingprogress",
    "postName": "2004-08-30-dbagg3-makingprogress",
    "html": "<p>Work has been insanely busy lately, but I have made some more progress with <a href=\"http://www.decafbad.com/cvs/dbagg3/\"><code>dbagg3</code></a>.  The code is all in CVS, so feel free to take a gander-- I don&#39;t have a ton of time for a proper write up, but I do want to spew a little bit. </p>\n<p>As per my <a href=\"http://www.decafbad.com/blog/2004/08/23/slicing_and_dicing_to_make_atom_soup_in_dbagg3\">previous musings on XML in a SQL database</a>, I revamped the database.  Now things are sliced up by feed and entry tables, rows in each containing a few metadata columns and then one big column for an XML dump.  This lets me index on  date and parent feed and such, meanwhile punting on the issue of dicing things like authors or content up further.  And, as extension elements start to show up, this handling is dumb enough to simply store things it doesn&#39;t know about without mangling them.  This is a very good thing and one of my big goals for this beast.</p>\n<p>The other thing that I&#39;m getting excited about is the REST API built atop the Atom store.  Rather than spend time on proper documentation, here&#39;s a quick dump from the <a href=\"http://www.decafbad.com/cvs/*checkout*/dbagg3/lib/dbagg3/rest.py\">appropriate module</a>:</p>\n<pre><code>URL: GET /feeds/\nURL: GET /feeds/{id}.xml\nURL: GET /feeds/{id}/{yyyy}/{mm}/{dd}/{hstart}-{hend}.xml\nURL: GET /feeds/{id}/{yyyy}/{mm}/{dd}/{hh}.xml\nURL: GET /feeds/{id}/{yyyy}/{mm}/{dd}.xml\nURL: GET /feeds/{id}/{yyyy}/{mm}.xml\nURL: GET /feeds/{id}/now-{nowoff}.xml\nURL: GET /feeds/{fid}/entries/{eid}.xml\nURL: GET /users/\nURL: GET /users/{uname}.xml\nURL: POST /users/\nURL: DELETE /users/{uname}.xml\nURL: PUT /users/{uname}.xml\nURL: GET /users/{uname}/prefs.xml\nURL: GET /users/{uname}/prefs/\nURL: POST /users/{uname}/prefs/{pname}.{type}\nURL: PUT /users/{uname}/prefs/{pname}.{type}\nURL: GET /users/{uname}/prefs/{pname}.{type}\nURL: DELETE /users/{uname}/prefs/{pname}.{type}\nURL: GET /users/{uname}/subscriptions.{type}\nURL: GET /users/{uname}/subscriptions/\nURL: POST /users/{uname}/subscriptions/\nURL: DELETE /users/{uname}/subscriptions/{id}.xml\nURL: GET /users/{uname}/subscriptions/{sid}/{yyyy}/{mm}/{dd}/{hstart}-{hend}.xml\nURL: GET /users/{uname}/subscriptions/{sid}/{yyyy}/{mm}/{dd}/{hh}.xml\nURL: GET /users/{uname}/subscriptions/{sid}/{yyyy}/{mm}/{dd}.xml\nURL: GET /users/{uname}/subscriptions/{sid}/{yyyy}/{mm}.xml\nURL: GET /users/{uname}/subscriptions/{sid}/now-{hours}.xml\nURL: GET /users/{uname}/subscriptions/{sid}/now.xml\nURL: GET /users/{uname}/subscriptions/{yyyy}/{mm}/{dd}/{hstart}-{hend}.xml\nURL: GET /users/{uname}/subscriptions/{yyyy}/{mm}/{dd}/{hh}.xml\nURL: GET /users/{uname}/subscriptions/{yyyy}/{mm}/{dd}.xml\nURL: GET /users/{uname}/subscriptions/{yyyy}/{mm}.xml\nURL: GET /users/{uname}/subscriptions/now-{hours}.xml\nURL: GET /users/{uname}/subscriptions/now.xml\nURL: GET /users/{uname}/subscriptions/{sid}/entries/{eid}.xml</code></pre>\n<p>Hopefully, the structure of these URL patterns make a little bit of sense.  The too-clever thing about these is that they&#39;re both documentation in the module&#39;s docstrings, and parsed out to register methods with automagically-generated regexes applied to incoming URL requests.  (I may eventually realize just how stupid an idea this is, but not yet.)  </p>\n<p>This list is nowhere near complete or final or even all that well thought out yet.  But, it seems to be working out pretty well so far, and it&#39;s so easy to tinker with the API to sketch out ideas in working code.  Eating my own dogfood, my first browser window of the day tends to open on this URL:</p>\n<pre><code>http://localhost/~deusx/dbagg3.5/api/users/default/subscriptions/\nnow-12.xml?xsl=xsl/full.xsl&amp;#38;content-type=text/html</code></pre>\n<p>This grabs the last 12 hours&#39; worth of items from <code>default</code>&#39;s subscriptions, passing them through the XSL at <code>xsl/full.xsl</code> on the way to my browser with a content type of <code>text/html</code>.  This tends to produce about 1000-1500 entries in about 15 seconds on my PowerBook, which is better than I&#39;d expected.  </p>\n<p>Pretty soon, I&#39;ll be implementing the ability to post metadata onto feed entries under subscriptions.  Then, I can mark items as seen, attach categories, tags, and notes.  From there, I can exclude seen items from queries, produce new aggregate feeds based on my tagging or notes, among a few other ideas I&#39;ve got stewing.</p>\n<p>A little more work, and I think I&#39;ll be able to throw together the beginnings of a <a href=\"http://www.bloglines.com\">Bloglines</a>-style three-pane browser interface, as well as improving the functionality of my own outliner-style display with <a href=\"http://developer.apple.com/internet/webcontent/xmlhttpreq.html\">XmlHTTPRequest</a>-based calls to the API to enable refresh-free interaction.  From there, I have some ideas for desktop apps and maybe even some <a href=\"http://www.decafbad.com/blog/2003/06/19/flash_agg\">tinkering in Flash</a>.  (Wow... has it really been over a year since I was writing about Flash &#38; REST?)</p>\n<p>And <em>then</em>, I want to implement the Atom API and allow users to create feeds to which they can post their own items and share read-only with others (or share writing with a group).  From there, this thing can turn into a read/write Atom storage tank, serving both as an aggregator and a blog publishing engine, given the appropriate XSL work.</p>\n<p>Lots of ideas stewing.  Now I just have to get the time and possibly a new web server, since I&#39;d like to eventually open up an installation of this to fellow tinkerers, but this poor little box can barely take what it&#39;s tasked with at present...</p>\n<p>Oh yeah, and one other thing:  I&#39;ve been thinking about names better than <code>dbagg3</code>.  The one that&#39;s sticking around in my head so far is <strong>feedReactor</strong>.  What do you think?</p>\n<!--more-->\n<p>shortname=dbagg3_makingprogress</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221086277\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=26343060da04d2f84c3fbd726c1158b6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Alan</a>\n</div>\n<a href=\"#comment-221086277\" class=\"permalink\"><time datetime=\"2004-09-01T03:39:10\">2004-09-01T03:39:10</time></a>\n</div>\n<div class=\"content\">I prefer the dbagg title to feed_anything_. There's feedster, feedburner, feedreader and I'm sure there will be a whole slew more. This needs an original name. It seems similiar to Urchin, which you earlier posted a link to, how about Starfish or maybe Seahorse. ;)</div>\n</li>\n</ul>\n</div>\n",
    "body": "Work has been insanely busy lately, but I have made some more progress with [`dbagg3`][dbagg3].  The code is all in CVS, so feel free to take a gander-- I don't have a ton of time for a proper write up, but I do want to spew a little bit. \r\n\r\nAs per my [previous musings on XML in a SQL database][soup], I revamped the database.  Now things are sliced up by feed and entry tables, rows in each containing a few metadata columns and then one big column for an XML dump.  This lets me index on  date and parent feed and such, meanwhile punting on the issue of dicing things like authors or content up further.  And, as extension elements start to show up, this handling is dumb enough to simply store things it doesn't know about without mangling them.  This is a very good thing and one of my big goals for this beast.\r\n\r\nThe other thing that I'm getting excited about is the REST API built atop the Atom store.  Rather than spend time on proper documentation, here's a quick dump from the [appropriate module][restapi]:\r\n\r\n    URL: GET /feeds/\r\n    URL: GET /feeds/{id}.xml\r\n    URL: GET /feeds/{id}/{yyyy}/{mm}/{dd}/{hstart}-{hend}.xml\r\n    URL: GET /feeds/{id}/{yyyy}/{mm}/{dd}/{hh}.xml\r\n    URL: GET /feeds/{id}/{yyyy}/{mm}/{dd}.xml\r\n    URL: GET /feeds/{id}/{yyyy}/{mm}.xml\r\n    URL: GET /feeds/{id}/now-{nowoff}.xml\r\n    URL: GET /feeds/{fid}/entries/{eid}.xml\r\n    URL: GET /users/\r\n    URL: GET /users/{uname}.xml\r\n    URL: POST /users/\r\n    URL: DELETE /users/{uname}.xml\r\n    URL: PUT /users/{uname}.xml\r\n    URL: GET /users/{uname}/prefs.xml\r\n    URL: GET /users/{uname}/prefs/\r\n    URL: POST /users/{uname}/prefs/{pname}.{type}\r\n    URL: PUT /users/{uname}/prefs/{pname}.{type}\r\n    URL: GET /users/{uname}/prefs/{pname}.{type}\r\n    URL: DELETE /users/{uname}/prefs/{pname}.{type}\r\n    URL: GET /users/{uname}/subscriptions.{type}\r\n    URL: GET /users/{uname}/subscriptions/\r\n    URL: POST /users/{uname}/subscriptions/\r\n    URL: DELETE /users/{uname}/subscriptions/{id}.xml\r\n    URL: GET /users/{uname}/subscriptions/{sid}/{yyyy}/{mm}/{dd}/{hstart}-{hend}.xml\r\n    URL: GET /users/{uname}/subscriptions/{sid}/{yyyy}/{mm}/{dd}/{hh}.xml\r\n    URL: GET /users/{uname}/subscriptions/{sid}/{yyyy}/{mm}/{dd}.xml\r\n    URL: GET /users/{uname}/subscriptions/{sid}/{yyyy}/{mm}.xml\r\n    URL: GET /users/{uname}/subscriptions/{sid}/now-{hours}.xml\r\n    URL: GET /users/{uname}/subscriptions/{sid}/now.xml\r\n    URL: GET /users/{uname}/subscriptions/{yyyy}/{mm}/{dd}/{hstart}-{hend}.xml\r\n    URL: GET /users/{uname}/subscriptions/{yyyy}/{mm}/{dd}/{hh}.xml\r\n    URL: GET /users/{uname}/subscriptions/{yyyy}/{mm}/{dd}.xml\r\n    URL: GET /users/{uname}/subscriptions/{yyyy}/{mm}.xml\r\n    URL: GET /users/{uname}/subscriptions/now-{hours}.xml\r\n    URL: GET /users/{uname}/subscriptions/now.xml\r\n    URL: GET /users/{uname}/subscriptions/{sid}/entries/{eid}.xml\r\n\r\nHopefully, the structure of these URL patterns make a little bit of sense.  The too-clever thing about these is that they're both documentation in the module's docstrings, and parsed out to register methods with automagically-generated regexes applied to incoming URL requests.  (I may eventually realize just how stupid an idea this is, but not yet.)  \r\n\r\nThis list is nowhere near complete or final or even all that well thought out yet.  But, it seems to be working out pretty well so far, and it's so easy to tinker with the API to sketch out ideas in working code.  Eating my own dogfood, my first browser window of the day tends to open on this URL:\r\n\r\n    http://localhost/~deusx/dbagg3.5/api/users/default/subscriptions/\r\n    now-12.xml?xsl=xsl/full.xsl&#38;content-type=text/html\r\n\r\nThis grabs the last 12 hours' worth of items from `default`'s subscriptions, passing them through the XSL at `xsl/full.xsl` on the way to my browser with a content type of `text/html`.  This tends to produce about 1000-1500 entries in about 15 seconds on my PowerBook, which is better than I'd expected.  \r\n\r\nPretty soon, I'll be implementing the ability to post metadata onto feed entries under subscriptions.  Then, I can mark items as seen, attach categories, tags, and notes.  From there, I can exclude seen items from queries, produce new aggregate feeds based on my tagging or notes, among a few other ideas I've got stewing.\r\n\r\nA little more work, and I think I'll be able to throw together the beginnings of a [Bloglines][bloglines]-style three-pane browser interface, as well as improving the functionality of my own outliner-style display with [XmlHTTPRequest][xmlhttp]-based calls to the API to enable refresh-free interaction.  From there, I have some ideas for desktop apps and maybe even some [tinkering in Flash][flash].  (Wow... has it really been over a year since I was writing about Flash &#38; REST?)\r\n\r\nAnd *then*, I want to implement the Atom API and allow users to create feeds to which they can post their own items and share read-only with others (or share writing with a group).  From there, this thing can turn into a read/write Atom storage tank, serving both as an aggregator and a blog publishing engine, given the appropriate XSL work.\r\n\r\nLots of ideas stewing.  Now I just have to get the time and possibly a new web server, since I'd like to eventually open up an installation of this to fellow tinkerers, but this poor little box can barely take what it's tasked with at present...\r\n\r\nOh yeah, and one other thing:  I've been thinking about names better than `dbagg3`.  The one that's sticking around in my head so far is **feedReactor**.  What do you think?\r\n\r\n[flash]: http://www.decafbad.com/blog/2003/06/19/flash_agg\r\n[xmlhttp]: http://developer.apple.com/internet/webcontent/xmlhttpreq.html\r\n[bloglines]: http://www.bloglines.com\r\n[restapi]: http://www.decafbad.com/cvs/*checkout*/dbagg3/lib/dbagg3/rest.py\r\n[dbagg3]: http://www.decafbad.com/cvs/dbagg3/\r\n[soup]: http://www.decafbad.com/blog/2004/08/23/slicing_and_dicing_to_make_atom_soup_in_dbagg3\r\n<!--more-->\r\nshortname=dbagg3_makingprogress\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221086277\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=26343060da04d2f84c3fbd726c1158b6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"\">Alan</a>\r\n                </div>\r\n                <a href=\"#comment-221086277\" class=\"permalink\"><time datetime=\"2004-09-01T03:39:10\">2004-09-01T03:39:10</time></a>\r\n            </div>\r\n            <div class=\"content\">I prefer the dbagg title to feed_anything_. There's feedster, feedburner, feedreader and I'm sure there will be a whole slew more. This needs an original name. It seems similiar to Urchin, which you earlier posted a link to, how about Starfish or maybe Seahorse. ;)</div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2004",
    "path": "2004/08/31/dbagg3-makingprogress",
    "summary": "<p>Work has been insanely busy lately, but I have made some more progress with <a href=\"http://www.decafbad.com/cvs/dbagg3/\"><code>dbagg3</code></a>.  The code is all in CVS, so feel free to take a gander-- I don&apos;t have a ton of time for a proper write up, but I do want to spew a little bit. </p>\n<p>As per my <a href=\"http://www.decafbad.com/blog/2004/08/23/slicing_and_dicing_to_make_atom_soup_in_dbagg3\">previous musings on XML in a SQL database</a>, I revamped the database.  Now things are sliced up by feed and entry tables, rows in each containing a few metadata columns and then one big column for an XML dump.  This lets me index on  date and parent feed and such, meanwhile punting on the issue of dicing things like authors or content up further.  And, as extension elements start to show up, this handling is dumb enough to simply store things it doesn&apos;t know about without mangling them.  This is a very good thing and one of my big goals for this beast.</p>\n<p>The other thing that I&apos;m getting excited about is the REST API built atop the Atom store.  Rather than spend time on proper documentation, here&apos;s a quick dump from the <a href=\"http://www.decafbad.com/cvs/*checkout*/dbagg3/lib/dbagg3/rest.py\">appropriate module</a>:</p>\n<pre><code>URL: GET /feeds/\nURL: GET /feeds/{id}.xml\nURL: GET /feeds/{id}/{yyyy}/{mm}/{dd}/{hstart}-{hend}.xml\nURL: GET /feeds/{id}/{yyyy}/{mm}/{dd}/{hh}.xml\nURL: GET /feeds/{id}/{yyyy}/{mm}/{dd}.xml\nURL: GET /feeds/{id}/{yyyy}/{mm}.xml\nURL: GET /feeds/{id}/now-{nowoff}.xml\nURL: GET /feeds/{fid}/entries/{eid}.xml\nURL: GET /users/\nURL: GET /users/{uname}.xml\nURL: POST /users/\nURL: DELETE /users/{uname}.xml\nURL: PUT /users/{uname}.xml\nURL: GET /users/{uname}/prefs.xml\nURL: GET /users/{uname}/prefs/\nURL: POST /users/{uname}/prefs/{pname}.{type}\nURL: PUT /users/{uname}/prefs/{pname}.{type}\nURL: GET /users/{uname}/prefs/{pname}.{type}\nURL: DELETE /users/{uname}/prefs/{pname}.{type}\nURL: GET /users/{uname}/subscriptions.{type}\nURL: GET /users/{uname}/subscriptions/\nURL: POST /users/{uname}/subscriptions/\nURL: DELETE /users/{uname}/subscriptions/{id}.xml\nURL: GET /users/{uname}/subscriptions/{sid}/{yyyy}/{mm}/{dd}/{hstart}-{hend}.xml\nURL: GET /users/{uname}/subscriptions/{sid}/{yyyy}/{mm}/{dd}/{hh}.xml\nURL: GET /users/{uname}/subscriptions/{sid}/{yyyy}/{mm}/{dd}.xml\nURL: GET /users/{uname}/subscriptions/{sid}/{yyyy}/{mm}.xml\nURL: GET /users/{uname}/subscriptions/{sid}/now-{hours}.xml\nURL: GET /users/{uname}/subscriptions/{sid}/now.xml\nURL: GET /users/{uname}/subscriptions/{yyyy}/{mm}/{dd}/{hstart}-{hend}.xml\nURL: GET /users/{uname}/subscriptions/{yyyy}/{mm}/{dd}/{hh}.xml\nURL: GET /users/{uname}/subscriptions/{yyyy}/{mm}/{dd}.xml\nURL: GET /users/{uname}/subscriptions/{yyyy}/{mm}.xml\nURL: GET /users/{uname}/subscriptions/now-{hours}.xml\nURL: GET /users/{uname}/subscriptions/now.xml\nURL: GET /users/{uname}/subscriptions/{sid}/entries/{eid}.xml</code></pre>\n<p>Hopefully, the structure of these URL patterns make a little bit of sense.  The too-clever thing about these is that they&apos;re both documentation in the module&apos;s docstrings, and parsed out to register methods with automagically-generated regexes applied to incoming URL requests.  (I may eventually realize just how stupid an idea this is, but not yet.)  </p>\n<p>This list is nowhere near complete or final or even all that well thought out yet.  But, it seems to be working out pretty well so far, and it&apos;s so easy to tinker with the API to sketch out ideas in working code.  Eating my own dogfood, my first browser window of the day tends to open on this URL:</p>\n<pre><code>http://localhost/~deusx/dbagg3.5/api/users/default/subscriptions/\nnow-12.xml?xsl=xsl/full.xsl&amp;#38;content-type=text/html</code></pre>\n<p>This grabs the last 12 hours&apos; worth of items from <code>default</code>&apos;s subscriptions, passing them through the XSL at <code>xsl/full.xsl</code> on the way to my browser with a content type of <code>text/html</code>.  This tends to produce about 1000-1500 entries in about 15 seconds on my PowerBook, which is better than I&apos;d expected.  </p>\n<p>Pretty soon, I&apos;ll be implementing the ability to post metadata onto feed entries under subscriptions.  Then, I can mark items as seen, attach categories, tags, and notes.  From there, I can exclude seen items from queries, produce new aggregate feeds based on my tagging or notes, among a few other ideas I&apos;ve got stewing.</p>\n<p>A little more work, and I think I&apos;ll be able to throw together the beginnings of a <a href=\"http://www.bloglines.com\">Bloglines</a>-style three-pane browser interface, as well as improving the functionality of my own outliner-style display with <a href=\"http://developer.apple.com/internet/webcontent/xmlhttpreq.html\">XmlHTTPRequest</a>-based calls to the API to enable refresh-free interaction.  From there, I have some ideas for desktop apps and maybe even some <a href=\"http://www.decafbad.com/blog/2003/06/19/flash_agg\">tinkering in Flash</a>.  (Wow... has it really been over a year since I was writing about Flash &amp; REST?)</p>\n<p>And <em>then</em>, I want to implement the Atom API and allow users to create feeds to which they can post their own items and share read-only with others (or share writing with a group).  From there, this thing can turn into a read/write Atom storage tank, serving both as an aggregator and a blog publishing engine, given the appropriate XSL work.</p>\n<p>Lots of ideas stewing.  Now I just have to get the time and possibly a new web server, since I&apos;d like to eventually open up an installation of this to fellow tinkerers, but this poor little box can barely take what it&apos;s tasked with at present...</p>\n<p>Oh yeah, and one other thing:  I&apos;ve been thinking about names better than <code>dbagg3</code>.  The one that&apos;s sticking around in my head so far is <strong>feedReactor</strong>.  What do you think?</p>\n",
    "prevPostPath": "2004/09/01/xpath-based-python-dictionaries-on-loan",
    "nextPostPath": "2004/08/30/crappyvideogames"
  },
  {
    "comments_archived": true,
    "date": "2004-08-30T02:52:48.000Z",
    "excerpt": "It all makes me almost wish for a kink in Moore's Law that stalls the progress of dazzling hardware and forces developers back to being clever with their resources and game ideas.",
    "layout": "post",
    "tags": [
      "gaming"
    ],
    "title": "Crappy video games to get more expensive to produce",
    "wordpress_id": 542,
    "wordpress_slug": "crappyvideogames",
    "wordpress_url": "http://www.decafbad.com/blog/?p=542",
    "year": "2004",
    "month": "08",
    "day": "29",
    "isDir": false,
    "slug": "crappyvideogames",
    "postName": "2004-08-29-crappyvideogames",
    "html": "<blockquote>\nAccording to calculations, it may cost up to 200% more to develop games for the PS3 or Xbox 2 than it does for current systems.\n</blockquote>\n<div align=\"right\"><small>Source: <cite><a href=\"http://www.joystiq.com/entry/5561357479278881/\">EA expresses &#8216;concern&#8217; about next-gen technology</a></cite></small></div>\n\n<p>Here&#39;s some blogging for you.  This article brings two thoughts to mind for me...</p>\n<p>First is this:  Of course, if you&#39;re striving for some semblance of realism in games, the costs will likely approach and exceed the cost to produce movies.  It&#39;ll approach the cost because, eventually, you&#39;ll need either movie-grade animators or real actors.  And then it&#39;ll exceed the cost, because who wants a game that&#39;s as linear as a 2-hour movie?  If you want any replay value out of the thing, you&#39;re going to have to produce the equivalent of a 4-hour movie at least, if not a 20- to 40-hour movie.  And then, you&#39;re going to have to be satisfied that many players will miss most of it.  Once things reach this point, I think in some sense video games will have arrived as a &quot;successor&quot; to movies, as movies were a &quot;successor&quot; to radio plays.</p>\n<p>This brings me to my second thought:  Right now, I&#39;m listening to a streaming radio station that&#39;s playing old sci-fi and drama radio plays, like X Minus One and The Shadow.  These shows are great, and I&#39;m thinking of buying a few box sets of them.  These old radio shows get quite a bit of mileage out of their less technologically advanced medium.  In contrast to this, my consumption of contemporary and popular television, movies, and music has been dropping off from year to year as I get more tired of supremely well-produced yet worthless content.</p>\n<p>Music gets sold on anything but a good tune, movies sold on special effects over plot, and video games head toward technological supremacy over a fun hook or even an engaging story line.  But, I don&#39;t want anything to do with any of these.</p>\n<p>A few days ago, a friend of mine remarked that many &quot;retro&quot; video games were just as horrible as modern video games, but I have to disagree a bit.  There were a lot of horrible games.  But, for games to be successful back when the dazzle factor of the hardware was low, you needed the fun trick or clever twist that addicted players.  The constraints called for ingenuity.  Sometimes this meant pushing the hardware, and sometimes this meant coming up with a brilliant yet simple-to-implement idea.  (Tetris, I&#39;m looking at you.)</p>\n<p>As the hardware platforms progress, we&#39;ll see more and more absolutely dazzling demos of the hardware sold as games that completely fail at being fun.  But they&#39;ll have insane budgets and probably sell very well just because people want to see the pretty sparklies and foobar shaders.  The increased capabilities will offer more expressive ability to interactive storytellers, but I bet it will just give even more excuse for game makers to be distracted from that and keep pumping out stories that suck carried by game play that reeks.</p>\n<p>It all makes me almost wish for a kink in Moore&#39;s Law that stalls the progress of dazzling hardware and forces developers back to being clever with their resources and game ideas.  Maybe we&#39;ll see more and more of an indie games community rise, producing genuinely fun and amusingly ingenious games.  (<a href=\"http://www.chroniclogic.com/gish/\">Gish</a>, I&#39;m looking at you.)</p>\n<p>Meanwhile, my girlfriend and I will be playing massive amounts of <a href=\"http://www.neo-geo.com/reviews/neo-reviews/md3/md3.html\">Magical Drop III</a>.</p>\n<!--more-->\n<p>shortname=crappyvideogames</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221090864\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.valcohen.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=1f182510ae4c51df63e11d0b069ad439&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.valcohen.com\">Val</a>\n</div>\n<a href=\"#comment-221090864\" class=\"permalink\"><time datetime=\"2004-08-30T00:30:14\">2004-08-30T00:30:14</time></a>\n</div>\n<div class=\"content\">I generally agree, tho I love a lot of games for their eye-candy like I love (well, at least like, or wll pay to see) a lot of movies strictly for thier eye-candy (as opposed to a good story, acting, etc.)\nBut, re your wish for a more constrained environment in which to draw out developers' creativity: it strikes me we're starting to see this with the mobile environments. The cellphones Russell Beattie describes are severely restricted compared to today's monster desktop/video-card setups that comprise even bargain-basement PCs (tho Russ DOES today talk about getting a 512MB memory card for his phone -- size of a thumbnail -- for about $100. The constraints won't be there for long -- enjoy while you can!)</div>\n</li>\n<li class=\"comment\" id=\"comment-221090866\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4a5d522f073b25af74daa13b4a161730&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">byran connor</a>\n</div>\n<a href=\"#comment-221090866\" class=\"permalink\"><time datetime=\"2005-03-09T12:20:22\">2005-03-09T12:20:22</time></a>\n</div>\n<div class=\"content\">Hey your right man.  Tetris and Nintendo, Sonic and Sega, dude those games kicked a$$ andnow a days game makers do get side tracked by all the fancy stuff an what not.The only new game that i played and liked all the way through was halo 1.  Then all the other games i got for my xbox blowed except the fact that soul calibur was alrighty, but game makers or whatever they're called need to do a better job with their plot and game play...peace out and keep on playin the old school games.</div>\n</li>\n</ul>\n</div>\n",
    "body": "<blockquote>\r\nAccording to calculations, it may cost up to 200% more to develop games for the PS3 or Xbox 2 than it does for current systems.\r\n</blockquote>\r\n<div align=\"right\"><small>Source: <cite><a href=\"http://www.joystiq.com/entry/5561357479278881/\">EA expresses &#8216;concern&#8217; about next-gen technology</a></cite></small></div>\r\n\r\nHere's some blogging for you.  This article brings two thoughts to mind for me...\r\n\r\nFirst is this:  Of course, if you're striving for some semblance of realism in games, the costs will likely approach and exceed the cost to produce movies.  It'll approach the cost because, eventually, you'll need either movie-grade animators or real actors.  And then it'll exceed the cost, because who wants a game that's as linear as a 2-hour movie?  If you want any replay value out of the thing, you're going to have to produce the equivalent of a 4-hour movie at least, if not a 20- to 40-hour movie.  And then, you're going to have to be satisfied that many players will miss most of it.  Once things reach this point, I think in some sense video games will have arrived as a \"successor\" to movies, as movies were a \"successor\" to radio plays.\r\n\r\nThis brings me to my second thought:  Right now, I'm listening to a streaming radio station that's playing old sci-fi and drama radio plays, like X Minus One and The Shadow.  These shows are great, and I'm thinking of buying a few box sets of them.  These old radio shows get quite a bit of mileage out of their less technologically advanced medium.  In contrast to this, my consumption of contemporary and popular television, movies, and music has been dropping off from year to year as I get more tired of supremely well-produced yet worthless content.\r\n\r\nMusic gets sold on anything but a good tune, movies sold on special effects over plot, and video games head toward technological supremacy over a fun hook or even an engaging story line.  But, I don't want anything to do with any of these.\r\n\r\nA few days ago, a friend of mine remarked that many \"retro\" video games were just as horrible as modern video games, but I have to disagree a bit.  There were a lot of horrible games.  But, for games to be successful back when the dazzle factor of the hardware was low, you needed the fun trick or clever twist that addicted players.  The constraints called for ingenuity.  Sometimes this meant pushing the hardware, and sometimes this meant coming up with a brilliant yet simple-to-implement idea.  (Tetris, I'm looking at you.)\r\n\r\nAs the hardware platforms progress, we'll see more and more absolutely dazzling demos of the hardware sold as games that completely fail at being fun.  But they'll have insane budgets and probably sell very well just because people want to see the pretty sparklies and foobar shaders.  The increased capabilities will offer more expressive ability to interactive storytellers, but I bet it will just give even more excuse for game makers to be distracted from that and keep pumping out stories that suck carried by game play that reeks.\r\n\r\nIt all makes me almost wish for a kink in Moore's Law that stalls the progress of dazzling hardware and forces developers back to being clever with their resources and game ideas.  Maybe we'll see more and more of an indie games community rise, producing genuinely fun and amusingly ingenious games.  (<a href=\"http://www.chroniclogic.com/gish/\">Gish</a>, I'm looking at you.)\r\n\r\nMeanwhile, my girlfriend and I will be playing massive amounts of <a href=\"http://www.neo-geo.com/reviews/neo-reviews/md3/md3.html\">Magical Drop III</a>.\r\n<!--more-->\r\nshortname=crappyvideogames\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221090864\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.valcohen.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=1f182510ae4c51df63e11d0b069ad439&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.valcohen.com\">Val</a>\r\n                </div>\r\n                <a href=\"#comment-221090864\" class=\"permalink\"><time datetime=\"2004-08-30T00:30:14\">2004-08-30T00:30:14</time></a>\r\n            </div>\r\n            <div class=\"content\">I generally agree, tho I love a lot of games for their eye-candy like I love (well, at least like, or wll pay to see) a lot of movies strictly for thier eye-candy (as opposed to a good story, acting, etc.)\r\n\r\nBut, re your wish for a more constrained environment in which to draw out developers' creativity: it strikes me we're starting to see this with the mobile environments. The cellphones Russell Beattie describes are severely restricted compared to today's monster desktop/video-card setups that comprise even bargain-basement PCs (tho Russ DOES today talk about getting a 512MB memory card for his phone -- size of a thumbnail -- for about $100. The constraints won't be there for long -- enjoy while you can!)</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221090866\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4a5d522f073b25af74daa13b4a161730&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"\">byran connor</a>\r\n                </div>\r\n                <a href=\"#comment-221090866\" class=\"permalink\"><time datetime=\"2005-03-09T12:20:22\">2005-03-09T12:20:22</time></a>\r\n            </div>\r\n            <div class=\"content\">Hey your right man.  Tetris and Nintendo, Sonic and Sega, dude those games kicked a$$ andnow a days game makers do get side tracked by all the fancy stuff an what not.The only new game that i played and liked all the way through was halo 1.  Then all the other games i got for my xbox blowed except the fact that soul calibur was alrighty, but game makers or whatever they're called need to do a better job with their plot and game play...peace out and keep on playin the old school games.</div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2004",
    "path": "2004/08/30/crappyvideogames",
    "summary": "<blockquote>\nAccording to calculations, it may cost up to 200% more to develop games for the PS3 or Xbox 2 than it does for current systems.\n</blockquote>\n<div align=\"right\"><small>Source: <cite><a href=\"http://www.joystiq.com/entry/5561357479278881/\">EA expresses &#x2018;concern&#x2019; about next-gen technology</a></cite></small></div>\n\n<p>Here&apos;s some blogging for you.  This article brings two thoughts to mind for me...</p>\n<p>First is this:  Of course, if you&apos;re striving for some semblance of realism in games, the costs will likely approach and exceed the cost to produce movies.  It&apos;ll approach the cost because, eventually, you&apos;ll need either movie-grade animators or real actors.  And then it&apos;ll exceed the cost, because who wants a game that&apos;s as linear as a 2-hour movie?  If you want any replay value out of the thing, you&apos;re going to have to produce the equivalent of a 4-hour movie at least, if not a 20- to 40-hour movie.  And then, you&apos;re going to have to be satisfied that many players will miss most of it.  Once things reach this point, I think in some sense video games will have arrived as a &quot;successor&quot; to movies, as movies were a &quot;successor&quot; to radio plays.</p>\n<p>This brings me to my second thought:  Right now, I&apos;m listening to a streaming radio station that&apos;s playing old sci-fi and drama radio plays, like X Minus One and The Shadow.  These shows are great, and I&apos;m thinking of buying a few box sets of them.  These old radio shows get quite a bit of mileage out of their less technologically advanced medium.  In contrast to this, my consumption of contemporary and popular television, movies, and music has been dropping off from year to year as I get more tired of supremely well-produced yet worthless content.</p>\n<p>Music gets sold on anything but a good tune, movies sold on special effects over plot, and video games head toward technological supremacy over a fun hook or even an engaging story line.  But, I don&apos;t want anything to do with any of these.</p>\n<p>A few days ago, a friend of mine remarked that many &quot;retro&quot; video games were just as horrible as modern video games, but I have to disagree a bit.  There were a lot of horrible games.  But, for games to be successful back when the dazzle factor of the hardware was low, you needed the fun trick or clever twist that addicted players.  The constraints called for ingenuity.  Sometimes this meant pushing the hardware, and sometimes this meant coming up with a brilliant yet simple-to-implement idea.  (Tetris, I&apos;m looking at you.)</p>\n<p>As the hardware platforms progress, we&apos;ll see more and more absolutely dazzling demos of the hardware sold as games that completely fail at being fun.  But they&apos;ll have insane budgets and probably sell very well just because people want to see the pretty sparklies and foobar shaders.  The increased capabilities will offer more expressive ability to interactive storytellers, but I bet it will just give even more excuse for game makers to be distracted from that and keep pumping out stories that suck carried by game play that reeks.</p>\n<p>It all makes me almost wish for a kink in Moore&apos;s Law that stalls the progress of dazzling hardware and forces developers back to being clever with their resources and game ideas.  Maybe we&apos;ll see more and more of an indie games community rise, producing genuinely fun and amusingly ingenious games.  (<a href=\"http://www.chroniclogic.com/gish/\">Gish</a>, I&apos;m looking at you.)</p>\n<p>Meanwhile, my girlfriend and I will be playing massive amounts of <a href=\"http://www.neo-geo.com/reviews/neo-reviews/md3/md3.html\">Magical Drop III</a>.</p>\n",
    "prevPostPath": "2004/08/31/dbagg3-makingprogress",
    "nextPostPath": "2004/08/29/blogging-without-thought"
  },
  {
    "comments_archived": true,
    "date": "2004-08-29T23:14:04.000Z",
    "excerpt": "One should never put blogging on a pedestal, really.",
    "layout": "post",
    "title": "\"One should never think before one posts.\"",
    "wordpress_id": 541,
    "wordpress_slug": "blogging-without-thought",
    "wordpress_url": "http://www.decafbad.com/blog/?p=541",
    "year": "2004",
    "month": "08",
    "day": "29",
    "isDir": false,
    "slug": "blogging-without-thought",
    "postName": "2004-08-29-blogging-without-thought",
    "html": "<blockquote>\nOne should never think before one posts. That's been my big blunder. And one should never ever ever rewrite, fine-tune, or God forbid edit the post, either. As a blogger, you should form a picture in your mind of a man drinking a cup of coffee. Then imagine that he suddenly feels a dead fly on his tongue and here you'll see your role model. Let your words spew forth with speed and velocity, out of reflex and not reflection. Let them fly without any possibility of ever taking them back. And when challenged, insist that the challenger is lucky that you don't sue somebody, and if he or she thinks you're going to help clean that up, they're crazy.\n</blockquote>\n<div align=\"right\"><small>Source: <a href=\"http://www.cwob.com/yellowtext/yellowtext0804.html#58831\">yellowtext: Oh...Hi! I didn't see you standing there!</a></small> </div>\n\n<p>Amen, blog brother (with thanks to <a href=\"http://surgery-graphics.med.umich.edu/~matt/archives/2004_08_30.html#000570\">Quirk Blog</a> for the pointer).  I wonder if I need to go on a Month of Blogging, complete with t-shirts, spewing here daily like a sort of NaBlogWriMo?  </p>\n<p>One should never put blogging on a pedestal, really.  I mean, while I do aspire to doing some real writing (when I&#39;m not so busy with work, as I have been of late), my blog-a-day writing shouldn&#39;t be all that painful.  It looks like my server&#39;s on its last legs and the act of posting itself takes forever, so belaboring the actual content so much just puts the last straw on the <a href=\"http://www.ai.mit.edu/lab/gsb/gsb-archive/gsb2000-02-11.html\">shaven yak&#39;s</a> back.</p>\n<p>So, here goes... posty posty post, as they say on LiveJournal.  (Well, I seem to remember someone saying that anyway.)</p>\n<!--more-->\n<p>shortname=blogging_without_thought</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221087333\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://jcwinnie.biz/wordpress/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=53313cda2dc9e876a17be4772e67880e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://jcwinnie.biz/wordpress/\">jcwinnie</a>\n</div>\n<a href=\"#comment-221087333\" class=\"permalink\"><time datetime=\"2004-08-30T15:32:01\">2004-08-30T15:32:01</time></a>\n</div>\n<div class=\"content\">No, no, no. You will never, ever, become a high priest in the Technorati that way!</div>\n</li>\n</ul>\n</div>\n",
    "body": "<blockquote>\r\nOne should never think before one posts. That's been my big blunder. And one should never ever ever rewrite, fine-tune, or God forbid edit the post, either. As a blogger, you should form a picture in your mind of a man drinking a cup of coffee. Then imagine that he suddenly feels a dead fly on his tongue and here you'll see your role model. Let your words spew forth with speed and velocity, out of reflex and not reflection. Let them fly without any possibility of ever taking them back. And when challenged, insist that the challenger is lucky that you don't sue somebody, and if he or she thinks you're going to help clean that up, they're crazy.\r\n</blockquote>\r\n<div align=\"right\"><small>Source: <a href=\"http://www.cwob.com/yellowtext/yellowtext0804.html#58831\">yellowtext: Oh...Hi! I didn't see you standing there!</a></small> </div>\r\n\r\nAmen, blog brother (with thanks to [Quirk Blog](http://surgery-graphics.med.umich.edu/~matt/archives/2004_08_30.html#000570) for the pointer).  I wonder if I need to go on a Month of Blogging, complete with t-shirts, spewing here daily like a sort of NaBlogWriMo?  \r\n\r\nOne should never put blogging on a pedestal, really.  I mean, while I do aspire to doing some real writing (when I'm not so busy with work, as I have been of late), my blog-a-day writing shouldn't be all that painful.  It looks like my server's on its last legs and the act of posting itself takes forever, so belaboring the actual content so much just puts the last straw on the [shaven yak's](http://www.ai.mit.edu/lab/gsb/gsb-archive/gsb2000-02-11.html) back.\r\n\r\nSo, here goes... posty posty post, as they say on LiveJournal.  (Well, I seem to remember someone saying that anyway.)\r\n<!--more-->\r\nshortname=blogging_without_thought\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221087333\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://jcwinnie.biz/wordpress/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=53313cda2dc9e876a17be4772e67880e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://jcwinnie.biz/wordpress/\">jcwinnie</a>\r\n                </div>\r\n                <a href=\"#comment-221087333\" class=\"permalink\"><time datetime=\"2004-08-30T15:32:01\">2004-08-30T15:32:01</time></a>\r\n            </div>\r\n            <div class=\"content\">No, no, no. You will never, ever, become a high priest in the Technorati that way!</div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2004",
    "path": "2004/08/29/blogging-without-thought",
    "summary": "<blockquote>\nOne should never think before one posts. That&apos;s been my big blunder. And one should never ever ever rewrite, fine-tune, or God forbid edit the post, either. As a blogger, you should form a picture in your mind of a man drinking a cup of coffee. Then imagine that he suddenly feels a dead fly on his tongue and here you&apos;ll see your role model. Let your words spew forth with speed and velocity, out of reflex and not reflection. Let them fly without any possibility of ever taking them back. And when challenged, insist that the challenger is lucky that you don&apos;t sue somebody, and if he or she thinks you&apos;re going to help clean that up, they&apos;re crazy.\n</blockquote>\n<div align=\"right\"><small>Source: <a href=\"http://www.cwob.com/yellowtext/yellowtext0804.html#58831\">yellowtext: Oh...Hi! I didn&apos;t see you standing there!</a></small> </div>\n\n<p>Amen, blog brother (with thanks to <a href=\"http://surgery-graphics.med.umich.edu/~matt/archives/2004_08_30.html#000570\">Quirk Blog</a> for the pointer).  I wonder if I need to go on a Month of Blogging, complete with t-shirts, spewing here daily like a sort of NaBlogWriMo?  </p>\n<p>One should never put blogging on a pedestal, really.  I mean, while I do aspire to doing some real writing (when I&apos;m not so busy with work, as I have been of late), my blog-a-day writing shouldn&apos;t be all that painful.  It looks like my server&apos;s on its last legs and the act of posting itself takes forever, so belaboring the actual content so much just puts the last straw on the <a href=\"http://www.ai.mit.edu/lab/gsb/gsb-archive/gsb2000-02-11.html\">shaven yak&apos;s</a> back.</p>\n<p>So, here goes... posty posty post, as they say on LiveJournal.  (Well, I seem to remember someone saying that anyway.)</p>\n",
    "prevPostPath": "2004/08/30/crappyvideogames",
    "nextPostPath": "2004/08/24/more-cooks-in-the-feed-stew-kitchen"
  },
  {
    "comments_archived": true,
    "date": "2004-08-24T03:14:40.000Z",
    "excerpt": "I tell ya, this is an idea that's catching.  Feeds go into a searchable stew, come back out as new synthetic feeds.  What comes out looks like what goes in, and there's a well-defined spec behind it.  Sprinkle in the elegance of loosely coupled UNIX pipelines and filters, REST interfaces, and XML tech like XSLT for munging, and you've got the makings of the next generation of syndication and XML feeds.",
    "layout": "post",
    "tags": [
      "syndication",
      "xml"
    ],
    "title": "More Cooks in the Feed Stew Kitchen",
    "wordpress_id": 540,
    "wordpress_slug": "more-cooks-in-the-feed-stew-kitchen",
    "wordpress_url": "http://www.decafbad.com/blog/?p=540",
    "year": "2004",
    "month": "08",
    "day": "23",
    "isDir": false,
    "slug": "more-cooks-in-the-feed-stew-kitchen",
    "postName": "2004-08-23-more-cooks-in-the-feed-stew-kitchen",
    "html": "<blockquote>\n<p>\nI've talked before about why I like Atom. It's because it's the fixed point around which all the rest can crystallise...</p>\n\n</blockquote>\n<div class=\"credit\" align=\"right\"><small>Source: <cite><a href=\n\"http://interconnected.org/home/2004/08/24/diego_dovals_atomflow\">diego dovals atomflow (24 August 2004, Interconnected)</a></cite></small></div>\n\n<blockquote>\n<p>\nOne, that by using Atom as input format, you could simplify entry into this black-box system and use it, for example, on the receiving end of a UNIX pipe. Content on the source could be either straight Atom or come in some other form that would require transforming it into Atom, but that'd be easy to do, since transforming XML is pretty easy these days.\n</p><p>\n Two, that by using Atom as the output format you'd have the same flexibility. To generate a feed if you wanted, or transform it into something else, say, a weblog.\n</p>\n</blockquote>\n<div class=\"credit\" align=\"right\"><small>Source: <cite><a href=\n\"http://www.dynamicobjects.com/d2r/archives/002885.html\">d2r: atomflow</a></cite></small></div>\n\n<p>So, first I discover <a href=\"http://urchin.sourceforge.net/\">Urchin</a>, and now I read <a href=\"http://interconnected.org/home/\">this</a>.  I tell ya, this is an idea that&#39;s catching.  Granted, Urchin&#39;s all about RSS, and <a href=\"http://www.dynamicobjects.com/d2r/archives/002885.html\">atomflow</a> and <a href=\"http://www.decafbad.com/cvs/dbagg3/\">dbagg3</a> are all about Atom, but the spirit&#39;s the same:  </p>\n<p>Feeds go into a searchable stew, come back out as new synthetic feeds.  What comes out looks like what goes in, and there&#39;s a well-defined spec behind it.  Sprinkle in the elegance of loosely coupled UNIX pipelines and filters, REST interfaces, and XML tech like XSLT for munging, and you&#39;ve got the makings of the next generation of syndication and XML feeds.</p>\n<p>I guess maybe I should start checking into this Java stuff again, since smart guys like <a href=\"http://www.dynamicobjects.com/d2r/\">Diego</a> and <a href=\"http://interconnected.org/home/\">Matt</a> are making noises I like, over in that sandbox.  Well, at least I&#39;ll have things like <a href=\"http://www.jython.org/\">Jython</a>, <a href=\"http://www.beanshell.org/\">Beanshell</a>, and <a href=\"http://groovy.codehaus.org/\">Groovy</a> to toy with over there.  And it&#39;s not like I haven&#39;t <a href=\"http://www.decafbad.com/cvs/AgentFrank/\">played with Java</a> before.</p>\n<p>So who else has something like this brewing?</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221082710\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://franklinmint.fm\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b9ed774661a22ff8797a1e0e24f0baf3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://franklinmint.fm\">Robert Sayre</a>\n</div>\n<a href=\"#comment-221082710\" class=\"permalink\"><time datetime=\"2004-08-23T23:54:50\">2004-08-23T23:54:50</time></a>\n</div>\n<div class=\"content\">The Jabber folks!\nhot off the press:\nhttp://www.ietf.org/internet-drafts/draft-saintandre-atompub-notify-00.txt</div>\n</li>\n<li class=\"comment\" id=\"comment-221082711\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com/blog/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8a5273f79cfe7579ad46023f93377aa8&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com/blog/\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221082711\" class=\"permalink\"><time datetime=\"2004-08-24T00:28:51\">2004-08-24T00:28:51</time></a>\n</div>\n<div class=\"content\">Wow, this feels like a lot of wouldn't-it-be-nice-if's all coming together.  :)</div>\n</li>\n<li class=\"comment\" id=\"comment-221082712\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://mah.everybody.org/weblog/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a6d8be203bb9da491bbdce177fea43eb&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://mah.everybody.org/weblog/\">Mark A. Hershberger</a>\n</div>\n<a href=\"#comment-221082712\" class=\"permalink\"><time datetime=\"2004-08-24T08:53:07\">2004-08-24T08:53:07</time></a>\n</div>\n<div class=\"content\">Check out what Simon Cozens has been up to: \nhttp://blog.simon-cozens.org/bryar.cgi/id_6786\nhttp://blog.simon-cozens.org/bryar.cgi/id_6787\nhttp://blog.simon-cozens.org/bryar.cgi/id_6788</div>\n</li>\n<li class=\"comment\" id=\"comment-221082713\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b66023720241dc4e8791dfe9fb9cfcdc&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\">Danny</a>\n</div>\n<a href=\"#comment-221082713\" class=\"permalink\"><time datetime=\"2004-08-27T15:27:29\">2004-08-27T15:27:29</time></a>\n</div>\n<div class=\"content\">I'm working on a book on it, does that count?\n(Well, I'm taking a very component-oriented approach, with the aim of enabling this kind of stuff)</div>\n</li>\n<li class=\"comment\" id=\"comment-221082715\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://notizen.typepad.com/aus_der_provinz/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=005509858f6bec19f23d989ff9228724&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://notizen.typepad.com/aus_der_provinz/\">Markus Breuer</a>\n</div>\n<a href=\"#comment-221082715\" class=\"permalink\"><time datetime=\"2004-08-30T18:07:09\">2004-08-30T18:07:09</time></a>\n</div>\n<div class=\"content\">AtomFlow really sound like an nice proof of concept to me. Interestingly (talk of synchronicity) Kottkes \"Noodlings\" (http://www.kottke.org/04/08/web-platform) inspired me to a similar concept, which I'm trying to demo together with a few friends. We would very much appreciate your suggestions/comments on the concept especially because dbagg looks like a nice \"persistent storage\" for aggregating feeds and - together with the tools you showed in the post \"Introducing dbagg3, an Atom-powered client/server aggregator\" should also be usable as a kind of debugger for feed-munching tools ...\nPlease have a look: (the link was not accepted here because of the underscores in the url; but you can find it on the homepage of my webblog \"A simple (but universal) toolbox for building Blogs (and Websites) from RSS-Feeds\")</div>\n</li>\n</ul>\n</div>\n",
    "body": "<blockquote>\r\n<p>\r\nI've talked before about why I like Atom. It's because it's the fixed point around which all the rest can crystallise...</p>\r\n\r\n</blockquote>\r\n<div class=\"credit\" align=\"right\"><small>Source: <cite><a href=\r\n\"http://interconnected.org/home/2004/08/24/diego_dovals_atomflow\">diego dovals atomflow (24 August 2004, Interconnected)</a></cite></small></div>\r\n\r\n<blockquote>\r\n<p>\r\nOne, that by using Atom as input format, you could simplify entry into this black-box system and use it, for example, on the receiving end of a UNIX pipe. Content on the source could be either straight Atom or come in some other form that would require transforming it into Atom, but that'd be easy to do, since transforming XML is pretty easy these days.\r\n</p><p>\r\n Two, that by using Atom as the output format you'd have the same flexibility. To generate a feed if you wanted, or transform it into something else, say, a weblog.\r\n</p>\r\n</blockquote>\r\n<div class=\"credit\" align=\"right\"><small>Source: <cite><a href=\r\n\"http://www.dynamicobjects.com/d2r/archives/002885.html\">d2r: atomflow</a></cite></small></div>\r\n\r\nSo, first I discover [Urchin][urchin], and now I read [this][matt].  I tell ya, this is an idea that's catching.  Granted, Urchin's all about RSS, and [atomflow][atomflow] and [dbagg3][dbagg3] are all about Atom, but the spirit's the same:  \r\n\r\nFeeds go into a searchable stew, come back out as new synthetic feeds.  What comes out looks like what goes in, and there's a well-defined spec behind it.  Sprinkle in the elegance of loosely coupled UNIX pipelines and filters, REST interfaces, and XML tech like XSLT for munging, and you've got the makings of the next generation of syndication and XML feeds.\r\n\r\nI guess maybe I should start checking into this Java stuff again, since smart guys like [Diego][diego] and [Matt][matt] are making noises I like, over in that sandbox.  Well, at least I'll have things like [Jython][jython], [Beanshell][beanshell], and [Groovy][groovy] to toy with over there.  And it's not like I haven't [played with Java][agentfrank] before.\r\n\r\nSo who else has something like this brewing?\r\n\r\n[agentfrank]: http://www.decafbad.com/cvs/AgentFrank/\r\n[groovy]: http://groovy.codehaus.org/\r\n[beanshell]: http://www.beanshell.org/\r\n[jython]: http://www.jython.org/\r\n[matt]: http://interconnected.org/home/\r\n[diego]: http://www.dynamicobjects.com/d2r/\r\n[dbagg3]: http://www.decafbad.com/cvs/dbagg3/\r\n[atomflow]: http://www.dynamicobjects.com/d2r/archives/002885.html\r\n[matt]: http://interconnected.org/home/2004/08/24/diego_dovals_atomflow\r\n[urchin]: http://urchin.sourceforge.net/\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221082710\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://franklinmint.fm\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b9ed774661a22ff8797a1e0e24f0baf3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://franklinmint.fm\">Robert Sayre</a>\r\n                </div>\r\n                <a href=\"#comment-221082710\" class=\"permalink\"><time datetime=\"2004-08-23T23:54:50\">2004-08-23T23:54:50</time></a>\r\n            </div>\r\n            <div class=\"content\">The Jabber folks!\r\n\r\nhot off the press:\r\n\r\nhttp://www.ietf.org/internet-drafts/draft-saintandre-atompub-notify-00.txt</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221082711\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com/blog/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8a5273f79cfe7579ad46023f93377aa8&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com/blog/\">l.m.orchard</a>\r\n                </div>\r\n                <a href=\"#comment-221082711\" class=\"permalink\"><time datetime=\"2004-08-24T00:28:51\">2004-08-24T00:28:51</time></a>\r\n            </div>\r\n            <div class=\"content\">Wow, this feels like a lot of wouldn't-it-be-nice-if's all coming together.  :)</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221082712\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://mah.everybody.org/weblog/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a6d8be203bb9da491bbdce177fea43eb&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://mah.everybody.org/weblog/\">Mark A. Hershberger</a>\r\n                </div>\r\n                <a href=\"#comment-221082712\" class=\"permalink\"><time datetime=\"2004-08-24T08:53:07\">2004-08-24T08:53:07</time></a>\r\n            </div>\r\n            <div class=\"content\">Check out what Simon Cozens has been up to: \r\n\r\nhttp://blog.simon-cozens.org/bryar.cgi/id_6786\r\nhttp://blog.simon-cozens.org/bryar.cgi/id_6787\r\nhttp://blog.simon-cozens.org/bryar.cgi/id_6788</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221082713\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b66023720241dc4e8791dfe9fb9cfcdc&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://dannyayers.com\">Danny</a>\r\n                </div>\r\n                <a href=\"#comment-221082713\" class=\"permalink\"><time datetime=\"2004-08-27T15:27:29\">2004-08-27T15:27:29</time></a>\r\n            </div>\r\n            <div class=\"content\">I'm working on a book on it, does that count?\r\n\r\n(Well, I'm taking a very component-oriented approach, with the aim of enabling this kind of stuff)</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221082715\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://notizen.typepad.com/aus_der_provinz/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=005509858f6bec19f23d989ff9228724&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://notizen.typepad.com/aus_der_provinz/\">Markus Breuer</a>\r\n                </div>\r\n                <a href=\"#comment-221082715\" class=\"permalink\"><time datetime=\"2004-08-30T18:07:09\">2004-08-30T18:07:09</time></a>\r\n            </div>\r\n            <div class=\"content\">AtomFlow really sound like an nice proof of concept to me. Interestingly (talk of synchronicity) Kottkes \"Noodlings\" (http://www.kottke.org/04/08/web-platform) inspired me to a similar concept, which I'm trying to demo together with a few friends. We would very much appreciate your suggestions/comments on the concept especially because dbagg looks like a nice \"persistent storage\" for aggregating feeds and - together with the tools you showed in the post \"Introducing dbagg3, an Atom-powered client/server aggregator\" should also be usable as a kind of debugger for feed-munching tools ...\r\n\r\nPlease have a look: (the link was not accepted here because of the underscores in the url; but you can find it on the homepage of my webblog \"A simple (but universal) toolbox for building Blogs (and Websites) from RSS-Feeds\")</div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2004",
    "path": "2004/08/24/more-cooks-in-the-feed-stew-kitchen",
    "prevPostPath": "2004/08/29/blogging-without-thought",
    "nextPostPath": "2004/08/23/slicing-and-dicing-to-make-atom-soup-in-dbagg3"
  },
  {
    "comments_archived": true,
    "date": "2004-08-23T22:52:06.000Z",
    "excerpt": "I've been putting more work into dbagg3, but I'm getting hung up on the database.  Well, actually I'm getting hung up on the subject of XML storage, query, and retrieval in general-- but at present, I'm trying to cram all this data into MySQL and SQLite databases.  But, my tendencies as an abstraction astronaut and my lack of database savvy are tying me (and my data) in knots.  I kept meaning to write a bit Atom (and XML in general) with regard to database storage and query, so maybe now's the time.",
    "layout": "post",
    "tags": [
      "syndication",
      "xml"
    ],
    "title": "Slicing and Dicing to Make Atom Soup in dbagg3",
    "wordpress_id": 539,
    "wordpress_slug": "slicing-and-dicing-to-make-atom-soup-in-dbagg3",
    "wordpress_url": "http://www.decafbad.com/blog/?p=539",
    "year": "2004",
    "month": "08",
    "day": "23",
    "isDir": false,
    "slug": "slicing-and-dicing-to-make-atom-soup-in-dbagg3",
    "postName": "2004-08-23-slicing-and-dicing-to-make-atom-soup-in-dbagg3",
    "html": "<p>I&#39;ve been putting more work into <a href=\"http://www.decafbad.com/cvs/dbagg3/\"><code>dbagg3</code></a>, but I&#39;m getting hung up on the database.  Well, actually I&#39;m getting hung up on the subject of XML storage, query, and retrieval in general-- but at present, I&#39;m trying to cram all this data into MySQL and SQLite databases.  But, my tendencies as an abstraction astronaut and my lack of database savvy are tying me (and my data) in knots.  I kept meaning to write a bit Atom (and XML in general) with regard to database storage and query, so maybe now&#39;s the time.</p>\n<h3 id=\"xml-databases\">XML databases</h3>\n<p>I&#39;m aware of XML-native databases like <a href=\"http://exist.sourceforge.net/\">eXist</a>, <a href=\"http://xml.apache.org/xindice/\">Xindice</a>, and <a href=\"http://www.sleepycat.com/products/xml.shtml\">Berkeley DB XML</a>-- but I don&#39;t want to work in Java right now, and I can&#39;t get the Berkeley XML DB compiled and running without segfault under OS X.  This bugs me, though, since the most elegant solution to me is to use something XML-native to store and query piles of Atom feeds and entries.  I&#39;d really like to have <a href=\"http://webservices.xml.com/pub/a/ws/2003/04/15/semanticblog.html\">XPath available as a query tool</a>.  And then, though I haven&#39;t heard a ton about it lately, there&#39;s XQuery.</p>\n<p>And, oh yeah, I know there are some commercial solutions (like <a href=\"http://virtuoso.openlinksw.com/\">Virtuoso</a>), but umm... no.</p>\n<h3 id=\"rdf-databases\">RDF databases</h3>\n<p>I suppose I could also switch to tossing RDF around internally, maybe use RSS 1.0 under the hood.  This seems to be what the much-similar <a href=\"http://urchin.sourceforge.net/\">Urchin RSS aggregator</a> is doing.  (Maybe I should just dump <code>dbagg3</code> and pitch in with Urchin.)  But, I don&#39;t know the state of RDF art well enough to know whether there&#39;s a database available that can handle 10,000 Atom/RSS entries a week or more for a year without gagging.  (My previous database was up to 500,000 entries when I started working on <code>dbagg3</code>, and I think that was since last November.)</p>\n<h3 id=\"sql-databases\">SQL databases</h3>\n<p>So, I&#39;m screwing around with SQL databases-- MySQL and SQLite in particular.  As compared to XML and RDF databases, I know and understand and trust SQL databases so much more with regards to performance and gotchas and general techniques.  </p>\n<p>In previous incarnations of my aggregator, MySQL and SQLite served me well with pretty simple data models.  But this time around, I want to play with much richer data: I want to include everything in the Atom spec, and try to take in some metadata from extensions.  So I threw together what I thought was a pretty decent relational model onto which I could map Atom XML data.  (If you&#39;re curious, you can check out <a href=\"http://www.decafbad.com/2004/08/dbagg3.sql\">a recent schema dump</a>.)</p>\n<p>The problem is, with the XML sliced and diced and sprinkled into all these separate tables, it&#39;s a <strong>fun</strong> time reassembling the pieces.  I&#39;ve run into this problem many times before, when trying to map object hierarchies into relational databases, and usually things degrade into nasty self-joins and an explosive number of queries.  This kind of inelegance smells really bad, oily like melting plastic caused by the friction of a square peg being driven into a round hole by my forehead as a hammer.</p>\n<p>In the end, what I&#39;ve usually ended up doing is to forget about mapping from objects to the relational model: tables become a set of indices to objects, the objects themselves packed up as BLOBs via some language-dependant pickling or freezing scheme.  Nasty, ugly, fragile, and completely inelegant.  There&#39;s some of that in <code>dbagg3</code> <em>right now</em>, and I want it out.  Though I used to think it was as clever and neat as a digital watch, this smells even worse than melting plastic.</p>\n<h3 id=\"xml-in-sql-databases\">XML in SQL databases</h3>\n<p>My latest thoughts, then, are to accept some bad smells (I <em>do</em> like the smell of burning plastic, actually) and simplify my database:  Instead of pickled binary objects, I&#39;ll store XML in a column (at least that isn&#39;t implementation-tied), and other tables will give me indices to this XML.  Thinking hard about my use cases, I think I can cover 80% of what I need with being able to look things up by feed, by subscription, by user, by date, and a few other useful aspects.  Once I&#39;ve gotten a pile of data out of the database in XML form, I can then attack it with XSL.</p>\n<p>However, what gives me even further enthusiasm for this approach is <a href=\"http://www.throwingbeans.org/tech/postgresql_and_xml.html\">this little XPath extension to PostgreSQL</a>.  This gives you a set of functions to apply XPath to XML-containing columns in SQL queries.  So, you can pull out nodes in a select, or search on the results in a WHERE clause, among other things.  I haven&#39;t tried it yet, but it gives me ideas.</p>\n<p>One idea is that, through <a href=\"http://pysqlite.sourceforge.net/old/documentation/pysqlite/node10.html\">PySQLite&#39;s API additions</a>, I can easily add new SQL functions at will-- oh like, say, some XPath functions using libxml2 under python.</p>\n<p>Granted, there are no indices backing these XPath searches, and using these python functions added to SQLite comes with overhead, the availability of XPath in SQL could give me the 20% I&#39;m missing with simple tables.  It might be worth the price and the smells.</p>\n<h3 id=\"so-anyway\">So Anyway...</h3>\n<p>That&#39;s where I&#39;m at right now.  I think I&#39;ve written a bunch, and all this text could use some code examples and some diagrams.  But, I figured I&#39;d think out loud a bit and see if anyone could step in and smack me for being a complete twink.  </p>\n<p>I want to slurp in Atom XML data, with arbitrary extensions, and be able to attack it with some reasonable set of queries to recombine this data into new feeds.</p>\n<p>I know I&#39;m not the only person thinking about this stuff, and I&#39;ve got to assume that I&#39;m nowhere near the smartest about it.  I&#39;m still working on this aggregator thing, and making what I think is some fun progress with a <a href=\"http://www.decafbad.com/cvs/*checkout*/dbagg3/lib/dbagg3/web/api.py?rev=HEAD&#38;content-type=text/x-python\">REST interface</a>, but this data stuff has me stalled.</p>\n<p>So... what do you think?</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221082837\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://franklinmint.fm\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b9ed774661a22ff8797a1e0e24f0baf3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://franklinmint.fm\">Robert Sayre</a>\n</div>\n<a href=\"#comment-221082837\" class=\"permalink\"><time datetime=\"2004-08-23T19:23:19\">2004-08-23T19:23:19</time></a>\n</div>\n<div class=\"content\">FYI: Apple's upcoming SafariRSS uses XQuery to parse feeds. The Tiger version of NSXML includes XQuery as well.</div>\n</li>\n<li class=\"comment\" id=\"comment-221082838\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=719ad7cfa24c00bbcaa8030427dd8743&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">bear</a>\n</div>\n<a href=\"#comment-221082838\" class=\"permalink\"><time datetime=\"2004-08-23T21:16:42\">2004-08-23T21:16:42</time></a>\n</div>\n<div class=\"content\">Not knowing what errors you are getting during the dbxml build means my comment will be generic but I hope it is still useful.\nThe OSAF people are using dbxml as their back-end data store and their build process works on os/x (what I use) - I can forward the makefile or just compare notes if that is useful to you.\nthanks for your great writing</div>\n</li>\n<li class=\"comment\" id=\"comment-221082839\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://randomthoughts.vandorp.ca/WK/blog\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=0a9028b800da9db6932c2f026d50847b&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://randomthoughts.vandorp.ca/WK/blog\">Darryl</a>\n</div>\n<a href=\"#comment-221082839\" class=\"permalink\"><time datetime=\"2004-08-24T04:27:51\">2004-08-24T04:27:51</time></a>\n</div>\n<div class=\"content\">Try a recipe by Kimbro Staken \nhttp://www.xmldatabases.org/movabletype/archives/000267.html</div>\n</li>\n<li class=\"comment\" id=\"comment-221082840\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://simon.incutio.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=02ecb4f56e961dd226352c4dd51eff26&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://simon.incutio.com/\">Simon Willison</a>\n</div>\n<a href=\"#comment-221082840\" class=\"permalink\"><time datetime=\"2004-08-24T18:27:33\">2004-08-24T18:27:33</time></a>\n</div>\n<div class=\"content\">Unfortunately, the XPath extension for PostgreSQL seems to be vapourware. As far as I know it exists only as a mention in the blog entry you linked to - the guy never released it. I'd love to be proved wrong - I'd really like to use it for a whole bunch of different things.</div>\n</li>\n<li class=\"comment\" id=\"comment-221082841\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.throwingbeans.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=96bc90c98bc78316eda53f6d1dbfa0f6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.throwingbeans.org\">Tom Dyson</a>\n</div>\n<a href=\"#comment-221082841\" class=\"permalink\"><time datetime=\"2004-08-25T21:10:17\">2004-08-25T21:10:17</time></a>\n</div>\n<div class=\"content\">The XPath extensions for Postgres are certainly not vapourware: we're using them in a content management environment for several high-profile websites. The extensions are available as part of the Postgres 8 beta download, where you'll find them in source code form in the contrib/xml directory. If you need help installing the functions, let me know - we have compiled them successfully on Debian, RedHat, OS X and Windows.</div>\n</li>\n<li class=\"comment\" id=\"comment-221082842\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=7028f422ca6da0180de6c9d922a3228f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\">Danny</a>\n</div>\n<a href=\"#comment-221082842\" class=\"permalink\"><time datetime=\"2004-09-08T22:03:05\">2004-09-08T22:03:05</time></a>\n</div>\n<div class=\"content\">I've not tried that kind of data size with RDF either, though am assured kit like Kowari can handle it.\nA possible compromise approach might be to use SQL storage directly for core syndication stuff, with RDF at the side. \nVaguely relevant blogged stuff:\nhttp://dannyayers.com/archives/2004/08/10/extending-the-capabilities-of-content-management-systems-with-rdf/\nanother possibility is using a triplestore on top of SQL, you end up with views/queries like this:\nhttp://dannyayers.com/archives/2004/07/14/all-in-a-days-work/</div>\n</li>\n<li class=\"comment\" id=\"comment-221082843\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://netapps.muohio.edu/blogs/darcusb/darcusb/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8043a49e7e80eef7672fa2be09b51473&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://netapps.muohio.edu/blogs/darcusb/darcusb/\">Bruce</a>\n</div>\n<a href=\"#comment-221082843\" class=\"permalink\"><time datetime=\"2005-02-24T03:16:48\">2005-02-24T03:16:48</time></a>\n</div>\n<div class=\"content\">You might take a look at BDB XML again.  I recall having problems compiling v1 on Mac OS X too, but had no such problems with v2.  And it addds XQuery to the mix.</div>\n</li>\n</ul>\n</div>\n",
    "body": "I've been putting more work into [`dbagg3`][dbagg3], but I'm getting hung up on the database.  Well, actually I'm getting hung up on the subject of XML storage, query, and retrieval in general-- but at present, I'm trying to cram all this data into MySQL and SQLite databases.  But, my tendencies as an abstraction astronaut and my lack of database savvy are tying me (and my data) in knots.  I kept meaning to write a bit Atom (and XML in general) with regard to database storage and query, so maybe now's the time.\r\n\r\n### XML databases\r\n\r\nI'm aware of XML-native databases like [eXist][exist], [Xindice][xindice], and [Berkeley DB XML][bdbxml]-- but I don't want to work in Java right now, and I can't get the Berkeley XML DB compiled and running without segfault under OS X.  This bugs me, though, since the most elegant solution to me is to use something XML-native to store and query piles of Atom feeds and entries.  I'd really like to have [XPath available as a query tool][xpathudell].  And then, though I haven't heard a ton about it lately, there's XQuery.\r\n\r\nAnd, oh yeah, I know there are some commercial solutions (like [Virtuoso][virtuoso]), but umm... no.\r\n\r\n### RDF databases\r\n\r\nI suppose I could also switch to tossing RDF around internally, maybe use RSS 1.0 under the hood.  This seems to be what the much-similar [Urchin RSS aggregator][urchin] is doing.  (Maybe I should just dump `dbagg3` and pitch in with Urchin.)  But, I don't know the state of RDF art well enough to know whether there's a database available that can handle 10,000 Atom/RSS entries a week or more for a year without gagging.  (My previous database was up to 500,000 entries when I started working on `dbagg3`, and I think that was since last November.)\r\n\r\n### SQL databases\r\n\r\nSo, I'm screwing around with SQL databases-- MySQL and SQLite in particular.  As compared to XML and RDF databases, I know and understand and trust SQL databases so much more with regards to performance and gotchas and general techniques.  \r\n\r\nIn previous incarnations of my aggregator, MySQL and SQLite served me well with pretty simple data models.  But this time around, I want to play with much richer data: I want to include everything in the Atom spec, and try to take in some metadata from extensions.  So I threw together what I thought was a pretty decent relational model onto which I could map Atom XML data.  (If you're curious, you can check out [a recent schema dump][dbagg3_sql].)\r\n\r\nThe problem is, with the XML sliced and diced and sprinkled into all these separate tables, it's a **fun** time reassembling the pieces.  I've run into this problem many times before, when trying to map object hierarchies into relational databases, and usually things degrade into nasty self-joins and an explosive number of queries.  This kind of inelegance smells really bad, oily like melting plastic caused by the friction of a square peg being driven into a round hole by my forehead as a hammer.\r\n\r\nIn the end, what I've usually ended up doing is to forget about mapping from objects to the relational model: tables become a set of indices to objects, the objects themselves packed up as BLOBs via some language-dependant pickling or freezing scheme.  Nasty, ugly, fragile, and completely inelegant.  There's some of that in `dbagg3` *right now*, and I want it out.  Though I used to think it was as clever and neat as a digital watch, this smells even worse than melting plastic.\r\n\r\n### XML in SQL databases\r\n\r\nMy latest thoughts, then, are to accept some bad smells (I *do* like the smell of burning plastic, actually) and simplify my database:  Instead of pickled binary objects, I'll store XML in a column (at least that isn't implementation-tied), and other tables will give me indices to this XML.  Thinking hard about my use cases, I think I can cover 80% of what I need with being able to look things up by feed, by subscription, by user, by date, and a few other useful aspects.  Once I've gotten a pile of data out of the database in XML form, I can then attack it with XSL.\r\n\r\nHowever, what gives me even further enthusiasm for this approach is [this little XPath extension to PostgreSQL][postxml].  This gives you a set of functions to apply XPath to XML-containing columns in SQL queries.  So, you can pull out nodes in a select, or search on the results in a WHERE clause, among other things.  I haven't tried it yet, but it gives me ideas.\r\n\r\nOne idea is that, through [PySQLite's API additions][pysqliteapi], I can easily add new SQL functions at will-- oh like, say, some XPath functions using libxml2 under python.\r\n\r\nGranted, there are no indices backing these XPath searches, and using these python functions added to SQLite comes with overhead, the availability of XPath in SQL could give me the 20% I'm missing with simple tables.  It might be worth the price and the smells.\r\n\r\n### So Anyway...\r\n\r\nThat's where I'm at right now.  I think I've written a bunch, and all this text could use some code examples and some diagrams.  But, I figured I'd think out loud a bit and see if anyone could step in and smack me for being a complete twink.  \r\n\r\nI want to slurp in Atom XML data, with arbitrary extensions, and be able to attack it with some reasonable set of queries to recombine this data into new feeds.\r\n\r\nI know I'm not the only person thinking about this stuff, and I've got to assume that I'm nowhere near the smartest about it.  I'm still working on this aggregator thing, and making what I think is some fun progress with a [REST interface][dbagg3_api], but this data stuff has me stalled.\r\n\r\nSo... what do you think?\r\n\r\n[virtuoso]: http://virtuoso.openlinksw.com/\r\n[dbagg3_api]: http://www.decafbad.com/cvs/*checkout*/dbagg3/lib/dbagg3/web/api.py?rev=HEAD&#38;content-type=text/x-python\r\n[pysqliteapi]: http://pysqlite.sourceforge.net/old/documentation/pysqlite/node10.html\r\n[postxml]: http://www.throwingbeans.org/tech/postgresql_and_xml.html\r\n[exist]: http://exist.sourceforge.net/\r\n[xindice]: http://xml.apache.org/xindice/\r\n[bdbxml]: http://www.sleepycat.com/products/xml.shtml\r\n[urchin]: http://urchin.sourceforge.net/\r\n[dbagg3]: http://www.decafbad.com/cvs/dbagg3/\r\n[dbagg3_sql]: http://www.decafbad.com/2004/08/dbagg3.sql\r\n[xpathudell]: http://webservices.xml.com/pub/a/ws/2003/04/15/semanticblog.html\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221082837\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://franklinmint.fm\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b9ed774661a22ff8797a1e0e24f0baf3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://franklinmint.fm\">Robert Sayre</a>\r\n                </div>\r\n                <a href=\"#comment-221082837\" class=\"permalink\"><time datetime=\"2004-08-23T19:23:19\">2004-08-23T19:23:19</time></a>\r\n            </div>\r\n            <div class=\"content\">FYI: Apple's upcoming SafariRSS uses XQuery to parse feeds. The Tiger version of NSXML includes XQuery as well.</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221082838\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=719ad7cfa24c00bbcaa8030427dd8743&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"\">bear</a>\r\n                </div>\r\n                <a href=\"#comment-221082838\" class=\"permalink\"><time datetime=\"2004-08-23T21:16:42\">2004-08-23T21:16:42</time></a>\r\n            </div>\r\n            <div class=\"content\">Not knowing what errors you are getting during the dbxml build means my comment will be generic but I hope it is still useful.\r\n\r\nThe OSAF people are using dbxml as their back-end data store and their build process works on os/x (what I use) - I can forward the makefile or just compare notes if that is useful to you.\r\n\r\nthanks for your great writing</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221082839\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://randomthoughts.vandorp.ca/WK/blog\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=0a9028b800da9db6932c2f026d50847b&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://randomthoughts.vandorp.ca/WK/blog\">Darryl</a>\r\n                </div>\r\n                <a href=\"#comment-221082839\" class=\"permalink\"><time datetime=\"2004-08-24T04:27:51\">2004-08-24T04:27:51</time></a>\r\n            </div>\r\n            <div class=\"content\">Try a recipe by Kimbro Staken \r\nhttp://www.xmldatabases.org/movabletype/archives/000267.html</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221082840\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://simon.incutio.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=02ecb4f56e961dd226352c4dd51eff26&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://simon.incutio.com/\">Simon Willison</a>\r\n                </div>\r\n                <a href=\"#comment-221082840\" class=\"permalink\"><time datetime=\"2004-08-24T18:27:33\">2004-08-24T18:27:33</time></a>\r\n            </div>\r\n            <div class=\"content\">Unfortunately, the XPath extension for PostgreSQL seems to be vapourware. As far as I know it exists only as a mention in the blog entry you linked to - the guy never released it. I'd love to be proved wrong - I'd really like to use it for a whole bunch of different things.</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221082841\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.throwingbeans.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=96bc90c98bc78316eda53f6d1dbfa0f6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.throwingbeans.org\">Tom Dyson</a>\r\n                </div>\r\n                <a href=\"#comment-221082841\" class=\"permalink\"><time datetime=\"2004-08-25T21:10:17\">2004-08-25T21:10:17</time></a>\r\n            </div>\r\n            <div class=\"content\">The XPath extensions for Postgres are certainly not vapourware: we're using them in a content management environment for several high-profile websites. The extensions are available as part of the Postgres 8 beta download, where you'll find them in source code form in the contrib/xml directory. If you need help installing the functions, let me know - we have compiled them successfully on Debian, RedHat, OS X and Windows.</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221082842\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=7028f422ca6da0180de6c9d922a3228f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://dannyayers.com\">Danny</a>\r\n                </div>\r\n                <a href=\"#comment-221082842\" class=\"permalink\"><time datetime=\"2004-09-08T22:03:05\">2004-09-08T22:03:05</time></a>\r\n            </div>\r\n            <div class=\"content\">I've not tried that kind of data size with RDF either, though am assured kit like Kowari can handle it.\r\n\r\nA possible compromise approach might be to use SQL storage directly for core syndication stuff, with RDF at the side. \r\n\r\nVaguely relevant blogged stuff:\r\n\r\nhttp://dannyayers.com/archives/2004/08/10/extending-the-capabilities-of-content-management-systems-with-rdf/\r\n\r\nanother possibility is using a triplestore on top of SQL, you end up with views/queries like this:\r\n\r\nhttp://dannyayers.com/archives/2004/07/14/all-in-a-days-work/</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221082843\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://netapps.muohio.edu/blogs/darcusb/darcusb/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8043a49e7e80eef7672fa2be09b51473&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://netapps.muohio.edu/blogs/darcusb/darcusb/\">Bruce</a>\r\n                </div>\r\n                <a href=\"#comment-221082843\" class=\"permalink\"><time datetime=\"2005-02-24T03:16:48\">2005-02-24T03:16:48</time></a>\r\n            </div>\r\n            <div class=\"content\">You might take a look at BDB XML again.  I recall having problems compiling v1 on Mac OS X too, but had no such problems with v2.  And it addds XQuery to the mix.</div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2004",
    "path": "2004/08/23/slicing-and-dicing-to-make-atom-soup-in-dbagg3",
    "prevPostPath": "2004/08/24/more-cooks-in-the-feed-stew-kitchen",
    "nextPostPath": "2004/08/23/mysql-and-xml-output"
  },
  {
    "comments_archived": true,
    "date": "2004-08-23T05:09:51.000Z",
    "excerpt": "So...  How many of you have ever used mysql -X?",
    "layout": "post",
    "tags": [
      "hacks",
      "xml"
    ],
    "title": "mysql and XML output",
    "wordpress_id": 538,
    "wordpress_slug": "mysql-and-xml-output",
    "wordpress_url": "http://www.decafbad.com/blog/?p=538",
    "year": "2004",
    "month": "08",
    "day": "23",
    "isDir": false,
    "slug": "mysql-and-xml-output",
    "postName": "2004-08-23-mysql-and-xml-output",
    "html": "<p>So...  How many of you have ever used <code>mysql -X</code>?</p>\n<p>I just discovered it today, while screwing around with dumping database queries into Atom.  While I&#39;m not entirely sure it&#39;s what I need to use, this is pretty nifty:</p>\n<pre><code>$ mysql -Xp -udbagg3 dbagg3 -e &#39;\n&gt; select id, title, modified \n&gt; from feed\n&gt; order by modified \n&gt; limit 4&#39; \nEnter password:\n\n&lt;?xml version=&quot;1.0&quot;?&gt;\n\n&lt;resultset statement=&quot;select id, title, modified \n        from feed order by modified limit 4&quot;&gt;\n  &lt;row&gt;\n    &lt;id&gt;527&lt;/id&gt;\n    &lt;title&gt;Channel Dean&lt;/title&gt;\n    &lt;modified&gt;2004-03-04 15:56:54&lt;/modified&gt;\n  &lt;/row&gt;\n\n  &lt;row&gt;\n    &lt;id&gt;31&lt;/id&gt;\n    &lt;title&gt;chocolate and vodka&lt;/title&gt;\n    &lt;modified&gt;2004-07-21 21:30:08&lt;/modified&gt;\n  &lt;/row&gt;\n\n  &lt;row&gt;\n    &lt;id&gt;183&lt;/id&gt;\n    &lt;title&gt;floating atoll&lt;/title&gt;\n    &lt;modified&gt;2004-07-31 14:09:27&lt;/modified&gt;\n  &lt;/row&gt;\n\n  &lt;row&gt;\n    &lt;id&gt;24&lt;/id&gt;\n    &lt;title&gt;What&#39;s Your Brand Mantra?&lt;/title&gt;\n    &lt;modified&gt;2004-08-02 03:15:03&lt;/modified&gt;\n  &lt;/row&gt;\n&lt;/resultset&gt;    </code></pre>\n<p>Now, while I don&#39;t think that using this for <code>dbagg3</code> is all that great an idea, it&#39;s something I need to remember for future shell and XSLT hacks...</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221087588\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=365087c6a73a2ee5fa90760c2f9d9ca8&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">iamsure</a>\n</div>\n<a href=\"#comment-221087588\" class=\"permalink\"><time datetime=\"2004-08-23T03:47:12\">2004-08-23T03:47:12</time></a>\n</div>\n<div class=\"content\">Is there a way to do so without the commandline option, ie, via a select call, etc?</div>\n</li>\n<li class=\"comment\" id=\"comment-221087591\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=34b6089110a6bfc86b6351ba400ae8fa&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">bosshoff</a>\n</div>\n<a href=\"#comment-221087591\" class=\"permalink\"><time datetime=\"2005-04-20T12:22:15\">2005-04-20T12:22:15</time></a>\n</div>\n<div class=\"content\">There is a better way, using mysqldump, explained here: http://insight.zdnet.co.uk/software/developer/0,39020469,2112200,00.htm</div>\n</li>\n<li class=\"comment\" id=\"comment-221087595\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4c32c5992ac6744d2f14712d280e3834&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Rededog027</a>\n</div>\n<a href=\"#comment-221087595\" class=\"permalink\"><time datetime=\"2007-07-19T23:51:15\">2007-07-19T23:51:15</time></a>\n</div>\n<div class=\"content\"><p>That is awesome I haven't used it before but it is extreamly useful for  creating changelogs from svn and bugzilla :)</p></div>\n</li>\n</ul>\n</div>\n",
    "body": "So...  How many of you have ever used `mysql -X`?\r\n\r\nI just discovered it today, while screwing around with dumping database queries into Atom.  While I'm not entirely sure it's what I need to use, this is pretty nifty:\r\n\r\n    $ mysql -Xp -udbagg3 dbagg3 -e '\r\n    > select id, title, modified \r\n    > from feed\r\n    > order by modified \r\n    > limit 4' \r\n    Enter password:\r\n \r\n    <?xml version=\"1.0\"?>\r\n\r\n    <resultset statement=\"select id, title, modified \r\n            from feed order by modified limit 4\">\r\n      <row>\r\n        <id>527</id>\r\n        <title>Channel Dean</title>\r\n        <modified>2004-03-04 15:56:54</modified>\r\n      </row>\r\n\r\n      <row>\r\n        <id>31</id>\r\n        <title>chocolate and vodka</title>\r\n        <modified>2004-07-21 21:30:08</modified>\r\n      </row>\r\n\r\n      <row>\r\n        <id>183</id>\r\n        <title>floating atoll</title>\r\n        <modified>2004-07-31 14:09:27</modified>\r\n      </row>\r\n \r\n      <row>\r\n        <id>24</id>\r\n        <title>What's Your Brand Mantra?</title>\r\n        <modified>2004-08-02 03:15:03</modified>\r\n      </row>\r\n    </resultset>    \r\n\r\nNow, while I don't think that using this for `dbagg3` is all that great an idea, it's something I need to remember for future shell and XSLT hacks...\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221087588\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=365087c6a73a2ee5fa90760c2f9d9ca8&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"\">iamsure</a>\r\n                </div>\r\n                <a href=\"#comment-221087588\" class=\"permalink\"><time datetime=\"2004-08-23T03:47:12\">2004-08-23T03:47:12</time></a>\r\n            </div>\r\n            <div class=\"content\">Is there a way to do so without the commandline option, ie, via a select call, etc?</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087591\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=34b6089110a6bfc86b6351ba400ae8fa&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"\">bosshoff</a>\r\n                </div>\r\n                <a href=\"#comment-221087591\" class=\"permalink\"><time datetime=\"2005-04-20T12:22:15\">2005-04-20T12:22:15</time></a>\r\n            </div>\r\n            <div class=\"content\">There is a better way, using mysqldump, explained here: http://insight.zdnet.co.uk/software/developer/0,39020469,2112200,00.htm</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087595\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4c32c5992ac6744d2f14712d280e3834&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"\">Rededog027</a>\r\n                </div>\r\n                <a href=\"#comment-221087595\" class=\"permalink\"><time datetime=\"2007-07-19T23:51:15\">2007-07-19T23:51:15</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>That is awesome I haven't used it before but it is extreamly useful for  creating changelogs from svn and bugzilla :)</p></div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2004",
    "path": "2004/08/23/mysql-and-xml-output",
    "prevPostPath": "2004/08/23/slicing-and-dicing-to-make-atom-soup-in-dbagg3",
    "nextPostPath": "2004/08/05/dbagg3cvs"
  },
  {
    "comments_archived": true,
    "date": "2004-08-05T23:53:34.000Z",
    "excerpt": "I've just dumped what code I have into my CVS repository.  So, go ahead and poke fun at it.",
    "layout": "post",
    "tags": [
      "syndication",
      "python"
    ],
    "title": "dbagg3 code in CVS",
    "wordpress_id": 537,
    "wordpress_slug": "dbagg3cvs",
    "wordpress_url": "http://www.decafbad.com/blog/?p=537",
    "year": "2004",
    "month": "08",
    "day": "05",
    "isDir": false,
    "slug": "dbagg3cvs",
    "postName": "2004-08-05-dbagg3cvs",
    "html": "<p>I&#39;ve just dumped what code I have into my CVS repository.  So, go ahead and poke fun at it:</p>\n<ul>\n<li><a href=\"http://www.decafbad.com/cvs/dbagg3/\">http://www.decafbad.com/cvs/dbagg3/</a></li>\n</ul>\n<p>Or, fetch it from CVS:</p>\n<pre><code>$ cvs -d:pserver:anoncvs@www.decafbad.com:/cvsroot login\n(Logging in to anoncvs@www.decafbad.com)\nCVS password: anoncvs\n$ cvs -d:pserver:anoncvs@www.decafbad.com:/cvsroot co dbagg3</code></pre>\n<!--more-->\n<p>shortname=dbagg3cvs</p>\n",
    "body": "I've just dumped what code I have into my CVS repository.  So, go ahead and poke fun at it:\r\n\r\n   * <http://www.decafbad.com/cvs/dbagg3/>\r\n\r\nOr, fetch it from CVS:\r\n\r\n    $ cvs -d:pserver:anoncvs@www.decafbad.com:/cvsroot login\r\n    (Logging in to anoncvs@www.decafbad.com)\r\n    CVS password: anoncvs\r\n    $ cvs -d:pserver:anoncvs@www.decafbad.com:/cvsroot co dbagg3\r\n<!--more-->\r\nshortname=dbagg3cvs\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2004",
    "path": "2004/08/05/dbagg3cvs",
    "summary": "<p>I&apos;ve just dumped what code I have into my CVS repository.  So, go ahead and poke fun at it:</p>\n<ul>\n<li><a href=\"http://www.decafbad.com/cvs/dbagg3/\">http://www.decafbad.com/cvs/dbagg3/</a></li>\n</ul>\n<p>Or, fetch it from CVS:</p>\n<pre><code>$ cvs -d:pserver:anoncvs@www.decafbad.com:/cvsroot login\n(Logging in to anoncvs@www.decafbad.com)\nCVS password: anoncvs\n$ cvs -d:pserver:anoncvs@www.decafbad.com:/cvsroot co dbagg3</code></pre>\n",
    "prevPostPath": "2004/08/23/mysql-and-xml-output",
    "nextPostPath": "2004/08/05/introducing-dbagg3-an-atom-powered-clientserver-aggregator"
  },
  {
    "comments_archived": true,
    "date": "2004-08-05T13:04:56.000Z",
    "excerpt": "It's a new feed aggregator, my third attempt at such.  Everything is clunky and command-line driven at present--but I've got further plans, like a REST API for feed queries and manipulation of various things such as feed subscriptions and the read/unread state of items.  Pair this with an XSLT-driven browser UI, and the possibility of other clients (not the least of include other Atom-consuming aggregators).\n\nThe goal is to make a Client/Server Aggregator.",
    "layout": "post",
    "tags": [
      "syndication",
      "python"
    ],
    "title": "Introducing dbagg3, an Atom-powered client/server aggregator",
    "wordpress_id": 536,
    "wordpress_slug": "introducing-dbagg3-an-atom-powered-clientserver-aggregator",
    "wordpress_url": "http://www.decafbad.com/blog/?p=536",
    "year": "2004",
    "month": "08",
    "day": "05",
    "isDir": false,
    "slug": "introducing-dbagg3-an-atom-powered-clientserver-aggregator",
    "postName": "2004-08-05-introducing-dbagg3-an-atom-powered-clientserver-aggregator",
    "html": "<p><strong>Update</strong>: I&#39;ve just dumped what code I have into my CVS repository.  So, go ahead and poke fun at it:</p>\n<ul>\n<li><a href=\"http://www.decafbad.com/cvs/dbagg3/\">http://www.decafbad.com/cvs/dbagg3/</a></li>\n</ul>\n<p>Or, fetch it from CVS:</p>\n<pre><code>$ cvs -d:pserver:anoncvs@www.decafbad.com:/cvsroot login\n(Logging in to anoncvs@www.decafbad.com)\nCVS password: anoncvs\n$ cvs -d:pserver:anoncvs@www.decafbad.com:/cvsroot co dbagg3</code></pre>\n<hr>\n<p>So, besides the funk, there&#39;s a little project in which I&#39;ve gotten immersed.  Here&#39;s a teaser diagram:</p>\n<img src=\"http://www.decafbad.com/2004/08/dbagg3-demo/dbagg3-phase1.jpg\" />\n\n<p>It&#39;s a feed aggregator, my third attempt at such.  At present, things are roughly close to the diagram above.  Everything is clunky and command-line driven at present--but I&#39;ve got further plans, like a REST API for feed queries and manipulation of various things such as feed subscriptions and the read/unread state of items.  Pair this with an XSLT-driven browser UI, and the possibility of other clients (not the least of include other Atom-consuming aggregators).</p>\n<p>The goal is to make a <a href=\"http://www.intertwingly.net/wiki/pie/ClientServerAggregator\">Client/Server Aggregator</a>.  Somewhat serendipitously, I just caught Bob DuCharme&#39;s xml.com <a href=\"http://www.xml.com/pub/a/2004/08/04/tr-xml.html\">article on Amazon.com&#39;s web services</a>, which <a href=\"http://www.decafbad.com/blog/2004/06/16/wishofthemonthclub1\">I really like</a> and have drawn inspiration from in thinking about this new aggregator.  Eventually, I want to offer the same sort of XML+XSL style of service that they&#39;ve put together, along with some futher inspiration from the <a href=\"http://www.atomenabled.org/developers/api/atom-api-spec.php\">Atom API</a>.  </p>\n<p>Anyway, as another teaser, check out this early demo involving the XML this thing has been producing, coupled with some experimental XSL:</p>\n<ul>\n<li><a href=\"http://www.decafbad.com/2004/08/dbagg3-demo/xsltproc.cgi?xsl=http://www.decafbad.com/2004/08/dbagg3-demo/new.xsl&#38;xml=http://www.decafbad.com/2004/08/dbagg3-demo/demo.xml\">dbagg3 demo page</a></li>\n</ul>\n<p>You&#39;ll notice that there are three URLs involved here:</p>\n<ul>\n<li><a href=\"http://www.decafbad.com/2004/08/dbagg3-demo/xsltproc.cgi\">An XSLT processor service</a></li>\n<li><a href=\"http://www.decafbad.com/2004/08/dbagg3-demo/new.xsl\">An XSLT stylesheet</a></li>\n<li><a href=\"http://www.decafbad.com/2004/08/dbagg3-demo/demo.xml\">Some aggregated Atom feeds</a></li>\n</ul>\n<p>The XSLT expects Atom (plus a few extensions of my own), so you can also do things like this:</p>\n<ul>\n<li><a href=\"http://www.decafbad.com/2004/08/dbagg3-demo/xsltproc.cgi?xsl=http://www.decafbad.com/2004/08/dbagg3-demo/new.xsl&#38;xml=http://www.diveintomark.org/xml/atom.xml\">Dive Into Mark</a></li>\n<li><a href=\"http://www.decafbad.com/2004/08/dbagg3-demo/xsltproc.cgi?xsl=http://www.decafbad.com/2004/08/dbagg3-demo/new.xsl&#38;xml=http://www.intertwingly.net/blog/index.atom\">Intertwingly</a></li>\n<li><a href=\"http://www.decafbad.com/2004/08/dbagg3-demo/xsltproc.cgi?xsl=http://www.decafbad.com/2004/08/dbagg3-demo/new.xsl&#38;xml=http://www.decafbad.com/blog/atom.xml\">0xDECAFBAD</a></li>\n</ul>\n<p>These are the sorts of tricks I was looking forward to when I started thinking about things like a <a href=\"http://www.decafbad.com/blog/2004/05/17/use_atom_for_a_universal_blog_transfer_protocol\">universal blog transfer format</a> and <a href=\"http://www.decafbad.com/blog/2004/05/03/put_on_your_rsscolored_glasses_and_forget_about_atom\">rose-colored glasses</a>.  XSLT used like this could just as easily produce a blog or RSS 2.0 content.</p>\n<p>Anyway, hoping to get some code into CVS by this weekend that&#39;s not entirely embarassing.  So if you&#39;re interested in this stuff, stay tuned.  I&#39;m hoping that this thing can provide a base for others interested in feed aggregation--if you just want to play with UI, use the scanning and storage as-is and tinker with XSLT; if you want to play with storage and query, leave the scanning and UI alone; if you want to tinker with parsing... er, <a href=\"http://www.feedparser.org/\">talk to Mark Pilgrim</a>.</p>\n<p>More soon!  </p>\n<p>(Oh yeah, and I <em>will</em> be working on coming up with a better name than <code>dbagg3</code>.  Unfortunately, I probably won&#39;t be coming up with a more visually appealing design for the UI, since what you see is the best I can do.  Heh, heh.  Don&#39;t let your programmers do visual design...)</p>\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221084326\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://blog.nur-eine-i.de\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e7368d797917d0df7942c26d4ed2e580&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://blog.nur-eine-i.de\">Benjamin</a>\n</div>\n<a href=\"#comment-221084326\" class=\"permalink\"><time datetime=\"2004-08-05T10:22:30\">2004-08-05T10:22:30</time></a>\n</div>\n<div class=\"content\">This is great. It seems that this could be the base, for what I've been dreaming/thinking about the last half year or so. In contrast to you, I haven't come up with any code yet (mostly due to the fact, that I don't python yet, and I found no other reasonably good feed parser, than the Universal Feed Parser), but with a name: Roosster \nFeatures I'd really like to have in such a ClientServerAggregator are:\n(a) search over entries the aggregator has seen to date\n(b) add and arbitrary number of notes to any entry\n(c) add multiple category-tags to entries\n(d) interlink entries (I know this could be solved by some 'Related Entries' stuff, but somtimes I don't trust these \"automatic classifiers\")\nCan't wait, until I can take a look at the code and see if I can extend it. This would finally be a real reason to learn python.\nBy the way, I really like the interface. Might be, that's because I'm a programmer too?!</div>\n</li>\n<li class=\"comment\" id=\"comment-221084328\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e1cc8e7103bb0f77a7d7abf91b1a961b&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Christopher Drake</a>\n</div>\n<a href=\"#comment-221084328\" class=\"permalink\"><time datetime=\"2004-08-05T18:30:41\">2004-08-05T18:30:41</time></a>\n</div>\n<div class=\"content\">Very nice. The demo has me salivating a little.\nOddly enough, I like the UI. If you can slim it down, side-to-side-wise a bit, it would also be a great aggregator to rip whole chunks from and feed to a Palm Pilot or PocketPC, as well. They're not as big as they were in the past, but with decent strides every couple of weeks, they still have a lot of following. Your page-width is dynamic, and that means a lot to me, a Palm user.\nA feature I'd like to see is kind of like Bloglines, where you receive a small box of info from the RSS feed, or what-have-you to give you a taste of an article. If going 1 link deep from any link on the aggregator page linked to a small page with such a tidbit, it would make surfing the articles a lot faster. This would allow a PDA or cellphone to drag an aggregator page 1 link deep with specialised software and get all of the highlights from say, 20 blogs.\nThat could be a major boon, especially for people that connect while at wireless access points on business trips, etc.\nKeep it up, this looks like it'll rock when you are done.</div>\n</li>\n<li class=\"comment\" id=\"comment-221084331\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://b4mad.net/datenbrei/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=0038a1e9f4492e2f964f0f39d2d0dc7f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://b4mad.net/datenbrei/\">Christoph Görn</a>\n</div>\n<a href=\"#comment-221084331\" class=\"permalink\"><time datetime=\"2004-08-08T12:41:08\">2004-08-08T12:41:08</time></a>\n</div>\n<div class=\"content\">Hi,\nand I will try to plug an jabber/XMPP bot into it, so it will deliver the aggragated content rigth to my beloved IM app...</div>\n</li>\n</ul>\n</div>\n",
    "body": "**Update**: I've just dumped what code I have into my CVS repository.  So, go ahead and poke fun at it:\r\n\r\n   * <http://www.decafbad.com/cvs/dbagg3/>\r\n\r\nOr, fetch it from CVS:\r\n\r\n    $ cvs -d:pserver:anoncvs@www.decafbad.com:/cvsroot login\r\n    (Logging in to anoncvs@www.decafbad.com)\r\n    CVS password: anoncvs\r\n    $ cvs -d:pserver:anoncvs@www.decafbad.com:/cvsroot co dbagg3\r\n\r\n* * *\r\n\r\nSo, besides the funk, there's a little project in which I've gotten immersed.  Here's a teaser diagram:\r\n\r\n<img src=\"http://www.decafbad.com/2004/08/dbagg3-demo/dbagg3-phase1.jpg\" />\r\n\r\nIt's a feed aggregator, my third attempt at such.  At present, things are roughly close to the diagram above.  Everything is clunky and command-line driven at present--but I've got further plans, like a REST API for feed queries and manipulation of various things such as feed subscriptions and the read/unread state of items.  Pair this with an XSLT-driven browser UI, and the possibility of other clients (not the least of include other Atom-consuming aggregators).\r\n\r\nThe goal is to make a [Client/Server Aggregator][clientserveragg].  Somewhat serendipitously, I just caught Bob DuCharme's xml.com [article on Amazon.com's web services][amazonrest], which [I really like][wishes] and have drawn inspiration from in thinking about this new aggregator.  Eventually, I want to offer the same sort of XML+XSL style of service that they've put together, along with some futher inspiration from the [Atom API][atomapi].  \r\n\r\nAnyway, as another teaser, check out this early demo involving the XML this thing has been producing, coupled with some experimental XSL:\r\n\r\n* [dbagg3 demo page][dbagg3demo]\r\n\r\nYou'll notice that there are three URLs involved here:\r\n\r\n* [An XSLT processor service][dbagg3xsltproc]\r\n* [An XSLT stylesheet][dbagg3xsl]\r\n* [Some aggregated Atom feeds][dbagg3xml]\r\n\r\nThe XSLT expects Atom (plus a few extensions of my own), so you can also do things like this:\r\n\r\n* [Dive Into Mark][mark]\r\n* [Intertwingly][sam]\r\n* [0xDECAFBAD][me]\r\n\r\nThese are the sorts of tricks I was looking forward to when I started thinking about things like a [universal blog transfer format][blogxfer] and [rose-colored glasses][roseglasses].  XSLT used like this could just as easily produce a blog or RSS 2.0 content.\r\n\r\nAnyway, hoping to get some code into CVS by this weekend that's not entirely embarassing.  So if you're interested in this stuff, stay tuned.  I'm hoping that this thing can provide a base for others interested in feed aggregation--if you just want to play with UI, use the scanning and storage as-is and tinker with XSLT; if you want to play with storage and query, leave the scanning and UI alone; if you want to tinker with parsing... er, [talk to Mark Pilgrim][ufp].\r\n\r\nMore soon!  \r\n\r\n(Oh yeah, and I *will* be working on coming up with a better name than `dbagg3`.  Unfortunately, I probably won't be coming up with a more visually appealing design for the UI, since what you see is the best I can do.  Heh, heh.  Don't let your programmers do visual design...)\r\n\r\n[atomapi]: http://www.atomenabled.org/developers/api/atom-api-spec.php\r\n[urchin]: http://urchin.sourceforge.net/\r\n[ufp]: http://www.feedparser.org/\r\n[roseglasses]: http://www.decafbad.com/blog/2004/05/03/put_on_your_rsscolored_glasses_and_forget_about_atom\r\n[blogxfer]: http://www.decafbad.com/blog/2004/05/17/use_atom_for_a_universal_blog_transfer_protocol\r\n[me]: http://www.decafbad.com/2004/08/dbagg3-demo/xsltproc.cgi?xsl=http://www.decafbad.com/2004/08/dbagg3-demo/new.xsl&#38;xml=http://www.decafbad.com/blog/atom.xml\r\n[sam]: http://www.decafbad.com/2004/08/dbagg3-demo/xsltproc.cgi?xsl=http://www.decafbad.com/2004/08/dbagg3-demo/new.xsl&#38;xml=http://www.intertwingly.net/blog/index.atom\r\n[mark]: http://www.decafbad.com/2004/08/dbagg3-demo/xsltproc.cgi?xsl=http://www.decafbad.com/2004/08/dbagg3-demo/new.xsl&#38;xml=http://www.diveintomark.org/xml/atom.xml\r\n[dbagg3xsltproc]: http://www.decafbad.com/2004/08/dbagg3-demo/xsltproc.cgi\r\n[dbagg3xsl]: http://www.decafbad.com/2004/08/dbagg3-demo/new.xsl\r\n[dbagg3xml]: http://www.decafbad.com/2004/08/dbagg3-demo/demo.xml\r\n[awsrss]: http://www.decafbad.com/2004/03/xml-rss091.xsl\r\n[dbagg3demo]: http://www.decafbad.com/2004/08/dbagg3-demo/xsltproc.cgi?xsl=http://www.decafbad.com/2004/08/dbagg3-demo/new.xsl&#38;xml=http://www.decafbad.com/2004/08/dbagg3-demo/demo.xml\r\n[clientserveragg]: http://www.intertwingly.net/wiki/pie/ClientServerAggregator\r\n[amazonrest]: http://www.xml.com/pub/a/2004/08/04/tr-xml.html\r\n[wishes]: http://www.decafbad.com/blog/2004/06/16/wishofthemonthclub1\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221084326\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://blog.nur-eine-i.de\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e7368d797917d0df7942c26d4ed2e580&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://blog.nur-eine-i.de\">Benjamin</a>\r\n                </div>\r\n                <a href=\"#comment-221084326\" class=\"permalink\"><time datetime=\"2004-08-05T10:22:30\">2004-08-05T10:22:30</time></a>\r\n            </div>\r\n            <div class=\"content\">This is great. It seems that this could be the base, for what I've been dreaming/thinking about the last half year or so. In contrast to you, I haven't come up with any code yet (mostly due to the fact, that I don't python yet, and I found no other reasonably good feed parser, than the Universal Feed Parser), but with a name: Roosster \r\n\r\nFeatures I'd really like to have in such a ClientServerAggregator are:\r\n(a) search over entries the aggregator has seen to date\r\n(b) add and arbitrary number of notes to any entry\r\n(c) add multiple category-tags to entries\r\n(d) interlink entries (I know this could be solved by some 'Related Entries' stuff, but somtimes I don't trust these \"automatic classifiers\")\r\n\r\nCan't wait, until I can take a look at the code and see if I can extend it. This would finally be a real reason to learn python.\r\n\r\nBy the way, I really like the interface. Might be, that's because I'm a programmer too?!</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221084328\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=e1cc8e7103bb0f77a7d7abf91b1a961b&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"\">Christopher Drake</a>\r\n                </div>\r\n                <a href=\"#comment-221084328\" class=\"permalink\"><time datetime=\"2004-08-05T18:30:41\">2004-08-05T18:30:41</time></a>\r\n            </div>\r\n            <div class=\"content\">Very nice. The demo has me salivating a little.\r\n\r\nOddly enough, I like the UI. If you can slim it down, side-to-side-wise a bit, it would also be a great aggregator to rip whole chunks from and feed to a Palm Pilot or PocketPC, as well. They're not as big as they were in the past, but with decent strides every couple of weeks, they still have a lot of following. Your page-width is dynamic, and that means a lot to me, a Palm user.\r\n\r\nA feature I'd like to see is kind of like Bloglines, where you receive a small box of info from the RSS feed, or what-have-you to give you a taste of an article. If going 1 link deep from any link on the aggregator page linked to a small page with such a tidbit, it would make surfing the articles a lot faster. This would allow a PDA or cellphone to drag an aggregator page 1 link deep with specialised software and get all of the highlights from say, 20 blogs.\r\n\r\nThat could be a major boon, especially for people that connect while at wireless access points on business trips, etc.\r\n\r\nKeep it up, this looks like it'll rock when you are done.</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221084331\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://b4mad.net/datenbrei/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=0038a1e9f4492e2f964f0f39d2d0dc7f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://b4mad.net/datenbrei/\">Christoph Görn</a>\r\n                </div>\r\n                <a href=\"#comment-221084331\" class=\"permalink\"><time datetime=\"2004-08-08T12:41:08\">2004-08-08T12:41:08</time></a>\r\n            </div>\r\n            <div class=\"content\">Hi,\r\n and I will try to plug an jabber/XMPP bot into it, so it will deliver the aggragated content rigth to my beloved IM app...</div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2004",
    "path": "2004/08/05/introducing-dbagg3-an-atom-powered-clientserver-aggregator",
    "thumbnail": "http://www.decafbad.com/2004/08/dbagg3-demo/dbagg3-phase1.jpg",
    "prevPostPath": "2004/08/05/dbagg3cvs",
    "nextPostPath": "2004/07/30/kibo-kibo-kibo"
  }
]