{"comments_archived":true,"date":"2005-10-20T00:00:00.000Z","layout":"post","tags":["rss","syndication","atom","rest","http","podcasting"],"title":"Time-release Syndication","wordpress_id":740,"wordpress_slug":"time-release-syndication","wordpress_url":"http://decafbad.com/blog/?p=740","url":"/2005/10/20/time-release-syndication/","path":"2005/10/20/time-release-syndication","content":"<p><blockquote cite=\"http://www.surfarama.com/index.php?p=242\">Want to read Cory Doctorow’s new book, Someone comes to Town, Someone leaves Town, via RSS?<br /><br />This chicklet will let you do just that…doesn’t matter when you first subscribe, this feed will deliver the book to your feed reader in the right order, a couple of chapters a day, over the next month. You could even subscribe via WINKsite and get it all on your mobile phone…</blockquote>\n<small style=\"text-align:right; display:block\">Source: <a href=\"http://www.surfarama.com/index.php?p=242\">Surfarama » RSS for serialized content</a></small></p>\n<p>I&#39;ve been toying around with a few ideas for something like this for a few years, but have never bothered to finish any of them.  <a href=\"http://www.russellbeattie.com/notebook/1008220.html\">Russell Beattie</a> had an interesting implementation of this too.</p>\n<p>But, just in case I never actually <em>do</em> anything with this notion, here&#39;s a free idea—I wonder how many aggregators actually obey a <code>301 Moved Permanently</code> HTTP status code?  </p>\n<p><a href=\"http://simon.incutio.com/archive/2004/09/01/track\">Simon Willison wrote about this notion</a>: A reader subscribes using a clean and simple feed URL, but the aggregator receives a <code>301</code> redirect upon the first <code>GET</code>.  This redirect shifts the subscription over to a new feed URL with a unique ID for the reader, thereby uniquely tagging every new subscription to the feed.  The aggregator should then continue to use this tagged URL for all future requests.</p>\n<p>However, tagging a subscriber with an RSS radio collar implies that you&#39;ll have a database on the server maintaining notes tied to those IDs.  That might be cool if I&#39;m trying to gather some metrics, but for simple time-release syndication I don&#39;t really care about tracking a <em>person</em>.  I want to track a <em>start time</em>.  </p>\n<p>What if this post-redirect feed URL had the time of initial redirect in it, and the time release was just a function of the duration since that initial redirect?  Anonymous and no need for a database.  My notion is that I&#39;ll just need a PHP script and a fully-formed &quot;master feed&quot; on which the time-release feed will be a time-bounded &quot;viewport&quot; informed by a little date math.  </p>\n<p>Or, maybe I&#39;ll have a pile of pre-prepared content in a folder and munge that into a feed.  Imagine a podcast like <a href=\"http://www.project-daemon.net/\">Scott Sigler&#39;s Ancestor</a>, all queued up and ready on the server, but doled out automatically on a weekly basis from the beginning from the point you subscribed.  I&#39;ll leave as exercises for the reader issues of &quot;obfuscating&quot; URLs so that people can&#39;t easily skip ahead through the story.</p>\n<!-- tags: rss atom syndication rest http podcasting -->\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n\n        <ul class=\"comments\">\n\n        <li class=\"comment\" id=\"comment-221086694\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://laughingmeme.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=01457d1a0f0e533062cd0d1033fb4d7a&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://laughingmeme.org\">kellan</a>\n                </div>\n                <a href=\"#comment-221086694\" class=\"permalink\"><time datetime=\"2005-10-21T04:16:34\">2005-10-21T04:16:34</time></a>\n            </div>\n            <div class=\"content\"><p>My favorite example of this is Matt Webb&#39;s service which offers <a href=\"http://interconnected.org/home/more/lightcone/\" rel=\"nofollow\">RSS feed of your personal light cone</a></p></div>\n\n<pre><code>    &lt;/li&gt;\n\n    &lt;li class=&quot;comment&quot; id=&quot;comment-221086695&quot;&gt;\n        &lt;div class=&quot;meta&quot;&gt;\n            &lt;div class=&quot;author&quot;&gt;\n                &lt;a class=&quot;avatar image&quot; rel=&quot;nofollow&quot; \n                   href=&quot;&quot;&gt;&lt;img src=&quot;http://www.gravatar.com/avatar.php?gravatar_id=a0b347907bfaf05694805210ec595d6c&amp;amp;size=32&amp;amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png&quot;/&gt;&lt;/a&gt;\n                &lt;a class=&quot;avatar name&quot; rel=&quot;nofollow&quot; \n                   href=&quot;&quot;&gt;Martin Atkins&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;a href=&quot;#comment-221086695&quot; class=&quot;permalink&quot;&gt;&lt;time datetime=&quot;2005-10-21T07:06:00&quot;&gt;2005-10-21T07:06:00&lt;/time&gt;&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;content&quot;&gt;&lt;p&gt;This scheme falls down in two ways. Firstly, people have a tendency to share URLs, and when they do they tend to just take whatever&#39;s in their user-agent (your timestamped URL) rather than your pretty entry point URL that lives only on some HTML page somewhere.&lt;/p&gt;\n</code></pre><p>Secondly, lots of people use &quot;shared aggregators&quot;, which reduces load on your server but requires that everyone is seeing the same content.</p>\n\n<p>It&#39;s a nice idea, though. Its a shame that syndication tech ended up making it so tricky.</p></div>\n\n        </li>\n\n        <li class=\"comment\" id=\"comment-221086696\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221086696\" class=\"permalink\"><time datetime=\"2005-10-21T10:54:22\">2005-10-21T10:54:22</time></a>\n            </div>\n            <div class=\"content\"><p>@Kellan: Heh, I thought that one was kinda silly, but neat... It&#39;s in my subscription list.</p>\n\n<p><p>@Martin: D&#39;oh, that&#39;s right.  Even podcasts are being heard via shared aggregators now like Odeo.</p></div></p>\n<pre><code>    &lt;/li&gt;\n\n    &lt;li class=&quot;comment&quot; id=&quot;comment-221086697&quot;&gt;\n        &lt;div class=&quot;meta&quot;&gt;\n            &lt;div class=&quot;author&quot;&gt;\n                &lt;a class=&quot;avatar image&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://rasterweb.net/raster/&quot;&gt;&lt;img src=&quot;http://www.gravatar.com/avatar.php?gravatar_id=db0fab74bcb564ebb09295498b892fb6&amp;amp;size=32&amp;amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png&quot;/&gt;&lt;/a&gt;\n                &lt;a class=&quot;avatar name&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://rasterweb.net/raster/&quot;&gt;Pete Prodoehl&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;a href=&quot;#comment-221086697&quot; class=&quot;permalink&quot;&gt;&lt;time datetime=&quot;2005-10-21T17:14:17&quot;&gt;2005-10-21T17:14:17&lt;/time&gt;&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;content&quot;&gt;&lt;p&gt;Delta Park Project is a podcast that provides you with your own RSS feed url. I&#39;m not exactly sure what they do with it, but for now I trust them not to do any evil.&lt;/p&gt;&lt;/div&gt;\n\n    &lt;/li&gt;\n\n    &lt;/ul&gt;\n\n    &lt;/div&gt;\n</code></pre>"}