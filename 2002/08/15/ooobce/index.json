{
  "comments_archived": true,
  "date": "2002-08-15T17:33:30.000Z",
  "layout": "post",
  "title": "Living la vida regex",
  "wordpress_id": 214,
  "wordpress_slug": "ooobce",
  "wordpress_url": "http://www.decafbad.com/blog/?p=214",
  "year": "2002",
  "month": "08",
  "day": "15",
  "isDir": false,
  "slug": "ooobce",
  "postName": "2002-08-15-ooobce",
  "html": "<p><a href=\"http://diveintomark.org/archives/2002/08/15.html#better_living_through_regular_expressions\">Better living through regular expressions</a> from Mark Pilgrim.  This has got me thinking of two things:<ol><li>I need to hack together some MT macros or a plugin that finds &amp; links wiki-words in blog entries to my wiki, and I need to start writing in the wiki again.</li><li>I really dig his blog's skin, and I need to finally read though all of his <a href=\"http://diveintoaccessibility.org/\">accessibility tips</a> and re-skin this site.  This place is butt-ugly.</li></ol></p>\n<!--more-->\nshortname=ooobce\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221089786\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://diveintomark.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2aac8a68f46151f080ddb17ee0d2454e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://diveintomark.org/\">Mark Pilgrim</a>\n</div>\n<a href=\"#comment-221089786\" class=\"permalink\"><time datetime=\"2002-08-15T14:28:35\">2002-08-15T14:28:35</time></a>\n</div>\n<div class=\"content\">Better!  Make Movable Type understand wiki-style syntax.  Like complete wiki style.  Structured text.  * for lists.  === for headers.  [] for links.  Auto-paragraphs that actually work (and validate afterwards).  The whole works.  I wish I knew Perl.</div>\n</li>\n<li class=\"comment\" id=\"comment-221089787\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2ac2cffd36ada8c734b90e02a1e5c1ac&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221089787\" class=\"permalink\"><time datetime=\"2002-08-15T17:11:08\">2002-08-15T17:11:08</time></a>\n</div>\n<div class=\"content\">Hmm, I could think of 3 good ways to do this...Run my MT entries through TWiki via a little bit of hackery.  But of course, that leaves users of other wikiclones out.Use Text::WikiFormat  from CPAN, which seems like a nifty self-contained implementation of classic wiki formatting.  This choice, though, leaves MT unconnected to the content in an existing wiki.Use a combination of two of my pet projects: XmlRpcFilteringPipe and XmlRpcToWiki.  I'm not sure how MT tags work yet, but I suppose I could make a tag that filters its contents through an XML-RPC-based filter service that happens to run it through an XML-RPC-enabled wiki.I'm leaning toward #3, since with the XML-RPC pipeline concept I've been tinkering with, you could line up a series of transformations (not just wikification) on your blog entries, some of which could be performed via services offered at other websites.\nOf course, #2 is the probably the simplest, if all you want is just wiki formatting in MT.\nHmm.  I think I'll have to tinker with this.</div>\n</li>\n</ul>\n</div>\n",
  "body": "<p><a href=\"http://diveintomark.org/archives/2002/08/15.html#better_living_through_regular_expressions\">Better living through regular expressions</a> from Mark Pilgrim.  This has got me thinking of two things:<ol><li>I need to hack together some MT macros or a plugin that finds &amp; links wiki-words in blog entries to my wiki, and I need to start writing in the wiki again.</li><li>I really dig his blog's skin, and I need to finally read though all of his <a href=\"http://diveintoaccessibility.org/\">accessibility tips</a> and re-skin this site.  This place is butt-ugly.</li></ol></p>\r\n<!--more-->\r\nshortname=ooobce\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221089786\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://diveintomark.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2aac8a68f46151f080ddb17ee0d2454e&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://diveintomark.org/\">Mark Pilgrim</a>\r\n                </div>\r\n                <a href=\"#comment-221089786\" class=\"permalink\"><time datetime=\"2002-08-15T14:28:35\">2002-08-15T14:28:35</time></a>\r\n            </div>\r\n            <div class=\"content\">Better!  Make Movable Type understand wiki-style syntax.  Like complete wiki style.  Structured text.  * for lists.  === for headers.  [] for links.  Auto-paragraphs that actually work (and validate afterwards).  The whole works.  I wish I knew Perl.</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221089787\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2ac2cffd36ada8c734b90e02a1e5c1ac&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\r\n                </div>\r\n                <a href=\"#comment-221089787\" class=\"permalink\"><time datetime=\"2002-08-15T17:11:08\">2002-08-15T17:11:08</time></a>\r\n            </div>\r\n            <div class=\"content\">Hmm, I could think of 3 good ways to do this...Run my MT entries through TWiki via a little bit of hackery.  But of course, that leaves users of other wikiclones out.Use Text::WikiFormat  from CPAN, which seems like a nifty self-contained implementation of classic wiki formatting.  This choice, though, leaves MT unconnected to the content in an existing wiki.Use a combination of two of my pet projects: XmlRpcFilteringPipe and XmlRpcToWiki.  I'm not sure how MT tags work yet, but I suppose I could make a tag that filters its contents through an XML-RPC-based filter service that happens to run it through an XML-RPC-enabled wiki.I'm leaning toward #3, since with the XML-RPC pipeline concept I've been tinkering with, you could line up a series of transformations (not just wikification) on your blog entries, some of which could be performed via services offered at other websites.\r\n\r\nOf course, #2 is the probably the simplest, if all you want is just wiki formatting in MT.\r\n\r\nHmm.  I think I'll have to tinker with this.</div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
  "parentPath": "../blog.lmorchard.com/posts/archives/2002",
  "path": "2002/08/15/ooobce",
  "summary": "<p><a href=\"http://diveintomark.org/archives/2002/08/15.html#better_living_through_regular_expressions\">Better living through regular expressions</a> from Mark Pilgrim.  This has got me thinking of two things:</p><ol><li>I need to hack together some MT macros or a plugin that finds &amp; links wiki-words in blog entries to my wiki, and I need to start writing in the wiki again.</li><li>I really dig his blog's skin, and I need to finally read though all of his <a href=\"http://diveintoaccessibility.org/\">accessibility tips</a> and re-skin this site.  This place is butt-ugly.</li></ol><p></p>\n",
  "prevPostPath": "2002/08/15/ooobcf",
  "nextPostPath": "2002/08/15/ooobcd"
}