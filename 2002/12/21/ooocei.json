{"comments_archived":true,"date":"2002-12-21T00:00:00.000Z","layout":"post","title":"MovableType LDAP integration","wordpress_id":333,"wordpress_slug":"ooocei","wordpress_url":"http://www.decafbad.com/blog/?p=333","url":"/2002/12/21/ooocei/","summary":"<p>This week, at work, I cobbled together a hack for <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a> that hooks it up with an LDAP server for author accounts: <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableTypeLDAPAuthors\">MovableTypeLDAPAuthors</a>.  This is an early, early, early release of the thing, and is likely to do very nasty things for all that I know.  But, I wanted to share, and it seems to be working for the proof of concept at work (that is, MT weblogs on our intranet for every employee).  Hopefully soon it&apos;ll be approved, and I&apos;ll be looking into a commercial use license for <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a>.\n<br><br>\nYou know, for all the praise I&apos;ve read about <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a>, something I&apos;ve really not seen much attention toward is the code itself.  I mean, yeah this thing is great, and it&apos;s so simple to install and use by even non-techies.  But, under the hood, there&apos;re some nice things going on - like a very decent object persistence approach; templating for pretty strict code/presentation separation; a workable servlet-like app structure with facilities for localization and a dispatch-table approach to executing web app methods.  There are some spots that are a bit too if/else-ful for my taste, like the <a href=\"http://www.decafbad.com/twiki/bin/view/Main/CMS\">CMS</a>&apos; edit_object() method, but hey, it works.\n<br><br>\nIn other words, <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a> isn&apos;t just a cobbled together tangle of code that happens to produce weblogs.  I&apos;ve seen piles of well-used code on the web before that all seem to do what they advertise, but present a nightmare under the hood.  (<strong>cough</strong> Matt Wright&apos;s famous scripts <strong>cough</strong>)  No, <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a> looks like the result of experience, and I feel biased, because it demonstrates a lot of the same perl web app design patterns I&apos;ve been employing and advocating for years now.  So, my LDAP hack was a bit of enjoyable fun, instead of a chore.\n<br><br>\nAlong the lines of what I&apos;d written last week <a href=\"http://www.decafbad.com/news_archives/000354.phtml\">about perfection versus good enough</a>, I think <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a> is a good example.  It&apos;s something I <strong>could</strong> have written, but <strong>didn&apos;t</strong> write and <strong>didn&apos;t</strong> release and <strong>didn&apos;t</strong> support and <strong>didn&apos;t</strong> make lots of people happy along the way.  All the did-nots are the important bit.  It&apos;s why I have two projects dead (<a href=\"http://sourceforge.net/projects/iaijutsu\" target=\"_top\">Iaijutsu</a> and <a href=\"http://sourceforge.net/projects/iaido\" target=\"_top\">Iaido</a>) after a few years&apos; effort, and <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a> is a gigantic success today.\n<br><br>\nSo, these are the kind of lessons that  are an important part of what this weblog is about for me.\n</p>","path":"2002/12/21/ooocei","content":"<p>This week, at work, I cobbled together a hack for <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a> that hooks it up with an LDAP server for author accounts: <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableTypeLDAPAuthors\">MovableTypeLDAPAuthors</a>.  This is an early, early, early release of the thing, and is likely to do very nasty things for all that I know.  But, I wanted to share, and it seems to be working for the proof of concept at work (that is, MT weblogs on our intranet for every employee).  Hopefully soon it&#39;ll be approved, and I&#39;ll be looking into a commercial use license for <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a>.\n<br /><br />\nYou know, for all the praise I&#39;ve read about <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a>, something I&#39;ve really not seen much attention toward is the code itself.  I mean, yeah this thing is great, and it&#39;s so simple to install and use by even non-techies.  But, under the hood, there&#39;re some nice things going on - like a very decent object persistence approach; templating for pretty strict code/presentation separation; a workable servlet-like app structure with facilities for localization and a dispatch-table approach to executing web app methods.  There are some spots that are a bit too if/else-ful for my taste, like the <a href=\"http://www.decafbad.com/twiki/bin/view/Main/CMS\">CMS</a>&#39; edit_object() method, but hey, it works.\n<br /><br />\nIn other words, <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a> isn&#39;t just a cobbled together tangle of code that happens to produce weblogs.  I&#39;ve seen piles of well-used code on the web before that all seem to do what they advertise, but present a nightmare under the hood.  (<strong>cough</strong> Matt Wright&#39;s famous scripts <strong>cough</strong>)  No, <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a> looks like the result of experience, and I feel biased, because it demonstrates a lot of the same perl web app design patterns I&#39;ve been employing and advocating for years now.  So, my LDAP hack was a bit of enjoyable fun, instead of a chore.\n<br /><br />\nAlong the lines of what I&#39;d written last week <a href=\"http://www.decafbad.com/news_archives/000354.phtml\">about perfection versus good enough</a>, I think <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a> is a good example.  It&#39;s something I <strong>could</strong> have written, but <strong>didn&#39;t</strong> write and <strong>didn&#39;t</strong> release and <strong>didn&#39;t</strong> support and <strong>didn&#39;t</strong> make lots of people happy along the way.  All the did-nots are the important bit.  It&#39;s why I have two projects dead (<a href=\"http://sourceforge.net/projects/iaijutsu\" target=\"_top\">Iaijutsu</a> and <a href=\"http://sourceforge.net/projects/iaido\" target=\"_top\">Iaido</a>) after a few years&#39; effort, and <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MovableType\">MovableType</a> is a gigantic success today.\n<br /><br />\nSo, these are the kind of lessons that  are an important part of what this weblog is about for me.\n<!--more-->\nshortname=ooocei</p>\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n\n        <ul class=\"comments\">\n\n        <li class=\"comment\" id=\"comment-221082595\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.birdhouse.org/blog/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=990ffc04d68291be18e32416f84b451b&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.birdhouse.org/blog/\">Scot Hacker</a>\n                </div>\n                <a href=\"#comment-221082595\" class=\"permalink\"><time datetime=\"2002-12-25T19:23:12\">2002-12-25T19:23:12</time></a>\n            </div>\n            <div class=\"content\">Exciting to see work  in this direction. I&#39;m using MT a lot for  student projects at  the Berkeley J-School, and can imagine this being useful. However, I don&#39;t have a need for each student get their own blog. Instead, I  would want to make sets of students into LDAP groups and then attach that group to a specific blog. See these:\n\n<a href=\"http://journalism.berkeley.edu/projects/biplog/\">http://journalism.berkeley.edu/projects/biplog/</a>\n<a href=\"http://journalism.berkeley.edu/projects/sanpablo/\">http://journalism.berkeley.edu/projects/sanpablo/</a>\n<a href=\"http://journalism.berkeley.edu/projects/election2002/\">http://journalism.berkeley.edu/projects/election2002/</a>\n\nSo in these cases we have, say 20 students in a class, the output of which is a publication in the form of a web site. I  have to create a login for each student. LDAP would be useful for me if I could tell them they could use their  existing network logins.</div>\n\n<pre><code>    &lt;/li&gt;\n\n    &lt;li class=&quot;comment&quot; id=&quot;comment-221082596&quot;&gt;\n        &lt;div class=&quot;meta&quot;&gt;\n            &lt;div class=&quot;author&quot;&gt;\n                &lt;a class=&quot;avatar image&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://www.decafbad.com&quot;&gt;&lt;img src=&quot;http://www.gravatar.com/avatar.php?gravatar_id=2ac2cffd36ada8c734b90e02a1e5c1ac&amp;amp;size=32&amp;amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png&quot;/&gt;&lt;/a&gt;\n                &lt;a class=&quot;avatar name&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://www.decafbad.com&quot;&gt;l.m.orchard&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;a href=&quot;#comment-221082596&quot; class=&quot;permalink&quot;&gt;&lt;time datetime=&quot;2002-12-26T14:07:13&quot;&gt;2002-12-26T14:07:13&lt;/time&gt;&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;content&quot;&gt;Hmm, this sounds like a good idea:  Shared blogs based on LDAP groups.  I have yet to get far into how to configure this stuff beyond hard coded module vars, but I think it would be useful to pick a branch of the LDAP tree where all blog groups might live.  I could then make an explicitly-run script that generates any not-yet-existant blogs for LDAP groups, or maybe work in some autocreation magic that generates them on the fly.&lt;/div&gt;\n\n    &lt;/li&gt;\n\n    &lt;li class=&quot;comment&quot; id=&quot;comment-221082597&quot;&gt;\n        &lt;div class=&quot;meta&quot;&gt;\n            &lt;div class=&quot;author&quot;&gt;\n                &lt;a class=&quot;avatar image&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://webseitz.fluxent.com/wiki&quot;&gt;&lt;img src=&quot;http://www.gravatar.com/avatar.php?gravatar_id=5a70d939a73fa73603f2a9255ab81d21&amp;amp;size=32&amp;amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png&quot;/&gt;&lt;/a&gt;\n                &lt;a class=&quot;avatar name&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://webseitz.fluxent.com/wiki&quot;&gt;BillSeitz&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;a href=&quot;#comment-221082597&quot; class=&quot;permalink&quot;&gt;&lt;time datetime=&quot;2002-12-27T18:32:05&quot;&gt;2002-12-27T18:32:05&lt;/time&gt;&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;content&quot;&gt;What are you using for your LDAP back end? OpenLDAP? MsExchange?\n</code></pre><p>What other things use it?</p>\n<p><a href=\"http://webseitz.fluxent.com/wiki/IntraNet\">http://webseitz.fluxent.com/wiki/IntraNet</a>\n<a href=\"http://webseitz.fluxent.com/wiki/LDAP\">http://webseitz.fluxent.com/wiki/LDAP</a></div></p>\n<pre><code>    &lt;/li&gt;\n\n    &lt;/ul&gt;\n\n    &lt;/div&gt;\n</code></pre>"}