{
  "comments_archived": true,
  "date": "2002-12-13T21:33:13.000Z",
  "layout": "post",
  "title": "Designing for recombinant growth with the lazyweb",
  "wordpress_id": 328,
  "wordpress_slug": "oooced",
  "wordpress_url": "http://www.decafbad.com/blog/?p=328",
  "year": "2002",
  "month": "12",
  "day": "13",
  "isDir": false,
  "slug": "oooced",
  "postName": "2002-12-13-oooced",
  "html": "<p>I hadn't had a <i>bon mot</i> for it until yesterday, but I've been thinking about the concept of <a href=\"http://weblog.infoworld.com/udell/2002/12/12.html#a537\" target=\"_top\">recombinant growth</a> for awhile now and how it intersects with the <a href=\"http://www.blackbeltjones.com/work/mt/archives/000190.html\" target=\"_top\">LazyWeb</a> / blogosphere.  </p>\n<p>In particular, I've been thinking about design.  I'm of two minds.  As a perfectionist, I want sparkling gorgeous gems of elegance.  It feels so good to be playing with something polished that so obviously has been imbued with immense thought.  But, as a realist and a guy trying to make a living, I also appreciate adhoc rusty tools that still turn a screw.  The thing might fall down in some cases, but otherwise it's a pretty steady companion.</p>\n<p>Looking at it another way, though, many of those otherwise sparkling gems won't let me use them as a hammer the same way I misuse the screwdriver on occasion.  And oftimes, they don't have any control panels to open so I can reroute EPS conduits and exploit leaky abstractions.  And then, there's the problem domain: on what classes of nails is this hammer indented for use?  In one case, a particular hammer shines, in another, it leaves thumbs throbbing.</p>\n<p>I see infernos of flamewars start over principle, predictions of falling skies and doom doom doom.  (It's not maintainable!  It won't scale!  It'll be the end of the web!)  And then I see mischievous wizards and cantankerous veterans pull out a much-abused old standby and knock it out of the park.  (Only the feeble-minded need strong types!  Goto considered harmful - <i>to you, maybe</i>!)  And then, sometimes, when you're in the realm of recombinant growth and the lazyweb, what initially looks like a jumble of wrinkled paper takes one more origami fold and turns into a perfectly formed swan.  It gets confusing sometimes.</p>\n<p>So anyway, this all leads up to my questions as a naive, wannabe computer scientist:  By what processes of design do we best facilitate recombinant growth?  How deeply and to what level of detail?  How dirty should it be, how unspecified or left with holes or shrugs?  (Plants need dirt to grow.)   How meticulously clean should it be?  (We don't want to attract any bugs.)  How much should be chalked up to bootstrapping, and how much should be wrangled and hogtied into perfect working order?</p>\n<p>I doubt that it there's a single fully valid answer to all this.  But, I'm always interested in any of the answers I find anyway.</p>\n<!--more-->\nshortname=oooced\n",
  "body": "<p>I hadn't had a <i>bon mot</i> for it until yesterday, but I've been thinking about the concept of <a href=\"http://weblog.infoworld.com/udell/2002/12/12.html#a537\" target=\"_top\">recombinant growth</a> for awhile now and how it intersects with the <a href=\"http://www.blackbeltjones.com/work/mt/archives/000190.html\" target=\"_top\">LazyWeb</a> / blogosphere.  </p>\r\n<p>In particular, I've been thinking about design.  I'm of two minds.  As a perfectionist, I want sparkling gorgeous gems of elegance.  It feels so good to be playing with something polished that so obviously has been imbued with immense thought.  But, as a realist and a guy trying to make a living, I also appreciate adhoc rusty tools that still turn a screw.  The thing might fall down in some cases, but otherwise it's a pretty steady companion.</p>\r\n<p>Looking at it another way, though, many of those otherwise sparkling gems won't let me use them as a hammer the same way I misuse the screwdriver on occasion.  And oftimes, they don't have any control panels to open so I can reroute EPS conduits and exploit leaky abstractions.  And then, there's the problem domain: on what classes of nails is this hammer indented for use?  In one case, a particular hammer shines, in another, it leaves thumbs throbbing.</p>\r\n<p>I see infernos of flamewars start over principle, predictions of falling skies and doom doom doom.  (It's not maintainable!  It won't scale!  It'll be the end of the web!)  And then I see mischievous wizards and cantankerous veterans pull out a much-abused old standby and knock it out of the park.  (Only the feeble-minded need strong types!  Goto considered harmful - <i>to you, maybe</i>!)  And then, sometimes, when you're in the realm of recombinant growth and the lazyweb, what initially looks like a jumble of wrinkled paper takes one more origami fold and turns into a perfectly formed swan.  It gets confusing sometimes.</p>\r\n<p>So anyway, this all leads up to my questions as a naive, wannabe computer scientist:  By what processes of design do we best facilitate recombinant growth?  How deeply and to what level of detail?  How dirty should it be, how unspecified or left with holes or shrugs?  (Plants need dirt to grow.)   How meticulously clean should it be?  (We don't want to attract any bugs.)  How much should be chalked up to bootstrapping, and how much should be wrangled and hogtied into perfect working order?</p>\r\n<p>I doubt that it there's a single fully valid answer to all this.  But, I'm always interested in any of the answers I find anyway.</p>\r\n<!--more-->\r\nshortname=oooced\r\n",
  "parentPath": "../blog.lmorchard.com/posts/archives/2002",
  "path": "2002/12/13/oooced",
  "summary": "<p>I hadn't had a <i>bon mot</i> for it until yesterday, but I've been thinking about the concept of <a href=\"http://weblog.infoworld.com/udell/2002/12/12.html#a537\" target=\"_top\">recombinant growth</a> for awhile now and how it intersects with the <a href=\"http://www.blackbeltjones.com/work/mt/archives/000190.html\" target=\"_top\">LazyWeb</a> / blogosphere.  </p>\n<p>In particular, I've been thinking about design.  I'm of two minds.  As a perfectionist, I want sparkling gorgeous gems of elegance.  It feels so good to be playing with something polished that so obviously has been imbued with immense thought.  But, as a realist and a guy trying to make a living, I also appreciate adhoc rusty tools that still turn a screw.  The thing might fall down in some cases, but otherwise it's a pretty steady companion.</p>\n<p>Looking at it another way, though, many of those otherwise sparkling gems won't let me use them as a hammer the same way I misuse the screwdriver on occasion.  And oftimes, they don't have any control panels to open so I can reroute EPS conduits and exploit leaky abstractions.  And then, there's the problem domain: on what classes of nails is this hammer indented for use?  In one case, a particular hammer shines, in another, it leaves thumbs throbbing.</p>\n<p>I see infernos of flamewars start over principle, predictions of falling skies and doom doom doom.  (It's not maintainable!  It won't scale!  It'll be the end of the web!)  And then I see mischievous wizards and cantankerous veterans pull out a much-abused old standby and knock it out of the park.  (Only the feeble-minded need strong types!  Goto considered harmful - <i>to you, maybe</i>!)  And then, sometimes, when you're in the realm of recombinant growth and the lazyweb, what initially looks like a jumble of wrinkled paper takes one more origami fold and turns into a perfectly formed swan.  It gets confusing sometimes.</p>\n<p>So anyway, this all leads up to my questions as a naive, wannabe computer scientist:  By what processes of design do we best facilitate recombinant growth?  How deeply and to what level of detail?  How dirty should it be, how unspecified or left with holes or shrugs?  (Plants need dirt to grow.)   How meticulously clean should it be?  (We don't want to attract any bugs.)  How much should be chalked up to bootstrapping, and how much should be wrangled and hogtied into perfect working order?</p>\n<p>I doubt that it there's a single fully valid answer to all this.  But, I'm always interested in any of the answers I find anyway.</p>\n",
  "prevPostPath": "2002/12/14/ooocee",
  "nextPostPath": "2002/12/13/ooocec"
}