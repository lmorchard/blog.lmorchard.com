<?xml version="1.0" encoding="UTF-8"?>
  <rss version="2.0">
    <channel>
      <title>blog.lmorchard.com</title>
      <description>It&#39;s all spinning wheels and self-doubt until the first pot of coffee.</description>
      <link>https://lmorchard.github.io/blog.lmorchard.com/</link>
      <item>
          <title>Making a brane snapshot, re: PersonalWebProxy</title>
          <description>&lt;p&gt;Following in Russell Beattie&amp;apos;s outliner brain dump footsteps, I revised my &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/PersonalWebProxy&quot;&gt;PersonalWebProxy&lt;/a&gt; page with cut-and-paste from my own outline in the works.  It&amp;apos;s far, far from complete, especially in the planning department, but I figure it could be worth poking at just to check out the developing direction.
&lt;br&gt;&lt;br&gt;
Having trouble getting to Russell Beattie&amp;apos;s blog at the moment, so a link will have to wait.&lt;/p&gt;
</description>
          
          <pubDate>Tue, 31 Dec 2002 06:34:49 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/31/ooocfi/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/31/ooocfi/</guid>
        </item><item>
          <title>Motivation toward making proxy whatsits</title>
          <description>&lt;p&gt;Continuing along with the &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/PersonalWebProxy&quot;&gt;PersonalWebProxy&lt;/a&gt; meme, &lt;a href=&quot;http://www.russellbeattie.com/notebook/index.jsp?date=20021229#213649&quot;&gt;&lt;cite&gt;Russell Beattie&lt;/cite&gt; writes&lt;/a&gt;:&lt;/p&gt;&lt;blockquote&gt;&lt;i&gt;I have a lot of trouble with motivation on something like this. I get excited then I flip out because of how much something like this could entail and I find other stuff to do for a while to calm down. This has been going on for months. ;-)&lt;/i&gt;&lt;/blockquote&gt;Yeah, and then there&amp;apos;s that.  Seeing what people are wishing for out of this class of app, we could wish it into the outer reaches of tinkerer feasibility and then get fed up and go home.  That&amp;apos;s what I&amp;apos;d like to avoid, personally.&lt;br&gt;&lt;br&gt;&lt;br&gt;
I&amp;apos;m puttering around with a bit of a spec for myself today, laying out a limited wishlist drawn from mine and others&amp;apos; ponderings and rationing it out into chunks.  There&amp;apos;s no way anyone could handle creating the perfect proxy/agent for the next millennia without descending into insanity and obscurity some 1% into the process.  But, if things can be worked out to where it&amp;apos;s being cobbled together in a process of loosely structured madness, there just might be hope.
&lt;br&gt;&lt;br&gt;
The crucial thing is that it move forward in tinkerer-sized steps, remain understood and tested at each point, and do some reasonably useful new thing after each lurch in order to remain interesting.  The process should give tinkerers a chance to spend just a little bit of their non-copious free time to come up with something clever and nifty.  This is how the lazyweb works.
&lt;br&gt;&lt;br&gt;
Okay, before I start getting too pretentious here, I&amp;apos;d better get back to work.&lt;p&gt;&lt;/p&gt;
</description>
          
          <pubDate>Mon, 30 Dec 2002 22:28:52 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/30/ooocfh/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/30/ooocfh/</guid>
        </item><item>
          <title>InCITEing the Spanish Inquisition</title>
          <description>&lt;p&gt;On the cite tag, &lt;cite&gt;Mark Pilgrim&lt;/cite&gt; &lt;a href=&quot;http://diveintomark.org/archives/2002/12/27.html#pushing_the_envelope&quot; target=&quot;_top&quot;&gt;writes further&lt;/a&gt;: &amp;quot;All right, everybody just calm the fuck down.  It?s only a tag.  I didn?t expect the Spanish Inquisition.&amp;quot;  Don&amp;apos;t I feel like a fan boy?  :)  Heh heh.
&lt;br&gt;&lt;br&gt;
And, oh! that INS tag!  Must be something in the post-holiday egg nog.&lt;/p&gt;
</description>
          
          <pubDate>Sun, 29 Dec 2002 06:04:50 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/29/ooocfg/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/29/ooocfg/</guid>
        </item><item>
          <title>Universal personal proxies &amp; agent companions</title>
          <description>&lt;p&gt;&lt;cite&gt;Russell Beattie&lt;/cite&gt; &lt;a href=&quot;http://www.russellbeattie.com/notebook/index.jsp?date=20021227#160210&quot; target=&quot;_top&quot;&gt;writes&lt;/a&gt;:&lt;/p&gt;&lt;blockquote&gt;&lt;i&gt; The idea in my mind is for a project that would be a universal personal proxy (UPP) that sits between you and the internet. It would be a web proxy, email filter, spam cop, a place for agents and schedule tasks to run and more. It would be responsible for both receiving and sending of information - as web pages, emails, web services requests, ftp file postings, etc. In the middle it would do analysis like for Spam or &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/RSS&quot;&gt;RSS&lt;/a&gt; autodiscovery, intelligent bookmark history, etc. ...  This sort of app would be for people like myself who spend an innordinate amount of time on the internet.&lt;/i&gt;&lt;/blockquote&gt;Precisely.  Exactly.  Even down to the combination of P2P and desktop-to-server mix he writes about.  I think we&amp;apos;re starting to ride a meme here.  This is what I want from a &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/PersonalWebProxy&quot;&gt;PersonalWebProxy&lt;/a&gt;.  I&amp;apos;ve been trying to think of a better name for this class of app - it&amp;apos;s more than a literal web proxy.  I want an agent and an assistant - something that sits shotgun with me while I putter around and can help me study what I do and see.  I want something that can eventually do things in my name for me, if I allow it.  I want basically all the things Russell wants, along with everything agents do for the characters in David Brin&amp;apos;s &lt;i&gt;Earth&lt;/i&gt;.
&lt;br&gt;&lt;br&gt;
So.  How to &lt;strong&gt;do&lt;/strong&gt; this?  I think I need to spend some more time fleshing out a spec before I do much more in terms of putting gadgets together.  Need to reign in the fantasy, lay out some feasible first revision features, and start.  I want it all, but I want to start out with something hackable, useful, and inviting for collaboration.
&lt;br&gt;&lt;br&gt;
Still probably too early to be thinking about implementation language, but I have been experimenting and expect some of these things to become the base for my development.  My ideas on choices have become less clear-cut now.  When last &lt;a href=&quot;http://www.decafbad.com/news_archives/000362.phtml&quot; target=&quot;_top&quot;&gt;I wrote&lt;/a&gt; about this topic, and languages, &lt;a href=&quot;http://www.ulaluma.com/pyx&quot; target=&quot;_top&quot;&gt;Donovan Preston&lt;/a&gt; left a comment enlightening me with regards to my Python/Twisted vs Java/Threads consideration.  In fact, threads are available in the Python/Twisted environment as well.  So, now I&amp;apos;m back to thinking about things like free library availability, environment maturity, possible collaborators, and my own comfort level in each.
&lt;br&gt;&lt;br&gt;
Bah.  At this point, I think I know all I need to know about what various environment choices can do in order to come up with a set of features that can be reasonably implemented in either or any environment.  Need to solidify this wishlist into a task list and design and get going.&lt;p&gt;&lt;/p&gt;
</description>
          
          <pubDate>Sun, 29 Dec 2002 01:24:11 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/29/ooocff/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/29/ooocff/</guid>
        </item><item>
          <title>Pushing envelopes and mining the hills</title>
          <description>&lt;p&gt;Although I did begin my days on the web by pouring over the HTML and HTTP specs back in 1994,  I soon abandoned that effort and learned how to make web pages by example like most webmonkeys and hacks came to learn it.  I wasn&amp;apos;t ready, back then, to read a document like the HTML spec.  But now, &lt;a href=&quot;http://diveintomark.org/archives/2002/12/27.html#pushing_the_envelope&quot; target=&quot;_top&quot;&gt;Mark Pilgrim makes me want to give it another serious shot&lt;/a&gt;, having leveraged the &lt;a href=&quot;http://www.w3.org/TR/REC-html40/struct/text.html#h-9.2.1&quot; target=&quot;_top&quot;&gt;CITE tag&lt;/a&gt; in his weblog writing to pull a view of his entries by cited source.  He&amp;apos;s good at sneaking in smarty-pants things like that - you probably never knew he was doing it, you think it&amp;apos;s wonderful when later revealed later, and then you wish you&amp;apos;d done more homework.  Maybe &amp;quot;you&amp;quot; is just me.  :)  You think he plans these things in advance?  I want the Mark Pligrim syllabus.
&lt;br&gt;&lt;br&gt;
Of course, the problem with the way so many webmonkeys learned to apply some semblance of web standards was the web browser.  If it showed up nicely in the browser, it was Good.  If ugly, it was Bad.  If invisible or without apparent effect, it was Ignored.  And this mindset worked great for the busy page builder up till 4:30am trying to cobble together the latest brochureware site.
&lt;br&gt;&lt;br&gt;
But now, after all the rushing around and &lt;a href=&quot;http://sippey.com/archives/000003.php&quot;&gt;recontextualization of business&lt;/a&gt;, it seems we&amp;apos;re in the Winter season around here on the Internet.  Not so much new feverish development going on, but a lot of reexamination and introspection - and actual reading of specs.  And some really nifty things are going on, like the &amp;quot;rediscovery&amp;quot; of things that were there from the start but not too many people were careful enough to pick up on them at the ass crack of dawn while trying to launch another blight on the web.  (No I&amp;apos;m not bitter about those days at all - no wait, yes I am.  :) )
&lt;br&gt;&lt;br&gt;
So, anyway, &lt;cite&gt;Mark Pilgrim&lt;/cite&gt; wrote:  &amp;quot;Let?s try pushing the envelope of what HTML is actually designed to do, before we get all hot and bothered trying to replace it, mmmkay?&amp;quot;  I really like his point.  Now that we&amp;apos;re done rushing around trying to solve the insane demands of the moment, or trying to &amp;quot;add value&amp;quot; for the stockholders, maybe we can do more mining into what&amp;apos;s already out there that we all trampled and stampeded past in the early years.
&lt;br&gt;&lt;br&gt;
Or, rather, maybe I&amp;apos;m a &amp;quot;we&amp;quot; of few or one here, since obviously &lt;a href=&quot;http://diveintomark.org/&quot; target=&quot;_top&quot;&gt;some people&lt;/a&gt; have already started mining the hills for neglected gems.&lt;/p&gt;
</description>
          
          <pubDate>Fri, 27 Dec 2002 20:35:21 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/27/ooocfe/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/27/ooocfe/</guid>
        </item><item>
          <title>AmphetaDesk-fed blogroll now cluttering my sidebar</title>
          <description>&lt;p&gt;It&amp;apos;s not incredibly complicated, but it&amp;apos;s something I just hadn&amp;apos;t gotten to until now: My &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/AmphetaDesk&quot;&gt;AmphetaDesk&lt;/a&gt; subscriptions are now the source for my blogroll.  I noticed the &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/000386.html#000386&quot;&gt;opml2html script that Jeremy Zawodny wrote&lt;/a&gt;, snagged it, and set up a quick cronjob to run the script and upload the HTML every few hours.  It&amp;apos;s ugly right now, but maybe it will finally make finish that new design.&lt;/p&gt;
</description>
          
          <pubDate>Fri, 27 Dec 2002 07:38:05 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/27/ooocfd/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/27/ooocfd/</guid>
        </item><item>
          <title>There is no perfect software design</title>
          <description>&lt;p&gt;Chris Winters &lt;a href=&quot;http://www.cwinters.com/News/show/?news_id=765&quot;&gt;threw me a link&lt;/a&gt; to my &lt;a href=&quot;http://www.decafbad.com/news_archives/000354.phtml&quot;&gt;recent ramble&lt;/a&gt; on completely planned perfection versus workable organic imperfection in software design.  After citing a very good perspective on software as gardening from &lt;a href=&quot;http://pragmaticprogrammer.com&quot;&gt;The Pragmatic Programmer&lt;/a&gt;, he writes:&lt;/p&gt;&lt;blockquote&gt;&lt;i&gt;As I&amp;apos;ve mentioned before there are a number of software development practices moving toward a more humane process. And I think the ideas underpinning worse-is-better play a big part in this. The major one in my mind is this hypothesis: there is no such thing as a perfect software design. Have you ever seen or heard of one? What design hasn&amp;apos;t been modified over time due to changing needs or conditions?&lt;/i&gt;&lt;/blockquote&gt;Good points.  Still trying to find the middle ground between clean design and fecund dirt.  There&amp;apos;s no perfect design I&amp;apos;ve ever run into in my time so far, and I don&amp;apos;t expect to.  But, what I have learned, is that where there is no design at all, you have disaster.
&lt;br&gt;&lt;br&gt;
So I guess the main thing I&amp;apos;ve learned so far is that this guilty love of a dirty yet elegant hack while giving myself a &amp;quot;tsk-tsk&amp;quot; with a hope to design it more fully next time is useless.  There will be no time that I&amp;apos;ve participated in a design that ends up being marvelously perfect.  But what I&amp;apos;m trying to feel toward is how to get the balance right between clean and dirt, given skill levels and team sizes and project complexity.&lt;p&gt;&lt;/p&gt;
</description>
          
          <pubDate>Thu, 26 Dec 2002 19:01:04 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/26/ooocfc/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/26/ooocfc/</guid>
        </item><item>
          <title>PersonalWebProxy as personal Google and Wayback machine</title>
          <description>&lt;p&gt;Matt Griffith &lt;a href=&quot;http://matt.griffith.com/weblog/stories/2002/12/22/jogMyPersonalGoogleampWaybackMachine.html&quot;&gt;proposes a virtual project&lt;/a&gt;: Jog.  For the most part, what he wants is what I want from my &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/PersonalWebProxy&quot;&gt;PersonalWebProxy&lt;/a&gt;, and more.&lt;br&gt;&lt;br&gt;&lt;br&gt;
The big difference in the writing, though, is that Matt writes from features and what he wants, where I&amp;apos;m already describing things in terms of implementation.  That is, I started talking about &amp;quot;proxy&amp;quot; where he&amp;apos;s talking about &amp;quot;my personal Google and Wayback machine&amp;quot;.  I think looking at it that way makes a more compelling case for this thing being generally useful, rather than just some nerdy toy.
&lt;br&gt;&lt;br&gt;
Another way I&amp;apos;m looking at this &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/PersonalWebProxy&quot;&gt;PersonalWebProxy&lt;/a&gt; is as an assistant in a sidecar attached to my browser.  I want this assistant to watch me, learn, and pipe up from time to time with suggestions.  I also want to be able to ask questions and to remind me of things I vaguely remember.  Eventually, I&amp;apos;d like this assistant to be able to drive for me from time to time, doing some info hunter-gatherer work for me while I do other things.
&lt;br&gt;&lt;br&gt;
I&amp;apos;m still working on this thing.  So far I&amp;apos;ve got a proxy in Python and a simple-minded plugin framework.  Two plugins so far: one is a cookie jar separated from any browser - that is, cookies are managed in the proxy, not in the browser; the other is a little thing based on Mark Pilgrim&amp;apos;s &lt;a href=&quot;http://diveintomark.org/archives/2002/08/15.html&quot;&gt;rssfinder.py&lt;/a&gt; that quietly seeks out and gathers &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/RSS&quot;&gt;RSS&lt;/a&gt; links from every text/* resource I view.  It seems to be standing up fairly well.
&lt;br&gt;&lt;br&gt;
My next steps are something along these lines:  Should I continue in Python?  To do so means delving deeper into Twisted, using their web app framework for the management UI and staying within their event-driven paradigm in lieu of threading.  The reason I first chose Python is because I wanted something that was quickly and easily hackable and fun to contribute plugins for.  Does this still apply, if things are deep in the Twisted mindset which is not &lt;strong&gt;quite&lt;/strong&gt; straightforward?
&lt;br&gt;&lt;br&gt;
On the other hand, I took a peek at &lt;a href=&quot;http://jetty.mortbay.org/jetty/&quot;&gt;Jetty&lt;/a&gt; in Java, which also comes with a simple and hackable HTTP proxy implementation.  I could easily cobble together in Java what I have in Python using this.  I would also say that I could easily make it compatible with whatever plugins were written for the Python version, using Jython, but there&amp;apos;s also a paradigmatic difference were I to go with Java:  Threads in lieu of event-driven design.
&lt;br&gt;&lt;br&gt;
Maybe I&amp;apos;m thinking too much about this and should just keep doing what I&amp;apos;m doing.  I&amp;apos;m trying to think and second guess a lot about what anyone who might care to play with this thing would actually care about.   As for myself, I seem to be having fun with things as is.&lt;/p&gt;
</description>
          
          <pubDate>Mon, 23 Dec 2002 19:40:21 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/23/ooocfb/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/23/ooocfb/</guid>
        </item><item>
          <title>On joining the FSF: The first actually useful membership card?</title>
          <description>&lt;p&gt;Mark Pilgrim &lt;a href=&quot;http://diveintomark.org/archives/2002/12/22.html#pony_the_hell_up&quot;&gt;writes&lt;/a&gt;: &amp;quot;I am now a &lt;a href=&quot;http://member.fsf.org/&quot;&gt;card-carrying associate member of the Free Software Foundation&lt;/a&gt;.  Software is free, but lawyers are expensive.&amp;quot;
And from the FSF membership page:&lt;/p&gt;&lt;blockquote&gt;&lt;i&gt;You will receive a personalized, bootable, business-card-sized GNU/Linux distribution as your membership card.
This GNU/Linux distribution is based on LNX-BBC. New cards will be sent to renewing members every year if and only if there is a new major release of LNX-BBC.&lt;/i&gt;&lt;/blockquote&gt;
So, not only can you give a little something back to a project from which most of us have benefitted from - you&amp;apos;ll also get a membership card that&amp;apos;s as useful in and of itself as carrying a swiss army knife, and as far as I know, it won&amp;apos;t get confiscated from you at the airport.
(Oh, and this entry is a test of the &lt;a href=&quot;http://ranchero.com/software/netnewswire/&quot;&gt;NetNewsWire Pro Beta&lt;/a&gt; weblog editor.  This is only a test.)&lt;p&gt;&lt;/p&gt;
</description>
          
          <pubDate>Mon, 23 Dec 2002 03:24:41 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/23/ooocfo/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/23/ooocfo/</guid>
        </item><item>
          <title>MovableType LDAP integration</title>
          <description>&lt;p&gt;This week, at work, I cobbled together a hack for &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/MovableType&quot;&gt;MovableType&lt;/a&gt; that hooks it up with an LDAP server for author accounts: &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/MovableTypeLDAPAuthors&quot;&gt;MovableTypeLDAPAuthors&lt;/a&gt;.  This is an early, early, early release of the thing, and is likely to do very nasty things for all that I know.  But, I wanted to share, and it seems to be working for the proof of concept at work (that is, MT weblogs on our intranet for every employee).  Hopefully soon it&amp;apos;ll be approved, and I&amp;apos;ll be looking into a commercial use license for &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/MovableType&quot;&gt;MovableType&lt;/a&gt;.
&lt;br&gt;&lt;br&gt;
You know, for all the praise I&amp;apos;ve read about &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/MovableType&quot;&gt;MovableType&lt;/a&gt;, something I&amp;apos;ve really not seen much attention toward is the code itself.  I mean, yeah this thing is great, and it&amp;apos;s so simple to install and use by even non-techies.  But, under the hood, there&amp;apos;re some nice things going on - like a very decent object persistence approach; templating for pretty strict code/presentation separation; a workable servlet-like app structure with facilities for localization and a dispatch-table approach to executing web app methods.  There are some spots that are a bit too if/else-ful for my taste, like the &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/CMS&quot;&gt;CMS&lt;/a&gt;&amp;apos; edit_object() method, but hey, it works.
&lt;br&gt;&lt;br&gt;
In other words, &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/MovableType&quot;&gt;MovableType&lt;/a&gt; isn&amp;apos;t just a cobbled together tangle of code that happens to produce weblogs.  I&amp;apos;ve seen piles of well-used code on the web before that all seem to do what they advertise, but present a nightmare under the hood.  (&lt;strong&gt;cough&lt;/strong&gt; Matt Wright&amp;apos;s famous scripts &lt;strong&gt;cough&lt;/strong&gt;)  No, &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/MovableType&quot;&gt;MovableType&lt;/a&gt; looks like the result of experience, and I feel biased, because it demonstrates a lot of the same perl web app design patterns I&amp;apos;ve been employing and advocating for years now.  So, my LDAP hack was a bit of enjoyable fun, instead of a chore.
&lt;br&gt;&lt;br&gt;
Along the lines of what I&amp;apos;d written last week &lt;a href=&quot;http://www.decafbad.com/news_archives/000354.phtml&quot;&gt;about perfection versus good enough&lt;/a&gt;, I think &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/MovableType&quot;&gt;MovableType&lt;/a&gt; is a good example.  It&amp;apos;s something I &lt;strong&gt;could&lt;/strong&gt; have written, but &lt;strong&gt;didn&amp;apos;t&lt;/strong&gt; write and &lt;strong&gt;didn&amp;apos;t&lt;/strong&gt; release and &lt;strong&gt;didn&amp;apos;t&lt;/strong&gt; support and &lt;strong&gt;didn&amp;apos;t&lt;/strong&gt; make lots of people happy along the way.  All the did-nots are the important bit.  It&amp;apos;s why I have two projects dead (&lt;a href=&quot;http://sourceforge.net/projects/iaijutsu&quot; target=&quot;_top&quot;&gt;Iaijutsu&lt;/a&gt; and &lt;a href=&quot;http://sourceforge.net/projects/iaido&quot; target=&quot;_top&quot;&gt;Iaido&lt;/a&gt;) after a few years&amp;apos; effort, and &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/MovableType&quot;&gt;MovableType&lt;/a&gt; is a gigantic success today.
&lt;br&gt;&lt;br&gt;
So, these are the kind of lessons that  are an important part of what this weblog is about for me.&lt;/p&gt;
</description>
          
          <pubDate>Sat, 21 Dec 2002 21:54:49 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/21/ooocei/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/21/ooocei/</guid>
        </item><item>
          <title>On the road to a PersonalWebProxy</title>
          <description>&lt;p&gt;In case anyone&amp;apos;s been wondering, I&amp;apos;ve not slipped back into oblivion.  I&amp;apos;ve been a little busier at work again, but nowhere near a death march pace.  And, in the free time I&amp;apos;ve been clearing up for tinkering, I&amp;apos;ve been working semi-obsessively on the aforementioned &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/PersonalWebProxy&quot;&gt;PersonalWebProxy&lt;/a&gt; idea.  I dove back into &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/Python&quot;&gt;Python&lt;/a&gt;, started soaking in the &lt;a href=&quot;http://www.twistedmatrix.com&quot; target=&quot;_top&quot;&gt;Twisted framework&lt;/a&gt;, and just about have an operable-but-ugly first attempt at a basic HTTP proxy with plug-in filters.&lt;br&gt;&lt;br&gt;&lt;br&gt;
Thinking that I need to knock it around some more to work out some kinks, and then bang up some initial useful filters.  But I want to get something packaged up and offered for ridicule within the next week or so.  Not sure if anyone else is or will be as enthusiastic about this little toy as I am, but I think I&amp;apos;ll be able to do some nifty things with it.&lt;/p&gt;
</description>
          
          <pubDate>Wed, 18 Dec 2002 18:40:27 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/18/oooceh/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/18/oooceh/</guid>
        </item><item>
          <title>Think of everything but the obvious first</title>
          <description>&lt;p&gt;Today&amp;apos;s revelation while tinkering with my &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/PersonalWebProxy&quot;&gt;PersonalWebProxy&lt;/a&gt;:  Decompressed content is larger than compressed content.  &lt;/p&gt;
&lt;p&gt;See, I was decompressing gzipped content streams in the proxy in order to fiddle with the content before it got to the browser, but then I noticed that browsers kept only displaying part of the content.  I remove the in-proxy decompression, things are fine.  Put it back in, things get cut short.  I poke for a few hours at various bits and parts, to no avail.  &lt;/p&gt;
&lt;p&gt;Then, finally I remember...  &amp;quot;Hey, you know, I think browsers pay attention to that Content-Length header.  And hey, you know...  decompressed content is larger than compressed content.&amp;quot;  Bingo.  Problem solved by keeping the Content-Length header updated with the length of modified content.  This makes me feel very dumb, because it&amp;apos;s not like I haven&amp;apos;t written a handful or two both of HTTP clients and servers.  And I&amp;apos;ve written code that uses the Content-Length header, over and over again.  I&amp;apos;d&amp;apos;ve thought this would be something I&amp;apos;d remember more quickly.&lt;/p&gt;
&lt;p&gt;More often than I&amp;apos;d like to admit, remembering simple and obvious things like the above are what unlock problems that I&amp;apos;d been banging my head against.  The last revelation of this nature I had while frustrated at a project at work was:  &amp;quot;Not all months are 31 days.&amp;quot;  And before that, &amp;quot;Not all days in a year are 24 hours long, due daylight savings time.&amp;quot;&lt;/p&gt;
&lt;p&gt;Trying to think of more, but I thought I&amp;apos;d share. Maybe I&amp;apos;ll start a wiki topic for sage bits of the &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/ObviousInHindsight&quot;&gt;ObviousInHindsight&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;
</description>
          
          <pubDate>Sat, 14 Dec 2002 20:57:01 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/14/oooceg/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/14/oooceg/</guid>
        </item><item>
          <title>THe LazyWeb delivers?</title>
          <description>&lt;p&gt;Okay...  This really is the &lt;a href=&quot;http://www.blackbeltjones.com/work/mt/archives/000190.html&quot; target=&quot;_top&quot;&gt;LazyWeb&lt;/a&gt;.  I &lt;a href=&quot;http://www.decafbad.com/news_archives/000353.phtml&quot; target=&quot;_top&quot;&gt;barely mention&lt;/a&gt; writing some sort of &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/RDF&quot;&gt;RDF&lt;/a&gt;-based Tinderbox-a-like, and I see a link to &lt;a href=&quot;http://www.ideagraph.net/2002-12/&quot; target=&quot;_top&quot;&gt;Ideagraph&lt;/a&gt; on the &lt;a href=&quot;http://rdfig.xmlhack.com/&quot; target=&quot;_top&quot;&gt;#rdfig scratchpad&lt;/a&gt; .&lt;/p&gt;
</description>
          
          <pubDate>Sat, 14 Dec 2002 00:53:44 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/14/ooocef/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/14/ooocef/</guid>
        </item><item>
          <title>Stupid enough to buy an &quot;eBook&quot;</title>
          <description>&lt;p&gt;Is it just me, or is it pretty damn ironic that &lt;i&gt;&lt;a href=&quot;http://www.ebooks.com/items/item-display.asp?IID=19861&quot;&gt;Mac OS X: The Complete Reference&lt;/a&gt;&lt;/i&gt; is available in &lt;a href=&quot;http://www.adobe.com/products/ebookreader/main.html&quot;&gt;Acrobat eBook Reader&lt;/a&gt; format, yet the &lt;a href=&quot;http://www.adobe.com/products/ebookreader/main.html&quot;&gt;Acrobat eBook Reader&lt;/a&gt; is not available for &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/MacOSX&quot;&gt;MacOSX&lt;/a&gt;?
&lt;br&gt;&lt;br&gt;
Yes, I&amp;apos;m bitter.  And stupid.  While I didn&amp;apos;t buy the &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/MacOSX&quot;&gt;MacOSX&lt;/a&gt; reference, I &lt;em&gt;did&lt;/em&gt; buy a book in eBook Reader format.  Dumb, dumb, dumb.  Can&amp;apos;t read it now.  Bastards.  And no returns on eBooks.  Crooks!  Mental note:  Next time remember to buy books whose only compatibilty requirements are sight and literacy.  Unless I decide to learn braille or go for audio books, that is.&lt;/p&gt;
</description>
          
          <pubDate>Sat, 14 Dec 2002 00:27:22 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/14/ooocee/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/14/ooocee/</guid>
        </item><item>
          <title>Designing for recombinant growth with the lazyweb</title>
          <description>&lt;p&gt;I hadn&amp;apos;t had a &lt;i&gt;bon mot&lt;/i&gt; for it until yesterday, but I&amp;apos;ve been thinking about the concept of &lt;a href=&quot;http://weblog.infoworld.com/udell/2002/12/12.html#a537&quot; target=&quot;_top&quot;&gt;recombinant growth&lt;/a&gt; for awhile now and how it intersects with the &lt;a href=&quot;http://www.blackbeltjones.com/work/mt/archives/000190.html&quot; target=&quot;_top&quot;&gt;LazyWeb&lt;/a&gt; / blogosphere.  &lt;/p&gt;
&lt;p&gt;In particular, I&amp;apos;ve been thinking about design.  I&amp;apos;m of two minds.  As a perfectionist, I want sparkling gorgeous gems of elegance.  It feels so good to be playing with something polished that so obviously has been imbued with immense thought.  But, as a realist and a guy trying to make a living, I also appreciate adhoc rusty tools that still turn a screw.  The thing might fall down in some cases, but otherwise it&amp;apos;s a pretty steady companion.&lt;/p&gt;
&lt;p&gt;Looking at it another way, though, many of those otherwise sparkling gems won&amp;apos;t let me use them as a hammer the same way I misuse the screwdriver on occasion.  And oftimes, they don&amp;apos;t have any control panels to open so I can reroute EPS conduits and exploit leaky abstractions.  And then, there&amp;apos;s the problem domain: on what classes of nails is this hammer indented for use?  In one case, a particular hammer shines, in another, it leaves thumbs throbbing.&lt;/p&gt;
&lt;p&gt;I see infernos of flamewars start over principle, predictions of falling skies and doom doom doom.  (It&amp;apos;s not maintainable!  It won&amp;apos;t scale!  It&amp;apos;ll be the end of the web!)  And then I see mischievous wizards and cantankerous veterans pull out a much-abused old standby and knock it out of the park.  (Only the feeble-minded need strong types!  Goto considered harmful - &lt;i&gt;to you, maybe&lt;/i&gt;!)  And then, sometimes, when you&amp;apos;re in the realm of recombinant growth and the lazyweb, what initially looks like a jumble of wrinkled paper takes one more origami fold and turns into a perfectly formed swan.  It gets confusing sometimes.&lt;/p&gt;
&lt;p&gt;So anyway, this all leads up to my questions as a naive, wannabe computer scientist:  By what processes of design do we best facilitate recombinant growth?  How deeply and to what level of detail?  How dirty should it be, how unspecified or left with holes or shrugs?  (Plants need dirt to grow.)   How meticulously clean should it be?  (We don&amp;apos;t want to attract any bugs.)  How much should be chalked up to bootstrapping, and how much should be wrangled and hogtied into perfect working order?&lt;/p&gt;
&lt;p&gt;I doubt that it there&amp;apos;s a single fully valid answer to all this.  But, I&amp;apos;m always interested in any of the answers I find anyway.&lt;/p&gt;
</description>
          
          <pubDate>Fri, 13 Dec 2002 21:33:13 GMT</pubDate>
          <link>https://lmorchard.github.io/blog.lmorchard.com//2002/12/13/oooced/</link>
          <guid isPermaLink="true">https://lmorchard.github.io/blog.lmorchard.com//2002/12/13/oooced/</guid>
        </item>
    </channel>
  </rss>