{"comments_archived":true,"date":"2002-04-24T00:00:00.000Z","layout":"post","title":"The bunsen burners still burn and the beakers still... um... beak.","wordpress_id":96,"wordpress_slug":"oooaaf","wordpress_url":"http://www.decafbad.com/blog/?p=96","url":"/2002/04/24/oooaaf/","summary":"<p></p><p>So I&apos;m starting to play with <a href=\"http://www.php.net\">PHP</a> and working on rewriting my <a href=\"http://www.movabletype.org\">Movable Type</a> templates as *.phtml.</p><p></p>\n<p></p><p>Having never really payed much attention to <a href=\"http://www.decafbad.com/twiki/bin/view/Main/PHP\">PHP</a>, I&apos;m amazed at how close it is to Perl (obviously on purpose) yet how much effort has been made to sand off the rough bits.  Not sure how much I like it yet, but at least it&apos;s a familiar tune they&apos;re playing.  The mildly annoying thing is that it&apos;s familiar, but there are just a few things I would habitually reach for in Perl that I haven&apos;t sussed out yet in <a href=\"http://www.decafbad.com/twiki/bin/view/Main/PHP\">PHP</a>.  Like autovivifying data structures.  I abuse those constantly.  I really need to wean myself away from that, methinks.</p><p></p>\n<p></p><p>One thing that I <i>was</i> pleasantly surprised to find is <a href=\"http://pear.php.net\">PEAR</a>, &quot;a framework and distribution system for reusable <a href=\"http://www.decafbad.com/twiki/bin/view/Main/PHP\">PHP</a> components&quot;.  Hello, <a href=\"http://www.cpan.org\">CPAN</a>, my old friend. :)  Finding all kinds of things that are immediately useful, like a <a href=\"http://pear.php.net/package-info.php?pacid=40\">Cache</a> I can use to more intelligently and easily do the output caching voodoo I do in the perl CGI widgets right now.  </p><p></p>\n<p></p><p><b><aside></aside></b>You know, a lack of a centrallized CPAN-like system is what has kept me from leaving Perl for many other technologies.  I really wish Java (<a href=\"http://www.google.com/search?hl=en&amp;q=cjan\">CJAN</a>?) and Python (<a href=\"http://www.google.com/search?q=cpyan&amp;sourceid=mozilla-search&amp;start=0&amp;start=0\">CPyAN</a>?) had one supported by their respective communities.  It&apos;s just so nice to do a <code>perl -MCPAN -e&quot;install Date::Parse&quot;</code> and get what I need.  Maintaining CPAN bundles for my perl software is tasty, too.  Single-command installation of all my app&apos;s requirements, and sometimes I can roll it right into the app&apos;s installation itself.  Mmm.<b></b></p><p></p>\n<p></p><p>Anyway, it&apos;s nice (to say it again) to have a running personal site to tinker with, now that I&apos;ve gotten off my butt and done it.  This laboratory is letting me manufacture reasons to play with tech I hadn&apos;t bothered with before.  </p><p></p>\n<p></p><p>I mean, I&apos;ve used ASP and JSP, and for most of the things I&apos;ve done, I&apos;ve grown a severe dislike for them both.  I left the &quot;Hey, you&apos;ve got HTML in my code!&quot; paradigm behind, wandered through that &quot;Hey, you&apos;ve got code in my HTML&quot; model, and eventually settled on my standard pattern now:<blockquote>A central app logic controller takes in GET/POST data, dispatches to a method which processes the form data.  That method then constructs data structures, which are in turn passed through a template engine to be rendered by a pile of templates independent from the controller.</blockquote>This, along with some very special self-assembling component-based automation sauce, is the core of what my employer&apos;s offerings run on.  But, this has crystallized as a habit for me, and I&apos;ve not even considered other possibilities for a long time.  This of course has made everything look like a nail for this hammer I have.  </p><p></p>\n<p></p><p>For example, while <a href=\"http://www.decafbad.com/twiki/bin/view/Main/PHP\">PHP</a> is not quite the right tool for the  things we&apos;re doing at my day job, it seems like a perfect option to quickly and easily replace <a href=\"http://www.decafbad.com/twiki/bin/view/Main/SSI\">SSI</a> pages on my site with something meatier yet still simple to maintain and doesn&apos;t stink like ASP or JSP.  I&apos;ve also been looking at <a href=\"http://xml.apache.org/cocoon\">Cocoon</a>, which if I can ever quite get in a groove with it, looks like a highly refined instance of my standard hammer.</p><p></p>\n<p></p><p>And then there&apos;s Radio <a href=\"http://www.decafbad.com/twiki/bin/view/Main/UserLand\">UserLand</a>.  I love it and hate it.  The hate mostly comes from the slower iBook on which I run it, I think.  The bootstrappiness of it makes me itch sometimes, but other times that just makes it endearing.  The whole self-contained development biodome it represents is pretty sexy, too.  Speaking of autovivifying data structures...  I just have to love a system which has a live, manually tinkerable giant outline/hashtree for a persistence mechanism.</p><p></p>\n<p></p><p>Next, I really want to swing back around to playing with Flash.  Last time I did something major with it, I was making a game for my employer which really wanted to use web services but I hadn&apos;t known it yet.  The game worked pretty well, but I want to see what it can do since last we met.  First thing in mind that seems mildly nifty might be a slick, live updating lil &quot;Recent Visitors&quot; app for my front page.</p><p></p>\n<p></p><p>I&apos;m really feeling what <a href=\"http://radio.weblogs.com/0100887/\">Jon Udell</a> means when he writes about <a href=\"http://www.byte.com/documents/s=7031/byt1016214357418/0318_udell.html\">thinking by analogy</a>.  It&apos;s also something one of my favorite Comp Sci professors harped on, with regards to what makes a Computer Programmer versus what makes a Computer Scientist.  A small part of his speech always pointed to the notion that a a programmer is almost always pragmatic, memorizing the patterns and greasy innards of whatever tool he or she uses daily.  On the other hand, the scientist is an explorer and finds joy in confusing him or herself by finding the universals and generalities across a range of tools.  In the end, the programmer becomes specialized in a limited domain, while the scientist knows can pick up just about anything that comes along.  And sometimes, many times, the scientist <i>makes new tools</i> for programmers to specialize on.  I want to be and am working toward being a scientist.</p><p></p>\n<p></p><p>More soon.</p>\n","path":"2002/04/24/oooaaf","content":"<p><p>So I&#39;m starting to play with <a href=\"http://www.php.net\">PHP</a> and working on rewriting my <a href=\"http://www.movabletype.org\">Movable Type</a> templates as *.phtml.</p></p>\n<p><p>Having never really payed much attention to <a href=\"http://www.decafbad.com/twiki/bin/view/Main/PHP\">PHP</a>, I&#39;m amazed at how close it is to Perl (obviously on purpose) yet how much effort has been made to sand off the rough bits.  Not sure how much I like it yet, but at least it&#39;s a familiar tune they&#39;re playing.  The mildly annoying thing is that it&#39;s familiar, but there are just a few things I would habitually reach for in Perl that I haven&#39;t sussed out yet in <a href=\"http://www.decafbad.com/twiki/bin/view/Main/PHP\">PHP</a>.  Like autovivifying data structures.  I abuse those constantly.  I really need to wean myself away from that, methinks.</p></p>\n<p><p>One thing that I <i>was</i> pleasantly surprised to find is <a href=\"http://pear.php.net\">PEAR</a>, &quot;a framework and distribution system for reusable <a href=\"http://www.decafbad.com/twiki/bin/view/Main/PHP\">PHP</a> components&quot;.  Hello, <a href=\"http://www.cpan.org\">CPAN</a>, my old friend. :)  Finding all kinds of things that are immediately useful, like a <a href=\"http://pear.php.net/package-info.php?pacid=40\">Cache</a> I can use to more intelligently and easily do the output caching voodoo I do in the perl CGI widgets right now.  </p></p>\n<p><p><b><Aside></b>You know, a lack of a centrallized CPAN-like system is what has kept me from leaving Perl for many other technologies.  I really wish Java (<a href=\"http://www.google.com/search?hl=en&amp;q=cjan\">CJAN</a>?) and Python (<a href=\"http://www.google.com/search?q=cpyan&amp;sourceid=mozilla-search&amp;start=0&amp;start=0\">CPyAN</a>?) had one supported by their respective communities.  It&#39;s just so nice to do a <code>perl -MCPAN -e&quot;install Date::Parse&quot;</code> and get what I need.  Maintaining CPAN bundles for my perl software is tasty, too.  Single-command installation of all my app&#39;s requirements, and sometimes I can roll it right into the app&#39;s installation itself.  Mmm.<b></aside></b></p></p>\n<p><p>Anyway, it&#39;s nice (to say it again) to have a running personal site to tinker with, now that I&#39;ve gotten off my butt and done it.  This laboratory is letting me manufacture reasons to play with tech I hadn&#39;t bothered with before.  </p></p>\n<p><p>I mean, I&#39;ve used ASP and JSP, and for most of the things I&#39;ve done, I&#39;ve grown a severe dislike for them both.  I left the &quot;Hey, you&#39;ve got HTML in my code!&quot; paradigm behind, wandered through that &quot;Hey, you&#39;ve got code in my HTML&quot; model, and eventually settled on my standard pattern now:<blockquote>A central app logic controller takes in GET/POST data, dispatches to a method which processes the form data.  That method then constructs data structures, which are in turn passed through a template engine to be rendered by a pile of templates independent from the controller.</blockquote>This, along with some very special self-assembling component-based automation sauce, is the core of what my employer&#39;s offerings run on.  But, this has crystallized as a habit for me, and I&#39;ve not even considered other possibilities for a long time.  This of course has made everything look like a nail for this hammer I have.  </p></p>\n<p><p>For example, while <a href=\"http://www.decafbad.com/twiki/bin/view/Main/PHP\">PHP</a> is not quite the right tool for the  things we&#39;re doing at my day job, it seems like a perfect option to quickly and easily replace <a href=\"http://www.decafbad.com/twiki/bin/view/Main/SSI\">SSI</a> pages on my site with something meatier yet still simple to maintain and doesn&#39;t stink like ASP or JSP.  I&#39;ve also been looking at <a href=\"http://xml.apache.org/cocoon\">Cocoon</a>, which if I can ever quite get in a groove with it, looks like a highly refined instance of my standard hammer.</p></p>\n<p><p>And then there&#39;s Radio <a href=\"http://www.decafbad.com/twiki/bin/view/Main/UserLand\">UserLand</a>.  I love it and hate it.  The hate mostly comes from the slower iBook on which I run it, I think.  The bootstrappiness of it makes me itch sometimes, but other times that just makes it endearing.  The whole self-contained development biodome it represents is pretty sexy, too.  Speaking of autovivifying data structures...  I just have to love a system which has a live, manually tinkerable giant outline/hashtree for a persistence mechanism.</p></p>\n<p><p>Next, I really want to swing back around to playing with Flash.  Last time I did something major with it, I was making a game for my employer which really wanted to use web services but I hadn&#39;t known it yet.  The game worked pretty well, but I want to see what it can do since last we met.  First thing in mind that seems mildly nifty might be a slick, live updating lil &quot;Recent Visitors&quot; app for my front page.</p></p>\n<p><p>I&#39;m really feeling what <a href=\"http://radio.weblogs.com/0100887/\">Jon Udell</a> means when he writes about <a href=\"http://www.byte.com/documents/s=7031/byt1016214357418/0318_udell.html\">thinking by analogy</a>.  It&#39;s also something one of my favorite Comp Sci professors harped on, with regards to what makes a Computer Programmer versus what makes a Computer Scientist.  A small part of his speech always pointed to the notion that a a programmer is almost always pragmatic, memorizing the patterns and greasy innards of whatever tool he or she uses daily.  On the other hand, the scientist is an explorer and finds joy in confusing him or herself by finding the universals and generalities across a range of tools.  In the end, the programmer becomes specialized in a limited domain, while the scientist knows can pick up just about anything that comes along.  And sometimes, many times, the scientist <i>makes new tools</i> for programmers to specialize on.  I want to be and am working toward being a scientist.</p></p>\n<p><p>More soon.</p>\n<!--more-->\nshortname=oooaaf</p>\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n\n        <ul class=\"comments\">\n\n        <li class=\"comment\" id=\"comment-221089970\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://webseitz.fluxent.com/wiki\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2e83224d92ed7f1148f4dd3cdb0e4548&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://webseitz.fluxent.com/wiki\">Bill Seitz</a>\n                </div>\n                <a href=\"#comment-221089970\" class=\"permalink\"><time datetime=\"2002-04-24T13:48:17\">2002-04-24T13:48:17</time></a>\n            </div>\n            <div class=\"content\">What template engine do you use in Perl? In Python?\n\nHave you considered Zope?</div>\n\n<pre><code>    &lt;/li&gt;\n\n    &lt;li class=&quot;comment&quot; id=&quot;comment-221089973&quot;&gt;\n        &lt;div class=&quot;meta&quot;&gt;\n            &lt;div class=&quot;author&quot;&gt;\n                &lt;a class=&quot;avatar image&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://www.decafbad.com&quot;&gt;&lt;img src=&quot;http://www.gravatar.com/avatar.php?gravatar_id=2ac2cffd36ada8c734b90e02a1e5c1ac&amp;amp;size=32&amp;amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png&quot;/&gt;&lt;/a&gt;\n                &lt;a class=&quot;avatar name&quot; rel=&quot;nofollow&quot; \n                   href=&quot;http://www.decafbad.com&quot;&gt;l.m.orchard&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;a href=&quot;#comment-221089973&quot; class=&quot;permalink&quot;&gt;&lt;time datetime=&quot;2002-04-24T16:38:22&quot;&gt;2002-04-24T16:38:22&lt;/time&gt;&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;content&quot;&gt;Well, under Perl, I pretty much religiously use the Template Toolkit nowadays.  As for Python, still looking around.  Was toying with Cheetah, but some #python people were telling me that I need to forsake all these and go for using ZPT.  But, I have a lot of itchiness with ZPT&#39;s attribute-based language.\n</code></pre><p>As for Zope... well, I&#39;ve poked my head in there from time to time, and even was working on a competitor in Perl named Iaido, but I petered out on that.  I love and hate Zope.  I&#39;m waiting to see if the next generation of Zope fixes what I dislike.</div></p>\n<pre><code>    &lt;/li&gt;\n\n    &lt;li class=&quot;comment&quot; id=&quot;comment-221089975&quot;&gt;\n        &lt;div class=&quot;meta&quot;&gt;\n            &lt;div class=&quot;author&quot;&gt;\n                &lt;a class=&quot;avatar image&quot; rel=&quot;nofollow&quot; \n                   href=&quot;&quot;&gt;&lt;img src=&quot;http://www.gravatar.com/avatar.php?gravatar_id=77d56a18a1b1a6417813091d8a6554e5&amp;amp;size=32&amp;amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png&quot;/&gt;&lt;/a&gt;\n                &lt;a class=&quot;avatar name&quot; rel=&quot;nofollow&quot; \n                   href=&quot;&quot;&gt;reha&lt;/a&gt;\n            &lt;/div&gt;\n            &lt;a href=&quot;#comment-221089975&quot; class=&quot;permalink&quot;&gt;&lt;time datetime=&quot;2004-05-03T21:02:39&quot;&gt;2004-05-03T21:02:39&lt;/time&gt;&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;content&quot;&gt;It&#39;s boiring. Where is the picture that shows us what the bunsen burner looks like and if u had a picture you can label it too.&lt;/div&gt;\n\n    &lt;/li&gt;\n\n    &lt;/ul&gt;\n\n    &lt;/div&gt;\n</code></pre>"}