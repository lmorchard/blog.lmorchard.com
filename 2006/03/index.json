[
  {
    "comments_archived": true,
    "date": "2006-03-26T17:29:46.000Z",
    "layout": "post",
    "title": "When is AJAX not AJAX?",
    "wordpress_id": 918,
    "wordpress_slug": "when-is-ajax-not-ajax",
    "wordpress_url": "http://decafbad.com/blog/2006/03/26/when-is-ajax-not-ajax",
    "year": "2006",
    "month": "03",
    "day": "26",
    "isDir": false,
    "slug": "when-is-ajax-not-ajax",
    "postName": "2006-03-26-when-is-ajax-not-ajax",
    "html": " <p>I started this as a comment over at <a href=\"http://alex.dojotoolkit.org/?p=551\">Alex Russell's entry, \"ajaxWrong\"</a>, copied here because I felt like it.  He writes:</p>\n     <ul>\n     <li>\n     <span><i>This thing is appropriating the necessarily amorphous terminology of &#8220;Ajax&#8221; for an implementation that is directly at odds with why Ajax is an important technology. A XUL app being billed as &#8220;Ajax&#8221; is just as laughable as a Flex or XAML app suddenly growing the same moniker. That it&#8217;s Mozilla&#8217;s walled-garden language doesn&#8217;t really excuse the gaffe.</i></span>\n     </li>\n     </ul>\n <p>I thought <a href=\"http://www.linspire.com/ajaxwrite.php\">ajaxWrite</a> was pretty keen when I first tried it - I presumed there must've been a bit of nice trickery to get what is generally called an AJAX app to work like that.  Imagine my disappointed surprise when I realize that they used XUL.  XUL ain't AJAX, no matter how you try to deform and stretch the term.</p>\n <p>AJAX may be a coined term with an acronym of Asynchronous Javascript and XML, but it&#8217;s descriptive of a new wave of web programming practices.</p>\n <p>It&#8217;s not a spec, so you can&#8217;t get away with a literal reading of &#8220;There&#8217;s no HTML in AJAX, so neener!&#8221; It&#8217;s a community concensus term. And, XUL ain&#8217;t a part of it. Hell, read the list from <a href=\"http://adaptivepath.com/publications/essays/archives/000385.php\">the original article coining the term</a>:</p>\n     <ul>\n     <li>\n     <span>standards-based presentation using XHTML and CSS;</span>\n     </li>\n     <li>\n     <span>dynamic display and interaction using the Document Object Model;</span>\n     </li>\n     <li>\n     <span>data interchange and manipulation using XML and XSLT;</span>\n     </li>\n     <li>\n     <span>asynchronous data retrieval using XMLHttpRequest;</span>\n     </li>\n     <li>\n     <span>and JavaScript binding everything together.</span>\n     </li>\n     </ul>\n <p>That&#8217;s what AJAX means to <del>us</del> <ins>me</ins>. If you want it to mean something else and get away with it, you&#8217;re going to have to convince everyone who read that article and ran with that definition.</p>\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221082587\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://blog.ianbicking.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=cc8334869c9d2a9e603017f2da805eb3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://blog.ianbicking.org\">Ian Bicking</a>\n</div>\n<a href=\"#comment-221082587\" class=\"permalink\"><time datetime=\"2006-03-26T18:40:45\">2006-03-26T18:40:45</time></a>\n</div>\n<div class=\"content\"><p>The original Ajax definition doesn't make much sense either.  For example, XHTML isn't important -- work is typically done with the DOM or innerHTML, neither of which care one bit about XHTML.  They care intensely about HTML, though.  XML is not important either -- heck, just replace the X in Ajax with XMLHttpRequest, because that's what people often use.  JSON or HTML literals work just fine, and JSONP provides an interesting alternative to XMLHttpRequest that can't be done with XML at all.</p>\n<p>Really, Ajax is a new set of practices being developed by a loose but forming community (in a realm where there was <em>no</em> community before), centered around <em>browsers</em> and Javascript and complementary server interaction.</p>\n<p>Coming back around, I don't have a particular opinion, but AjaxWrite <em>is</em> browser-focused, and HTML-focused; XUL is not HTML, but it is more HTML than some arbitrary XML.  And it is Javascript focused.  I have no idea what the server component might look like; I suspect it may be very minimal.  I think it is a good attempt towards Ajax ideas.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221082588\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://ejohn.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b3e04a46e85ad3e165d66f5d927eb609&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://ejohn.org/\">John Resig</a>\n</div>\n<a href=\"#comment-221082588\" class=\"permalink\"><time datetime=\"2006-03-26T18:53:38\">2006-03-26T18:53:38</time></a>\n</div>\n<div class=\"content\"><p>I'm going to have to agree with Ian.  If it was using SVG instead of XUL - would it be 'AJAX'? Or how about the new canvas element in HTML 5? Much in the same way that you can have an 'AJAX' application that uses ActiveX controls. I believe that just because a technology isn't widely supported doesn't mean that it can't participate.</p>\n<p>Now, from the point of view of a developer, XUL was a really crappy choice for a front-end - you're immediately excluding 80%+ of your audience (you know, the ones that you're trying to convert from using Word!). Nothing that I saw presented in ajaxWrite was a XUL-only feature. And this isn't even counting that fact that the application itself is very poorly designed.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221082589\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221082589\" class=\"permalink\"><time datetime=\"2006-03-26T18:58:48\">2006-03-26T18:58:48</time></a>\n</div>\n<div class=\"content\"><p>Bah!  You're both wrong!  I wave my hands at you!  :)</p>\n<p>In my mind, AJAX and DOM Scripting are inexplicably tied together.  For me, the magic of AJAX was the discovery that plain old JS and DHTML apps could perform HTTP requests post page load.  HTML+CSS+JS+XHR means AJAX to me.  No XUL, SVG, canvas, or Flash.  </p>\n<p>Well, maybe canvas...  er... and SVG is nice.  And we use an awful lot of Flash at work.. and..  Aw crap, maybe I don't know what I'm talking about after all.  My gut still says that the proper domain of AJAX is in formerly dead HTML+CSS sprinkled with XHR pixie dust, but I can't really back it up with more than opinion and what the originator of the term said.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221082590\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.justplain.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=59570c72b938a14e030f187f7f71c366&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.justplain.org\">Pieter Overbeeke</a>\n</div>\n<a href=\"#comment-221082590\" class=\"permalink\"><time datetime=\"2006-03-26T19:04:21\">2006-03-26T19:04:21</time></a>\n</div>\n<div class=\"content\"><p>What the 'general public' defines as Ajax is slowly changing from it's original meaning (Asynchronous JavaScript And XML) to 'a rich user interface experience'.\nThe problem is that people can't see and don't care what's going on under the hood, and their only association with ajax is rich user interface experience. \nI guess the ajaxwrite team thought they could get some extra attention by labeling their app 'Ajax'. And why would you be dissapointed about the fact that they used xul? I think it shows what is possible and how future (web)applications will look when xaml can be used in ie.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221082592\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221082592\" class=\"permalink\"><time datetime=\"2006-03-26T19:23:33\">2006-03-26T19:23:33</time></a>\n</div>\n<div class=\"content\"><p>The use of XUL disappoints me because XUL is a Firefox/Mozilla app that happens to be web-transferred.  And XAML squicks me out because it's a Microsoft app that happens to be web-transferred.  Neither makes me happy when I'm trying to make broadly usable web applications across many platforms.  Neither XUL nor XAML will become the standards that HTML, CSS, and JS have become - even with their fuzzy semi-proprietary sidecars like XMLHttpRequest.</p>\n<p>My association with AJAX comes from having written apps using it, and that's from where my grousing arises.  I don't care about the general public's definition of AJAX, just the developers who care about terms like \"asynchronous\" and \"XML\".  But it looks like \"ajaxWrite\" is a somewhat cynical attempt to cash in on public perceptions of AJAXian buzz.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221082593\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://blogs.opml.org/thewilk/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=6f010da6af916f57143ff4d04f6dfb83&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://blogs.opml.org/thewilk/\">David Wilkinson</a>\n</div>\n<a href=\"#comment-221082593\" class=\"permalink\"><time datetime=\"2006-03-28T07:08:32\">2006-03-28T07:08:32</time></a>\n</div>\n<div class=\"content\"><p>Thanks for voicing this l.m. I'm registering my vote with you.</p>\n<p>AJAX or AJAXY or AJAX-like has become one of those weird, undefinably vague web 2.0 type terms that means one thing: 'cool'.  I have had clients ask for cool AJAXY type web interfaces, and they don't even know what they are talking about. They just want it to be 'web 2.0 cool'. I can't wait to see a job description that asks for 5 years of AJAX experience. \"Yeah, sure, I can do AJAX..., been doing it since 1984!\"</p>\n<p>I think the term has been over-used and over-hyped in this mini-bubble of excitement just to get a VC's attention. To me it means a server side remote-procedure call, that updates some part of a page without updating the whole page in a round-trip to the server, accomplished with some form of javascript and server side code via httpRequestObject.</p>\n<p>I could charge extra dollars to develop an AJAXIAN Website. Wouldn't that be 'cool'. Almost nobody would know the difference, except you...</p></div>\n</li>\n</ul>\n</div>\n",
    "body": " <p>I started this as a comment over at <a href=\"http://alex.dojotoolkit.org/?p=551\">Alex Russell's entry, \"ajaxWrong\"</a>, copied here because I felt like it.  He writes:</p>\r\n     <ul>\r\n     <li>\r\n     <span><i>This thing is appropriating the necessarily amorphous terminology of &#8220;Ajax&#8221; for an implementation that is directly at odds with why Ajax is an important technology. A XUL app being billed as &#8220;Ajax&#8221; is just as laughable as a Flex or XAML app suddenly growing the same moniker. That it&#8217;s Mozilla&#8217;s walled-garden language doesn&#8217;t really excuse the gaffe.</i></span>\r\n     </li>\r\n     </ul>\r\n <p>I thought <a href=\"http://www.linspire.com/ajaxwrite.php\">ajaxWrite</a> was pretty keen when I first tried it - I presumed there must've been a bit of nice trickery to get what is generally called an AJAX app to work like that.  Imagine my disappointed surprise when I realize that they used XUL.  XUL ain't AJAX, no matter how you try to deform and stretch the term.</p>\r\n <p>AJAX may be a coined term with an acronym of Asynchronous Javascript and XML, but it&#8217;s descriptive of a new wave of web programming practices.</p>\r\n <p>It&#8217;s not a spec, so you can&#8217;t get away with a literal reading of &#8220;There&#8217;s no HTML in AJAX, so neener!&#8221; It&#8217;s a community concensus term. And, XUL ain&#8217;t a part of it. Hell, read the list from <a href=\"http://adaptivepath.com/publications/essays/archives/000385.php\">the original article coining the term</a>:</p>\r\n     <ul>\r\n     <li>\r\n     <span>standards-based presentation using XHTML and CSS;</span>\r\n     </li>\r\n     <li>\r\n     <span>dynamic display and interaction using the Document Object Model;</span>\r\n     </li>\r\n     <li>\r\n     <span>data interchange and manipulation using XML and XSLT;</span>\r\n     </li>\r\n     <li>\r\n     <span>asynchronous data retrieval using XMLHttpRequest;</span>\r\n     </li>\r\n     <li>\r\n     <span>and JavaScript binding everything together.</span>\r\n     </li>\r\n     </ul>\r\n <p>That&#8217;s what AJAX means to <del>us</del> <ins>me</ins>. If you want it to mean something else and get away with it, you&#8217;re going to have to convince everyone who read that article and ran with that definition.</p>\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221082587\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://blog.ianbicking.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=cc8334869c9d2a9e603017f2da805eb3&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://blog.ianbicking.org\">Ian Bicking</a>\n                </div>\n                <a href=\"#comment-221082587\" class=\"permalink\"><time datetime=\"2006-03-26T18:40:45\">2006-03-26T18:40:45</time></a>\n            </div>\n            <div class=\"content\"><p>The original Ajax definition doesn't make much sense either.  For example, XHTML isn't important -- work is typically done with the DOM or innerHTML, neither of which care one bit about XHTML.  They care intensely about HTML, though.  XML is not important either -- heck, just replace the X in Ajax with XMLHttpRequest, because that's what people often use.  JSON or HTML literals work just fine, and JSONP provides an interesting alternative to XMLHttpRequest that can't be done with XML at all.</p>\n\n<p>Really, Ajax is a new set of practices being developed by a loose but forming community (in a realm where there was <em>no</em> community before), centered around <em>browsers</em> and Javascript and complementary server interaction.</p>\n\n<p>Coming back around, I don't have a particular opinion, but AjaxWrite <em>is</em> browser-focused, and HTML-focused; XUL is not HTML, but it is more HTML than some arbitrary XML.  And it is Javascript focused.  I have no idea what the server component might look like; I suspect it may be very minimal.  I think it is a good attempt towards Ajax ideas.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221082588\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://ejohn.org/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b3e04a46e85ad3e165d66f5d927eb609&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://ejohn.org/\">John Resig</a>\n                </div>\n                <a href=\"#comment-221082588\" class=\"permalink\"><time datetime=\"2006-03-26T18:53:38\">2006-03-26T18:53:38</time></a>\n            </div>\n            <div class=\"content\"><p>I'm going to have to agree with Ian.  If it was using SVG instead of XUL - would it be 'AJAX'? Or how about the new canvas element in HTML 5? Much in the same way that you can have an 'AJAX' application that uses ActiveX controls. I believe that just because a technology isn't widely supported doesn't mean that it can't participate.</p>\n\n<p>Now, from the point of view of a developer, XUL was a really crappy choice for a front-end - you're immediately excluding 80%+ of your audience (you know, the ones that you're trying to convert from using Word!). Nothing that I saw presented in ajaxWrite was a XUL-only feature. And this isn't even counting that fact that the application itself is very poorly designed.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221082589\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221082589\" class=\"permalink\"><time datetime=\"2006-03-26T18:58:48\">2006-03-26T18:58:48</time></a>\n            </div>\n            <div class=\"content\"><p>Bah!  You're both wrong!  I wave my hands at you!  :)</p>\n\n<p>In my mind, AJAX and DOM Scripting are inexplicably tied together.  For me, the magic of AJAX was the discovery that plain old JS and DHTML apps could perform HTTP requests post page load.  HTML+CSS+JS+XHR means AJAX to me.  No XUL, SVG, canvas, or Flash.  </p>\n\n<p>Well, maybe canvas...  er... and SVG is nice.  And we use an awful lot of Flash at work.. and..  Aw crap, maybe I don't know what I'm talking about after all.  My gut still says that the proper domain of AJAX is in formerly dead HTML+CSS sprinkled with XHR pixie dust, but I can't really back it up with more than opinion and what the originator of the term said.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221082590\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.justplain.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=59570c72b938a14e030f187f7f71c366&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.justplain.org\">Pieter Overbeeke</a>\n                </div>\n                <a href=\"#comment-221082590\" class=\"permalink\"><time datetime=\"2006-03-26T19:04:21\">2006-03-26T19:04:21</time></a>\n            </div>\n            <div class=\"content\"><p>What the 'general public' defines as Ajax is slowly changing from it's original meaning (Asynchronous JavaScript And XML) to 'a rich user interface experience'.\nThe problem is that people can't see and don't care what's going on under the hood, and their only association with ajax is rich user interface experience. \nI guess the ajaxwrite team thought they could get some extra attention by labeling their app 'Ajax'. And why would you be dissapointed about the fact that they used xul? I think it shows what is possible and how future (web)applications will look when xaml can be used in ie.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221082592\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\n                </div>\n                <a href=\"#comment-221082592\" class=\"permalink\"><time datetime=\"2006-03-26T19:23:33\">2006-03-26T19:23:33</time></a>\n            </div>\n            <div class=\"content\"><p>The use of XUL disappoints me because XUL is a Firefox/Mozilla app that happens to be web-transferred.  And XAML squicks me out because it's a Microsoft app that happens to be web-transferred.  Neither makes me happy when I'm trying to make broadly usable web applications across many platforms.  Neither XUL nor XAML will become the standards that HTML, CSS, and JS have become - even with their fuzzy semi-proprietary sidecars like XMLHttpRequest.</p>\n\n<p>My association with AJAX comes from having written apps using it, and that's from where my grousing arises.  I don't care about the general public's definition of AJAX, just the developers who care about terms like \"asynchronous\" and \"XML\".  But it looks like \"ajaxWrite\" is a somewhat cynical attempt to cash in on public perceptions of AJAXian buzz.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221082593\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://blogs.opml.org/thewilk/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=6f010da6af916f57143ff4d04f6dfb83&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://blogs.opml.org/thewilk/\">David Wilkinson</a>\n                </div>\n                <a href=\"#comment-221082593\" class=\"permalink\"><time datetime=\"2006-03-28T07:08:32\">2006-03-28T07:08:32</time></a>\n            </div>\n            <div class=\"content\"><p>Thanks for voicing this l.m. I'm registering my vote with you.</p>\n\n<p>AJAX or AJAXY or AJAX-like has become one of those weird, undefinably vague web 2.0 type terms that means one thing: 'cool'.  I have had clients ask for cool AJAXY type web interfaces, and they don't even know what they are talking about. They just want it to be 'web 2.0 cool'. I can't wait to see a job description that asks for 5 years of AJAX experience. \"Yeah, sure, I can do AJAX..., been doing it since 1984!\"</p>\n\n<p>I think the term has been over-used and over-hyped in this mini-bubble of excitement just to get a VC's attention. To me it means a server side remote-procedure call, that updates some part of a page without updating the whole page in a round-trip to the server, accomplished with some form of javascript and server side code via httpRequestObject.</p>\n\n<p>I could charge extra dollars to develop an AJAXIAN Website. Wouldn't that be 'cool'. Almost nobody would know the difference, except you...</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/03/26/when-is-ajax-not-ajax"
  },
  {
    "comments_archived": true,
    "date": "2006-03-26T12:14:25.000Z",
    "layout": "post",
    "title": "On Ignorant Feed Handling",
    "wordpress_id": 917,
    "wordpress_slug": "on-ignorant-feed-handling",
    "wordpress_url": "http://decafbad.com/blog/2006/03/26/on-ignorant-feed-handling",
    "year": "2006",
    "month": "03",
    "day": "26",
    "isDir": false,
    "slug": "on-ignorant-feed-handling",
    "postName": "2006-03-26-on-ignorant-feed-handling",
    "html": " <p>By way of <a href=\"http://www.franklinmint.fm/blog/archives/000725.html\" title=\"mustIgnore isn't good enough\">Robert Sayre</a>, I read that <a href=\"http://www.pacificspirit.com/blog/2006/03/17/how_much_do_i_ignore_thee_discard_or_retain\">Dave Orchard - no relation - wrote</a>: </p>\n     <ul>\n     <li>\n     <span><i>...In many applications, the software that gets an extension isn't the last piece. So what does it mean for it to ignore the extra content? Should it throw it away? Should it keep it but not fault? I'll call these two models the \"Ignore and Discard\" and the \"Ignore but Retain\" models.</i></span>\n     </li>\n     </ul>\n <p>My little projects <a href=\"http://decafbad.com/blog/2005/12/13/feedmagick-the-feed-filter-that-doesnt-know-much-about-feeds\">FeedMagick</a> and <a href=\"http://decafbad.com/trac/wiki/FeedSpool\">FeedSpool</a> are attempts to follow the \"Ignore but Retain\" model for RSS and Atom feed processing.  Since both of these applications are decidedly <i>not</i> at the end of the chain, they both strive to do as little harm as possible to the feed content they process while still usefully filtering and slice/dicing it.</p>\n <p>I've called these both \"ignorant\" feed handlers.  Rather than disassembling everything from a feed into local data structure, munging in that form, and then reassembing into a feed - these handlers work surgically at the XML level, juggling and slinging elements around, really aware only of feed/item boundaries and the occasional tag found inside an item/entry.  Everything else - be it namespaced extensions attributes or elements or semi-sapient arrangements of whitespace - gets preserved in the output for applications down the line.  (Well, actually, I think I mangle whitespace, but I'm working on that.)</p>\n <p>Because feeds <i>are</i> XML, after all, there's no reason not to work at the basic XML level when you're building a filter or a front-end feed API.  Making a transition from XML into local programming environment structures and idiom exposes all sorts of impedance mismatches and assumes perfect knowledge of what to expect in the universe of feeds your app will process.  On the other hand, supporting the basics of XML allows you to support pretty much any arbitrary structure of elements blindly, knowing only about a few select tags like feeds and items.</p>\n  <p><b>Update:</b> In comments, <a href=\"http://decafbad.com/blog/2006/03/26/on-ignorant-feed-handling#comment-9097\">Dave Johnson mentions</a>: \"it’s important to note that the [Microsoft] Feeds API does preserve that which it does not understand (such as iTunes, GeoRSS, extensions you add, etc.)\"  Thanks for the correction!  I thought I'd read that, but jumped the gun in assuming that that was not the case!  I really need to get a Windows machine and play with this API myself.</p>\n <p><del>When I first read about the new feed API coming from Microsoft, <a href=\"http://decafbad.com/blog/2005/06/28/four-thoughts-on-ms-rss-so-far\">I had good hopes for it</a> as a Winsock-like universal handler for feeds for Windows apps.  And, I'm sure it will be used that way - but unlike Winsock, it appears that the MS feed API <a href=\"http://rollerweblogger.org/page/roller?entry=ms_feeds_api_experiments\">mangles data on the way through</a>.  This will end up being a dead end for the growth of feed formats, where Winsock was an enabler for future unknown internet applications.  The point is, just as you can build a library to handle internet traffic that doesn't care about the content of what it receives - you can do the same with syndication feeds as XML data.</del></p>\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221088703\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://sporkmonger.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=56ee28134dd0776825445e3551979b14&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://sporkmonger.com/\">Bob Aman</a>\n</div>\n<a href=\"#comment-221088703\" class=\"permalink\"><time datetime=\"2006-03-26T15:03:05\">2006-03-26T15:03:05</time></a>\n</div>\n<div class=\"content\"><p>I'd say FeedTools also falls into the \"Ignore but Retain\" model.  But I actually do translate into local data structures.  There are obvious limitations, yes, but since I also maintain the full original XML within the data structure, those limitations are largely defined by how much you care about what I chose to ignore.  The only really big problem comes in when you hit the generation methods, because of course, generation on such a data structure will ignore any elements that I don't explicitly include.  So you potentially get some silent data loss, though not unexpected data loss.  Although, I did also supply hooks into the generation code so that additional generation code could be inserted on the fly, so you're once again only limitted by what you actually needed to support.  The only person who really loses out is the guy down the line if you republish stuff.  And 99% of the time, he's not going to care so long as you give him the important stuff.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221088704\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://rollerweblogger.org/page/roller\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=9e3fbda6bebebb1e66a4eaf1d84c9c25&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://rollerweblogger.org/page/roller\">Dave Johnson</a>\n</div>\n<a href=\"#comment-221088704\" class=\"permalink\"><time datetime=\"2006-03-26T18:40:20\">2006-03-26T18:40:20</time></a>\n</div>\n<div class=\"content\"><p>The MS Feeds API does some weird things because it tries to normalize the commonly used funky RSS elements like ,  and  to Microsoft Common Feed Format (based on RSS 2.0 and Atom 1.0). I do have some hope that they'll get that right in the end, but they're clearly not there yet. However, it's important to note that the Feeds API <em>does</em> preserve that which it does not understand (such as iTunes, GeoRSS, extensions you add, etc.).</p></div>\n</li>\n</ul>\n</div>\n",
    "body": " <p>By way of <a href=\"http://www.franklinmint.fm/blog/archives/000725.html\" title=\"mustIgnore isn't good enough\">Robert Sayre</a>, I read that <a href=\"http://www.pacificspirit.com/blog/2006/03/17/how_much_do_i_ignore_thee_discard_or_retain\">Dave Orchard - no relation - wrote</a>: </p>\r\n     <ul>\r\n     <li>\r\n     <span><i>...In many applications, the software that gets an extension isn't the last piece. So what does it mean for it to ignore the extra content? Should it throw it away? Should it keep it but not fault? I'll call these two models the \"Ignore and Discard\" and the \"Ignore but Retain\" models.</i></span>\r\n     </li>\r\n     </ul>\r\n <p>My little projects <a href=\"http://decafbad.com/blog/2005/12/13/feedmagick-the-feed-filter-that-doesnt-know-much-about-feeds\">FeedMagick</a> and <a href=\"http://decafbad.com/trac/wiki/FeedSpool\">FeedSpool</a> are attempts to follow the \"Ignore but Retain\" model for RSS and Atom feed processing.  Since both of these applications are decidedly <i>not</i> at the end of the chain, they both strive to do as little harm as possible to the feed content they process while still usefully filtering and slice/dicing it.</p>\r\n <p>I've called these both \"ignorant\" feed handlers.  Rather than disassembling everything from a feed into local data structure, munging in that form, and then reassembing into a feed - these handlers work surgically at the XML level, juggling and slinging elements around, really aware only of feed/item boundaries and the occasional tag found inside an item/entry.  Everything else - be it namespaced extensions attributes or elements or semi-sapient arrangements of whitespace - gets preserved in the output for applications down the line.  (Well, actually, I think I mangle whitespace, but I'm working on that.)</p>\r\n <p>Because feeds <i>are</i> XML, after all, there's no reason not to work at the basic XML level when you're building a filter or a front-end feed API.  Making a transition from XML into local programming environment structures and idiom exposes all sorts of impedance mismatches and assumes perfect knowledge of what to expect in the universe of feeds your app will process.  On the other hand, supporting the basics of XML allows you to support pretty much any arbitrary structure of elements blindly, knowing only about a few select tags like feeds and items.</p>\r\n  <p><b>Update:</b> In comments, <a href=\"http://decafbad.com/blog/2006/03/26/on-ignorant-feed-handling#comment-9097\">Dave Johnson mentions</a>: \"it’s important to note that the [Microsoft] Feeds API does preserve that which it does not understand (such as iTunes, GeoRSS, extensions you add, etc.)\"  Thanks for the correction!  I thought I'd read that, but jumped the gun in assuming that that was not the case!  I really need to get a Windows machine and play with this API myself.</p>\r\n <p><del>When I first read about the new feed API coming from Microsoft, <a href=\"http://decafbad.com/blog/2005/06/28/four-thoughts-on-ms-rss-so-far\">I had good hopes for it</a> as a Winsock-like universal handler for feeds for Windows apps.  And, I'm sure it will be used that way - but unlike Winsock, it appears that the MS feed API <a href=\"http://rollerweblogger.org/page/roller?entry=ms_feeds_api_experiments\">mangles data on the way through</a>.  This will end up being a dead end for the growth of feed formats, where Winsock was an enabler for future unknown internet applications.  The point is, just as you can build a library to handle internet traffic that doesn't care about the content of what it receives - you can do the same with syndication feeds as XML data.</del></p>\r\n\n<div id=\"comments\" class=\"comments archived-comments\">\n            <h3>Archived Comments</h3>\n            \n        <ul class=\"comments\">\n            \n        <li class=\"comment\" id=\"comment-221088703\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://sporkmonger.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=56ee28134dd0776825445e3551979b14&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://sporkmonger.com/\">Bob Aman</a>\n                </div>\n                <a href=\"#comment-221088703\" class=\"permalink\"><time datetime=\"2006-03-26T15:03:05\">2006-03-26T15:03:05</time></a>\n            </div>\n            <div class=\"content\"><p>I'd say FeedTools also falls into the \"Ignore but Retain\" model.  But I actually do translate into local data structures.  There are obvious limitations, yes, but since I also maintain the full original XML within the data structure, those limitations are largely defined by how much you care about what I chose to ignore.  The only really big problem comes in when you hit the generation methods, because of course, generation on such a data structure will ignore any elements that I don't explicitly include.  So you potentially get some silent data loss, though not unexpected data loss.  Although, I did also supply hooks into the generation code so that additional generation code could be inserted on the fly, so you're once again only limitted by what you actually needed to support.  The only person who really loses out is the guy down the line if you republish stuff.  And 99% of the time, he's not going to care so long as you give him the important stuff.</p></div>\n            \n        </li>\n    \n        <li class=\"comment\" id=\"comment-221088704\">\n            <div class=\"meta\">\n                <div class=\"author\">\n                    <a class=\"avatar image\" rel=\"nofollow\" \n                       href=\"http://rollerweblogger.org/page/roller\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=9e3fbda6bebebb1e66a4eaf1d84c9c25&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n                    <a class=\"avatar name\" rel=\"nofollow\" \n                       href=\"http://rollerweblogger.org/page/roller\">Dave Johnson</a>\n                </div>\n                <a href=\"#comment-221088704\" class=\"permalink\"><time datetime=\"2006-03-26T18:40:20\">2006-03-26T18:40:20</time></a>\n            </div>\n            <div class=\"content\"><p>The MS Feeds API does some weird things because it tries to normalize the commonly used funky RSS elements like ,  and  to Microsoft Common Feed Format (based on RSS 2.0 and Atom 1.0). I do have some hope that they'll get that right in the end, but they're clearly not there yet. However, it's important to note that the Feeds API <em>does</em> preserve that which it does not understand (such as iTunes, GeoRSS, extensions you add, etc.).</p></div>\n            \n        </li>\n    \n        </ul>\n    \n        </div>\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/03/26/on-ignorant-feed-handling"
  },
  {
    "comments_archived": true,
    "date": "2006-03-26T04:14:29.000Z",
    "layout": "post",
    "title": "About XoxoOutliner",
    "wordpress_id": 916,
    "wordpress_slug": "about-xoxooutliner",
    "wordpress_url": "http://decafbad.com/blog/2006/03/25/about-xoxooutliner",
    "year": "2006",
    "month": "03",
    "day": "25",
    "isDir": false,
    "slug": "about-xoxooutliner",
    "postName": "2006-03-25-about-xoxooutliner",
    "html": " <p>So, I keep making vague references to some cool things I want to work on.  Well, rather than staying cagey and in some lame sort of stealth mode - here's an early release, because I want to get some of it out of my head and onto the web.</p>\n <p>Last summer, in a fit of manic love for XOXO, I started writing <a href=\"http://decafbad.com/blog/2005/07/12/xoxo-outliner-experiment\">a browser-based outliner</a>.  I got busy and had to leave it for awhile, but kept meaning to get back to it.  A few months ago, I <a href=\"http://decafbad.com/trac/browser/trunk/XoxoOutliner/js/XoxoOutlinerKit.js\" title=\"XoxoOutlinerKit.js\">totally rewrote that code</a> to correct some memory leaks, streamline some things, and generally employ a few more of the tricks I've learned since last July.  It's still got some work to go.</p>\n <p>The idea I think is most cool about this outliner is that it uses the browser's own data structures in the DOM to both represent and display the outline data.  But, this code doesn't offer any way to get edited outlines into or out of the browser's DOM.  Pointless editing of statically-served XOXO outlines as a demo was all I had.  </p>\n <p>In fact, back in July, <a href=\"http://microformats.org/blog/2005/07/13/xoxo-outline-editor-in-javascript/\">Tantek &Ccedil;elik mentioned my XOXO outline experiment</a> on microformats.org and mused: '<i>Imagine what you could do with some AJAX to \"autosave\" this XOXO outline to the server, and allow multiple users to edit different subpoints simultaneously.</i>'  Hold that thought, because I think I'm about to get a bit closer to that goal.</p>\n <p>The OPML Community Server has a very simple, yet useful API for managing and transferring files via XML-RPC.  In a lot of ways, I think it's competition for the Atom Publishing Protocol.  But, say - did you know that you can do <a href=\"http://www.vcdn.org/Public/XMLRPC/\">XML-RPC from a browser via AJAX</a>?  Well, that particular implementation is a bit old and seems buggy, so <a href=\"http://decafbad.com/trac/browser/trunk/XoxoOutliner/js/myXMLRPC.js\" title=\"myXMLRPC.js\">I've started gutting it and rewriting it myself</a>.  So, I can call the OPML Community Server API from a browser - now I need a way to turn in-browser outlines into data I can ship around with the API.</p>\n <p>Well, that's where this next piece of the puzzle comes in: <a href=\"http://decafbad.com/trac/browser/trunk/XoxoOutliner/js/XoxoOutliner/Conversions.js\" title=\"XoxoOutliner/Conversions.js\">JavaScript functions to convert between XOXO and OPML data and browser DOM structures</a>.</p>\n <p>So, I've got the pieces in code to go round trip from XOXO and OPML data on a server; to a browser's DOM where it can be edited by way of a JavaScript-driven UI; and back to the server again.  These parts aren't welded together in any form remotely close to finished, but hopefully that's what I'll get around to doing under the project I've named <a href=\"http://decafbad.com/trac/wiki/XoxoOutliner\">XoxoOutliner</a>.  In my own carefully controlled conditions, I've been able to load up, edit, and save outlines on my own <a href=\"http://decafbad.com/trac/wiki/OpmlServer\">barely-functional OpmlServer</a> - as well as on <code>blogs.opml.org</code> itself.</p>\n <p>What's all this mean?  Well, if I never get a chance to actually finish this, maybe someone can make use of the parts I've linked to here.  Otherwise, it could soon mean direct in-browser editing of OPML outlines and blogs with OPML Community Server integration.  Combine that with the <a href=\"http://support.opml.org/2005/07/18\">OPML Editor's ability to synch up with changed files</a>, and you can edit while you're away and later bring that content back into the more fully-capable desktop application.  (Thanks to <a href=\"http://blogs.opml.org/amyloo/\">Amyloo</a> for pointing me toward that particular trick!)</p>\n <p>Don't hold your breath on my account, though:  I'm in pretty much over my head with work at the moment, so this post is more or less an escape pod for my ideas in case I don't quite make it out of this hole.  <img src=\"http://static.userland.com/shortcuts/images/qbullets/sidesmiley.gif\">  Feel free to steal the pieces.</p>\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221088015\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://donovanwatts.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=188ad8b4dc99107d22c8b868e45f0508&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://donovanwatts.com/\">Donovan Watts</a>\n</div>\n<a href=\"#comment-221088015\" class=\"permalink\"><time datetime=\"2006-03-27T06:46:09\">2006-03-27T06:46:09</time></a>\n</div>\n<div class=\"content\"><p>go les... sounds very cool.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221088017\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=7028f422ca6da0180de6c9d922a3228f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\">Danny</a>\n</div>\n<a href=\"#comment-221088017\" class=\"permalink\"><time datetime=\"2006-04-01T12:13:52\">2006-04-01T12:13:52</time></a>\n</div>\n<div class=\"content\"><p>Does sound cool.\nA kind-of feature request. I'd very much like to try out your code with the <a href=\"http://wymiwyg.org/knobot\" rel=\"nofollow\">blog backend</a> I'm now using. But I don't really fancy writing code to support  XML-RPC when a POST should be enough, also I don't really have any need for the OPML. So I'd be very grateful if you could somehow add hooks, or at least indicate in the code where to snip the bits I wouldn't need.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221088019\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221088019\" class=\"permalink\"><time datetime=\"2006-04-01T16:10:01\">2006-04-01T16:10:01</time></a>\n</div>\n<div class=\"content\"><p>Danny: Sure - one of the next APIs I was thinking of tackling once I'd found a good implementation of it was the APP.  All the parts are there in rough form, I think.  There's a method <code>XoxoOutliner.Conversions.fromDOMtoXOXO(ele)</code> that takes a UL or OL node from the DOM and attempts to serialize it as XOXO, stripping out all the crud injected to manage the UI.</p>\n<p>So, maybe <code>data = XoxoOutliner.Conversions.fromDOMtoXOXO($('outline1'))</code> will get you an XOXO string for the first outline on the page, depending on what ID it has.  ('outline1' is auto-assigned if none already given)</p>\n<p>You should be able to then make a POST request with XMLHttpRequest using that data as the body, or whatever your API requires.  HAving not yet had a chance to try it, of course, it probably needs some work yet</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221088021\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=7028f422ca6da0180de6c9d922a3228f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\">Danny</a>\n</div>\n<a href=\"#comment-221088021\" class=\"permalink\"><time datetime=\"2006-04-01T21:03:48\">2006-04-01T21:03:48</time></a>\n</div>\n<div class=\"content\"><p>Excellent, thanks Les.</p></div>\n</li>\n</ul>\n</div>\n",
    "body": " <p>So, I keep making vague references to some cool things I want to work on.  Well, rather than staying cagey and in some lame sort of stealth mode - here's an early release, because I want to get some of it out of my head and onto the web.</p>\r\n <p>Last summer, in a fit of manic love for XOXO, I started writing <a href=\"http://decafbad.com/blog/2005/07/12/xoxo-outliner-experiment\">a browser-based outliner</a>.  I got busy and had to leave it for awhile, but kept meaning to get back to it.  A few months ago, I <a href=\"http://decafbad.com/trac/browser/trunk/XoxoOutliner/js/XoxoOutlinerKit.js\" title=\"XoxoOutlinerKit.js\">totally rewrote that code</a> to correct some memory leaks, streamline some things, and generally employ a few more of the tricks I've learned since last July.  It's still got some work to go.</p>\r\n <p>The idea I think is most cool about this outliner is that it uses the browser's own data structures in the DOM to both represent and display the outline data.  But, this code doesn't offer any way to get edited outlines into or out of the browser's DOM.  Pointless editing of statically-served XOXO outlines as a demo was all I had.  </p>\r\n <p>In fact, back in July, <a href=\"http://microformats.org/blog/2005/07/13/xoxo-outline-editor-in-javascript/\">Tantek &Ccedil;elik mentioned my XOXO outline experiment</a> on microformats.org and mused: '<i>Imagine what you could do with some AJAX to \"autosave\" this XOXO outline to the server, and allow multiple users to edit different subpoints simultaneously.</i>'  Hold that thought, because I think I'm about to get a bit closer to that goal.</p>\r\n <p>The OPML Community Server has a very simple, yet useful API for managing and transferring files via XML-RPC.  In a lot of ways, I think it's competition for the Atom Publishing Protocol.  But, say - did you know that you can do <a href=\"http://www.vcdn.org/Public/XMLRPC/\">XML-RPC from a browser via AJAX</a>?  Well, that particular implementation is a bit old and seems buggy, so <a href=\"http://decafbad.com/trac/browser/trunk/XoxoOutliner/js/myXMLRPC.js\" title=\"myXMLRPC.js\">I've started gutting it and rewriting it myself</a>.  So, I can call the OPML Community Server API from a browser - now I need a way to turn in-browser outlines into data I can ship around with the API.</p>\r\n <p>Well, that's where this next piece of the puzzle comes in: <a href=\"http://decafbad.com/trac/browser/trunk/XoxoOutliner/js/XoxoOutliner/Conversions.js\" title=\"XoxoOutliner/Conversions.js\">JavaScript functions to convert between XOXO and OPML data and browser DOM structures</a>.</p>\r\n <p>So, I've got the pieces in code to go round trip from XOXO and OPML data on a server; to a browser's DOM where it can be edited by way of a JavaScript-driven UI; and back to the server again.  These parts aren't welded together in any form remotely close to finished, but hopefully that's what I'll get around to doing under the project I've named <a href=\"http://decafbad.com/trac/wiki/XoxoOutliner\">XoxoOutliner</a>.  In my own carefully controlled conditions, I've been able to load up, edit, and save outlines on my own <a href=\"http://decafbad.com/trac/wiki/OpmlServer\">barely-functional OpmlServer</a> - as well as on <code>blogs.opml.org</code> itself.</p>\r\n <p>What's all this mean?  Well, if I never get a chance to actually finish this, maybe someone can make use of the parts I've linked to here.  Otherwise, it could soon mean direct in-browser editing of OPML outlines and blogs with OPML Community Server integration.  Combine that with the <a href=\"http://support.opml.org/2005/07/18\">OPML Editor's ability to synch up with changed files</a>, and you can edit while you're away and later bring that content back into the more fully-capable desktop application.  (Thanks to <a href=\"http://blogs.opml.org/amyloo/\">Amyloo</a> for pointing me toward that particular trick!)</p>\r\n <p>Don't hold your breath on my account, though:  I'm in pretty much over my head with work at the moment, so this post is more or less an escape pod for my ideas in case I don't quite make it out of this hole.  <img src=\"http://static.userland.com/shortcuts/images/qbullets/sidesmiley.gif\">  Feel free to steal the pieces.</p>\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221088015\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://donovanwatts.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=188ad8b4dc99107d22c8b868e45f0508&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://donovanwatts.com/\">Donovan Watts</a>\r\n                </div>\r\n                <a href=\"#comment-221088015\" class=\"permalink\"><time datetime=\"2006-03-27T06:46:09\">2006-03-27T06:46:09</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>go les... sounds very cool.</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221088017\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=7028f422ca6da0180de6c9d922a3228f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://dannyayers.com\">Danny</a>\r\n                </div>\r\n                <a href=\"#comment-221088017\" class=\"permalink\"><time datetime=\"2006-04-01T12:13:52\">2006-04-01T12:13:52</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Does sound cool.\r\nA kind-of feature request. I'd very much like to try out your code with the <a href=\"http://wymiwyg.org/knobot\" rel=\"nofollow\">blog backend</a> I'm now using. But I don't really fancy writing code to support  XML-RPC when a POST should be enough, also I don't really have any need for the OPML. So I'd be very grateful if you could somehow add hooks, or at least indicate in the code where to snip the bits I wouldn't need.</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221088019\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\r\n                </div>\r\n                <a href=\"#comment-221088019\" class=\"permalink\"><time datetime=\"2006-04-01T16:10:01\">2006-04-01T16:10:01</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Danny: Sure - one of the next APIs I was thinking of tackling once I'd found a good implementation of it was the APP.  All the parts are there in rough form, I think.  There's a method <code>XoxoOutliner.Conversions.fromDOMtoXOXO(ele)</code> that takes a UL or OL node from the DOM and attempts to serialize it as XOXO, stripping out all the crud injected to manage the UI.</p>\r\n\r\n<p>So, maybe <code>data = XoxoOutliner.Conversions.fromDOMtoXOXO($('outline1'))</code> will get you an XOXO string for the first outline on the page, depending on what ID it has.  ('outline1' is auto-assigned if none already given)</p>\r\n\r\n<p>You should be able to then make a POST request with XMLHttpRequest using that data as the body, or whatever your API requires.  HAving not yet had a chance to try it, of course, it probably needs some work yet</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221088021\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=7028f422ca6da0180de6c9d922a3228f&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://dannyayers.com\">Danny</a>\r\n                </div>\r\n                <a href=\"#comment-221088021\" class=\"permalink\"><time datetime=\"2006-04-01T21:03:48\">2006-04-01T21:03:48</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Excellent, thanks Les.</p></div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/03/26/about-xoxooutliner",
    "thumbnail": "http://static.userland.com/shortcuts/images/qbullets/sidesmiley.gif"
  },
  {
    "comments_archived": true,
    "date": "2006-03-06T12:39:46.000Z",
    "layout": "post",
    "tags": [
      "asides"
    ],
    "title": "More IntelliTXT crud (and, oh, AIM has an SDK coming)",
    "wordpress_id": 914,
    "wordpress_slug": "more-intellitxt-crud-and-oh-aim-has-an-sdk-coming",
    "wordpress_url": "http://decafbad.com/blog/2006/03/06/more-intellitxt-crud-and-oh-aim-has-an-sdk-coming",
    "year": "2006",
    "month": "03",
    "day": "06",
    "isDir": false,
    "slug": "more-intellitxt-crud-and-oh-aim-has-an-sdk-coming",
    "postName": "2006-03-06-more-intellitxt-crud-and-oh-aim-has-an-sdk-coming",
    "html": " <p><a href=\"http://www.neowin.net/index.php?act=view&id=32462\">Here's yet another example of why I have a lot of angst for IntelliTXT advertising.</a>  Unfortunately, I've not activated my adblock or <a href=\"http://decafbad.com/blog/2006/01/13/i-cant-get-too-ticked-at-oreilly-and-intellitxt\">opted out</a> for this site.  Can you tell me which of these links are the real links to the relevant content about which this news story is written?  It's about a new SDK from AOL for AIM.</p>\n <p>The AOL link goes to AOL, at least, but the rest are all either to competitors or nonsequitors - \"SDK\" links to something about barcodes?!  Oh, but when I look closer, I can tell that the actual site's links are in a non-underlined light blue style.</p>\n <p>This is pathetic:  There are more contextual ad links - which aren't actually well-contextualized - than there are real links.  Oh, and have I mentioned the agency behind IntelliTXT has attempted to contact me through email and IM to discuss opportunities for decafbad.com?  Do you know how much it pains me to simply ignore it and not turn around and spew pure bile at them?  No thanks guys - I don't <i>really</i> want to offend you, but this service offends <i>my</i> sensibilities.</p>\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221090801\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://hybernaut.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4c87a5228b4e3fa2c544aa7d55412525&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://hybernaut.com\">Brian Del Vecchio</a>\n</div>\n<a href=\"#comment-221090801\" class=\"permalink\"><time datetime=\"2006-03-06T15:23:47\">2006-03-06T15:23:47</time></a>\n</div>\n<div class=\"content\"><p>Les, I'm not sure what ads you're talking about.  Here's what that page looks like through my browser:</p>\n<p>http://hybernaut.com/images/neowin-ss.png</p>\n<p>The AOL stuff is interesting, too.  I think it's much more than just an official API for gaim and Trillian--I've noticed Marc Canter disclosing that AOL is a client, so I think they'll be launching the AOL stuff with showcase modules fby Broadband Mechanics.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090802\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221090802\" class=\"permalink\"><time datetime=\"2006-03-06T15:50:50\">2006-03-06T15:50:50</time></a>\n</div>\n<div class=\"content\"><p>Brian: From your screen shot, it looks like you have a good set of ad blocking filters going on.  I didn't, at the time.  Ugh.  :)</p>\n<p>I'm still starting to dig into the AIM SDK stuff, though I'm not seeing what I really want to see - a spec of the TOC2 protocol.  It looks so far like Win32 specific building blocks locked down with a developer key.  But, this is only after about 15 minutes worth of looking over coffee this morning</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090804\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://hybernaut.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4c87a5228b4e3fa2c544aa7d55412525&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://hybernaut.com\">Brian Del Vecchio</a>\n</div>\n<a href=\"#comment-221090804\" class=\"permalink\"><time datetime=\"2006-03-06T16:19:55\">2006-03-06T16:19:55</time></a>\n</div>\n<div class=\"content\"><p>Indeed--call me a heretic, but I can't read the Interweb without an adblocker.  Every once in a while I look over someone else's shoulder and see all those blinking, animated ads and wonder, how can you possibly tolerate that?  </p>\n<p>But that's not really what you were on about, so I'll leave it at that.  8^)</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090805\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://hybernaut.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4c87a5228b4e3fa2c544aa7d55412525&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://hybernaut.com\">Brian Del Vecchio</a>\n</div>\n<a href=\"#comment-221090805\" class=\"permalink\"><time datetime=\"2006-03-06T16:35:38\">2006-03-06T16:35:38</time></a>\n</div>\n<div class=\"content\"><p>OK, thinking about this a little more...</p>\n<blockquote>\n<p>locked down with a developer key.</p>\n</blockquote>\n<p>I haven't read their documentation yet, but what's your take on the wrongness of this?  I mean, surely you can understand an API provider's desire to track usage and defend their service from abuse.  But is the developer key model nefarious in some way that I haven't grokked yet?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221090806\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221090806\" class=\"permalink\"><time datetime=\"2006-03-06T16:44:00\">2006-03-06T16:44:00</time></a>\n</div>\n<div class=\"content\"><p>Eh, no more wrongness than, say, Google's API.  I'm just hoping for something more like Jabber - but then, I guess, I can just use Jabber.  :)  Expecting developers to use keys is AOL's perogative - I'm just happy to see more openness, once I can get a better look at it.</p></div>\n</li>\n</ul>\n</div>\n",
    "body": " <p><a href=\"http://www.neowin.net/index.php?act=view&id=32462\">Here's yet another example of why I have a lot of angst for IntelliTXT advertising.</a>  Unfortunately, I've not activated my adblock or <a href=\"http://decafbad.com/blog/2006/01/13/i-cant-get-too-ticked-at-oreilly-and-intellitxt\">opted out</a> for this site.  Can you tell me which of these links are the real links to the relevant content about which this news story is written?  It's about a new SDK from AOL for AIM.</p>\r\n <p>The AOL link goes to AOL, at least, but the rest are all either to competitors or nonsequitors - \"SDK\" links to something about barcodes?!  Oh, but when I look closer, I can tell that the actual site's links are in a non-underlined light blue style.</p>\r\n <p>This is pathetic:  There are more contextual ad links - which aren't actually well-contextualized - than there are real links.  Oh, and have I mentioned the agency behind IntelliTXT has attempted to contact me through email and IM to discuss opportunities for decafbad.com?  Do you know how much it pains me to simply ignore it and not turn around and spew pure bile at them?  No thanks guys - I don't <i>really</i> want to offend you, but this service offends <i>my</i> sensibilities.</p>\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221090801\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://hybernaut.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4c87a5228b4e3fa2c544aa7d55412525&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://hybernaut.com\">Brian Del Vecchio</a>\r\n                </div>\r\n                <a href=\"#comment-221090801\" class=\"permalink\"><time datetime=\"2006-03-06T15:23:47\">2006-03-06T15:23:47</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Les, I'm not sure what ads you're talking about.  Here's what that page looks like through my browser:</p>\r\n\r\n<p>http://hybernaut.com/images/neowin-ss.png</p>\r\n\r\n<p>The AOL stuff is interesting, too.  I think it's much more than just an official API for gaim and Trillian--I've noticed Marc Canter disclosing that AOL is a client, so I think they'll be launching the AOL stuff with showcase modules fby Broadband Mechanics.</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221090802\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\r\n                </div>\r\n                <a href=\"#comment-221090802\" class=\"permalink\"><time datetime=\"2006-03-06T15:50:50\">2006-03-06T15:50:50</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Brian: From your screen shot, it looks like you have a good set of ad blocking filters going on.  I didn't, at the time.  Ugh.  :)</p>\r\n\r\n<p>I'm still starting to dig into the AIM SDK stuff, though I'm not seeing what I really want to see - a spec of the TOC2 protocol.  It looks so far like Win32 specific building blocks locked down with a developer key.  But, this is only after about 15 minutes worth of looking over coffee this morning</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221090804\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://hybernaut.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4c87a5228b4e3fa2c544aa7d55412525&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://hybernaut.com\">Brian Del Vecchio</a>\r\n                </div>\r\n                <a href=\"#comment-221090804\" class=\"permalink\"><time datetime=\"2006-03-06T16:19:55\">2006-03-06T16:19:55</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Indeed--call me a heretic, but I can't read the Interweb without an adblocker.  Every once in a while I look over someone else's shoulder and see all those blinking, animated ads and wonder, how can you possibly tolerate that?  </p>\r\n\r\n<p>But that's not really what you were on about, so I'll leave it at that.  8^)</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221090805\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://hybernaut.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4c87a5228b4e3fa2c544aa7d55412525&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://hybernaut.com\">Brian Del Vecchio</a>\r\n                </div>\r\n                <a href=\"#comment-221090805\" class=\"permalink\"><time datetime=\"2006-03-06T16:35:38\">2006-03-06T16:35:38</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>OK, thinking about this a little more...</p>\r\n\r\n<blockquote>\r\n  <p>locked down with a developer key.</p>\r\n</blockquote>\r\n\r\n<p>I haven't read their documentation yet, but what's your take on the wrongness of this?  I mean, surely you can understand an API provider's desire to track usage and defend their service from abuse.  But is the developer key model nefarious in some way that I haven't grokked yet?</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221090806\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\r\n                </div>\r\n                <a href=\"#comment-221090806\" class=\"permalink\"><time datetime=\"2006-03-06T16:44:00\">2006-03-06T16:44:00</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Eh, no more wrongness than, say, Google's API.  I'm just hoping for something more like Jabber - but then, I guess, I can just use Jabber.  :)  Expecting developers to use keys is AOL's perogative - I'm just happy to see more openness, once I can get a better look at it.</p></div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/03/06/more-intellitxt-crud-and-oh-aim-has-an-sdk-coming"
  },
  {
    "comments_archived": true,
    "date": "2006-03-05T18:03:00.000Z",
    "layout": "post",
    "tags": [
      "asides"
    ],
    "title": "Subscription lists defined in OPML 2.0 spec",
    "wordpress_id": 913,
    "wordpress_slug": "subscription-lists-defined-in-opml-20-spec",
    "wordpress_url": "http://decafbad.com/blog/2006/03/05/subscription-lists-defined-in-opml-20-spec",
    "year": "2006",
    "month": "03",
    "day": "05",
    "isDir": false,
    "slug": "subscription-lists-defined-in-opml-20-spec",
    "postName": "2006-03-05-subscription-lists-defined-in-opml-20-spec",
    "html": " <p>The addition of <a href=\"http://www.opml.org/spec2#subscriptionLists\">subscription lists</a> as a part of the OPML 2.0 spec is actually pretty significant, and I only just now felt it sink in.  This has been one of the main uses of OPML up to now, and it's mostly been passed around by oral tradition and whatever news aggregator happened to do with it.  Now there's documentation.  If nothing else, that alone makes the OPML 2.0 spec worth the price of admission.  From here on out, future use cases for OPML should follow the same lead, defining the semantics of their new node types and associated attributes.</p>\n",
    "body": " <p>The addition of <a href=\"http://www.opml.org/spec2#subscriptionLists\">subscription lists</a> as a part of the OPML 2.0 spec is actually pretty significant, and I only just now felt it sink in.  This has been one of the main uses of OPML up to now, and it's mostly been passed around by oral tradition and whatever news aggregator happened to do with it.  Now there's documentation.  If nothing else, that alone makes the OPML 2.0 spec worth the price of admission.  From here on out, future use cases for OPML should follow the same lead, defining the semantics of their new node types and associated attributes.</p>\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/03/05/subscription-lists-defined-in-opml-20-spec"
  },
  {
    "comments_archived": true,
    "date": "2006-03-02T17:04:41.000Z",
    "layout": "post",
    "tags": [
      "asides"
    ],
    "title": "OPML 2 spec review in progress",
    "wordpress_id": 912,
    "wordpress_slug": "opml-2-spec-review-in-progress-2",
    "wordpress_url": "http://decafbad.com/blog/2006/03/02/opml-2-spec-review-in-progress-2",
    "year": "2006",
    "month": "03",
    "day": "02",
    "isDir": false,
    "slug": "opml-2-spec-review-in-progress-2",
    "postName": "2006-03-02-opml-2-spec-review-in-progress-2",
    "html": " <p>Oh yeah, and \"<a href=\"http://scripting.wordpress.com/2006/03/01/opml-20/\">Today the public review of OPML 2.0 begins</a>\"</p>\n <p>I don't know what I'm doing, posting to the <a href=\"http://groups.yahoo.com/group/opml2-review/messages\">OPML 2.0 spec review mailing list</a>.  I've stayed out of all spec and format discussions on general principle so far, avoiding the Atom process like the plague.  Life's too short for sausage making, I believe in general.  But, maybe this OPML thing will be different.</p>\n",
    "body": " <p>Oh yeah, and \"<a href=\"http://scripting.wordpress.com/2006/03/01/opml-20/\">Today the public review of OPML 2.0 begins</a>\"</p>\r\n <p>I don't know what I'm doing, posting to the <a href=\"http://groups.yahoo.com/group/opml2-review/messages\">OPML 2.0 spec review mailing list</a>.  I've stayed out of all spec and format discussions on general principle so far, avoiding the Atom process like the plague.  Life's too short for sausage making, I believe in general.  But, maybe this OPML thing will be different.</p>\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/03/02/opml-2-spec-review-in-progress-2"
  },
  {
    "comments_archived": true,
    "date": "2006-03-02T17:01:35.000Z",
    "layout": "post",
    "tags": [
      "asides"
    ],
    "title": "More long tail yawps",
    "wordpress_id": 911,
    "wordpress_slug": "more-long-tail-yawps",
    "wordpress_url": "http://decafbad.com/blog/2006/03/02/more-long-tail-yawps",
    "year": "2006",
    "month": "03",
    "day": "02",
    "isDir": false,
    "slug": "more-long-tail-yawps",
    "postName": "2006-03-02-more-long-tail-yawps",
    "html": " <p><a href=\"http://www.annezelenka.com/2006/02/why-do-what-you-love-is-recipe-for-web.html\">Anne says</a>: \"<i>One thing that must scare the wigs off of media moguls is that many writers and other content creators will work for free, because it's so intrinsically enjoyable.</i>\"  <a href=\"http://decafbad.com/blog/2006/02/09/a-long-tailed-creative-yawp\">My sentiments, exactly.</a></p>\n",
    "body": " <p><a href=\"http://www.annezelenka.com/2006/02/why-do-what-you-love-is-recipe-for-web.html\">Anne says</a>: \"<i>One thing that must scare the wigs off of media moguls is that many writers and other content creators will work for free, because it's so intrinsically enjoyable.</i>\"  <a href=\"http://decafbad.com/blog/2006/02/09/a-long-tailed-creative-yawp\">My sentiments, exactly.</a></p>\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/03/02/more-long-tail-yawps"
  },
  {
    "comments_archived": true,
    "date": "2006-03-02T17:01:33.000Z",
    "layout": "post",
    "tags": [
      "asides"
    ],
    "title": "Quick updates from my parallel universe",
    "wordpress_id": 910,
    "wordpress_slug": "quick-updates",
    "wordpress_url": "http://decafbad.com/blog/2006/03/02/opml-2-spec-review-in-progress",
    "year": "2006",
    "month": "03",
    "day": "02",
    "isDir": false,
    "slug": "quick-updates",
    "postName": "2006-03-02-quick-updates",
    "html": " <p>I've mostly been in radio silence over here, while the real action happens over on <a href=\"http://blogs.opml.org/decafbad/\">my OPML blog</a>.  Eventually, I'll iron out a better integration process - but for now, here's a mini dump:</p>\n     <ul>\n     <li>\n     <span>The last episode of the first installment of the <a hreef=\"http://www.bravemenrun.com/\">Brave Men Run</a> fiction podcast just landed in my iTunes tonight.  The author / narrator expresses such a great deal of appreciation for his listeners, it makes me want to run over there and give him a standing ovation.  Even if I am the only guy doing it.  I really hope there's more coming in the <a hreef=\"http://www.bravemenrun.com/\">Brave Men Run</a> story universe!</span>\n     </li>\n     <li>\n     <span><a href=\"http://blogs.opml.org/amyloo/2006/02/28#speakingOfMichiganPeopleSpeaking\">Amyloo writes about speaking of Michigan people speaking.</a>  I should do a little podcast sometime - I don't figure I sound any different, but then I wouldn't think that would I?</span>\n     </li>\n     <li>\n     <span>Of course, one thing I'd like to do this summer, maybe after the wedding, is to get some of my fiction ideas and half-starts finally fleshed out and in short story form.  Maybe I could do a podcast with some of those stories.</span>\n     </li>\n     <li>\n     <span><a href=\"http://www.somethingawful.com/articles.php?a=2777&p=\">This series of remade Choose Your Own Adventure book covers on Something Awful</a> has practically made me wet myself laughing this morning.</span>\n     </li>\n     </ul>\n",
    "body": " <p>I've mostly been in radio silence over here, while the real action happens over on <a href=\"http://blogs.opml.org/decafbad/\">my OPML blog</a>.  Eventually, I'll iron out a better integration process - but for now, here's a mini dump:</p>\r\n     <ul>\r\n     <li>\r\n     <span>The last episode of the first installment of the <a hreef=\"http://www.bravemenrun.com/\">Brave Men Run</a> fiction podcast just landed in my iTunes tonight.  The author / narrator expresses such a great deal of appreciation for his listeners, it makes me want to run over there and give him a standing ovation.  Even if I am the only guy doing it.  I really hope there's more coming in the <a hreef=\"http://www.bravemenrun.com/\">Brave Men Run</a> story universe!</span>\r\n     </li>\r\n     <li>\r\n     <span><a href=\"http://blogs.opml.org/amyloo/2006/02/28#speakingOfMichiganPeopleSpeaking\">Amyloo writes about speaking of Michigan people speaking.</a>  I should do a little podcast sometime - I don't figure I sound any different, but then I wouldn't think that would I?</span>\r\n     </li>\r\n     <li>\r\n     <span>Of course, one thing I'd like to do this summer, maybe after the wedding, is to get some of my fiction ideas and half-starts finally fleshed out and in short story form.  Maybe I could do a podcast with some of those stories.</span>\r\n     </li>\r\n     <li>\r\n     <span><a href=\"http://www.somethingawful.com/articles.php?a=2777&p=\">This series of remade Choose Your Own Adventure book covers on Something Awful</a> has practically made me wet myself laughing this morning.</span>\r\n     </li>\r\n     </ul>\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/03/02/quick-updates"
  },
  {
    "comments_archived": true,
    "date": "2006-03-02T17:01:28.000Z",
    "layout": "post",
    "tags": [
      "asides"
    ],
    "title": "I don't get AJAX homepages",
    "wordpress_id": 909,
    "wordpress_slug": "i-dont-get-ajax-homepages",
    "wordpress_url": "http://decafbad.com/blog/2006/03/02/i-dont-get-ajax-homepages",
    "year": "2006",
    "month": "03",
    "day": "02",
    "isDir": false,
    "slug": "i-dont-get-ajax-homepages",
    "postName": "2006-03-02-i-dont-get-ajax-homepages",
    "html": " <p>It might be just me, but I don't get the buzz about <a href=\"http://blogs.zdnet.com/web2explorer/?p=127\">AJAX homepages</a>.  I mean, sure, they're AJAX and sparkly and draggy and all that - but they're still portals, aren't they?  I never wanted portals to be more dynamic, or even open to third-party-authored widgets - I wanted them to go away altogether.  My feed reading is too expansive to fit inside little headline widgets, my weather report sits in my menu bar, and for anything else that <i>does</i> fit into a little widget I've got <a href=\"http://www.apple.com/macosx/features/dashboard/\">Dashboard</a>.  This just seems like another thing that's neat like digital watches, with a horrible user interface for doing anything actually useful.</p>\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221082639\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://dean.edwards.name/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b33181b8e12bd10dfa373acc8af37cbb&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://dean.edwards.name/\">Dean Edwards</a>\n</div>\n<a href=\"#comment-221082639\" class=\"permalink\"><time datetime=\"2006-03-02T18:30:40\">2006-03-02T18:30:40</time></a>\n</div>\n<div class=\"content\"><p>I agree. AJAX homepages are like those useless gadgets you can buy: an umbrella with a torch in the handle, a kettle that is also a radio, etc.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221082641\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://sporkmonger.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=56ee28134dd0776825445e3551979b14&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://sporkmonger.com/\">Bob Aman</a>\n</div>\n<a href=\"#comment-221082641\" class=\"permalink\"><time datetime=\"2006-03-02T20:22:47\">2006-03-02T20:22:47</time></a>\n</div>\n<div class=\"content\"><p>What if the AJAX homepage was something you had the source code for, you ran it on localhost or on your own server and it encouraged hacking?</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221082642\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221082642\" class=\"permalink\"><time datetime=\"2006-03-02T20:28:30\">2006-03-02T20:28:30</time></a>\n</div>\n<div class=\"content\"><p>Eh, even if I had the source, I don't think I'd care.  It's just another form of the \"lots of tiny windows on a page\" portal that I thought we'd left back in the 90's.  I'd build a Dashboard or Konfabulator widget before I build a web portal widget.  Every other use of a portal I can think of, I'd rather see in a less cramped UI.</p></div>\n</li>\n</ul>\n</div>\n",
    "body": " <p>It might be just me, but I don't get the buzz about <a href=\"http://blogs.zdnet.com/web2explorer/?p=127\">AJAX homepages</a>.  I mean, sure, they're AJAX and sparkly and draggy and all that - but they're still portals, aren't they?  I never wanted portals to be more dynamic, or even open to third-party-authored widgets - I wanted them to go away altogether.  My feed reading is too expansive to fit inside little headline widgets, my weather report sits in my menu bar, and for anything else that <i>does</i> fit into a little widget I've got <a href=\"http://www.apple.com/macosx/features/dashboard/\">Dashboard</a>.  This just seems like another thing that's neat like digital watches, with a horrible user interface for doing anything actually useful.</p>\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221082639\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://dean.edwards.name/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b33181b8e12bd10dfa373acc8af37cbb&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://dean.edwards.name/\">Dean Edwards</a>\r\n                </div>\r\n                <a href=\"#comment-221082639\" class=\"permalink\"><time datetime=\"2006-03-02T18:30:40\">2006-03-02T18:30:40</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>I agree. AJAX homepages are like those useless gadgets you can buy: an umbrella with a torch in the handle, a kettle that is also a radio, etc.</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221082641\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://sporkmonger.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=56ee28134dd0776825445e3551979b14&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://sporkmonger.com/\">Bob Aman</a>\r\n                </div>\r\n                <a href=\"#comment-221082641\" class=\"permalink\"><time datetime=\"2006-03-02T20:22:47\">2006-03-02T20:22:47</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>What if the AJAX homepage was something you had the source code for, you ran it on localhost or on your own server and it encouraged hacking?</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221082642\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\r\n                </div>\r\n                <a href=\"#comment-221082642\" class=\"permalink\"><time datetime=\"2006-03-02T20:28:30\">2006-03-02T20:28:30</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Eh, even if I had the source, I don't think I'd care.  It's just another form of the \"lots of tiny windows on a page\" portal that I thought we'd left back in the 90's.  I'd build a Dashboard or Konfabulator widget before I build a web portal widget.  Every other use of a portal I can think of, I'd rather see in a less cramped UI.</p></div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/03/02/i-dont-get-ajax-homepages"
  },
  {
    "comments_archived": true,
    "date": "2006-03-02T16:56:46.000Z",
    "layout": "post",
    "title": "Why XOXO?",
    "wordpress_id": 907,
    "wordpress_slug": "why-xoxo",
    "wordpress_url": "http://decafbad.com/blog/2006/03/02/why-xoxo",
    "year": "2006",
    "month": "03",
    "day": "02",
    "isDir": false,
    "slug": "why-xoxo",
    "postName": "2006-03-02-why-xoxo",
    "html": " <p><a href=\"http://blogs.opml.org/dwatts/2006/03/01#When:8:12:41PM\">Donovan says</a>:  \"<i>gotta learn more about gettin' my xoxo on. i've read your page, les but still i have no idea what xoxo is or why i'd want to convert my opml files to it.</i>\"</p>\n <p>Good question, with a few different answers.  And these are, of course, all my humble opinon and not any sort of official decree from the Gods of XOXO.</p>\n <p>First answer I have is this:  Don't convert your OPML files, because ideally a pair of XOXO-colored glasses should help get your OPML seen as XOXO, should the need ever arise.  The reason you shouldn't convert is because you've got an OPML editor that's helping you be productive, and as far as I know there's no comparable tool for XOXO.  Here, I think the utility of the tool trumps the format - especially when the format can be massaged by machines down the line, and not by your valuable brain.  Also, someday soon, I predict that someone who likes XOXO will write a tool for the OPML editor that can export XOXO.</p>\n <p>Second answer is this:  XOXO is a format based on XHTML.  XHTML is a format with which lots of other people have been productive, and it's directly viewable and CSS-styleable in web browsers without much fuss.  This is the idea behind <a href=\"http://microformats.org\">microformats</a>: a <a href=\"http://www.sudoku.com\">Sudoku</a> puzzle solution to the problem of publishing data that's both human and machine readable on the web at large.  This is coming at the problem from the ground up - formats and data first, tools later, for the sake of imbuing the format with as much clear expressiveness as possible to enable future pathways.</p>\n <p>I think right now, XOXO is more useful for people consuming the data than for people producing it.  And, OPML is easier to produce than consume in some cases (but not all).  </p>\n <p>Where I think XOXO will really shine is in embedding more complex items of microformat data, something that I don't think will ever be a core feature of OPML.  And that's okay - OPML will be good enough for capturing a lot of human brain output and it can be munged into XOXO whenever we need it as such.  So, I'm happy to rest in the center and not become a cheerleader for either/or.</p>\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221087468\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://singpolyma-tech.blogspot.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=fc6e6f4412f270b70b869cf7757122d4&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://singpolyma-tech.blogspot.com/\">Stephen Paul Weber</a>\n</div>\n<a href=\"#comment-221087468\" class=\"permalink\"><time datetime=\"2006-04-13T06:50:44\">2006-04-13T06:50:44</time></a>\n</div>\n<div class=\"content\"><p>OPML 2 XOXO?  No problem -- http://xoxotools.ning.com/outlineconvert.php\nwhile I may not like people either producing OR consuming OPML I realise that it has established itself as a 'standard' and as such we're stuck with it for now.  XOXO is definately a superior format however, in more ways than one (http://blogxoxo.blogspot.com/2005/12/what-is-xoxo.html), and in my code i find it both easier to produce and to consume.  Ultimately we're stuck with both for now, but I certainly hope that we slowly move to XOXO and perhaps even leave OPML in the dust.</p></div>\n</li>\n<li class=\"comment\" id=\"comment-221087470\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.decafbad.com\">l.m.orchard</a>\n</div>\n<a href=\"#comment-221087470\" class=\"permalink\"><time datetime=\"2006-04-13T15:42:24\">2006-04-13T15:42:24</time></a>\n</div>\n<div class=\"content\"><p>Oddly enough, I've found valid OPML easier to sling around than XOXO - it's just a tree of nodes with attributes, really.  XOXO has more permutations of cases, especially when combined with other microformats.</p></div>\n</li>\n</ul>\n</div>\n",
    "body": " <p><a href=\"http://blogs.opml.org/dwatts/2006/03/01#When:8:12:41PM\">Donovan says</a>:  \"<i>gotta learn more about gettin' my xoxo on. i've read your page, les but still i have no idea what xoxo is or why i'd want to convert my opml files to it.</i>\"</p>\r\n <p>Good question, with a few different answers.  And these are, of course, all my humble opinon and not any sort of official decree from the Gods of XOXO.</p>\r\n <p>First answer I have is this:  Don't convert your OPML files, because ideally a pair of XOXO-colored glasses should help get your OPML seen as XOXO, should the need ever arise.  The reason you shouldn't convert is because you've got an OPML editor that's helping you be productive, and as far as I know there's no comparable tool for XOXO.  Here, I think the utility of the tool trumps the format - especially when the format can be massaged by machines down the line, and not by your valuable brain.  Also, someday soon, I predict that someone who likes XOXO will write a tool for the OPML editor that can export XOXO.</p>\r\n <p>Second answer is this:  XOXO is a format based on XHTML.  XHTML is a format with which lots of other people have been productive, and it's directly viewable and CSS-styleable in web browsers without much fuss.  This is the idea behind <a href=\"http://microformats.org\">microformats</a>: a <a href=\"http://www.sudoku.com\">Sudoku</a> puzzle solution to the problem of publishing data that's both human and machine readable on the web at large.  This is coming at the problem from the ground up - formats and data first, tools later, for the sake of imbuing the format with as much clear expressiveness as possible to enable future pathways.</p>\r\n <p>I think right now, XOXO is more useful for people consuming the data than for people producing it.  And, OPML is easier to produce than consume in some cases (but not all).  </p>\r\n <p>Where I think XOXO will really shine is in embedding more complex items of microformat data, something that I don't think will ever be a core feature of OPML.  And that's okay - OPML will be good enough for capturing a lot of human brain output and it can be munged into XOXO whenever we need it as such.  So, I'm happy to rest in the center and not become a cheerleader for either/or.</p>\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221087468\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://singpolyma-tech.blogspot.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=fc6e6f4412f270b70b869cf7757122d4&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://singpolyma-tech.blogspot.com/\">Stephen Paul Weber</a>\r\n                </div>\r\n                <a href=\"#comment-221087468\" class=\"permalink\"><time datetime=\"2006-04-13T06:50:44\">2006-04-13T06:50:44</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>OPML 2 XOXO?  No problem -- http://xoxotools.ning.com/outlineconvert.php\r\nwhile I may not like people either producing OR consuming OPML I realise that it has established itself as a 'standard' and as such we're stuck with it for now.  XOXO is definately a superior format however, in more ways than one (http://blogxoxo.blogspot.com/2005/12/what-is-xoxo.html), and in my code i find it both easier to produce and to consume.  Ultimately we're stuck with both for now, but I certainly hope that we slowly move to XOXO and perhaps even leave OPML in the dust.</p></div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087470\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2377f34a68801b861c3e54e1301f0dce&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.decafbad.com\">l.m.orchard</a>\r\n                </div>\r\n                <a href=\"#comment-221087470\" class=\"permalink\"><time datetime=\"2006-04-13T15:42:24\">2006-04-13T15:42:24</time></a>\r\n            </div>\r\n            <div class=\"content\"><p>Oddly enough, I've found valid OPML easier to sling around than XOXO - it's just a tree of nodes with attributes, really.  XOXO has more permutations of cases, especially when combined with other microformats.</p></div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2006",
    "path": "2006/03/02/why-xoxo"
  }
]