[
  {
    "title": "Too long? Read anyway.",
    "author": "lmorchard",
    "layout": "post",
    "permalink": "/2013/02/25/too-long-read-anyway",
    "dsq_thread_id": [
      1105327830
    ],
    "categories": [
      "Uncategorized"
    ],
    "tags": [
      "reading",
      "tech",
      "writing"
    ],
    "year": "2013",
    "month": "02",
    "day": "25",
    "isDir": false,
    "slug": "too-long-read-anyway",
    "date": "2013-02-25T12:00:00.000Z",
    "postName": "2013-02-25-too-long-read-anyway",
    "html": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\n  <p class=\"toc_title\">\n    Contents\n  </p>\n\n  <ul class=\"toc_list\">\n    <li>\n      <a href=\"#Write_like_no_one8217s_reading\"><span class=\"toc_number toc_depth_1\">1</span> Write like no one&#8217;s reading</a>\n    </li>\n    <li>\n      <a href=\"#Reading_is_Power\"><span class=\"toc_number toc_depth_1\">2</span> Reading is Power</a>\n    </li>\n    <li>\n      <a href=\"#Language_is_the_ultimate_technology\"><span class=\"toc_number toc_depth_1\">3</span> Language is the ultimate technology</a>\n    </li>\n    <li>\n      <a href=\"#Meetings_are_the_mind_killer\"><span class=\"toc_number toc_depth_1\">4</span> Meetings are the mind killer</a>\n    </li>\n    <li>\n      <a href=\"#Wrapping_up\"><span class=\"toc_number toc_depth_1\">5</span> Wrapping up</a>\n    </li>\n  </ul>\n</div>\n\n<p>Wherein I rant at medium length about functional literacy and language competency in knowledge work and information technology.  </p>\n<!--more-->\n\n<blockquote>\n<p>Look, I realize that we live in a TL;DR culture. I lived through 8 years of a non-reading president along with everyone else. I know that the brogrammers out there are constantly getting texts from their buddies to plan the weekend&#8217;s broactivities, trying to decide in whose mancave they&#8217;ll be setting up their lan party, and are thoroughly distracted in between futzing with their smart phones and writing a few lines of code per day by cutting and pasting it from stackoverflow. But it&#8217;s really not ok to act functionally illiterate when you&#8217;re not actually illiterate, when an advanced society that once put a man on the moon worked so hard to educate you.</p>\n</blockquote>\n<p><cite><a href=\"http://hackingdistributed.com/2013/01/29/mongo-ft/\">Broken by Design: MongoDB Fault Tolerance</a> by <a href=\"http://hackingdistributed.com/egs/\">E. Gün Sirer</a></cite></p>\n<p>The rest of <a href=\"http://hackingdistributed.com/2013/01/29/mongo-ft/\">the blog post</a> about failings in MongoDB is interesting. But, that particular paragraph caused me to start a slow clap all by myself, confusing <a href=\"http://www.flickr.com/photos/deusx/tags/cats/\">the cats</a>.</p>\n<div id=\"attachment_973\" style=\"width: 330px\" class=\"wp-caption aligncenter\">\n  <a href=\"http://reactiongifs.com/?p=2273\"><img class=\"size-full wp-image-973 \" alt=\"Well done, sir!\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/well_done_sir.gif\" width=\"320\" height=\"240\" /></a><p class=\"wp-caption-text\">\n    Well done, sir!\n  </p>\n</div>\n\n<p>It voices an anxiety and an anger of mine about which I stay mostly quiet to everyone but my wife, who often humors rants on the subject and proffers rants of her own. It&#8217;s one of the many reasons I love her with all my heart.</p>\n<h3 id=\"write-like-no-ones-reading\"><span id=\"Write_like_no_one8217s_reading\">Write like no one&#8217;s reading</span></h3>\n<p>This notion is partly why the tagline for this new blog of mine reads, &#8220;Write like no one&#8217;s reading.&#8221; It&#8217;s a corruption of the notion, <em>dance like no one&#8217;s watching</em>: It&#8217;s not so much that I&#8217;m anxious or shy about my writing &#8211; it&#8217;s that I&#8217;m quite cynical about amassing readers through writing long-form essays on a blog.</p>\n<p>Still, I like writing at length, and this blog is for things too big for Facebook or Twitter. So, rather than keep it short, I&#8217;m going to write what someone like me would like to read. And, in fact, since I love the web and hypertext, you&#8217;ll find my posts will tend to be link-crazed and branch out into all kinds of external references.</p>\n<h3 id=\"reading-is-power\"><span id=\"Reading_is_Power\">Reading is Power</span></h3>\n<p>I do generate my share of <a href=\"http://twitter.com/lmorchard\">quip-tweeting</a> &amp; <a href=\"http://pinboard.in/u:deusx\">link-blogging</a> and aspire to write more and in greater depth. That said, I wholly agree with the author above: It&#8217;s not okay to be ineffectual with written communication &#8211; especially not if you are a professional in knowledge work and information technology.</p>\n<p>Written communication is how we can work asynchronously &#8211; we don&#8217;t all need to be in the same place at the same time to accomplish great things. Documentation is, among other things, how you can augment your own feeble recollection &#8211; so that you can remember what the hell you were thinking, 6 months down the line. Text is susceptible to analysis and search by machines, which allows us to further augment our thinking and problem solving.</p>\n<h3 id=\"language-is-the-ultimate-technology\"><span id=\"Language_is_the_ultimate_technology\">Language is the ultimate technology</span></h3>\n<p>In fact, I&#8217;ll go so far as to say: <strong>*It&#8217;s not okay to fail at written language as a modern, technologically-empowered human being</strong>. *Man on the moon, and all that.</p>\n<p>Seriously, you don&#8217;t have to be <a href=\"http://tvtropes.org/pmwiki/pmwiki.php/Main/ThisAintRocketSurgery\">a rocket surgeon</a>, but you do have to read the whole damn article or email someone took the time to write, and you do have to make an effort at understanding fully what was written. And if you can&#8217;t write well enough to compose your thoughts in a considered &amp; coherent form, <strong>get better</strong>.</p>\n<div id=\"attachment_976\" style=\"width: 360px\" class=\"wp-caption aligncenter\">\n  <a href=\"http://www.quickmeme.com/meme/3t434c/\"><img class=\" wp-image-976 \" alt=\"TOO LONG? READ ANYWAY.\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/too-long-read-anyway.jpg\" width=\"350\" height=\"350\" /></a><p class=\"wp-caption-text\">\n    TOO LONG? READ ANYWAY.\n  </p>\n</div>\n\n<p>Take the time, do your homework, exercise that <a href=\"http://en.wikipedia.org/wiki/Prefrontal_cortex\">prefrontal cortex</a>.</p>\n<p>If you&#8217;re college-educated, you had to do a lot of reading &amp; writing for papers &amp; essays. This might be stating the obvious, but the point of that exercise wasn&#8217;t to present an arbitrary gauntlet to pass and then never revisit. <em>The point was that you should have developed skills of literacy useful throughout the rest of your life</em>.</p>\n<h3 id=\"meetings-are-the-mind-killer\"><span id=\"Meetings_are_the_mind_killer\">Meetings are the mind killer</span></h3>\n<p>Here&#8217;s an example beyond blog posts: I&#8217;ll admit that sometimes I bristle when someone suggests, &#8220;Let&#8217;s get {on a plane, in a room, in a video call} and hash this out.&#8221; The reason I bristle is because meetings can be called as a way to kick the can down the road. Rather than spend some time considering things up front, we&#8217;ll gather everyone up in time &amp; space and start from a conceptual blank page.</p>\n<p>I understand that real-time, high-bandwidth, person-to-person communication is often the key to getting everyone all on the same page. There are emotional cues, social niceties, negotiations and understandings to be had. And, I&#8217;ll admit that I&#8217;m an introvert and weak at dealing with social situations &#8211; this is a lifelong work-in-progress for me.</p>\n<div id=\"attachment_974\" style=\"width: 510px\" class=\"wp-caption aligncenter\">\n  <a href=\"http://reactiongifs.com/?p=7214\"><img class=\"size-full wp-image-974 \" alt=\"My &quot;people skills&quot; are &quot;rusty&quot;\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/rusty.gif\" width=\"500\" height=\"287\" /></a><p class=\"wp-caption-text\">\n    My &#8220;people skills&#8221; are &#8220;rusty&#8221;\n  </p>\n</div>\n\n<p>But, one of the first things I&#8217;ll wonder when a meeting convenes is: <em>Who is taking notes &amp; where can we find them</em>? Ideally the answers are &#8220;all of us&#8221; and &#8220;at this {Etherpad, Google Docs} URL&#8221;.</p>\n<p>I&#8217;ll also wonder: <em>What is the agenda for this meeting</em>? Ideally the answer is, &#8220;I already told you &#8211; at the {Etherpad, Google Docs} URL. Didn&#8217;t you read the meeting invite I sent out days ahead of time?&#8221;</p>\n<p>When I don&#8217;t get good answers to the above, I think: <em>Wouldn&#8217;t it be nice if we&#8217;d spent some time writing things down &#8211; whether in docs or email or whatever &#8211; so we had something better to talk about? And then write all **that *</em>down, too?<br>*</p>\n<h3 id=\"wrapping-up\"><span id=\"Wrapping_up\">Wrapping up</span></h3>\n<p>I&#8217;m not writing this with any particular person or persons in mind &#8211; I&#8217;m sorry if anyone reading this feels personally addressed by way of passive-aggression. This is just a general issue with which I&#8217;ve dealt throughout my life &amp; career.</p>\n<p>This post also expresses standards to which I personally aspire, but I&#8217;ll be the first to admit I&#8217;m not perfect. I love writing, and I think I&#8217;m pretty good at it, but I will always have lots of room for improvement.</p>\n<p>In the end, the notion I&#8217;m trying to convey can be summed up like so: Written language is essential to life as a modern day human being. Don&#8217;t expect others to pick up your slack in this area. Improve your reading, improve your writing, improve yourself.</p>\n",
    "body": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\r\n  <p class=\"toc_title\">\r\n    Contents\r\n  </p>\r\n  \r\n  <ul class=\"toc_list\">\r\n    <li>\r\n      <a href=\"#Write_like_no_one8217s_reading\"><span class=\"toc_number toc_depth_1\">1</span> Write like no one&#8217;s reading</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Reading_is_Power\"><span class=\"toc_number toc_depth_1\">2</span> Reading is Power</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Language_is_the_ultimate_technology\"><span class=\"toc_number toc_depth_1\">3</span> Language is the ultimate technology</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Meetings_are_the_mind_killer\"><span class=\"toc_number toc_depth_1\">4</span> Meetings are the mind killer</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Wrapping_up\"><span class=\"toc_number toc_depth_1\">5</span> Wrapping up</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\nWherein I rant at medium length about functional literacy and language competency in knowledge work and information technology.  \r\n<!--more-->\r\n\r\n> Look, I realize that we live in a TL;DR culture. I lived through 8 years of a non-reading president along with everyone else. I know that the brogrammers out there are constantly getting texts from their buddies to plan the weekend&#8217;s broactivities, trying to decide in whose mancave they&#8217;ll be setting up their lan party, and are thoroughly distracted in between futzing with their smart phones and writing a few lines of code per day by cutting and pasting it from stackoverflow. But it&#8217;s really not ok to act functionally illiterate when you&#8217;re not actually illiterate, when an advanced society that once put a man on the moon worked so hard to educate you.\r\n\r\n<cite><a href=\"http://hackingdistributed.com/2013/01/29/mongo-ft/\">Broken by Design: MongoDB Fault Tolerance</a> by <a href=\"http://hackingdistributed.com/egs/\">E. Gün Sirer</a></cite>\r\n\r\nThe rest of [the blog post][1] about failings in MongoDB is interesting. But, that particular paragraph caused me to start a slow clap all by myself, confusing [the cats][2].\r\n\r\n<div id=\"attachment_973\" style=\"width: 330px\" class=\"wp-caption aligncenter\">\r\n  <a href=\"http://reactiongifs.com/?p=2273\"><img class=\"size-full wp-image-973 \" alt=\"Well done, sir!\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/well_done_sir.gif\" width=\"320\" height=\"240\" /></a><p class=\"wp-caption-text\">\r\n    Well done, sir!\r\n  </p>\r\n</div>\r\n\r\nIt voices an anxiety and an anger of mine about which I stay mostly quiet to everyone but my wife, who often humors rants on the subject and proffers rants of her own. It&#8217;s one of the many reasons I love her with all my heart.\r\n\r\n### <span id=\"Write_like_no_one8217s_reading\">Write like no one&#8217;s reading</span>\r\n\r\nThis notion is partly why the tagline for this new blog of mine reads, &#8220;Write like no one&#8217;s reading.&#8221; It&#8217;s a corruption of the notion, *dance like no one&#8217;s watching*: It&#8217;s not so much that I&#8217;m anxious or shy about my writing &#8211; it&#8217;s that I&#8217;m quite cynical about amassing readers through writing long-form essays on a blog.\r\n\r\nStill, I like writing at length, and this blog is for things too big for Facebook or Twitter. So, rather than keep it short, I&#8217;m going to write what someone like me would like to read. And, in fact, since I love the web and hypertext, you&#8217;ll find my posts will tend to be link-crazed and branch out into all kinds of external references.\r\n\r\n### <span id=\"Reading_is_Power\">Reading is Power</span>\r\n\r\nI do generate my share of [quip-tweeting][3] & [link-blogging][4] and aspire to write more and in greater depth. That said, I wholly agree with the author above: It&#8217;s not okay to be ineffectual with written communication &#8211; especially not if you are a professional in knowledge work and information technology.\r\n\r\nWritten communication is how we can work asynchronously &#8211; we don&#8217;t all need to be in the same place at the same time to accomplish great things. Documentation is, among other things, how you can augment your own feeble recollection &#8211; so that you can remember what the hell you were thinking, 6 months down the line. Text is susceptible to analysis and search by machines, which allows us to further augment our thinking and problem solving.\r\n\r\n### <span id=\"Language_is_the_ultimate_technology\">Language is the ultimate technology</span>\r\n\r\nIn fact, I&#8217;ll go so far as to say: ***It&#8217;s not okay to fail at written language as a modern, technologically-empowered human being**. *Man on the moon, and all that.\r\n\r\nSeriously, you don&#8217;t have to be [a rocket surgeon][5], but you do have to read the whole damn article or email someone took the time to write, and you do have to make an effort at understanding fully what was written. And if you can&#8217;t write well enough to compose your thoughts in a considered & coherent form, **get better**.\r\n\r\n<div id=\"attachment_976\" style=\"width: 360px\" class=\"wp-caption aligncenter\">\r\n  <a href=\"http://www.quickmeme.com/meme/3t434c/\"><img class=\" wp-image-976 \" alt=\"TOO LONG? READ ANYWAY.\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/too-long-read-anyway.jpg\" width=\"350\" height=\"350\" /></a><p class=\"wp-caption-text\">\r\n    TOO LONG? READ ANYWAY.\r\n  </p>\r\n</div>\r\n\r\nTake the time, do your homework, exercise that [prefrontal cortex][6].\r\n\r\nIf you&#8217;re college-educated, you had to do a lot of reading & writing for papers & essays. This might be stating the obvious, but the point of that exercise wasn&#8217;t to present an arbitrary gauntlet to pass and then never revisit. *The point was that you should have developed skills of literacy useful throughout the rest of your life*.\r\n\r\n### <span id=\"Meetings_are_the_mind_killer\">Meetings are the mind killer</span>\r\n\r\nHere&#8217;s an example beyond blog posts: I&#8217;ll admit that sometimes I bristle when someone suggests, &#8220;Let&#8217;s get {on a plane, in a room, in a video call} and hash this out.&#8221; The reason I bristle is because meetings can be called as a way to kick the can down the road. Rather than spend some time considering things up front, we&#8217;ll gather everyone up in time & space and start from a conceptual blank page.\r\n\r\nI understand that real-time, high-bandwidth, person-to-person communication is often the key to getting everyone all on the same page. There are emotional cues, social niceties, negotiations and understandings to be had. And, I&#8217;ll admit that I&#8217;m an introvert and weak at dealing with social situations &#8211; this is a lifelong work-in-progress for me.\r\n\r\n<div id=\"attachment_974\" style=\"width: 510px\" class=\"wp-caption aligncenter\">\r\n  <a href=\"http://reactiongifs.com/?p=7214\"><img class=\"size-full wp-image-974 \" alt=\"My &quot;people skills&quot; are &quot;rusty&quot;\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/rusty.gif\" width=\"500\" height=\"287\" /></a><p class=\"wp-caption-text\">\r\n    My &#8220;people skills&#8221; are &#8220;rusty&#8221;\r\n  </p>\r\n</div>\r\n\r\nBut, one of the first things I&#8217;ll wonder when a meeting convenes is: *Who is taking notes & where can we find them*? Ideally the answers are &#8220;all of us&#8221; and &#8220;at this {Etherpad, Google Docs} URL&#8221;.\r\n\r\nI&#8217;ll also wonder: *What is the agenda for this meeting*? Ideally the answer is, &#8220;I already told you &#8211; at the {Etherpad, Google Docs} URL. Didn&#8217;t you read the meeting invite I sent out days ahead of time?&#8221;\r\n\r\nWhen I don&#8217;t get good answers to the above, I think: *Wouldn&#8217;t it be nice if we&#8217;d spent some time writing things down &#8211; whether in docs or email or whatever &#8211; so we had something better to talk about? And then write all **that **down, too?  \r\n*\r\n\r\n### <span id=\"Wrapping_up\">Wrapping up</span>\r\n\r\nI&#8217;m not writing this with any particular person or persons in mind &#8211; I&#8217;m sorry if anyone reading this feels personally addressed by way of passive-aggression. This is just a general issue with which I&#8217;ve dealt throughout my life & career.\r\n\r\nThis post also expresses standards to which I personally aspire, but I&#8217;ll be the first to admit I&#8217;m not perfect. I love writing, and I think I&#8217;m pretty good at it, but I will always have lots of room for improvement.\r\n\r\nIn the end, the notion I&#8217;m trying to convey can be summed up like so: Written language is essential to life as a modern day human being. Don&#8217;t expect others to pick up your slack in this area. Improve your reading, improve your writing, improve yourself.\r\n\r\n [1]: http://hackingdistributed.com/2013/01/29/mongo-ft/\r\n [2]: http://www.flickr.com/photos/deusx/tags/cats/\r\n [3]: http://twitter.com/lmorchard\r\n [4]: http://pinboard.in/u:deusx\r\n [5]: http://tvtropes.org/pmwiki/pmwiki.php/Main/ThisAintRocketSurgery\r\n [6]: http://en.wikipedia.org/wiki/Prefrontal_cortex",
    "parentPath": "../blog.lmorchard.com/posts/archives/2013",
    "path": "2013/02/25/too-long-read-anyway",
    "thumbnail": "http://blog.lmorchard.com/wp-content/uploads/2013/02/well_done_sir.gif",
    "summary": "\n\n<p>Wherein I rant at medium length about functional literacy and language competency in knowledge work and information technology.  </p>\n",
    "prevPostPath": "2013/03/14/social-novelty-filterin",
    "nextPostPath": "2013/02/23/looking-for-a-django-app-to-manage-roles-within-groups"
  },
  {
    "title": "Looking for a Django app to manage Roles within Groups",
    "author": "lmorchard",
    "layout": "post",
    "permalink": "/2013/02/23/looking-for-a-django-app-to-manage-roles-within-groups",
    "dsq_thread_id": [
      1106435515
    ],
    "categories": [
      "Uncategorized"
    ],
    "tags": [
      "badger",
      "badges",
      "django",
      "mozilla",
      "webdev"
    ],
    "year": "2013",
    "month": "02",
    "day": "23",
    "isDir": false,
    "slug": "looking-for-a-django-app-to-manage-roles-within-groups",
    "date": "2013-02-23T12:00:00.000Z",
    "postName": "2013-02-23-looking-for-a-django-app-to-manage-roles-within-groups",
    "html": "<p>I want to add some team-based features to <a href=\"https://github.com/lmorchard/django-badger\">django-badger</a>. I was hoping that someone had already built a reusable app to do most of the work for me. This happens quite a lot when I&#8217;m working with Django. Unfortunately, I haven&#8217;t <em>quite</em> found what I&#8217;m looking for yet. Consider this blog post either the product of my thinking out loud toward a rough spec, or a long-winded lazyweb search query.</p>\n<!--more-->\n\n<p>First, what do I mean by a &#8220;team&#8221;? Well, a familiar example is <a href=\"http://www.wowwiki.com/Guild_list_%28interface%29\">a guild in World of Warcraft</a>: A group of people with access to shared resources, that access controlled by permissions bundled into ranks assigned to each member of the group.</p>\n<div style=\"width: 460px\" class=\"wp-caption aligncenter\">\n  <a href=\"http://www.wowwiki.com/Guild_list_%28interface%29\"><img alt=\"Guild management in WoW\" src=\"http://images2.wikia.nocookie.net/__cb20091106224144/wowwiki/images/thumb/3/3e/Guild_list_%28interface%29.png/450px-Guild_list_%28interface%29.png\" width=\"450\" height=\"324\" /></a><p class=\"wp-caption-text\">\n    Guild management in WoW\n  </p>\n</div>\n\n<p>While Django does come with Users, Groups, &amp; Permissions, the concept of Roles within Groups to which Permissions can be attached seems missing.</p>\n<p>If I try to extend the Django building blocks, maybe I could represent a &#8220;Team&#8221; as a bundle of Groups and treat those Groups as Roles? Or, maybe Groups should just become hierarchical &#8211; make it <a href=\"http://en.wikipedia.org/wiki/Turtles_all_the_way_down\">turtles all the way down</a>. (I really like that expression, in case you can&#8217;t tell.)</p>\n<p>With respect to that last point, I found <a href=\"https://github.com/rasca/django-hierarchical-auth\">django-hierarchical-auth</a>. That seems like a good lead. But, I&#8217;m having trouble finding other projects using it. There&#8217;s <a href=\"http://www.feincms.org/\">feinCMS</a> &#8211; I&#8217;ve never heard of that before, but that&#8217;s more my lack than theirs.</p>\n<p>In the case of <a href=\"https://github.com/lmorchard/django-badger\">django-badger</a>, I&#8217;d like to enable users to start teams, create badges that belong to the team, and allow other team members varying levels of control over those badges (e.g. creating, editing, awarding, approving nominations, etc).</p>\n<p>So, there&#8217;s the matter of user interface &#8211; I&#8217;d like any user (not just site-wide admins) to be able to:</p>\n<ul>\n<li>create a team;</li>\n<li>manage team profile information;</li>\n<li>manage &amp; grant roles based on a canned selection of permissions;</li>\n<li>invite other users as members, remove members;</li>\n<li>accept team invitations, request to join a team, remove oneself from a team.</li>\n</ul>\n<p>The <a href=\"https://github.com/rasca/django-hierarchical-auth\">django-hierarchical-auth</a> app comes with no views; it&#8217;s just a backend utility. So, if I grab that app, I&#8217;ll still have to build the UI and supporting models myself (i.e. for team profiles and permission sets).</p>\n<p>So, that leaves me wondering if there&#8217;s some value in me building a reusable app atop <a href=\"https://github.com/rasca/django-hierarchical-auth\">django-hierarchical-auth</a> that basically implements what that WoW guild management interface offers? Ultimately, that&#8217;s what I&#8217;m really hoping someone else has built for me.</p>\n",
    "body": "I want to add some team-based features to [django-badger][1]. I was hoping that someone had already built a reusable app to do most of the work for me. This happens quite a lot when I&#8217;m working with Django. Unfortunately, I haven&#8217;t *quite* found what I&#8217;m looking for yet. Consider this blog post either the product of my thinking out loud toward a rough spec, or a long-winded lazyweb search query.\r\n\r\n<!--more-->\r\n\r\nFirst, what do I mean by a &#8220;team&#8221;? Well, a familiar example is [a guild in World of Warcraft][2]: A group of people with access to shared resources, that access controlled by permissions bundled into ranks assigned to each member of the group.\r\n\r\n<div style=\"width: 460px\" class=\"wp-caption aligncenter\">\r\n  <a href=\"http://www.wowwiki.com/Guild_list_%28interface%29\"><img alt=\"Guild management in WoW\" src=\"http://images2.wikia.nocookie.net/__cb20091106224144/wowwiki/images/thumb/3/3e/Guild_list_%28interface%29.png/450px-Guild_list_%28interface%29.png\" width=\"450\" height=\"324\" /></a><p class=\"wp-caption-text\">\r\n    Guild management in WoW\r\n  </p>\r\n</div>\r\n\r\nWhile Django does come with Users, Groups, & Permissions, the concept of Roles within Groups to which Permissions can be attached seems missing.\r\n\r\nIf I try to extend the Django building blocks, maybe I could represent a &#8220;Team&#8221; as a bundle of Groups and treat those Groups as Roles? Or, maybe Groups should just become hierarchical &#8211; make it [turtles all the way down][3]. (I really like that expression, in case you can&#8217;t tell.)\r\n\r\nWith respect to that last point, I found [django-hierarchical-auth][4]. That seems like a good lead. But, I&#8217;m having trouble finding other projects using it. There&#8217;s [feinCMS][5] &#8211; I&#8217;ve never heard of that before, but that&#8217;s more my lack than theirs.\r\n\r\nIn the case of [django-badger][1], I&#8217;d like to enable users to start teams, create badges that belong to the team, and allow other team members varying levels of control over those badges (e.g. creating, editing, awarding, approving nominations, etc).\r\n\r\nSo, there&#8217;s the matter of user interface &#8211; I&#8217;d like any user (not just site-wide admins) to be able to:\r\n\r\n*   create a team;\r\n*   manage team profile information;\r\n*   manage & grant roles based on a canned selection of permissions;\r\n*   invite other users as members, remove members;\r\n*   accept team invitations, request to join a team, remove oneself from a team.\r\n\r\nThe [django-hierarchical-auth][4] app comes with no views; it&#8217;s just a backend utility. So, if I grab that app, I&#8217;ll still have to build the UI and supporting models myself (i.e. for team profiles and permission sets).\r\n\r\nSo, that leaves me wondering if there&#8217;s some value in me building a reusable app atop [django-hierarchical-auth][4] that basically implements what that WoW guild management interface offers? Ultimately, that&#8217;s what I&#8217;m really hoping someone else has built for me.\r\n\r\n [1]: https://github.com/lmorchard/django-badger\r\n [2]: http://www.wowwiki.com/Guild_list_%28interface%29\r\n [3]: http://en.wikipedia.org/wiki/Turtles_all_the_way_down\r\n [4]: https://github.com/rasca/django-hierarchical-auth\r\n [5]: http://www.feincms.org/",
    "parentPath": "../blog.lmorchard.com/posts/archives/2013",
    "path": "2013/02/23/looking-for-a-django-app-to-manage-roles-within-groups",
    "thumbnail": "http://images2.wikia.nocookie.net/__cb20091106224144/wowwiki/images/thumb/3/3e/Guild_list_%28interface%29.png/450px-Guild_list_%28interface%29.png",
    "summary": "<p>I want to add some team-based features to <a href=\"https://github.com/lmorchard/django-badger\">django-badger</a>. I was hoping that someone had already built a reusable app to do most of the work for me. This happens quite a lot when I&#x2019;m working with Django. Unfortunately, I haven&#x2019;t <em>quite</em> found what I&#x2019;m looking for yet. Consider this blog post either the product of my thinking out loud toward a rough spec, or a long-winded lazyweb search query.</p>\n",
    "prevPostPath": "2013/02/25/too-long-read-anyway",
    "nextPostPath": "2013/02/21/kumascript"
  },
  {
    "title": "KumaScript: Bringing scripting to the wiki bears",
    "author": "lmorchard",
    "layout": "post",
    "permalink": "/2013/02/21/kumascript",
    "dsq_thread_id": [
      1106639264
    ],
    "categories": [
      "Uncategorized"
    ],
    "tags": [
      "mdn",
      "mozilla",
      "wiki"
    ],
    "year": "2013",
    "month": "02",
    "day": "21",
    "isDir": false,
    "slug": "kumascript",
    "date": "2013-02-21T12:00:00.000Z",
    "postName": "2013-02-21-kumascript",
    "html": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\n  <p class=\"toc_title\">\n    Contents\n  </p>\n\n  <ul class=\"toc_list\">\n    <li>\n      <a href=\"#Necessity_is_the_Mother_of_Invention\"><span class=\"toc_number toc_depth_1\">1</span> Necessity is the Mother of Invention</a>\n    </li>\n    <li>\n      <a href=\"#What_Does_It_Look_Like\"><span class=\"toc_number toc_depth_1\">2</span> What Does It Look Like?</a>\n    </li>\n    <li>\n      <a href=\"#Scripting_in_Wikis\"><span class=\"toc_number toc_depth_1\">3</span> Scripting in Wikis</a>\n    </li>\n    <li>\n      <a href=\"#Why_JavaScript\"><span class=\"toc_number toc_depth_1\">4</span> Why JavaScript?</a>\n    </li>\n    <li>\n      <a href=\"#Boring_Lets_Me_Sleep_at_Night\"><span class=\"toc_number toc_depth_1\">5</span> Boring Lets Me Sleep at Night</a>\n    </li>\n    <li>\n      <a href=\"#HTTP_ALL_the_Things\"><span class=\"toc_number toc_depth_1\">6</span> HTTP ALL the Things</a>\n    </li>\n    <li>\n      <a href=\"#Turtles_All_the_Way_Down\"><span class=\"toc_number toc_depth_1\">7</span> Turtles All the Way Down</a>\n    </li>\n    <li>\n      <a href=\"#Security_Safety\"><span class=\"toc_number toc_depth_1\">8</span> Security & Safety</a>\n    </li>\n    <li>\n      <a href=\"#Scaling_Stability\"><span class=\"toc_number toc_depth_1\">9</span> Scaling & Stability</a>\n    </li>\n    <li>\n      <a href=\"#Maturity_THE_FUTURE\"><span class=\"toc_number toc_depth_1\">10</span> Maturity & THE FUTURE</a>\n    </li>\n  </ul>\n</div>\n\n<p><a href=\"https://github.com/mozilla/kumascript\">KumaScript</a> turned <a href=\"https://github.com/mozilla/kumascript/commit/0cb247eaac58cf00bb59e16d6b37a215484633b2\">one year old</a> back at the end of January, and I&#8217;m sad to say no one celebrated its birthday &#8211; not even me. I&#8217;m pretty sure very few people outside of the core team at the <a target=\"_blank\" title=\"Mozilla Developer Network\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Mozilla Developer Network</a> even know what <a href=\"https://github.com/mozilla/kumascript\">KumaScript</a> is. So, I guess it&#8217;s about time I do something about that.</p>\n<!--more-->\n\n<h3 id=\"necessity-is-the-mother-of-invention\"><span id=\"Necessity_is_the_Mother_of_Invention\">Necessity is the Mother of Invention</span></h3>\n<p>The major focus of my workaday (and workanight) life last summer was the relaunch of the <a target=\"_blank\" title=\"Mozilla Developer Network\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Mozilla Developer Network</a> wiki.</p>\n<p>It had been close to 18 months in the making, which usually spells <a href=\"http://blog.lmorchard.com/2012/09/17/on-the-other-end-of-a-self-imposed-death-march-project\">death march</a> and disaster. But, against many expectations, we did finally arrive at something for launch that neither fell over in flames immediately nor jettisoned a significant number of features with respect to what it was replacing. I think this is the first time in my career something like this went off with as few hitches as it did.</p>\n<p>Your first questions might go something along the lines of, &#8220;18 months? For a <em>wiki</em>? Are you insane or just incompetent?&#8221; Well, it might help to note a few additional details:</p>\n<ul>\n<li>We call it a wiki, but it&#8217;s really more of a content management system that anyone can edit. It supports translation from English to 34 other languages, tracks revisions &amp; content hierarchies, accepts file attachments, and sings &amp; dances in a variety of other annoying-to-implement ways.</li>\n<li>At the time of switchover, we had over 50,000 documents to migrate with care from the old system to the new one. That body of content represents years of work, a non-trivial hunk of cruft and spam, and tickles a maddening array of edge cases.<li style=\"text-align: left;\">\nThe wiki we replaced—i.e. <a href=\"http://www.mindtouch.com/\">MindTouch</a>—supports server-side scripting in content with a language based on Lua—i.e. <a href=\"http://developer.mindtouch.com/en/docs/DekiScript\">DekiScript</a>.\n</li>\n\n</li>\n</ul>\n<p>Each of the above points represents its own special mix of horror and challenge, and I took on the bulk of the last two. That caused me a lot of stress, and <a href=\"http://blog.lmorchard.com/2012/09/17/on-the-other-end-of-a-self-imposed-death-march-project\">I blogged a bit about that</a>.</p>\n<p>This blog post, however, focuses on that last point: <a href=\"https://github.com/mozilla/kumascript\">KumaScript</a> was built by backing into a semi-compatible replacement for <a href=\"http://developer.mindtouch.com/en/docs/DekiScript\">DekiScript</a>. That&#8217;s pretty much the worst way to go about building something, but it seems to have worked.</p>\n<h3 id=\"what-does-it-look-like\"><span id=\"What_Does_It_Look_Like\">What Does It Look Like?</span></h3>\n<p>First, you might want to check out <a href=\"https://developer.mozilla.org/en-US/docs/Project:Introduction_to_KumaScript\">&#8220;Introduction to KumaScript&#8221; on MDN</a>. It&#8217;s the best work in progress describing the ins-and-outs of the service. But for the sake of this blog post, consider <a href=\"https://developer-new.mozilla.org/en-US/docs/KumaTests/hello_test?raw=1\">this wiki document</a>:</p>\n<pre>Here are three hellos:\n{{ hello('3') }}</pre>\n\n<p>Now, consider <a href=\"https://developer-new.mozilla.org/en-US/docs/Template:hello\">this KumaScript template</a>, named <code>Template:hello</code>:</p>\n<pre>&lt;% for (var i = 0; i &lt; $0; i++) { %&gt;\nHello #&lt;%= i %&gt;\n&lt;% } %&gt;</pre>\n\n<p>Put the two of these together, and you get <a href=\"https://developer-new.mozilla.org/en-US/docs/KumaTests/hello_test\">this output</a>:</p>\n<pre>Here are three hellos:\nHello #0\nHello #1\nHello #2</pre>\n\n<p><a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> on <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> consists mainly of the following:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Project:Introduction_to_KumaScript#Template_Syntax\">Templates implemented using Embedded JavaScript Templates</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Project:Introduction_to_KumaScript#Macro_Syntax\">Macros in wiki content that call templates with parameters</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Project:Introduction_to_KumaScript#Creating_modules\">Common JS inspired modules for reusable code used by templates</a></li>\n</ul>\n<p>This quick introduction glosses over interesting things you can do with <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a>—e.g. accessing data from external sources via HTTP, fetching content from other documents (also via HTTP). But, again, you can dive deeper by reading <a href=\"https://developer.mozilla.org/en-US/docs/Project:Introduction_to_KumaScript\">&#8220;Introduction to Kumascript&#8221; on MDN</a>.</p>\n<h3 id=\"scripting-in-wikis\"><span id=\"Scripting_in_Wikis\">Scripting in Wikis</span></h3>\n<p>Why would one would even build such a thing as <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a>? As it turns out, programmatically generating content is quite handy for composing documentation. Here are a few use cases:</p>\n<ul>\n<li>Localized macros for often-repeated constructs such as <a href=\"https://developer.mozilla.org/en-US/docs/Template:Warning\">warnings</a>, notes, tips, &amp; callouts.</li>\n<li>Conditional content based on variables such as product, locale, &amp; standards status.</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Transclusion\">Transclusion</a> of content, <a href=\"https://developer.mozilla.org/en-US/docs/XUL/button\">building documents from documents</a>. (Try viewing <a href=\"https://developer.mozilla.org/en-US/docs/XUL/button?raw\">the raw source</a> of that page.)</li>\n<li>Mashups of data from <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> itself and from other sites and services like Bugzilla and Github. For example, here&#8217;s <a href=\"https://developer.mozilla.org/en-US/docs/Project:Changelog\">a self-updating Changelog of our code deployments on MDN</a>. And, here&#8217;s <a href=\"https://developer.mozilla.org/en-US/docs/Template:KumaGithubChanges\">the template behind that page</a>.</li>\n</ul>\n<p>It&#8217;s also worth pointing out that is different from scripting mixed with <a target=\"_blank\" title=\"HTML\" href=\"https://developer.mozilla.org/docs/Web/HTML?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">HTML</a> like you get from ASP or PHP: There, you can process forms, personalize responses, and generally build web applications.</p>\n<p>In the world of <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a>, content scripting is a heavily cached thing and not tied to the current HTTP request. It mostly runs only when the document itself is edited, but can also be executed when we think dependencies or external data sources have changed.</p>\n<p>In fact, <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> code doesn&#8217;t even have access to the incoming visitor&#8217;s request data at all—i.e. username, cookies, referrer header, et al—and instead we operate mainly on the content and metadata of documents.</p>\n<h3 id=\"why-javascript\"><span id=\"Why_JavaScript\">Why JavaScript?</span></h3>\n<p>As I mentioned earlier, <a href=\"http://www.mindtouch.com/\">MindTouch</a> provides for scripted content by way of the Lua-based <a href=\"http://developer.mindtouch.com/en/docs/DekiScript\">DekiScript</a>. It&#8217;s also interesting to note that the Wikimedia Foundation is working on <a href=\"http://www.mediawiki.org/wiki/Lua_scripting\">a Lua-based scripting system for MediaWiki and Wikipedia</a>. So, scripted content in a wiki isn&#8217;t an entirely crazy idea, in and of itself.</p>\n<p>As for Lua, I think it&#8217;s a nice little language. It&#8217;s used in World of Warcraft and many other games. It&#8217;s known for being easily embedded into applications to grant scriptability. I can totally see why one would reach for it.</p>\n<p>But, at <a target=\"_blank\" title=\"Mozilla\" href=\"https://www.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Mozilla</a>, we&#8217;re all about the web. The lingua franca of programming on the web is <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a>. And, it doesn&#8217;t hurt that <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> already has a huge body of <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a> documentation.</p>\n<p>So, as far as harmonious language choices go, I can&#8217;t think of a better one for scripting content on <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> than <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a>.</p>\n<h3 id=\"boring-lets-me-sleep-at-night\"><span id=\"Boring_Lets_Me_Sleep_at_Night\">Boring Lets Me Sleep at Night</span></h3>\n<p>There are some exciting things about embedding a Lua interpreter into a wiki platform, as MindTouch and MediaWiki have done. Even having chosen <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a> over Lua, I could have tried embedding a <a target=\"_blank\" title=\"JS\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JS</a> interpreter like <a href=\"http://code.google.com/p/v8/\">V8</a> or <a href=\"https://developer.mozilla.org/en-US/docs/SpiderMonkey\">SpiderMonkey</a> into Python.</p>\n<p>However, because I like to sleep at night and am not particularly clever about embedding languages within languages (<a href=\"http://stackoverflow.com/questions/5099043/embedding-a-low-performance-scripting-language-in-python#comment5715808_5099043\">yo dawg</a>), I want nothing to do with this brand of excitement. Consider me <a href=\"http://en.wikipedia.org/wiki/Hobbit#Lifestyle\">a Hobbit</a> among developers.</p>\n<p>So, <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> is a standalone <a href=\"http://nodejs.org/\">Node.js</a> web service. That is, everything going into and coming out of <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> happens over HTTP. I understand HTTP a whole lot more than embedding language interpreters.</p>\n<p>Don&#8217;t get me wrong: Node.<a target=\"_blank\" title=\"js\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">js</a> is an exciting piece of exotic matter in its own right. But, someone more clever than me maintains Node.<a target=\"_blank\" title=\"js\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">js</a>. And, I&#8217;m betting most of my co-workers and potential project contributors understand <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a>, Node.<a target=\"_blank\" title=\"js\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">js</a>, and HTTP much better than embedding languages in other languages.</p>\n<p>In fact, besides my overwrought glue code, <a href=\"https://github.com/mozilla/kumascript/blob/master/package.json#L22\">KumaScript consists mainly of modules written &amp; maintained by other people more clever than me</a>. That&#8217;s even less work for me. One of the few things I like as much as sleeping at night is when other people fix bugs and build things for me.</p>\n<h3 id=\"http-all-the-things\"><span id=\"HTTP_ALL_the_Things\">HTTP ALL the Things</span></h3>\n<p>I really like HTTP. I&#8217;ve spent a good chunk of my adult life learning to understand it—so by this point it might be Stockholm Syndrome, but I think it embeds a lot of cleverness and useful decisions.</p>\n<p>HTTP gives you interesting system boundaries. You can cache, scale, and abstract using intermediaries. There are nice identifiers (ie. URLs), status codes, and a rich arsenal of means to transport data and metadata (ie. methods, headers, and content types).</p>\n<p>Having made <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> an HTTP service also means that someone other than <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> could use it. The interface was not built specifically for <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a>, it&#8217;s neither dependent on Python nor Django. Fire up the processes and try running your web content through it—could be a wiki, could be a pile of static <a target=\"_blank\" title=\"HTML\" href=\"https://developer.mozilla.org/docs/Web/HTML?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">HTML</a>. There is, of course, slightly more to it than that—but not much.</p>\n<p>In fact, I really <em>do</em> hope someday someone beyond <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> tries using <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a>.</p>\n<h3 id=\"turtles-all-the-way-down\"><span id=\"Turtles_All_the_Way_Down\">Turtles All the Way Down</span></h3>\n<p>So, the <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> wiki—<a href=\"https://github.com/mozilla/kuma\">named Kuma</a>, which means <a href=\"http://en.wikipedia.org/wiki/Kuma#Animals\">&#8220;bear&#8221; in Japanese</a>—talks to <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> via HTTP. And, in turn, <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> talks to the wiki with HTTP.</p>\n<p>In fact, although the <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> service itself is hidden behind a firewall, <a href=\"https://developer.mozilla.org/en-US/docs/Project:The_Kuma_API\">the wiki API used by KumaScript is open to the public</a>. What&#8217;s good for the goose is good for the gander, after all.</p>\n<p>The typical document rendering process goes something like this:</p>\n<ol>\n<li><a target=\"_blank\" title=\"Kuma\" href=\"https://developer.mozilla.org/docs/Project:Getting_started_with_Kuma?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Kuma</a> makes a GET request to <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> with the URL of a wiki document.</li>\n<li><a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> makes a GET request to <a target=\"_blank\" title=\"Kuma\" href=\"https://developer.mozilla.org/docs/Project:Getting_started_with_Kuma?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Kuma</a> for the raw source of the wiki document.</li>\n<li><a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> parses the source, looking for macros &amp; inventorying templates.</li>\n<li><a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> makes a GET request to <a target=\"_blank\" title=\"Kuma\" href=\"https://developer.mozilla.org/docs/Project:Getting_started_with_Kuma?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Kuma</a> for the source of each template needed.</li>\n<li><a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> evaluates the macros by executing templates with the given parameters. This may kick off additional GET requests as needed by templates to load modules.</li>\n<li><a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> responds to the initial request from <a target=\"_blank\" title=\"Kuma\" href=\"https://developer.mozilla.org/docs/Project:Getting_started_with_Kuma?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Kuma</a> with the results of macro evaluation in the document.</li>\n</ol>\n<p>It&#8217;s <del>turtles</del> HTTP GET, <a href=\"http://en.wikipedia.org/wiki/Turtles_all_the_way_down\">all the way down</a>. Well, except for when we want to do a preview before saving: In that case it&#8217;s an HTTP POST which kicks everything off at step #3, with raw source in the request body.</p>\n<p>And though this might look like a Rube Goldberg machine, there are some nice qualities to all this HTTP GET traffic:</p>\n<ul>\n<li>Each GET is susceptible to caching, via the usual headers and semantics.</li>\n<li>Each GET can be serviced by a different process on a different machine.</li>\n</ul>\n<p>I&#8217;m sure I could come up with more items after I have lunch, but this is just HTTP.</p>\n<p>Content flows through request and response bodies. And—though this part might be a bit of a hack—I encode document context, errors, and messages using custom HTTP headers as a side-channel <a href=\"https://github.com/lmorchard/node-firelogger\">using the FireLogger protocol</a> as an inspiration.</p>\n<h3 id=\"security--safety\"><span id=\"Security_Safety\">Security &amp; Safety</span></h3>\n<p>Something I could have done with <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> was to simply allow wiki authors to drop hunks of executable code into the middle of documents. DekiScript seems to allow for this. But, we never really used it that way on <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a>.</p>\n<p>Instead, what we have is a system of templates and macros:</p>\n<ul>\n<li>Templates contain the <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a> code in the form of <a href=\"https://github.com/visionmedia/ejs\">Embedded JavaScript Templates</a>. At present, these can be authored only by a core of trusted <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> editors.</li>\n<li>Macros call templates with parameters and dump the results of execution into the document. These can be used by anyone, and have <a href=\"https://github.com/mozilla/kumascript/blob/master/lib/kumascript/parser.pegjs\">a very constrained syntax</a>.</li>\n<li>The content resulting from macro evaluation <a href=\"https://pypi.python.org/pypi/bleach\">is sanitized</a> such that it&#8217;s subject to the same constraints as hand-written markup.</li>\n</ul>\n<p>Since <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> has no access to a user&#8217;s request data, we&#8217;re decently firewalled in terms of privacy and abusing the visitor. And, since <a href=\"https://pypi.python.org/pypi/bleach\">the markup is filtered</a>, it&#8217;s difficult to inject nasty XSS exploits and the like.</p>\n<p>So, when I say security and safety, I&#8217;m thinking mainly about our servers: We want to sandbox this server-side <a target=\"_blank\" title=\"JS\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JS</a> such that it can&#8217;t abuse CPU, memory, or network resources. At present, my approach to this is anemic: Restrict code authoring to trusted people, and impose impatient timeouts on macro execution.</p>\n<p>I have thoughts about improving this situation in the future, and hopefully expanding the ability to author <a target=\"_blank\" title=\"JS\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JS</a> templates. Because, remember, <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> is a wiki—anyone and everyone can edit it. I&#8217;d like that to include the <a target=\"_blank\" title=\"JS\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JS</a> code, if at all possible to do with relative safety.</p>\n<p>Patches and pull requests are welcome, especially if you&#8217;re smarter than me about these things. (It&#8217;s not hard to be smarter than me about these things.)</p>\n<h3 id=\"scaling--stability\"><span id=\"Scaling_Stability\">Scaling &amp; Stability</span></h3>\n<p><a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> scales like just about any web service. You can stick it behind a load balancer. Scale it horizontally by throwing more CPUs and processes at the problem. Cache the hell out of the responses. Throw a proxy in front of it to cache the hell out of outgoing requests to external services. Again, this is meant to be as boring as I can make it.</p>\n<p>And, if a <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> process should happen to misbehave or starts having a seizure, just kill it and start another one. There should be no state to worry about, and the processes should start up really fast. Ideally, the logs will have recorded what went wrong and we end up with just a transient error.</p>\n<h3 id=\"maturity--the-future\"><span id=\"Maturity_THE_FUTURE\">Maturity &amp; THE FUTURE</span></h3>\n<p><a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> turned a year old last month, has been in production since last summer, and had its last commit around 5 months ago. It has lots of tests, and it uses a version of Node.<a target=\"_blank\" title=\"js\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">js</a> from early 2012.</p>\n<p>That doesn&#8217;t mean it&#8217;s abandoned, though: <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> is a mature project by most definitions. It&#8217;s been working well enough that I haven&#8217;t wanted to touch it. Most of the work goes on within the wiki itself, and <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> is meant to be the smallest piece it can be.</p>\n<p>And maturity doesn&#8217;t mean I don&#8217;t have notions about future work. Off the top of my head, I&#8217;d like to get around things like the following:</p>\n<ul>\n<li>Improve template execution &amp; sandboxing. Currently, if any one thing misbehaves in the document, the whole process gets aborted. Maybe instead, I should <a href=\"https://github.com/lloyd/node-compute-cluster\">spin up a pool of processes</a>: Each them can take care of executing a single macro, while a master process watches for CPU / RAM / network abuse and kills anything that behaves badly.</li>\n<li>Reconsider my possibly brain-dead approach to parsing source documents for macros using a PEG.<a target=\"_blank\" title=\"js\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">js</a> grammar. Or, maybe it&#8217;s good enough.</li>\n<li>Need much better error trapping and reporting throughout everywhere.</li>\n<li>Need much better use of <a href=\"https://github.com/etsy/statsd/\">statsd</a> for measuring timings and suchlike.</li>\n<li>Maybe offer an HTTP proxy that runs all content through the service, for easier deployment atop existing sites beyond <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a>.</li>\n</ul>\n<p>And of course: Suggestions, patches, and pull requests are more than welcome!</p>\n",
    "body": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\n  <p class=\"toc_title\">\n    Contents\n  </p>\n  \n  <ul class=\"toc_list\">\n    <li>\n      <a href=\"#Necessity_is_the_Mother_of_Invention\"><span class=\"toc_number toc_depth_1\">1</span> Necessity is the Mother of Invention</a>\n    </li>\n    <li>\n      <a href=\"#What_Does_It_Look_Like\"><span class=\"toc_number toc_depth_1\">2</span> What Does It Look Like?</a>\n    </li>\n    <li>\n      <a href=\"#Scripting_in_Wikis\"><span class=\"toc_number toc_depth_1\">3</span> Scripting in Wikis</a>\n    </li>\n    <li>\n      <a href=\"#Why_JavaScript\"><span class=\"toc_number toc_depth_1\">4</span> Why JavaScript?</a>\n    </li>\n    <li>\n      <a href=\"#Boring_Lets_Me_Sleep_at_Night\"><span class=\"toc_number toc_depth_1\">5</span> Boring Lets Me Sleep at Night</a>\n    </li>\n    <li>\n      <a href=\"#HTTP_ALL_the_Things\"><span class=\"toc_number toc_depth_1\">6</span> HTTP ALL the Things</a>\n    </li>\n    <li>\n      <a href=\"#Turtles_All_the_Way_Down\"><span class=\"toc_number toc_depth_1\">7</span> Turtles All the Way Down</a>\n    </li>\n    <li>\n      <a href=\"#Security_Safety\"><span class=\"toc_number toc_depth_1\">8</span> Security & Safety</a>\n    </li>\n    <li>\n      <a href=\"#Scaling_Stability\"><span class=\"toc_number toc_depth_1\">9</span> Scaling & Stability</a>\n    </li>\n    <li>\n      <a href=\"#Maturity_THE_FUTURE\"><span class=\"toc_number toc_depth_1\">10</span> Maturity & THE FUTURE</a>\n    </li>\n  </ul>\n</div>\n\n[KumaScript][1] turned [one year old][2] back at the end of January, and I&#8217;m sad to say no one celebrated its birthday &#8211; not even me. I&#8217;m pretty sure very few people outside of the core team at the <a target=\"_blank\" title=\"Mozilla Developer Network\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Mozilla Developer Network</a> even know what [KumaScript][1] is. So, I guess it&#8217;s about time I do something about that.\n\n<!--more-->\n\n### <span id=\"Necessity_is_the_Mother_of_Invention\">Necessity is the Mother of Invention</span>\n\nThe major focus of my workaday (and workanight) life last summer was the relaunch of the <a target=\"_blank\" title=\"Mozilla Developer Network\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Mozilla Developer Network</a> wiki.\n\nIt had been close to 18 months in the making, which usually spells [death march][3] and disaster. But, against many expectations, we did finally arrive at something for launch that neither fell over in flames immediately nor jettisoned a significant number of features with respect to what it was replacing. I think this is the first time in my career something like this went off with as few hitches as it did.\n\nYour first questions might go something along the lines of, &#8220;18 months? For a *wiki*? Are you insane or just incompetent?&#8221; Well, it might help to note a few additional details:\n\n*   We call it a wiki, but it&#8217;s really more of a content management system that anyone can edit. It supports translation from English to 34 other languages, tracks revisions & content hierarchies, accepts file attachments, and sings & dances in a variety of other annoying-to-implement ways.\n*   At the time of switchover, we had over 50,000 documents to migrate with care from the old system to the new one. That body of content represents years of work, a non-trivial hunk of cruft and spam, and tickles a maddening array of edge cases.\n<li style=\"text-align: left;\">\n  The wiki we replaced—i.e. <a href=\"http://www.mindtouch.com/\">MindTouch</a>—supports server-side scripting in content with a language based on Lua—i.e. <a href=\"http://developer.mindtouch.com/en/docs/DekiScript\">DekiScript</a>.\n</li>\n\nEach of the above points represents its own special mix of horror and challenge, and I took on the bulk of the last two. That caused me a lot of stress, and [I blogged a bit about that][3].\n\nThis blog post, however, focuses on that last point: [KumaScript][1] was built by backing into a semi-compatible replacement for [DekiScript][4]. That&#8217;s pretty much the worst way to go about building something, but it seems to have worked.\n\n### <span id=\"What_Does_It_Look_Like\">What Does It Look Like?</span>\n\nFirst, you might want to check out [&#8220;Introduction to KumaScript&#8221; on MDN][5]. It&#8217;s the best work in progress describing the ins-and-outs of the service. But for the sake of this blog post, consider [this wiki document][6]:\n\n<pre>Here are three hellos:\n{{ hello('3') }}</pre>\n\nNow, consider [this KumaScript template][7], named `Template:hello`:\n\n<pre>&lt;% for (var i = 0; i &lt; $0; i++) { %&gt;\nHello #&lt;%= i %&gt;\n&lt;% } %&gt;</pre>\n\nPut the two of these together, and you get [this output][8]:\n\n<pre>Here are three hellos:\nHello #0\nHello #1\nHello #2</pre>\n\n<a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> on <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> consists mainly of the following:\n\n*   [Templates implemented using Embedded JavaScript Templates][9]\n*   [Macros in wiki content that call templates with parameters][10]\n*   [Common JS inspired modules for reusable code used by templates][11]\n\nThis quick introduction glosses over interesting things you can do with <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a>—e.g. accessing data from external sources via HTTP, fetching content from other documents (also via HTTP). But, again, you can dive deeper by reading [&#8220;Introduction to Kumascript&#8221; on MDN][5].\n\n### <span id=\"Scripting_in_Wikis\">Scripting in Wikis</span>\n\nWhy would one would even build such a thing as <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a>? As it turns out, programmatically generating content is quite handy for composing documentation. Here are a few use cases:\n\n*   Localized macros for often-repeated constructs such as [warnings][12], notes, tips, & callouts.\n*   Conditional content based on variables such as product, locale, & standards status.\n*   [Transclusion][13] of content, [building documents from documents][14]. (Try viewing [the raw source][15] of that page.)\n*   Mashups of data from <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> itself and from other sites and services like Bugzilla and Github. For example, here&#8217;s [a self-updating Changelog of our code deployments on MDN][16]. And, here&#8217;s [the template behind that page][17].\n\nIt&#8217;s also worth pointing out that is different from scripting mixed with <a target=\"_blank\" title=\"HTML\" href=\"https://developer.mozilla.org/docs/Web/HTML?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">HTML</a> like you get from ASP or PHP: There, you can process forms, personalize responses, and generally build web applications.\n\nIn the world of <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a>, content scripting is a heavily cached thing and not tied to the current HTTP request. It mostly runs only when the document itself is edited, but can also be executed when we think dependencies or external data sources have changed.\n\nIn fact, <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> code doesn&#8217;t even have access to the incoming visitor&#8217;s request data at all—i.e. username, cookies, referrer header, et al—and instead we operate mainly on the content and metadata of documents.\n\n### <span id=\"Why_JavaScript\">Why JavaScript?</span>\n\nAs I mentioned earlier, [MindTouch][18] provides for scripted content by way of the Lua-based [DekiScript][4]. It&#8217;s also interesting to note that the Wikimedia Foundation is working on [a Lua-based scripting system for MediaWiki and Wikipedia][19]. So, scripted content in a wiki isn&#8217;t an entirely crazy idea, in and of itself.\n\nAs for Lua, I think it&#8217;s a nice little language. It&#8217;s used in World of Warcraft and many other games. It&#8217;s known for being easily embedded into applications to grant scriptability. I can totally see why one would reach for it.\n\nBut, at <a target=\"_blank\" title=\"Mozilla\" href=\"https://www.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Mozilla</a>, we&#8217;re all about the web. The lingua franca of programming on the web is <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a>. And, it doesn&#8217;t hurt that <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> already has a huge body of <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a> documentation.\n\nSo, as far as harmonious language choices go, I can&#8217;t think of a better one for scripting content on <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> than <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a>.\n\n### <span id=\"Boring_Lets_Me_Sleep_at_Night\">Boring Lets Me Sleep at Night</span>\n\nThere are some exciting things about embedding a Lua interpreter into a wiki platform, as MindTouch and MediaWiki have done. Even having chosen <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a> over Lua, I could have tried embedding a <a target=\"_blank\" title=\"JS\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JS</a> interpreter like [V8][20] or [SpiderMonkey][21] into Python.\n\nHowever, because I like to sleep at night and am not particularly clever about embedding languages within languages ([yo dawg][22]), I want nothing to do with this brand of excitement. Consider me [a Hobbit][23] among developers.\n\nSo, <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> is a standalone [Node.js][24] web service. That is, everything going into and coming out of <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> happens over HTTP. I understand HTTP a whole lot more than embedding language interpreters.\n\nDon&#8217;t get me wrong: Node.<a target=\"_blank\" title=\"js\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">js</a> is an exciting piece of exotic matter in its own right. But, someone more clever than me maintains Node.<a target=\"_blank\" title=\"js\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">js</a>. And, I&#8217;m betting most of my co-workers and potential project contributors understand <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a>, Node.<a target=\"_blank\" title=\"js\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">js</a>, and HTTP much better than embedding languages in other languages.\n\nIn fact, besides my overwrought glue code, [KumaScript consists mainly of modules written & maintained by other people more clever than me][25]. That&#8217;s even less work for me. One of the few things I like as much as sleeping at night is when other people fix bugs and build things for me.\n\n### <span id=\"HTTP_ALL_the_Things\">HTTP ALL the Things</span>\n\nI really like HTTP. I&#8217;ve spent a good chunk of my adult life learning to understand it—so by this point it might be Stockholm Syndrome, but I think it embeds a lot of cleverness and useful decisions.\n\nHTTP gives you interesting system boundaries. You can cache, scale, and abstract using intermediaries. There are nice identifiers (ie. URLs), status codes, and a rich arsenal of means to transport data and metadata (ie. methods, headers, and content types).\n\nHaving made <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> an HTTP service also means that someone other than <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> could use it. The interface was not built specifically for <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a>, it&#8217;s neither dependent on Python nor Django. Fire up the processes and try running your web content through it—could be a wiki, could be a pile of static <a target=\"_blank\" title=\"HTML\" href=\"https://developer.mozilla.org/docs/Web/HTML?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">HTML</a>. There is, of course, slightly more to it than that—but not much.\n\nIn fact, I really *do* hope someday someone beyond <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> tries using <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a>.\n\n### <span id=\"Turtles_All_the_Way_Down\">Turtles All the Way Down</span>\n\nSo, the <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> wiki—[named Kuma][26], which means [&#8220;bear&#8221; in Japanese][27]—talks to <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> via HTTP. And, in turn, <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> talks to the wiki with HTTP.\n\nIn fact, although the <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> service itself is hidden behind a firewall, [the wiki API used by KumaScript is open to the public][28]. What&#8217;s good for the goose is good for the gander, after all.\n\nThe typical document rendering process goes something like this:\n\n1.  <a target=\"_blank\" title=\"Kuma\" href=\"https://developer.mozilla.org/docs/Project:Getting_started_with_Kuma?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Kuma</a> makes a GET request to <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> with the URL of a wiki document.\n2.  <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> makes a GET request to <a target=\"_blank\" title=\"Kuma\" href=\"https://developer.mozilla.org/docs/Project:Getting_started_with_Kuma?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Kuma</a> for the raw source of the wiki document.\n3.  <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> parses the source, looking for macros & inventorying templates.\n4.  <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> makes a GET request to <a target=\"_blank\" title=\"Kuma\" href=\"https://developer.mozilla.org/docs/Project:Getting_started_with_Kuma?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Kuma</a> for the source of each template needed.\n5.  <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> evaluates the macros by executing templates with the given parameters. This may kick off additional GET requests as needed by templates to load modules.\n6.  <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> responds to the initial request from <a target=\"_blank\" title=\"Kuma\" href=\"https://developer.mozilla.org/docs/Project:Getting_started_with_Kuma?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">Kuma</a> with the results of macro evaluation in the document.\n\nIt&#8217;s <del>turtles</del> HTTP GET, [all the way down][29]. Well, except for when we want to do a preview before saving: In that case it&#8217;s an HTTP POST which kicks everything off at step #3, with raw source in the request body.\n\nAnd though this might look like a Rube Goldberg machine, there are some nice qualities to all this HTTP GET traffic:\n\n*   Each GET is susceptible to caching, via the usual headers and semantics.\n*   Each GET can be serviced by a different process on a different machine.\n\nI&#8217;m sure I could come up with more items after I have lunch, but this is just HTTP.\n\nContent flows through request and response bodies. And—though this part might be a bit of a hack—I encode document context, errors, and messages using custom HTTP headers as a side-channel [using the FireLogger protocol][30] as an inspiration.\n\n### <span id=\"Security_Safety\">Security & Safety</span>\n\nSomething I could have done with <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> was to simply allow wiki authors to drop hunks of executable code into the middle of documents. DekiScript seems to allow for this. But, we never really used it that way on <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a>.\n\nInstead, what we have is a system of templates and macros:\n\n*   Templates contain the <a target=\"_blank\" title=\"JavaScript\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JavaScript</a> code in the form of [Embedded JavaScript Templates][31]. At present, these can be authored only by a core of trusted <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> editors.\n*   Macros call templates with parameters and dump the results of execution into the document. These can be used by anyone, and have [a very constrained syntax][32].\n*   The content resulting from macro evaluation [is sanitized][33] such that it&#8217;s subject to the same constraints as hand-written markup.\n\nSince <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> has no access to a user&#8217;s request data, we&#8217;re decently firewalled in terms of privacy and abusing the visitor. And, since [the markup is filtered][33], it&#8217;s difficult to inject nasty XSS exploits and the like.\n\nSo, when I say security and safety, I&#8217;m thinking mainly about our servers: We want to sandbox this server-side <a target=\"_blank\" title=\"JS\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JS</a> such that it can&#8217;t abuse CPU, memory, or network resources. At present, my approach to this is anemic: Restrict code authoring to trusted people, and impose impatient timeouts on macro execution.\n\nI have thoughts about improving this situation in the future, and hopefully expanding the ability to author <a target=\"_blank\" title=\"JS\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JS</a> templates. Because, remember, <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a> is a wiki—anyone and everyone can edit it. I&#8217;d like that to include the <a target=\"_blank\" title=\"JS\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JS</a> code, if at all possible to do with relative safety.\n\nPatches and pull requests are welcome, especially if you&#8217;re smarter than me about these things. (It&#8217;s not hard to be smarter than me about these things.)\n\n### <span id=\"Scaling_Stability\">Scaling & Stability</span>\n\n<a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> scales like just about any web service. You can stick it behind a load balancer. Scale it horizontally by throwing more CPUs and processes at the problem. Cache the hell out of the responses. Throw a proxy in front of it to cache the hell out of outgoing requests to external services. Again, this is meant to be as boring as I can make it.\n\nAnd, if a <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> process should happen to misbehave or starts having a seizure, just kill it and start another one. There should be no state to worry about, and the processes should start up really fast. Ideally, the logs will have recorded what went wrong and we end up with just a transient error.\n\n### <span id=\"Maturity_THE_FUTURE\">Maturity & THE FUTURE</span>\n\n<a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> turned a year old last month, has been in production since last summer, and had its last commit around 5 months ago. It has lots of tests, and it uses a version of Node.<a target=\"_blank\" title=\"js\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">js</a> from early 2012.\n\nThat doesn&#8217;t mean it&#8217;s abandoned, though: <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> is a mature project by most definitions. It&#8217;s been working well enough that I haven&#8217;t wanted to touch it. Most of the work goes on within the wiki itself, and <a target=\"_blank\" title=\"KumaScript\" href=\"https://developer.mozilla.org/docs/Project:Introduction_to_KumaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">KumaScript</a> is meant to be the smallest piece it can be.\n\nAnd maturity doesn&#8217;t mean I don&#8217;t have notions about future work. Off the top of my head, I&#8217;d like to get around things like the following:\n\n*   Improve template execution & sandboxing. Currently, if any one thing misbehaves in the document, the whole process gets aborted. Maybe instead, I should [spin up a pool of processes][34]: Each them can take care of executing a single macro, while a master process watches for CPU / RAM / network abuse and kills anything that behaves badly.\n*   Reconsider my possibly brain-dead approach to parsing source documents for macros using a PEG.<a target=\"_blank\" title=\"js\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">js</a> grammar. Or, maybe it&#8217;s good enough.\n*   Need much better error trapping and reporting throughout everywhere.\n*   Need much better use of [statsd][35] for measuring timings and suchlike.\n*   Maybe offer an HTTP proxy that runs all content through the service, for easier deployment atop existing sites beyond <a target=\"_blank\" title=\"MDN\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">MDN</a>.\n\nAnd of course: Suggestions, patches, and pull requests are more than welcome!\n\n [1]: https://github.com/mozilla/kumascript\n [2]: https://github.com/mozilla/kumascript/commit/0cb247eaac58cf00bb59e16d6b37a215484633b2\n [3]: http://blog.lmorchard.com/2012/09/17/on-the-other-end-of-a-self-imposed-death-march-project\n [4]: http://developer.mindtouch.com/en/docs/DekiScript\n [5]: https://developer.mozilla.org/en-US/docs/Project:Introduction_to_KumaScript\n [6]: https://developer-new.mozilla.org/en-US/docs/KumaTests/hello_test?raw=1\n [7]: https://developer-new.mozilla.org/en-US/docs/Template:hello\n [8]: https://developer-new.mozilla.org/en-US/docs/KumaTests/hello_test\n [9]: https://developer.mozilla.org/en-US/docs/Project:Introduction_to_KumaScript#Template_Syntax\n [10]: https://developer.mozilla.org/en-US/docs/Project:Introduction_to_KumaScript#Macro_Syntax\n [11]: https://developer.mozilla.org/en-US/docs/Project:Introduction_to_KumaScript#Creating_modules\n [12]: https://developer.mozilla.org/en-US/docs/Template:Warning\n [13]: http://en.wikipedia.org/wiki/Transclusion\n [14]: https://developer.mozilla.org/en-US/docs/XUL/button\n [15]: https://developer.mozilla.org/en-US/docs/XUL/button?raw\n [16]: https://developer.mozilla.org/en-US/docs/Project:Changelog\n [17]: https://developer.mozilla.org/en-US/docs/Template:KumaGithubChanges\n [18]: http://www.mindtouch.com/\n [19]: http://www.mediawiki.org/wiki/Lua_scripting\n [20]: http://code.google.com/p/v8/\n [21]: https://developer.mozilla.org/en-US/docs/SpiderMonkey\n [22]: http://stackoverflow.com/questions/5099043/embedding-a-low-performance-scripting-language-in-python#comment5715808_5099043\n [23]: http://en.wikipedia.org/wiki/Hobbit#Lifestyle\n [24]: http://nodejs.org/\n [25]: https://github.com/mozilla/kumascript/blob/master/package.json#L22\n [26]: https://github.com/mozilla/kuma\n [27]: http://en.wikipedia.org/wiki/Kuma#Animals\n [28]: https://developer.mozilla.org/en-US/docs/Project:The_Kuma_API\n [29]: http://en.wikipedia.org/wiki/Turtles_all_the_way_down\n [30]: https://github.com/lmorchard/node-firelogger\n [31]: https://github.com/visionmedia/ejs\n [32]: https://github.com/mozilla/kumascript/blob/master/lib/kumascript/parser.pegjs\n [33]: https://pypi.python.org/pypi/bleach\n [34]: https://github.com/lloyd/node-compute-cluster\n [35]: https://github.com/etsy/statsd/",
    "parentPath": "../blog.lmorchard.com/posts/archives/2013",
    "path": "2013/02/21/kumascript",
    "summary": "\n\n<p><a href=\"https://github.com/mozilla/kumascript\">KumaScript</a> turned <a href=\"https://github.com/mozilla/kumascript/commit/0cb247eaac58cf00bb59e16d6b37a215484633b2\">one year old</a> back at the end of January, and I&#x2019;m sad to say no one celebrated its birthday &#x2013; not even me. I&#x2019;m pretty sure very few people outside of the core team at the <a target=\"_blank\" title=\"Mozilla Developer Network\" href=\"https://developer.mozilla.org/?utm_source=wordpress%20blog&amp;utm_medium=content%20link&amp;utm_campaign=promote%20mdn\">Mozilla Developer Network</a> even know what <a href=\"https://github.com/mozilla/kumascript\">KumaScript</a> is. So, I guess it&#x2019;s about time I do something about that.</p>\n",
    "prevPostPath": "2013/02/23/looking-for-a-django-app-to-manage-roles-within-groups",
    "nextPostPath": "2013/02/10/building-my-couch-computing-station"
  },
  {
    "title": "Building my couch computing station",
    "author": "lmorchard",
    "layout": "post",
    "permalink": "/2013/02/10/building-my-couch-computing-station",
    "dsq_thread_id": [
      1106746467
    ],
    "categories": [
      "Uncategorized"
    ],
    "tags": [
      "diy",
      "hacks",
      "lcd",
      "pc",
      "tech"
    ],
    "year": "2013",
    "month": "02",
    "day": "10",
    "isDir": false,
    "slug": "building-my-couch-computing-station",
    "date": "2013-02-10T12:00:00.000Z",
    "postName": "2013-02-10-building-my-couch-computing-station",
    "html": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\n  <p class=\"toc_title\">\n    Contents\n  </p>\n\n  <ul class=\"toc_list\">\n    <li>\n      <a href=\"#Display_from_the_other_side_of_the_earth\"><span class=\"toc_number toc_depth_1\">1</span> Display from the other side of the earth</a>\n    </li>\n    <li>\n      <a href=\"#Mounting_hardware\"><span class=\"toc_number toc_depth_1\">2</span> Mounting hardware</a>\n    </li>\n    <li>\n      <a href=\"#Building_the_enclosure\"><span class=\"toc_number toc_depth_1\">3</span> Building the enclosure</a>\n    </li>\n    <li>\n      <a href=\"#Mounting_the_mess_to_the_DAVE\"><span class=\"toc_number toc_depth_1\">4</span> Mounting the mess to the DAVE</a>\n    </li>\n    <li>\n      <a href=\"#What8217s_next\"><span class=\"toc_number toc_depth_1\">5</span> What&#8217;s next?</a>\n    </li>\n  </ul>\n</div>\n\n<p>Remember when I posted about <a href=\"http://blog.lmorchard.com/2013/01/21/gaming-from-the-orchard-house-couch\">gaming from the Orchard House couch</a>? The key part was figuring out how to get <a href=\"http://blog.lmorchard.com/2013/01/21/gaming-from-the-orchard-house-couch#Laptop_decapitation\">a laptop-quality LCD monitor working in the living room</a>, preferably attached to my trusty IKEA DAVE. Well, despite my best attempts at ruining my materials and tools, I managed to get it built!</p>\n<!--more-->\n\n<p>For reference, here&#8217;s what I came up with in Google Sketchup:</p>\n<p><a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/01/couch-gaming-2a-pc.png\"><img src=\"http://blog.lmorchard.com/wp-content/uploads/2013/01/couch-gaming-2a-pc.png\" alt=\"couch-gaming-2a-pc\" width=\"506\" height=\"910\" class=\"alignnone size-full wp-image-671\" /></a></p>\n<p>Spoiler alert &#8211; here&#8217;s what the final product looks like:</p>\n<p><a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-23.33.12.jpg\"><img class=\"alignnone size-large wp-image-832\" alt=\"2013-02-03 23.33.12\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-23.33.12-1024x768.jpg\" width=\"640\" height=\"480\" /></a></p>\n<h3 id=\"display-from-the-other-side-of-the-earth\"><span id=\"Display_from_the_other_side_of_the_earth\">Display from the other side of the earth</span></h3>\n<p><a href=\"http://www.ebay.com/itm/HDMI-VGA-DVI-Audio-LCD-controller-board-17-3-LP173WF1-1920-1080-lcd-panel-/170940546439?pt=LH_DefaultDomain_0&hash=item27ccd9bd87\" target=\"_blank\">The first piece</a> arrived a week or so ago:</p>\n<div id=\"attachment_825\" style=\"width: 650px\" class=\"wp-caption alignnone\">\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-01-31-11.24.53.jpg\"><img src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-01-31-11.24.53-1024x768.jpg\" alt=\"LCD panel and control board\" width=\"640\" height=\"480\" class=\"size-large wp-image-825\" /></a><p class=\"wp-caption-text\">\n    LCD panel and control board\n  </p>\n</div>\n\n<p style=\"clear: both;\">\n  Having never ordered anything like this before from a random eBay store out of China, I half expected it to never show up. But, <a href=\"http://stores.ebay.com/chinatobby?_trksid=p2047675.l2568\" target=\"_blank\">the merchant</a> has near <a href=\"http://feedback.ebay.com/ws/eBayISAPI.dll?ViewFeedback2&userid=chinatobby2011&ftab=AllFeedback\" target=\"_blank\">perfect 99.9% feedback scores</a>, so I hit the &#8220;Buy it now&#8221; button and crossed my fingers.\n</p>\n\n<p>Something great was that the confirmation email noted, &#8220;because what you bought will be shipped from the other side of the earth, it needs time&#8221;. Well, fair enough: I did pick the cheapest delivery option. Still, even with that bit of expectation setting, the package showed up just 10 days later. (<a href=\"https://twitter.com/search?q=%23livinginthefuture\" target=\"_blank\">#LivingInTheFuture</a> #FTW)</p>\n<p>What arrived was a <a href=\"http://www.panelook.com/LP173WF1-TLA1_LG%20Display_17.3_LCM_parameter_5857.html\" target=\"_blank\">17.3&#8243; 1920&#215;1080 TN LCD panel</a>, apparently used in a variety of high-end PC laptops from HP and Sony. What was also in the box was <a href=\"http://www.vslcd.com/Specification/M.NT68676.2A.pdf\" target=\"_blank\">a little driver board</a> that connects to the panel via LVDS cable. The driver board takes a 12v DC power supply, accepts HDMI / VGA / DVI video inputs, and even offers a headphone audio output jack.</p>\n<p>Overall, this hardware is exactly what I was looking for: Basically the head chopped off a laptop, with the right connectors for a desktop PC. What I needed now was an enclosure, and a way to mount the enclosure to my IKEA DAVE.</p>\n<h3 id=\"mounting-hardware\"><span id=\"Mounting_hardware\">Mounting hardware</span></h3>\n<p>As it happened, I had <a href=\"http://www.amazon.com/gp/product/B000ID7QNI/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B000ID7QNI&amp;linkCode=as2&amp;tag=0xdecafbad01-20\" title=\"VideoSecu Articulating TV Wall Mount Bracket for VESA 100 LCD LED Flat Screen Monitor TV 1E9\">a cheap VESA mount with an articulated arm laying</a><img src=\"http://www.assoc-amazon.com/e/ir?t=0xdecafbad01-20&#038;l=as2&#038;o=1&#038;a=B000ID7QNI\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> around. We never got around to using it to stick a TV on the wall, so it seemed worth a shot to see if it would work on the IKEA DAVE.</p>\n<p><a href=\"http://www.amazon.com/gp/product/B000ID7QNI/ref=as_li_ss_il?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B000ID7QNI&amp;linkCode=as2&amp;tag=0xdecafbad01-20\"><img border=\"0\" src=\"http://ws.assoc-amazon.com/widgets/q?_encoding=UTF8&#038;ASIN=B000ID7QNI&#038;Format=_SL110_&#038;ID=AsinImage&#038;MarketPlace=US&#038;ServiceVersion=20070822&#038;WS=1&#038;tag=0xdecafbad01-20\" /></a><img src=\"http://www.assoc-amazon.com/e/ir?t=0xdecafbad01-20&#038;l=as2&#038;o=1&#038;a=B000ID7QNI\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /></p>\n<p>For around $15, it&#8217;s just about right: I had to mount it sideways, and it doesn&#8217;t <em>quite</em> fully work that way. The side-to-side angle doesn&#8217;t want to support any weight in an up-and-down tilt, but the rest of the arm tightens down, so it&#8217;s good enough.</p>\n<h3 style=\"clear: both;\">\n  <span id=\"Building_the_enclosure\">Building the enclosure</span>\n</h3>\n\n<p>I don&#8217;t have a 3D printer or a laser cutter. Though there is <a href=\"http://www.i3detroit.com/\" target=\"_blank\">a friendly hackerspace</a> suitably equipped nearby, I wanted to see what I could prototype by hand. So, I went to Home Depot and bought <a href=\"http://www.homedepot.com/h_d1/N-5yc1v/R-100542281/h_d2/ProductDisplay?catalogId=10053&langId=-1&keyword=acrylic&storeId=10051#.URcEEZykOUk\" target=\"_blank\">4 polystyrene panels</a>, <a href=\"http://www.homedepot.com/h_d1/N-5yc1v/R-203040434/h_d2/ProductDisplay?catalogId=10053&langId=-1&keyword=dremel&storeId=10051#.URcW75ykOUk\" target=\"_blank\">a Dremel tool</a>, and <a href=\"http://www.homedepot.com/h_d1/N-5yc1v/R-202519358/h_d2/ProductDisplay?catalogId=10053&langId=-1&keyword=acrylic+cutter&storeId=10051#.URcXIJykOUk\" target=\"_blank\">an acrylic cutter</a>.</p>\n<p>With lots of trial and error, and truly awful manufacturing tolerances, I came up with a crude design consisting of 6 stacked layers bolted together with machine screws:</p>\n<ol>\n<li>Back layer with VESA mounting holes and an exit for the LVDS cable.</li>\n<li>Layer with VESA mounting holes and a pocket to route the LVDS cable.</li>\n<li>Layer behind the LCD with pocket for LVDS cable and heads of VESA mount bolts.</li>\n<li>Strips across the top and sides to hold the LCD panel.</li>\n<li>More strips across the top and sides to hold the LCD panel.</li>\n<li>Strips across the top and sides, covering the bezel area of the LCD panel.</li>\n</ol>\n<p>I made a ton of measurements and little indecipherable sketches in my grid-lined Moleskine, but those were mostly crap. No battle plan survives contact with the enemy, and all that. In the end, I just flew by the seat of my pants and hacked away.</p>\n<p>This process taught me that a Dremel (in my hands, at least) is absolutely no substitute for a laser cutter. I <em>really</em> didn&#8217;t anticipate just how horrible I&#8217;d be at cutting this stuff. Trying to cut just-right shapes out of the polystyrene turned into a dismal, stinky mess. But luckily, all the material I thought I&#8217;d wasted turned out to be perfect for cutting out as strips for the bezel and sides.</p>\n<p>So, in lieu of a diagram, how about some pictures?</p>\n<div style=\"width: 650px\" class=\"wp-caption alignnone\">\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-20.29.331.jpg\"><img title=\"Back layers, attached to the VESA mount clamped to my workbench\" alt=\"Back layers, attached to the VESA mount clamped to my workbench\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-20.29.331-1024x768.jpg\" width=\"640\" height=\"480\" /></a><p class=\"wp-caption-text\">\n    Back layers, attached to the VESA mount clamped to my workbench.\n  </p>\n</div>\n\n<p>Here&#8217;s a little trick I worked out in this construction process: I used squares of electrical tape to retain the machine screws, so that I could flip the thing around while I was assembling layers on top before threading on the nuts. And speaking of that, here are the rest of the pieces in place:</p>\n<div id=\"attachment_850\" style=\"width: 650px\" class=\"wp-caption alignnone\">\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-00.36.29.jpg\"><img class=\"size-large wp-image-850\" title=\"Further layers bolted into the stack\" alt=\"Further layers bolted into the stack\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-00.36.29-1024x768.jpg\" width=\"640\" height=\"480\" /></a><p class=\"wp-caption-text\">\n    Further layers bolted into the stack\n  </p>\n</div>\n\n<p>The middle two layers cradling the sides of the LCD panel alternate between long sides / short top and long top / short sides, providing a bit more stability in the way they overlap. The top layer is long sides / short top, with a bit more width to cover the 5mm or so of the LCD panel&#8217;s bezel area.</p>\n<p>Immediately behind the LCD panel is a layer with a cut-out to provide space for machine screws for the VESA mount, and a pocket through which to route the LVDS cable to the control board. And the final two layers form the actual VESA mount and complete the exit route for the LVDS cable.</p>\n<div style=\"width: 650px\" class=\"wp-caption alignnone\">\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-20.44.09.jpg\"><img title=\"Video control board bolted onto the back\" alt=\"Video control board bolted onto the back\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-20.44.09-1024x768.jpg\" width=\"640\" height=\"480\" /></a><p class=\"wp-caption-text\">\n    Video control board bolted onto the back\n  </p>\n</div>\n\n<p>And finally, here&#8217;s the video control board on the back. Rather than make a full box for the board, I just sandwiched it with machine screws between acrylic layers and nylon spacers. Then, I bolted that whole mess onto the back layers.</p>\n<p>Midway through this process, I switched from Home Depot to <a href=\"http://frentzandsons.com/content/default.htm\">a family-owned hardware store</a> a few blocks from my house. I think they recognize me as a regular now after repeat visits for Dremel bits, screws, and a pile of other miscellanea.</p>\n<h3 id=\"mounting-the-mess-to-the-dave\"><span id=\"Mounting_the_mess_to_the_DAVE\">Mounting the mess to the DAVE</span></h3>\n<p>The VideoSecu VESA mount went onto the IKEA DAVE rather crudely with a pair of long wood screws. It feels pretty solid, but the screws stab treacherously out through the bottom. I&#8217;ll need to address that someday, probably after they stab me in the kneecaps.</p>\n<p>And, as it turns out, the control board placement was a mistake. Once I got the VESA arm screwed onto the IKEA DAVE, there wasn&#8217;t enough room to connect the power and an HDMI cable to the board. Or rather, there was just enough room to do so and inadvertently destroy an HDMI cable after a few hours of the monitor&#8217;s weight resting on it. I guess the good news is that the cable went before the solder joints on the jack failed. Herp, derp.</p>\n<p>So, I bought a new HDMI cable, unbolted the board, and stuck it onto the back with <a href=\"http://www.amazon.com/gp/product/B00004Z4A8/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=B00004Z4A8&linkCode=as2&tag=0xdecafbad01-20\" target=\"_blank\">double sided tape</a>. Here&#8217;s what the back looks like now:</p>\n<div id=\"attachment_826\" style=\"width: 650px\" class=\"wp-caption alignnone\">\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-05-00.28.14.jpg\"><img class=\"size-large wp-image-826\" title=\"LCD enclosure attached to the IKEA DAVE\" alt=\"LCD enclosure attached to the IKEA DAVE\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-05-00.28.14-1024x768.jpg\" width=\"640\" height=\"480\" /></a><p class=\"wp-caption-text\">\n    LCD enclosure attached to the IKEA DAVE, featuring bonus <a href=\"http://www.flickr.com/photos/deusx/tags/cheddars/\" target=\"_blank\">Cheddars</a> appearance\n  </p>\n</div>\n\n<p>I also used the same tape to attach the button board to the front of the enclosure.</p>\n<div id=\"attachment_853\" style=\"width: 650px\" class=\"wp-caption alignnone\">\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-09-23.20.43.jpg\"><img class=\"size-large wp-image-853\" alt=\"Button board on front\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-09-23.20.43-1024x768.jpg\" width=\"640\" height=\"480\" /></a><p class=\"wp-caption-text\">\n    Button board on front\n  </p>\n</div>\n\n<p>Overall, this thing works pretty much exactly as I&#8217;d imagined it. I <a href=\"http://pcpartpicker.com/p/z3mE\" target=\"_blank\">built a PC</a> in a <a href=\"http://icrontic.com/article/fractal-design-node-304-case-review\" target=\"_blank\">Fractal Node 304</a> mini-ITX case, and hid that under the coffee table. I bundled the cables together and used velcro wraps to bind them to the DAVE, and <a href=\"http://www.rabbit.org/faq/sections/rabbit-proofing.html#cords\" target=\"_blank\">some spiral wraps to bunny-proof</a> them as much as possible.</p>\n<div id=\"attachment_855\" style=\"width: 650px\" class=\"wp-caption alignnone\">\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-09-23.38.29.jpg\"><img class=\"size-large wp-image-855\" alt=\"Cheddars just loves my new couch PC\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-09-23.38.29-1024x768.jpg\" width=\"640\" height=\"480\" /></a><p class=\"wp-caption-text\">\n    <a href=\"http://www.flickr.com/photos/deusx/tags/cheddars/\" target=\"_blank\">Cheddars</a> just loves my new couch PC. Or, maybe she wants dinner.\n  </p>\n</div>\n\n<h3 id=\"whats-next\"><span id=\"What8217s_next\">What&#8217;s next?</span></h3>\n<p>This monitor is ugly if you look at it too closely. I slipped a bit with the acrylic cutter and left some obvious gouges, and the layers have a grubby patina of scratches just from clumsy handling throughout the process. Basically, it&#8217;s very, very obviously hand-made by a guy who writes software for a living and hasn&#8217;t touched a power tool for more than 5 minutes since high school shop class.</p>\n<p>But, I think some really valuable things came out of this first attempt: It took me a bit to work through how to mount the LCD panel and route the cable out the back in a way that didn&#8217;t put stress on the wires or the connectors. There was a lot of fudge factor in getting the VESA mount alignment just right. And, there was also that HDMI cable I wrecked by botching the control board placement. Beyond all that, though, the basic idea worked.</p>\n<p>So, I&#8217;m already thinking about v2.0 and making friends over at <a href=\"http://www.i3detroit.com/\" target=\"_blank\">i3Detroit</a> who can drive <a href=\"http://i3detroit.com/wi/index.php?title=Laser_Cutting_and_Etching\" target=\"_blank\">a laser cutter</a>. I&#8217;m checking out <a href=\"http://www.ponoko.com/starter-kits/inkscape\" target=\"_blank\">Inkscape and Ponoko</a>. I&#8217;d also like to find some better materials &#8211; maybe aluminum for the front bezel and back panel, and maybe drop a layer from the stack. It would be really nice to get a much cleaner look and drop some weight. Also, an upgrade to this cheap VESA mount would be keen &#8211; I can&#8217;t <em>quite</em> get all the adjustments I&#8217;d like.</p>\n<p>Overall, this thing works, and that makes me pretty happy. In the beginning, I had really hoped to just find someone else had made this exact thing &#8211; maybe on Thingiverse. But, no such luck. This <a href=\"http://www.instructables.com/id/Laptop-to-Desktop-Conversion/\" target=\"_blank\">&#8220;Laptop-to-Desktop&#8221; Instructable</a> is pretty close, but not entirely what I needed. I guess DIY high-res LCD monitors are just not a thing. But, maybe this post and a possible v2.0 post in the future might come in handy for someone else.</p>\n",
    "body": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\r\n  <p class=\"toc_title\">\r\n    Contents\r\n  </p>\r\n  \r\n  <ul class=\"toc_list\">\r\n    <li>\r\n      <a href=\"#Display_from_the_other_side_of_the_earth\"><span class=\"toc_number toc_depth_1\">1</span> Display from the other side of the earth</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Mounting_hardware\"><span class=\"toc_number toc_depth_1\">2</span> Mounting hardware</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Building_the_enclosure\"><span class=\"toc_number toc_depth_1\">3</span> Building the enclosure</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Mounting_the_mess_to_the_DAVE\"><span class=\"toc_number toc_depth_1\">4</span> Mounting the mess to the DAVE</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#What8217s_next\"><span class=\"toc_number toc_depth_1\">5</span> What&#8217;s next?</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\nRemember when I posted about [gaming from the Orchard House couch][1]? The key part was figuring out how to get [a laptop-quality LCD monitor working in the living room][2], preferably attached to my trusty IKEA DAVE. Well, despite my best attempts at ruining my materials and tools, I managed to get it built!\r\n\r\n<!--more-->\r\n\r\nFor reference, here&#8217;s what I came up with in Google Sketchup:\r\n\r\n[<img src=\"http://blog.lmorchard.com/wp-content/uploads/2013/01/couch-gaming-2a-pc.png\" alt=\"couch-gaming-2a-pc\" width=\"506\" height=\"910\" class=\"alignnone size-full wp-image-671\" />][3]\r\n\r\nSpoiler alert &#8211; here&#8217;s what the final product looks like:\r\n\r\n[<img class=\"alignnone size-large wp-image-832\" alt=\"2013-02-03 23.33.12\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-23.33.12-1024x768.jpg\" width=\"640\" height=\"480\" />][4]\r\n\r\n### <span id=\"Display_from_the_other_side_of_the_earth\">Display from the other side of the earth</span>\r\n\r\n<a href=\"http://www.ebay.com/itm/HDMI-VGA-DVI-Audio-LCD-controller-board-17-3-LP173WF1-1920-1080-lcd-panel-/170940546439?pt=LH_DefaultDomain_0&hash=item27ccd9bd87\" target=\"_blank\">The first piece</a> arrived a week or so ago:\r\n\r\n<div id=\"attachment_825\" style=\"width: 650px\" class=\"wp-caption alignnone\">\r\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-01-31-11.24.53.jpg\"><img src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-01-31-11.24.53-1024x768.jpg\" alt=\"LCD panel and control board\" width=\"640\" height=\"480\" class=\"size-large wp-image-825\" /></a><p class=\"wp-caption-text\">\r\n    LCD panel and control board\r\n  </p>\r\n</div>\r\n\r\n<p style=\"clear: both;\">\r\n  Having never ordered anything like this before from a random eBay store out of China, I half expected it to never show up. But, <a href=\"http://stores.ebay.com/chinatobby?_trksid=p2047675.l2568\" target=\"_blank\">the merchant</a> has near <a href=\"http://feedback.ebay.com/ws/eBayISAPI.dll?ViewFeedback2&userid=chinatobby2011&ftab=AllFeedback\" target=\"_blank\">perfect 99.9% feedback scores</a>, so I hit the &#8220;Buy it now&#8221; button and crossed my fingers.\r\n</p>\r\n\r\nSomething great was that the confirmation email noted, &#8220;because what you bought will be shipped from the other side of the earth, it needs time&#8221;. Well, fair enough: I did pick the cheapest delivery option. Still, even with that bit of expectation setting, the package showed up just 10 days later. (<a href=\"https://twitter.com/search?q=%23livinginthefuture\" target=\"_blank\">#LivingInTheFuture</a> #FTW)\r\n\r\nWhat arrived was a <a href=\"http://www.panelook.com/LP173WF1-TLA1_LG%20Display_17.3_LCM_parameter_5857.html\" target=\"_blank\">17.3&#8243; 1920&#215;1080 TN LCD panel</a>, apparently used in a variety of high-end PC laptops from HP and Sony. What was also in the box was <a href=\"http://www.vslcd.com/Specification/M.NT68676.2A.pdf\" target=\"_blank\">a little driver board</a> that connects to the panel via LVDS cable. The driver board takes a 12v DC power supply, accepts HDMI / VGA / DVI video inputs, and even offers a headphone audio output jack.\r\n\r\nOverall, this hardware is exactly what I was looking for: Basically the head chopped off a laptop, with the right connectors for a desktop PC. What I needed now was an enclosure, and a way to mount the enclosure to my IKEA DAVE.\r\n\r\n### <span id=\"Mounting_hardware\">Mounting hardware</span>\r\n\r\nAs it happened, I had [a cheap VESA mount with an articulated arm laying][5]<img src=\"http://www.assoc-amazon.com/e/ir?t=0xdecafbad01-20&#038;l=as2&#038;o=1&#038;a=B000ID7QNI\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> around. We never got around to using it to stick a TV on the wall, so it seemed worth a shot to see if it would work on the IKEA DAVE.\r\n\r\n[<img border=\"0\" src=\"http://ws.assoc-amazon.com/widgets/q?_encoding=UTF8&#038;ASIN=B000ID7QNI&#038;Format=_SL110_&#038;ID=AsinImage&#038;MarketPlace=US&#038;ServiceVersion=20070822&#038;WS=1&#038;tag=0xdecafbad01-20\" />][6]<img src=\"http://www.assoc-amazon.com/e/ir?t=0xdecafbad01-20&#038;l=as2&#038;o=1&#038;a=B000ID7QNI\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" />\r\n\r\nFor around $15, it&#8217;s just about right: I had to mount it sideways, and it doesn&#8217;t *quite* fully work that way. The side-to-side angle doesn&#8217;t want to support any weight in an up-and-down tilt, but the rest of the arm tightens down, so it&#8217;s good enough.\r\n\r\n<h3 style=\"clear: both;\">\r\n  <span id=\"Building_the_enclosure\">Building the enclosure</span>\r\n</h3>\r\n\r\nI don&#8217;t have a 3D printer or a laser cutter. Though there is <a href=\"http://www.i3detroit.com/\" target=\"_blank\">a friendly hackerspace</a> suitably equipped nearby, I wanted to see what I could prototype by hand. So, I went to Home Depot and bought <a href=\"http://www.homedepot.com/h_d1/N-5yc1v/R-100542281/h_d2/ProductDisplay?catalogId=10053&langId=-1&keyword=acrylic&storeId=10051#.URcEEZykOUk\" target=\"_blank\">4 polystyrene panels</a>, <a href=\"http://www.homedepot.com/h_d1/N-5yc1v/R-203040434/h_d2/ProductDisplay?catalogId=10053&langId=-1&keyword=dremel&storeId=10051#.URcW75ykOUk\" target=\"_blank\">a Dremel tool</a>, and <a href=\"http://www.homedepot.com/h_d1/N-5yc1v/R-202519358/h_d2/ProductDisplay?catalogId=10053&langId=-1&keyword=acrylic+cutter&storeId=10051#.URcXIJykOUk\" target=\"_blank\">an acrylic cutter</a>.\r\n\r\nWith lots of trial and error, and truly awful manufacturing tolerances, I came up with a crude design consisting of 6 stacked layers bolted together with machine screws:\r\n\r\n1.  Back layer with VESA mounting holes and an exit for the LVDS cable.\r\n2.  Layer with VESA mounting holes and a pocket to route the LVDS cable.\r\n3.  Layer behind the LCD with pocket for LVDS cable and heads of VESA mount bolts.\r\n4.  Strips across the top and sides to hold the LCD panel.\r\n5.  More strips across the top and sides to hold the LCD panel.\r\n6.  Strips across the top and sides, covering the bezel area of the LCD panel.\r\n\r\nI made a ton of measurements and little indecipherable sketches in my grid-lined Moleskine, but those were mostly crap. No battle plan survives contact with the enemy, and all that. In the end, I just flew by the seat of my pants and hacked away.\r\n\r\nThis process taught me that a Dremel (in my hands, at least) is absolutely no substitute for a laser cutter. I *really* didn&#8217;t anticipate just how horrible I&#8217;d be at cutting this stuff. Trying to cut just-right shapes out of the polystyrene turned into a dismal, stinky mess. But luckily, all the material I thought I&#8217;d wasted turned out to be perfect for cutting out as strips for the bezel and sides.\r\n\r\nSo, in lieu of a diagram, how about some pictures?\r\n\r\n<div style=\"width: 650px\" class=\"wp-caption alignnone\">\r\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-20.29.331.jpg\"><img title=\"Back layers, attached to the VESA mount clamped to my workbench\" alt=\"Back layers, attached to the VESA mount clamped to my workbench\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-20.29.331-1024x768.jpg\" width=\"640\" height=\"480\" /></a><p class=\"wp-caption-text\">\r\n    Back layers, attached to the VESA mount clamped to my workbench.\r\n  </p>\r\n</div>\r\n\r\nHere&#8217;s a little trick I worked out in this construction process: I used squares of electrical tape to retain the machine screws, so that I could flip the thing around while I was assembling layers on top before threading on the nuts. And speaking of that, here are the rest of the pieces in place:\r\n\r\n<div id=\"attachment_850\" style=\"width: 650px\" class=\"wp-caption alignnone\">\r\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-00.36.29.jpg\"><img class=\"size-large wp-image-850\" title=\"Further layers bolted into the stack\" alt=\"Further layers bolted into the stack\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-00.36.29-1024x768.jpg\" width=\"640\" height=\"480\" /></a><p class=\"wp-caption-text\">\r\n    Further layers bolted into the stack\r\n  </p>\r\n</div>\r\n\r\nThe middle two layers cradling the sides of the LCD panel alternate between long sides / short top and long top / short sides, providing a bit more stability in the way they overlap. The top layer is long sides / short top, with a bit more width to cover the 5mm or so of the LCD panel&#8217;s bezel area.\r\n\r\nImmediately behind the LCD panel is a layer with a cut-out to provide space for machine screws for the VESA mount, and a pocket through which to route the LVDS cable to the control board. And the final two layers form the actual VESA mount and complete the exit route for the LVDS cable.\r\n\r\n<div style=\"width: 650px\" class=\"wp-caption alignnone\">\r\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-20.44.09.jpg\"><img title=\"Video control board bolted onto the back\" alt=\"Video control board bolted onto the back\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-20.44.09-1024x768.jpg\" width=\"640\" height=\"480\" /></a><p class=\"wp-caption-text\">\r\n    Video control board bolted onto the back\r\n  </p>\r\n</div>\r\n\r\nAnd finally, here&#8217;s the video control board on the back. Rather than make a full box for the board, I just sandwiched it with machine screws between acrylic layers and nylon spacers. Then, I bolted that whole mess onto the back layers.\r\n\r\nMidway through this process, I switched from Home Depot to [a family-owned hardware store][7] a few blocks from my house. I think they recognize me as a regular now after repeat visits for Dremel bits, screws, and a pile of other miscellanea.\r\n\r\n### <span id=\"Mounting_the_mess_to_the_DAVE\">Mounting the mess to the DAVE</span>\r\n\r\nThe VideoSecu VESA mount went onto the IKEA DAVE rather crudely with a pair of long wood screws. It feels pretty solid, but the screws stab treacherously out through the bottom. I&#8217;ll need to address that someday, probably after they stab me in the kneecaps.\r\n\r\nAnd, as it turns out, the control board placement was a mistake. Once I got the VESA arm screwed onto the IKEA DAVE, there wasn&#8217;t enough room to connect the power and an HDMI cable to the board. Or rather, there was just enough room to do so and inadvertently destroy an HDMI cable after a few hours of the monitor&#8217;s weight resting on it. I guess the good news is that the cable went before the solder joints on the jack failed. Herp, derp.\r\n\r\nSo, I bought a new HDMI cable, unbolted the board, and stuck it onto the back with <a href=\"http://www.amazon.com/gp/product/B00004Z4A8/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=B00004Z4A8&linkCode=as2&tag=0xdecafbad01-20\" target=\"_blank\">double sided tape</a>. Here&#8217;s what the back looks like now:\r\n\r\n<div id=\"attachment_826\" style=\"width: 650px\" class=\"wp-caption alignnone\">\r\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-05-00.28.14.jpg\"><img class=\"size-large wp-image-826\" title=\"LCD enclosure attached to the IKEA DAVE\" alt=\"LCD enclosure attached to the IKEA DAVE\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-05-00.28.14-1024x768.jpg\" width=\"640\" height=\"480\" /></a><p class=\"wp-caption-text\">\r\n    LCD enclosure attached to the IKEA DAVE, featuring bonus <a href=\"http://www.flickr.com/photos/deusx/tags/cheddars/\" target=\"_blank\">Cheddars</a> appearance\r\n  </p>\r\n</div>\r\n\r\nI also used the same tape to attach the button board to the front of the enclosure.\r\n\r\n<div id=\"attachment_853\" style=\"width: 650px\" class=\"wp-caption alignnone\">\r\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-09-23.20.43.jpg\"><img class=\"size-large wp-image-853\" alt=\"Button board on front\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-09-23.20.43-1024x768.jpg\" width=\"640\" height=\"480\" /></a><p class=\"wp-caption-text\">\r\n    Button board on front\r\n  </p>\r\n</div>\r\n\r\nOverall, this thing works pretty much exactly as I&#8217;d imagined it. I <a href=\"http://pcpartpicker.com/p/z3mE\" target=\"_blank\">built a PC</a> in a <a href=\"http://icrontic.com/article/fractal-design-node-304-case-review\" target=\"_blank\">Fractal Node 304</a> mini-ITX case, and hid that under the coffee table. I bundled the cables together and used velcro wraps to bind them to the DAVE, and <a href=\"http://www.rabbit.org/faq/sections/rabbit-proofing.html#cords\" target=\"_blank\">some spiral wraps to bunny-proof</a> them as much as possible.\r\n\r\n<div id=\"attachment_855\" style=\"width: 650px\" class=\"wp-caption alignnone\">\r\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-09-23.38.29.jpg\"><img class=\"size-large wp-image-855\" alt=\"Cheddars just loves my new couch PC\" src=\"http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-09-23.38.29-1024x768.jpg\" width=\"640\" height=\"480\" /></a><p class=\"wp-caption-text\">\r\n    <a href=\"http://www.flickr.com/photos/deusx/tags/cheddars/\" target=\"_blank\">Cheddars</a> just loves my new couch PC. Or, maybe she wants dinner.\r\n  </p>\r\n</div>\r\n\r\n### <span id=\"What8217s_next\">What&#8217;s next?</span>\r\n\r\nThis monitor is ugly if you look at it too closely. I slipped a bit with the acrylic cutter and left some obvious gouges, and the layers have a grubby patina of scratches just from clumsy handling throughout the process. Basically, it&#8217;s very, very obviously hand-made by a guy who writes software for a living and hasn&#8217;t touched a power tool for more than 5 minutes since high school shop class.\r\n\r\nBut, I think some really valuable things came out of this first attempt: It took me a bit to work through how to mount the LCD panel and route the cable out the back in a way that didn&#8217;t put stress on the wires or the connectors. There was a lot of fudge factor in getting the VESA mount alignment just right. And, there was also that HDMI cable I wrecked by botching the control board placement. Beyond all that, though, the basic idea worked.\r\n\r\nSo, I&#8217;m already thinking about v2.0 and making friends over at <a href=\"http://www.i3detroit.com/\" target=\"_blank\">i3Detroit</a> who can drive <a href=\"http://i3detroit.com/wi/index.php?title=Laser_Cutting_and_Etching\" target=\"_blank\">a laser cutter</a>. I&#8217;m checking out <a href=\"http://www.ponoko.com/starter-kits/inkscape\" target=\"_blank\">Inkscape and Ponoko</a>. I&#8217;d also like to find some better materials &#8211; maybe aluminum for the front bezel and back panel, and maybe drop a layer from the stack. It would be really nice to get a much cleaner look and drop some weight. Also, an upgrade to this cheap VESA mount would be keen &#8211; I can&#8217;t *quite* get all the adjustments I&#8217;d like.\r\n\r\nOverall, this thing works, and that makes me pretty happy. In the beginning, I had really hoped to just find someone else had made this exact thing &#8211; maybe on Thingiverse. But, no such luck. This <a href=\"http://www.instructables.com/id/Laptop-to-Desktop-Conversion/\" target=\"_blank\">&#8220;Laptop-to-Desktop&#8221; Instructable</a> is pretty close, but not entirely what I needed. I guess DIY high-res LCD monitors are just not a thing. But, maybe this post and a possible v2.0 post in the future might come in handy for someone else.\r\n\r\n [1]: http://blog.lmorchard.com/2013/01/21/gaming-from-the-orchard-house-couch\r\n [2]: http://blog.lmorchard.com/2013/01/21/gaming-from-the-orchard-house-couch#Laptop_decapitation\r\n [3]: http://blog.lmorchard.com/wp-content/uploads/2013/01/couch-gaming-2a-pc.png\r\n [4]: http://blog.lmorchard.com/wp-content/uploads/2013/02/2013-02-03-23.33.12.jpg\r\n [5]: http://www.amazon.com/gp/product/B000ID7QNI/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=B000ID7QNI&linkCode=as2&tag=0xdecafbad01-20 \"VideoSecu Articulating TV Wall Mount Bracket for VESA 100 LCD LED Flat Screen Monitor TV 1E9\"\r\n [6]: http://www.amazon.com/gp/product/B000ID7QNI/ref=as_li_ss_il?ie=UTF8&camp=1789&creative=390957&creativeASIN=B000ID7QNI&linkCode=as2&tag=0xdecafbad01-20\r\n [7]: http://frentzandsons.com/content/default.htm",
    "parentPath": "../blog.lmorchard.com/posts/archives/2013",
    "path": "2013/02/10/building-my-couch-computing-station",
    "thumbnail": "http://blog.lmorchard.com/wp-content/uploads/2013/01/couch-gaming-2a-pc.png",
    "summary": "\n\n<p>Remember when I posted about <a href=\"http://blog.lmorchard.com/2013/01/21/gaming-from-the-orchard-house-couch\">gaming from the Orchard House couch</a>? The key part was figuring out how to get <a href=\"http://blog.lmorchard.com/2013/01/21/gaming-from-the-orchard-house-couch#Laptop_decapitation\">a laptop-quality LCD monitor working in the living room</a>, preferably attached to my trusty IKEA DAVE. Well, despite my best attempts at ruining my materials and tools, I managed to get it built!</p>\n",
    "prevPostPath": "2013/02/21/kumascript",
    "nextPostPath": "2013/01/23/naming-conventions"
  }
]