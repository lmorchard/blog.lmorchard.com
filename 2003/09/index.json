[
  {
    "comments_archived": true,
    "date": "2003-09-29T17:48:28.000Z",
    "layout": "post",
    "title": "Dynamic polling times for news aggregators, II",
    "wordpress_id": 484,
    "wordpress_slug": "dynamic-polling-freq-too",
    "wordpress_url": "http://www.decafbad.com/blog/?p=484",
    "year": "2003",
    "month": "09",
    "day": "29",
    "isDir": false,
    "slug": "dynamic-polling-freq-too",
    "postName": "2003-09-29-dynamic-polling-freq-too",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/09/29/dynamic-polling-freq-too",
    "summary": "<p>\nOkay, so that <a href=\"http://www.decafbad.com/blog/tech/dynamic_feed_scan_times.html\">thing with the SQL</a> I did Friday?\nI'm not exactly sure what I was thinking with it.  I was doing something\nthat seems really odd now, trying to collect counts of new items together\nby hour, then averaging those hourly counts across a week.  Instead, I'm\ntrying this now:\n</p>\n\n<pre>SELECT\n  source,\n  'update_period' AS name,\n  round(min(24,max(1,(max(1,(iso8601_to_epoch(max(created)) -\n    max(now() - (7*24*60*60), iso8601_to_epoch(min(created)))) /\n   (60*60))) / count(id))),2) AS value\nFROM\n  items\nWHERE\n  created &gt;= epoch_to_iso8601(now() - (7*24*60*60)) \nGROUP BY\n  source</pre>\n\n<p>\nThis bit of SQL, though still ugly, is much simpler.  This leaves out\nthe subselect, which I think I might have been playing with in order\nto build a little graph display of new items over time by source.  What\nthe above does now is to get an average time between new items for the\npast week, with a minimum of an hour, and a maximum of a day.  This\nseems to be working much better.\n</p>\n\n<p>\nAn alternate algorithm I've been playing with was suggested in\n<a href=\"http://www.decafbad.com/comments/tech/dynamic_feed_scan_times/#comment-aofdehdefioofcb\">a comment</a>\nby <a href=\"http://24.102.209.201/weblogs/ben/\">Gnomon</a>,\ninspired by TCP/IP's Additive Increase / Multiplicative Decrease.\nWith this, I subtract an hour from the time between polls when a\npoll finds new items, and then multiply by 2 every time a poll\ncomes up with nothing new.\n</p>\n\n<p>\nUsing the average of new items over time lessens my pummeling\nof servers per hour, but the second approach is even lighter\non polling since it's biased toward large leaps backing off\nfrom polling when new items are not found.  I'll likely be trading\noff between the two to see which one seems to work best.\n</p>\n\n<p>\nHoping that, after playing a bit, I'll settle on one and my\naggregator will play much nicer with feeds, especially once\nI get the HTTP client usage to correctly use things like\nlast-modified headers and ETags.  There's absolutely no reason\nfor a news aggregator to poll a feed every single hour of a day,\nunless you're monitoring a feed that's mostly quiet, except\nfor emergencies.  In that case, well, a different polling\nalgorithm is needed, or maybe an instant messaging or pub/sub\narchitecture is required.\n</p>\n\n<p>\n<b>Update:</b> As <a href=\"http://24.102.209.201/weblogs/ben/\">Gnomon</a>\nhas corrected me in comments, I've got the AIMD algorithm mixed up.\nWhat I really should be doing is making quick jumps up in polling\nfrequency in response to new items (multiplicative decrease of\npolling period) and creeping away in response to no new items\n(additive increase of polling period).  As he notes, this approach\nshould make an aggregator jump to attention when clumps of new\nposts come in, and gradually get bored over periods of silence.\nI've adjusted my code and will be tinkering with it.\n</p>\n\n<p>\nAlso, although <a href=\"http://24.102.209.201/weblogs/ben/\">Gnomon</a> makes\na good point that bloggers and their posting habits are not easily\nsubject to statistical analysis,\nI've further refined my little SQL query to catch sources\nwhich haven't seen any updates during the week (or ever):\n</p>\n\n<pre>SELECT \n  id as source,\n  'update_period' AS name,\n  round(min(24,max(1,coalesce(update_period,24)))) AS value\nFROM sources\nLEFT JOIN (\n     SELECT\n      source AS source_id,\n            (iso8601_to_epoch(max(created)) -\n              max(\n                now()-(7*24*60*60),\n                iso8601_to_epoch(min(created))\n              )\n            ) / (60*60) / count(id)\n        AS update_period\n    FROM items\n    WHERE created &gt;= epoch_to_iso8601(now() - (7*24*60*60)) \n    GROUP BY source\n) ON sources.id=source_id</pre>\n\n<p>\nAlso, in case anyone's interested, I've checked <a href=\"http://www.decafbad.com/cvs/dbagg/lib/dbagg/scan.py?rev=HEAD&amp;content-type=text/vnd.viewcvs-markup\">all the above</a>\ninto CVS.  This beastie's far from ready for prime time, but it\nmight be interesting to someone.\n</p>\n",
    "prevPostPath": "2003/10/01/mailbucket-feeds",
    "nextPostPath": "2003/09/26/dynamic-feed-scan-times"
  },
  {
    "comments_archived": true,
    "date": "2003-09-26T02:45:29.000Z",
    "layout": "post",
    "title": "Dynamic feed polling times for news aggregators",
    "wordpress_id": 483,
    "wordpress_slug": "dynamic-feed-scan-times",
    "wordpress_url": "http://www.decafbad.com/blog/?p=483",
    "year": "2003",
    "month": "09",
    "day": "25",
    "isDir": false,
    "slug": "dynamic-feed-scan-times",
    "postName": "2003-09-25-dynamic-feed-scan-times",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/09/26/dynamic-feed-scan-times",
    "summary": "<p>Today, <a href=\"http://www.decafbad.com/cvs/dbagg/&quot;\">my aggregator</a> got\nthe following SQL worked into its <a href=\"http://www.decafbad.com/cvs/dbagg/lib/dbagg/scan.py?rev=HEAD&amp;content-type=text/vnd.viewcvs-markup\">feed poll scheduling machinery</a>:</p>\n\n<pre>SELECT id as source,\n       'update_period' as name,\n       max(1, 1/max((1.0/24.0),\n                    sum(update_count)/(7*24))) AS value \nFROM sources \nLEFT JOIN (\n    SELECT source AS count_id,\n                round(iso8601_to_epoch(created)/(60*60)) AS hour, \n                count(id) AS update_count \n    FROM items \n    WHERE created&gt;epoch_to_iso8601(now()-(7*(24*60*60))) \n    GROUP BY hour\n) ON id=count_id\nGROUP BY source\nORDER BY value</pre>\n\n<p>\nIt's likely that this is really nasty, but I have only a street-level\nworking knowledge of SQL.  Also, a few of the date functions are\nspecific to how I've <a href=\"http://pysqlite.sourceforge.net/documentation/pysqlite/node10.html#SECTION004231000000000000000\">extended sqlite in Python</a>.  It works though, and\nwhat it does is this:\n</p>\n\n<p>\nFor each feed to which I'm subscribed, work out\nan average time between updates for the past week, with a maximum\nperiod of 24 hours and a minimum of 1 hour.\n</p>\n\n<p>\nMy aggregator does this daily, and uses the results to determine how\nfrequently to schedule scans.  In this way, it automatically backs off\non checking feeds which update infrequently, and ramps up its polling\nof more active feeds.  This shortens my feed downloading and scanning\ntime, and is kinder in general to everyone on my subscription list.\n</p>\n\n<p>\nNext, among other things, I have to look into making sure that the\nHTTP client parts of this beast pass all the\n<a href=\"http://diveintomark.org/tests/client/http/\">aggregator client\nHTTP tests</a> that <a href=\"http://diveintomark.org/\">Mark\nPilgrim</a> put together.\n</p>\n\n<p>\n<b>Update</b>: Well, it seemed like a good idea, anyway.  But, on\nfurther examination, it has flaws.  The most notable is that it\nassumes a polling frequency of once per hour.  This works right up\nuntil I start changing the polling frequency with the results of the\ncalculation.  I haven't poked at it yet, but maybe if I take this\ninto account, it'll be more accurate.\n</p>\n\n<p>\nOn the other hand, I've also been thinking about a much simpler\napproach to ramping polling frequency up and down:  Start out at\na poll every hour.  If, after a poll, no new items are found,\ndouble the time until the next poll.  If new items were found,\nhalve the time until the next poll.</p>\n\n<p>\nProvide lower and upper limits to this, say between 1 hour and 1\nweek.  Also, consider the ramp up and ramp down factor as a variable\nsetting too.  Instead of a factor of 2, maybe try 1.5 or even 1.25 for\na more gradual change.  To go even further, I wonder if it would be\nvaluable to dynamically alter this factor itself, to try to get the\npolling time zeroed in on a realistic polling time.\n</p>\n\n<p>\nOkay.  There the simpler approach leaves simplicity.  I'm sure there's\nsome decently elegant math that could be pulled in here.  :)\n</p>\n",
    "prevPostPath": "2003/09/29/dynamic-polling-freq-too",
    "nextPostPath": "2003/09/25/atom-is-its-name-o"
  },
  {
    "comments_archived": true,
    "date": "2003-09-25T13:31:01.000Z",
    "layout": "post",
    "title": "Atom is its Name-O?",
    "wordpress_id": 482,
    "wordpress_slug": "atom-is-its-name-o",
    "wordpress_url": "http://www.decafbad.com/blog/?p=482",
    "year": "2003",
    "month": "09",
    "day": "25",
    "isDir": false,
    "slug": "atom-is-its-name-o",
    "postName": "2003-09-25-atom-is-its-name-o",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/09/25/atom-is-its-name-o",
    "summary": "<blockquote cite=\"http://www.imc.org/atom-syntax/mail-archive/msg00571.html\">I would like to propose, nay, admonish, that the name of the format and spec\nshould be Atom, that the current naming vote should be killed, and we should\nmove on to grander things without the auspices of \"what's it called?!\" over\nour heads. This has been going on far too long.</blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://www.imc.org/atom-syntax/mail-archive/msg00571.html\">Morbus Iff: 'Atom' Should Be It's Name, and It's Name Was Atom</a></cite></small></div>\n\n<p>I haven't been anywhere near the epicenter of Atom/Pie/Echo much,\nso this is mostly a 'me too' kind of posting.  But, you know, as an\ninterested hacker waiting for dust to settle before I start paying\nmuch attention, the decision on a name, as superficial as it is,\nseems telling to me.</p>\n\n<p>On one hand, I could take it to be representative of what's going\non inside the project as a whole.  (If they can't settle on a name,\nhow can they settle on what's included in the spec?)  On the other hand,\nit could just be that naming the thing is the least interesting aspect\nof the project.  But I consider that because I'm a nerd, I've been\nthere, and I want to see the project thrive.  Others might not be so\ncharitable or patient. :)</p>\n\n<p><i>So just name the dang thing Atom already.</i></p>\n",
    "prevPostPath": "2003/09/26/dynamic-feed-scan-times",
    "nextPostPath": "2003/09/21/rss-feedback"
  },
  {
    "comments_archived": true,
    "date": "2003-09-21T19:54:42.000Z",
    "layout": "post",
    "title": "Feedback loops and syndication",
    "wordpress_id": 481,
    "wordpress_slug": "rss-feedback",
    "wordpress_url": "http://www.decafbad.com/blog/?p=481",
    "year": "2003",
    "month": "09",
    "day": "21",
    "isDir": false,
    "slug": "rss-feedback",
    "postName": "2003-09-21-rss-feedback",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/09/21/rss-feedback",
    "summary": "<blockquote cite=\"http://www.crn.com/weblogs/stevegillmor/2003/09/20/20.asp\"><i>Enter attention.xml. Of course it monitors my attention list, noting what feeds are in what order. Then it pays attention to what items I read, in what order, or if not, then what feeds I scan, and for how long. The results are packaged up in an attention.xml file and shipped via some transport (RSS, FTP, whatever) to Technorati. Dave has some ideas about what he will provide in return: \"If you liked these feeds and items, then here are some ones you don't know about that you may want to add to your list.\"\n\n</i><p><i>But the real power comes in a weighted return feed that works like this: OK, I see who you think is important and what posts are most relevant to your interests. Then we factor in their attention.xml lists weighted by their location on your list, average the newly weighted list based on this trusted group of \"advisors\", and return it to your aggregator, which rewrites the list accordingly.</i></p></blockquote><div class=\"credit\" align=\"right\"><small>Source: <cite><a href=\"http://www.crn.com/weblogs/stevegillmor/2003/09/20/20.asp\">Steve Gillmor's Emerging Opps</a></cite></small></div>    <p><a href=\"http://scriptingnews.userland.com/2003/09/21#When:10:08:20AM\">Dave Winer says</a> this guy’s full of shit.  I’m not sure why, or it if’s sarcasm.  In a lot of ways, what Steve Gilmore wrote about sounds like <a href=\"http://www.decafbad.com/blog/geek/syndicated_whuffie.html\">syndicating whuffie</a> and what <a href=\"http://www.teledyn.com/mt/archives/001055.html\">Gary Lawrence Murphy of TeledyN wrote</a> about republishing <span class=\"caps\">RSS</span> items read and rated from one’s news aggregator.</p><p></p>\n<pre><code>&lt;p&gt;Sounds like the next one of the next steps this tech needs to take to hit a new level of intelligence, forming a minimum-effort feedback loop from writers to readers and between readers themselves.  What did I read today, and was it interesting? What did you read today, and was it interesting?  What did we both read and both find interesting?  What did you read, and find interesting, that I didn&amp;#8217;t read and &lt;strong&gt;might&lt;/strong&gt; find interesting?  And then, back around to the author again, what of your writings was found very interesting, and (maybe) by whom?&lt;/p&gt;\n</code></pre>\n",
    "prevPostPath": "2003/09/25/atom-is-its-name-o",
    "nextPostPath": "2003/09/19/flash-hates-progressive-jpeg"
  },
  {
    "comments_archived": true,
    "date": "2003-09-19T18:28:23.000Z",
    "layout": "post",
    "title": "Flash MX Hates Progressive JPEGs",
    "wordpress_id": 480,
    "wordpress_slug": "flash-hates-progressive-jpeg",
    "wordpress_url": "http://www.decafbad.com/blog/?p=480",
    "year": "2003",
    "month": "09",
    "day": "19",
    "isDir": false,
    "slug": "flash-hates-progressive-jpeg",
    "postName": "2003-09-19-flash-hates-progressive-jpeg",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/09/19/flash-hates-progressive-jpeg",
    "summary": "<p>\nOkay, I may be the last person fiddling with Flash to\ndiscover this, but here's what I've learned today:\n</p>\n<p>\n<a href=\"http://www.macromedia.com/support/flash/ts/documents/cant_load_jpg.htm\"><b>Flash MX hates progressive JPEGs.</b></a>\n</p>\n<p>\nFrom the above: \"<i>The Macromedia Flash Player does not have a\ndecompressor for progressive JPEG images, therefore files of this type\ncannot be loaded dynamically and will not display when using the\nloadMovie action.</i>\"\n</p>\n<p>\nThis would have been nice to know, hours ago.  Or maybe fixed in\nthe past year or so since the above linked tech note.  See, although\nI'm a Jack of a lot of Trades, I don't really pay attention much\nto things like JPEGs and their progressive natures.  It wasn't\nuntil I finally started randomly clicking buttons on and off in\nMacromedia Fireworks while exporting a test JPEG that I finally\nnarrowed down the problem.\n</p>\n<p>\nThis was after a day worth of examining ActionScript, XML data,\nHTTP headers, and a mess of other random dead ends.  And a lot of\nlast-ditch random and exhaustive twiddling of checkboxes and\noptions.\n</p>\n<p>\n<b>Then</b>, once I had the words I\nwouldn't have had unless I already knew what my problem was, a Google search for\n\"<a href=\"http://www.google.com/search?q=flash+progressive+jpeg&amp;ie=UTF-8&amp;oe=UTF-8\">flash progressive jpeg</a>\"\ngot me all kinds of info.\n</p>\n<p>\nProblem is, the JPEGs supplied to the particular Flash app on which\nI'm hacking come from a random assortment of people working through\na content management system on the backend.  They upload them\nwith a form in their browser, and this Flash app gets a URL to the\nimage via an XML doc it loads.  Me, I'm probably in bed when this\nhappens.  I'd love to have tested every one... er, rather, no I\nwouldn't.\n</p>\n<p>\nSo... Now I just have to figure out how to get all these people\nto start making sure that their JPEGs aren't progressive.  Hmph.\n</p>\n<p>\nI can only hope that this message gets indexed and maybe provides\nmore triangulation for some other poor sucker in the future.\n</p>\n",
    "prevPostPath": "2003/09/21/rss-feedback",
    "nextPostPath": "2003/09/12/dont-copy-software"
  },
  {
    "comments_archived": true,
    "date": "2003-09-12T19:35:25.000Z",
    "layout": "post",
    "title": "Don't copy that floppy, or cracked software strikes back",
    "wordpress_id": 479,
    "wordpress_slug": "dont-copy-software",
    "wordpress_url": "http://www.decafbad.com/blog/?p=479",
    "year": "2003",
    "month": "09",
    "day": "12",
    "isDir": false,
    "slug": "dont-copy-software",
    "postName": "2003-09-12-dont-copy-software",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/09/12/dont-copy-software",
    "summary": "<pre>* Orangerobot uses cracked software.  I will respond to the following\ncommands: !ame &lt;msg&gt;, !amsg &lt;msg&gt;, !quit &lt;msg&gt;,\n!open_cd, !switch_my_mouse_buttons\n\n&lt;deusx&gt; Hmm.  If what Orangerobot just emoted is true, that's\nfunny as hell.\n\n&lt;deusx&gt; !amsg Wang!\n\n&lt;Orangerobot&gt; Wang!\n\n&lt;AnitaR&gt; and what's the purpose?\n\n&lt;deusx&gt; AnitaR: Of the message from Orangerobot?\n\n&lt;AnitaR&gt; yes\n\n&lt;AnitaR&gt; must be part of the joke I'm not getting\n\n&lt;AnitaR&gt; yet\n\n* Orangerobot uses cracked software.  I will respond to the following\ncommands: !ame &lt;msg&gt;, !amsg &lt;msg&gt;, !quit &lt;msg&gt;,\n!open_cd, !switch_my_mouse_buttons\n\n&lt;deusx&gt; AnitaR: Could be a joke, but it appears that this person\nis using pirated software that's detected its illegitimacy and is\nallowing us to manipulate that user's computer.\n\n&lt;adamhill&gt; or its a social experiment by the person behind OR :)\n\n&lt;deusx&gt; adamhill: Or that. :)  Either way, it's fun\n\n&lt;AnitaR&gt; I'm glad it isn't one of those experiments that tests\nhow strong a shock we'll give the owner\n\n&lt;Argyle&gt; ?def orangerobot\n\n&lt;deusx&gt; Some googling points to this software:\nhttp://www.klient.com\n\n&lt;deusx&gt; !switch_my_mouse_buttons\n\n&lt;deusx&gt; !ame likes cheddar cheese.\n\n* Orangerobot likes cheddar cheese.\n\n&lt;adamhill&gt; ?learn Orangerobot is either a person using cracked\nsoftware or a social experiment by a demented psych student\n\n&lt;jibot&gt; I understand now, Dr. Chandra; orangerobot is either a\nperson using cracked software or a social experiment by a demented\npsych student\n\n&lt;deusx&gt; !open_cd\n\n&lt;deusx&gt; okay, I'm done.\n\n* Orangerobot uses cracked software.  I will respond to the following\ncommands: !ame &lt;msg&gt;, !amsg &lt;msg&gt;, !quit &lt;msg&gt;,\n!open_cd, !switch_my_mouse_buttons\n\n&lt;deusx&gt; !quit hush.\n\n&lt;-- Orangerobot has quit (\"hush.\")</pre>\n",
    "prevPostPath": "2003/09/19/flash-hates-progressive-jpeg",
    "nextPostPath": "2003/09/06/wiki-apis"
  },
  {
    "comments_archived": true,
    "date": "2003-09-06T17:50:45.000Z",
    "layout": "post",
    "title": "An API for Wikis?  Here's one.",
    "wordpress_id": 478,
    "wordpress_slug": "wiki-apis",
    "wordpress_url": "http://www.decafbad.com/blog/?p=478",
    "year": "2003",
    "month": "09",
    "day": "06",
    "isDir": false,
    "slug": "wiki-apis",
    "postName": "2003-09-06-wiki-apis",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/09/06/wiki-apis",
    "summary": "<p><br><br></p>\n<blockquote><i>Some folks are experimenting with using Wiki to build websites.  I particularly like what Matt Haughey did with PHPWiki and a bit of <a href=\"http://www.decafbad.com/twiki/bin/view/Main/CSS\">CSS</a> magic dust.  Looks nice, eh?  [Via Seb's Wikis are Ugly? post at Corante]\n<br><br>\nJanne Jalkanen's Wiki-based Weblog is interesting too.  Hmm.  Maybe blog API(s) can be used for Wikis too.  That reminds me, shouldn't Wiki formatted text have their own MIME type?  Is there one?  \"text/wiki\"?  For now, different dialects of Wiki formatting rules will have to be accounted for like \"text/wiki+moinmoin\".</i></blockquote><div class=\"credit\" align=\"right\"><small>Source: <cite><a href=\"http://www.docuverse.com/blog/donpark/2003/09/05.html#a859\">Don Park's Daily Habit</a></cite></small></div><a href=\"http://www.docuverse.com/blog/donpark/2003/09/05.html#a859\">\n<br><br>\nIt's been a while since I last worked on it, but I did implement an\nXML-RPC API on a few wikis, called </a><a href=\"http://www.decafbad.com/twiki/bin/view/Main/XmlRpcToWiki\">XmlRpcToWiki</a>.  Janne Jalkanen\ndid a lot of work toward the same interface with JSPWiki.  I use this API\nin the linkage between my blog and the wiki on this site.  Now that\nI've drifted away from <a href=\"http://www.decafbad.com/twiki/bin/view/Main/XmlRpc\">XmlRpc</a> a bit and am more in favor of simpler\n<a href=\"http://www.decafbad.com/twiki/bin/view/Main/REST\">REST</a>-ish web service APIs, I'd like to see something more toward that\nend.  Seems like a lot of people are discovering or rediscovering\nwikis since the introduction of Sam Ruby's wiki for Atom/Echo/Pie\nwork, so it's interesting to see a lot of things come up again like\ngrousing about APIs and mutant wiki-format offshoots and standards.\n",
    "prevPostPath": "2003/09/12/dont-copy-software",
    "nextPostPath": "2003/09/05/superworm"
  },
  {
    "comments_archived": true,
    "date": "2003-09-05T15:10:53.000Z",
    "layout": "post",
    "title": "White Hat Worms and robots.txt?",
    "wordpress_id": 477,
    "wordpress_slug": "superworm",
    "wordpress_url": "http://www.decafbad.com/blog/?p=477",
    "year": "2003",
    "month": "09",
    "day": "05",
    "isDir": false,
    "slug": "superworm",
    "postName": "2003-09-05-superworm",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/09/05/superworm",
    "summary": "<blockquote cite=\"http://www.gulufuture.com/superworm.htm\"><i>Or maybe it's time to release our own Defender.A worm which could invasively close down the relevant \"holes\" in Internet security. A defensive worm could use standard intrusion tactics for benign result. For example, it could worm it's way into Windows XP computers and get the owner's permission to turn their firewalls on. It could survey open TCP/IP ports and offer to close them.</i></blockquote><div class=\"credit\" align=\"right\"><small>Source: <cite><a href=\"http://www.gulufuture.com/superworm.htm\">Superworm To Storm The Net On 9/11</a></cite> (via <a href=\"http://www.kurzweilai.net/news/news_single.html?id=2398\">KurzweilAI</a>)</small></div>    <p>So, anger is my first reaction to the idea of any unwelcome visitors on any of my machines, well intentioned or not.  I’m sure that there aren’t many who wouldn’t feel the same way.  But, although a lot of us try to keep up on patches and maintain decent security, there’s the “great unwashed masses” who just want to “do email“.</p>\n\n<pre><code>&lt;p&gt;On one hand, it&amp;#8217;s easy to say, &amp;#8220;Tough.  Learn the care &amp;#38; feeding of your equipment.&amp;#8221;  Yeah, as if that will help or get any response from all the people who&amp;#8217;ve bought into &lt;span class=\"caps\"&gt;AOL&lt;/span&gt; and have been reassured for years that computers are friendly and easy beasts (despite their intuitions to the contrary).  Hell, I&amp;#8217;d bet that, more often than not, the same person who gets regular oil changes and tune-ups for the car has no idea how to do the equivalent for a computer (or that it even needs it).  Cars have been positioned differently than computers.  No one expects a Spanish Inquisition when they live in a virtual preschool of a user interface with large and colorful buttons and happy smiling faces.  They know there&amp;#8217;s some voodoo going on underneath, but the UI tells them that it&amp;#8217;s nothing to worry about (until &lt;a href=\"http://www.decafbad.com/blog/geek/not_working.html\"&gt;it isn&amp;#8217;t working&lt;/a&gt;).&lt;/p&gt;\n\n&lt;p&gt;Now if the problem was just that stupid users ended up with broken computers, there&amp;#8217;d be no problem.  But, like cars with problems waiting to happen (like worn down tires), their users become a hazard to others.  Unlike cars, however, the problems of stupid users&amp;#8217; computers are contagious and self-replicating: every tire blowout becomes a 1000 car pileup.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#8217;s like everyone sits on their recliners watching TV in their houses; not even realizing that there are doors to lock; not even hearing the intruders rummaging through the fridge in the kitchen; and certainly not knowing that there&amp;#8217;s a guy sleeping on the sofa at night working by day to let his army of clones into the neighbor&amp;#8217;s houses.&lt;/p&gt;\n\n&lt;p&gt;So, about what about vigilante &amp;#8220;white hat&amp;#8221; worms?  Wouldn&amp;#8217;t it be nice if there was a guy wandering the neighborhood locking door for the ignorant?  Wouldn&amp;#8217;t it be nice if there was a truck driver on the road that forced cars with bald tires off to the side for free tire replacement?  Okay, maybe that&amp;#8217;s a bit whacky, but then again, people with bald tires aren&amp;#8217;t causing 1000 car pileups.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#8217;m thinking that &amp;#8220;white hat&amp;#8221; virii and worms are one of the only things that will work, since I&amp;#8217;m very pessimistic about the user culture changing to be more responsible.  Though, what about a compromise?  Install a service or some indicator on every network-connected machine, somewhat like &lt;a href=\"http://www.robotstxt.org/wc/robots.html\"&gt;robots.txt&lt;/a&gt; , which tells friendly robots where they&amp;#8216;re welcome and where they&amp;#8216;re not.  Set this to maximum permissiveness for white hat worms as a default.  The good guys infect, fix, and self-destruct unless this indicator tells them to stay out.  Then, all of us who want to take maintenance into our own hands can turn away the friendly assistance of white hat worms.  It&amp;#8217;s an honor system, but the white hats should be the honorable ones anyway.  The ones which ignore the no-worms-allowed indicator are hostile by definition.&lt;/p&gt;\n\n&lt;p&gt;So, then, the internet develops an immune system.  Anyone can release a white hat worm as soon as they find an exploit to be nullified, and I&amp;#8217;m sure there are lots of geeks out there who&amp;#8217;d jump at the chance to play with worms and virii in a constructive way.  And if you want to opt-out of the system, go for it.  Hell&amp;#8230;  think of this on a smaller scale as a next-gen anti-virus software.  Instead of internet-wide, just support &lt;span class=\"caps\"&gt;P2P&lt;/span&gt; networks between installations of your anti-virus product.  When it&amp;#8217;s time to close a hole, infect your network with a vaccinating update.  I doubt this would work as well as a fully open system, but might have less controversy.&lt;/p&gt;\n\n&lt;p&gt;Anyway, it&amp;#8217;s a whacky idea to a whacky problem that just might work.&lt;/p&gt;\n</code></pre>\n",
    "prevPostPath": "2003/09/06/wiki-apis",
    "nextPostPath": "2003/09/04/litany-meetings"
  },
  {
    "comments_archived": true,
    "date": "2003-09-04T14:50:58.000Z",
    "layout": "post",
    "title": "Litany against meetings, courtesy of purl",
    "wordpress_id": 476,
    "wordpress_slug": "litany-meetings",
    "wordpress_url": "http://www.decafbad.com/blog/?p=476",
    "year": "2003",
    "month": "09",
    "day": "04",
    "isDir": false,
    "slug": "litany-meetings",
    "postName": "2003-09-04-litany-meetings",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/09/04/litany-meetings",
    "prevPostPath": "2003/09/05/superworm",
    "nextPostPath": "2003/09/04/jibot-and-purl"
  },
  {
    "comments_archived": true,
    "date": "2003-09-04T12:57:55.000Z",
    "layout": "post",
    "title": "Jibot and purl, distant cousins?",
    "wordpress_id": 475,
    "wordpress_slug": "jibot-and-purl",
    "wordpress_url": "http://www.decafbad.com/blog/?p=475",
    "year": "2003",
    "month": "09",
    "day": "04",
    "isDir": false,
    "slug": "jibot-and-purl",
    "postName": "2003-09-04-jibot-and-purl",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/09/04/jibot-and-purl",
    "summary": "<blockquote cite=\"http://epeus.blogspot.com/2003_09_01_epeus_archive.html#106267649855792923\"><i><a href=\"http://jibot.joi.ito.com:8080/braindump.rpy\">What the #joiito bot knows.</a> I'm dumping it out dynamically with the Twisted webserver, which is all Python too.</i></blockquote><div class=\"credit\" align=\"right\"><small>Source: <cite><a href=\"http://epeus.blogspot.com/2003_09_01_epeus_archive.html#106267649855792923\">Epeus' epigone - Kevin Marks weblog</a></cite></small></div>    <p>While the <a href=\"irc://irc.freenode.org/%23joiito\">#joiito</a> bot is looking pretty keen, I keep wondering if anyone hacking on it has seen <a href=\"http://www.infobot.org/\">Infobot</a> ?  It’s the brains behind purl, the bot serving #perl channels on a few <span class=\"caps\">IRC</span> networks.  Jibot seems to have some funky punctuation-based commands, but purl accepts commands in formulatic english and even picks a few things up from normal channel chatter.  When I look at Kevin Marks’ dump of Jibot’s brains, I can’t help but think of the gigantic <a href=\"http://www.infobot.org/factpacks/\">factoid packs</a> available for Infobot.</p>\n",
    "prevPostPath": "2003/09/04/litany-meetings",
    "nextPostPath": "2003/09/03/another-bmblogger"
  },
  {
    "comments_archived": true,
    "date": "2003-09-03T14:59:31.000Z",
    "layout": "post",
    "title": "Another BookmarkBlogger in Python",
    "wordpress_id": 474,
    "wordpress_slug": "another-bmblogger",
    "wordpress_url": "http://www.decafbad.com/blog/?p=474",
    "year": "2003",
    "month": "09",
    "day": "03",
    "isDir": false,
    "slug": "another-bmblogger",
    "postName": "2003-09-03-another-bmblogger",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/09/03/another-bmblogger",
    "summary": "<p><br><br>\nI haven't been paying attention to my referrers as much lately,\nbut I probably should.  Because, when I do, I find things like\n<a href=\"http://www.hollytree-house.co.uk/twiki/bin/view/Main/BmBlog\" target=\"_top\">another implementation</a>\nof <a href=\"http://www.decafbad.com/twiki/bin/view/Main/BookmarkBlogger\">BookmarkBlogger</a> in Python, this one by\n<a href=\"http://www.hollytree-house.co.uk/dme/cgi-bin/blosxom.cgi/web\" target=\"_top\">David Edmondson</a>.\n<br><br>\nHis version has many fewer requirements, using only core Python\nlibraries as far as I can see.  One of these which I hadn't any idea\nexisted is\n<a href=\"http://www.usatlas.bnl.gov/~fisyak/star/public/WWW/sources/Python-2.3a1/Lib/plat-mac/plistlib.py\" target=\"_top\">plistlib</a>,\n\"a tool to generate and parse <a href=\"http://www.decafbad.com/twiki/bin/view/Main/MacOSX\">MacOSX</a> .plist files\".  When I get\nanother few round tuits, I'll likely tear out all the XPath use\nin my version and replace it with this.  Bummer.  And here I thought\nI was all clever using the XPaths like that in Python :)</p>\n",
    "prevPostPath": "2003/09/04/jibot-and-purl",
    "nextPostPath": "2003/09/02/cl-to-rss"
  },
  {
    "comments_archived": true,
    "date": "2003-09-02T17:44:18.000Z",
    "layout": "post",
    "title": "ChangeLog to RSS web service",
    "wordpress_id": 473,
    "wordpress_slug": "cl-to-rss",
    "wordpress_url": "http://www.decafbad.com/blog/?p=473",
    "year": "2003",
    "month": "09",
    "day": "02",
    "isDir": false,
    "slug": "cl-to-rss",
    "postName": "2003-09-02-cl-to-rss",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/09/02/cl-to-rss",
    "thumbnail": "http://www.decafbad.com/images/xml.gif",
    "summary": "<p><br><br>\nHanging out on <a href=\"irc://irc.freenode.org/joiito\">joiito on IRC</a> today,\nI read <a href=\"http://www.jspwiki.org/Wiki.jsp?page=JanneJalkanen\" target=\"_top\">Ecyrd</a> asking\naround about any tools to present <a href=\"http://www.gnu.org/prep/standards_42.html\" target=\"_top\">GNU-style changelogs</a>\nas an <a href=\"http://www.decafbad.com/twiki/bin/view/Main/RSS\">RSS</a> feed.  I couldn't find any, but I did find\n<a href=\"http://people.redhat.com/jrb/files/changelog2.py\" target=\"_top\">this changelog parser</a>, apparently\nby <a href=\"http://people.redhat.com/jrb/\" target=\"_top\">Jonathan Blandford</a>.  So,\nwhen I had a few free minutes, I took some parts I had laying around, along\nwith this parser, and made this:</p>\n<ul>\n<li> <a href=\"http://www.decafbad.com/2003/08/cl2rss?cl=http%3A%2F%2Fwww.ecyrd.com%2F%7Ejalkanen%2FJSPWiki%2Fnightly%2FChangeLog\"><img src=\"http://www.decafbad.com/images/xml.gif\" border=\"0\"></a> - <a href=\"http://www.ecyrd.com/~jalkanen/JSPWiki/nightly/ChangeLog\">Changelog for JSPWiki</a>\n</li>\n<li> <a href=\"http://www.decafbad.com/2003/08/cl2rss.txt\" target=\"_top\">Source code for cl2rss</a>\n</li>\n</ul>\nThis is at the \"it works\" stage.  It needs much work in what it presents\nin an <a href=\"http://www.decafbad.com/twiki/bin/view/Main/RSS\">RSS</a> feed, so feel free to suggest changes!\n",
    "prevPostPath": "2003/09/03/another-bmblogger",
    "nextPostPath": "2003/09/02/xsl-scraper"
  },
  {
    "comments_archived": true,
    "date": "2003-09-02T04:22:53.000Z",
    "layout": "post",
    "title": "Using web services and XSLT to scrape RSS from HTML",
    "wordpress_id": 472,
    "wordpress_slug": "xsl-scraper",
    "wordpress_url": "http://www.decafbad.com/blog/?p=472",
    "year": "2003",
    "month": "09",
    "day": "02",
    "isDir": false,
    "slug": "xsl-scraper",
    "postName": "2003-09-02-xsl-scraper",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/09/02/xsl-scraper",
    "thumbnail": "http://www.decafbad.com/images/xml.gif",
    "summary": "<p><br><br></p>\n<p>\nAfter tinkering a bit with\n<a href=\"http://www.decafbad.com/blog/geek/rss_scrape_urls2.html\" target=\"_top\">web services and XSLT-based scraping</a>\nlast week for generating <a href=\"http://www.decafbad.com/twiki/bin/view/Main/RSS\">RSS</a> from HTML, I ripped out some work I was\ndoing for <a href=\"http://www.decafbad.com/cvs/XPathScraper/\" target=\"_top\">a Java-based scraper</a> I'd started\nworking on <a href=\"http://www.decafbad.com/blog/tech/old/ooobca.html\" target=\"_top\">last year</a> and\nthrew together a kit of XSLT files that does most everything I was trying\nto do.\n</p><p>\nI'm calling this kit <a href=\"http://www.decafbad.com/twiki/bin/view/Main/XslScraper\">XslScraper</a>, and there's further blurbage and download links\navaiable in the Wiki.  Check it out.  I've got shell scripts to run the stuff\nfrom as a cron job, and CGI scripts to run it all from web services.\n</p><p>\nFor quick gratification, check out these feeds:\n</p><ul>\n<li> <a href=\"http://www.decafbad.com/2003/08/tidyxslt?xsl=http%3A%2F%2Fwww.whump.com%2Fdropbox%2Fnationrss%2Fnation.xsl&amp;doc=http%3A%2F%2Fwww.thenation.com\"><img src=\"http://www.decafbad.com/images/xml.gif\" border=\"0\"></a> - <a href=\"http://www.thenation.com\">The Nation</a> (using <a href=\"http://www.whump.com/moreLikeThis/date/21/08/2003\" target=\"_top\">Bill Humphries' XSL</a>) \n</li>\n<li> <a href=\"http://www.decafbad.com/2003/08/tidyxslt?xsl=http%3A%2F%2Fwww.decafbad.com%2F2003%2F08%2Fxsl_scraper%2Fscrapers%2Fkurzweilai.xsl&amp;doc=http%3A%2F%2Fwww.kurzweilai.net%2Findex.html%3Fflash%3D1\"><img src=\"http://www.decafbad.com/images/xml.gif\" border=\"0\"></a> - <a href=\"http://www.kurzweilai.net/index.html?flash=1\">KurzweilAI.net</a>\n</li>\n<li> <a href=\"http://www.decafbad.com/2003/08/tidyxslt?xsl=http%3A%2F%2Fwww.decafbad.com%2F2003%2F08%2Fxsl_scraper%2Fscrapers%2Fjlist.xsl&amp;doc=http%3A%2F%2Fwww.jlist.com%2FUPDATES%2FPG%2F7%2F\"><img src=\"http://www.decafbad.com/images/xml.gif\" border=\"0\"></a> - <a href=\"http://www.jlist.com/\">J-List -- You've got a friend in Japan!</a>\n</li>\n<li> <a href=\"http://www.decafbad.com/2003/08/tidyxslt?xsl=http%3A%2F%2Fwww.decafbad.com%2F2003%2F08%2Fxsl_scraper%2Fscrapers%2Fumich-jobs.xsl&amp;doc=http%3A%2F%2Fwebsvcs.itd.umich.edu%2Fjobnet%2Fnew_postings_byjobfamily.php\"><img src=\"http://www.decafbad.com/images/xml.gif\" border=\"0\"></a> - <a href=\"http://websvcs.itd.umich.edu/jobnet/\">New JOBS at the University of Michigan (By Job Family)</a>\n</li>\n</ul>\n<p></p>\n",
    "prevPostPath": "2003/09/02/cl-to-rss",
    "nextPostPath": "2003/09/01/switched-to-jvds"
  }
]