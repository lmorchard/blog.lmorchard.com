[
  {
    "comments_archived": true,
    "date": "2003-10-29T14:14:03.000Z",
    "layout": "post",
    "title": "Panther, forgotten connections, and no more lockups",
    "wordpress_id": 500,
    "wordpress_slug": "panther-and-forgotten-connections",
    "wordpress_url": "http://www.decafbad.com/blog/?p=500",
    "year": "2003",
    "month": "10",
    "day": "29",
    "isDir": false,
    "slug": "panther-and-forgotten-connections",
    "postName": "2003-10-29-panther-and-forgotten-connections",
    "html": "<div align=\"center\"><img src=\"http://www.decafbad.com/blog-images/server-disconnect.gif\" /></div>\n<p>\nOh yeah, and, just noticed this upon arriving at work.  In the past 6 months, forgotten mounted shares and the subsequent filesystem-related lockups and beach-ball-spinnings in Jaguar have been my sole reason for reboot.\n</p>\n<p>\nAs it would happen, I forgot to disconnect from shares on my home LAN again, and awoke my PowerBook on the work LAN.  Before Panther, this would have lead to a reboot within 10 minutes.  This time, it did the Right Thing.  Yay hooray!\n</p>\n<p>\nOh, and the Grab application works for individual windows now-- something which seemed to always be greyed out before.\n</p>\n<!--more-->\nshortname=panther-and-forgotten-connections\n",
    "body": "<div align=\"center\"><img src=\"http://www.decafbad.com/blog-images/server-disconnect.gif\" /></div>\r\n<p>\r\nOh yeah, and, just noticed this upon arriving at work.  In the past 6 months, forgotten mounted shares and the subsequent filesystem-related lockups and beach-ball-spinnings in Jaguar have been my sole reason for reboot.\r\n</p>\r\n<p>\r\nAs it would happen, I forgot to disconnect from shares on my home LAN again, and awoke my PowerBook on the work LAN.  Before Panther, this would have lead to a reboot within 10 minutes.  This time, it did the Right Thing.  Yay hooray!\r\n</p>\r\n<p>\r\nOh, and the Grab application works for individual windows now-- something which seemed to always be greyed out before.\r\n</p>\r\n<!--more-->\r\nshortname=panther-and-forgotten-connections\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/29/panther-and-forgotten-connections",
    "thumbnail": "http://www.decafbad.com/blog-images/server-disconnect.gif",
    "summary": "<div align=\"center\"><img src=\"http://www.decafbad.com/blog-images/server-disconnect.gif\"></div>\n<p>\nOh yeah, and, just noticed this upon arriving at work.  In the past 6 months, forgotten mounted shares and the subsequent filesystem-related lockups and beach-ball-spinnings in Jaguar have been my sole reason for reboot.\n</p>\n<p>\nAs it would happen, I forgot to disconnect from shares on my home LAN again, and awoke my PowerBook on the work LAN.  Before Panther, this would have lead to a reboot within 10 minutes.  This time, it did the Right Thing.  Yay hooray!\n</p>\n<p>\nOh, and the Grab application works for individual windows now-- something which seemed to always be greyed out before.\n</p>\n",
    "prevPostPath": "2003/11/03/reviews-in-rdf",
    "nextPostPath": "2003/10/29/late-to-the-panther-party"
  },
  {
    "comments_archived": true,
    "date": "2003-10-29T13:38:46.000Z",
    "layout": "post",
    "title": "Late to the Panther party",
    "wordpress_id": 499,
    "wordpress_slug": "late-to-the-panther-party",
    "wordpress_url": "http://www.decafbad.com/blog/?p=499",
    "year": "2003",
    "month": "10",
    "day": "29",
    "isDir": false,
    "slug": "late-to-the-panther-party",
    "postName": "2003-10-29-late-to-the-panther-party",
    "html": "<p>\nI know I'm late to the blogosphere release party for <a href=\"http://www.apple.com/macosx/\">Panther</a>, but I just got it last night and, biting the bullet, installed it with only minimal effort toward backing things up.  I intend to eventually wipe this PowerBook completely and install fresh, but I couldn't wait.  :)\n</p>\n<p>\n<a href=\"http://diveintomark.org/archives/2003/10/24/panther\">Mark Pilgrim</a> published the most definitive coverage of the beastie I've seen yet, with help of the denizens of <a href=\"http://joi.ito.com/joiwiki/IrcChannel\">#joiito</a> to manage the onslaught of readers.  So, I won't make any attempt to catalog the new things.\n</p>\n<p>\nA few impressions though:\n</p>\n<ul>\n<li><b>Everything</b> feels faster.  Windows slide around and resize like they've been waxed underneath.  Things seem to launch faster.</li>\n<li>A few small things have improved, like System Preferences quitting when I close the window, rather than hanging around waiting for me to open the window again or quit.</li>\n<li>Some third-party extension I had installed threw Finder into a launch-and-crash loop for awhile.  So, if you've yet to install, try to purge your system of extensions first.  This should be obvious, but is sometimes a surprise when it's actually a problem.</li>\n<li>Expose looked like a neat feature when I first heard of it.  I fully expected it to be slow, stuttery, and 'cute' when I finally played with it.  Now, having used it and slowly incorporating it into my usage habits, it's amazing.  Smooth and not stuttery at all, it looks like a computer interface feature from the movies.</li>\n<li>Fast user switching, where desktops rotate in and out of view, also looks like you wish it would, and seems like it's from the movies.</li>\n<li>I <b>hate</b> metal.</li>\n<li>I hate <i>metal</i>.</li>\n<li><u>I hate metal.</u></li>\n</ul>\n<p>\nThat is all.  For now.  Maybe.\n</p>\n<!--more-->\nshortname=late-to-the-panther-party\n",
    "body": "<p>\r\nI know I'm late to the blogosphere release party for <a href=\"http://www.apple.com/macosx/\">Panther</a>, but I just got it last night and, biting the bullet, installed it with only minimal effort toward backing things up.  I intend to eventually wipe this PowerBook completely and install fresh, but I couldn't wait.  :)\r\n</p>\r\n<p>\r\n<a href=\"http://diveintomark.org/archives/2003/10/24/panther\">Mark Pilgrim</a> published the most definitive coverage of the beastie I've seen yet, with help of the denizens of <a href=\"http://joi.ito.com/joiwiki/IrcChannel\">#joiito</a> to manage the onslaught of readers.  So, I won't make any attempt to catalog the new things.\r\n</p>\r\n<p>\r\nA few impressions though:\r\n</p>\r\n<ul>\r\n<li><b>Everything</b> feels faster.  Windows slide around and resize like they've been waxed underneath.  Things seem to launch faster.</li>\r\n<li>A few small things have improved, like System Preferences quitting when I close the window, rather than hanging around waiting for me to open the window again or quit.</li>\r\n<li>Some third-party extension I had installed threw Finder into a launch-and-crash loop for awhile.  So, if you've yet to install, try to purge your system of extensions first.  This should be obvious, but is sometimes a surprise when it's actually a problem.</li>\r\n<li>Expose looked like a neat feature when I first heard of it.  I fully expected it to be slow, stuttery, and 'cute' when I finally played with it.  Now, having used it and slowly incorporating it into my usage habits, it's amazing.  Smooth and not stuttery at all, it looks like a computer interface feature from the movies.</li>\r\n<li>Fast user switching, where desktops rotate in and out of view, also looks like you wish it would, and seems like it's from the movies.</li>\r\n<li>I <b>hate</b> metal.</li>\r\n<li>I hate <i>metal</i>.</li>\r\n<li><u>I hate metal.</u></li>\r\n</ul>\r\n<p>\r\nThat is all.  For now.  Maybe.\r\n</p>\r\n<!--more-->\r\nshortname=late-to-the-panther-party\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/29/late-to-the-panther-party",
    "summary": "<p>\nI know I&apos;m late to the blogosphere release party for <a href=\"http://www.apple.com/macosx/\">Panther</a>, but I just got it last night and, biting the bullet, installed it with only minimal effort toward backing things up.  I intend to eventually wipe this PowerBook completely and install fresh, but I couldn&apos;t wait.  :)\n</p>\n<p>\n<a href=\"http://diveintomark.org/archives/2003/10/24/panther\">Mark Pilgrim</a> published the most definitive coverage of the beastie I&apos;ve seen yet, with help of the denizens of <a href=\"http://joi.ito.com/joiwiki/IrcChannel\">#joiito</a> to manage the onslaught of readers.  So, I won&apos;t make any attempt to catalog the new things.\n</p>\n<p>\nA few impressions though:\n</p>\n<ul>\n<li><b>Everything</b> feels faster.  Windows slide around and resize like they&apos;ve been waxed underneath.  Things seem to launch faster.</li>\n<li>A few small things have improved, like System Preferences quitting when I close the window, rather than hanging around waiting for me to open the window again or quit.</li>\n<li>Some third-party extension I had installed threw Finder into a launch-and-crash loop for awhile.  So, if you&apos;ve yet to install, try to purge your system of extensions first.  This should be obvious, but is sometimes a surprise when it&apos;s actually a problem.</li>\n<li>Expose looked like a neat feature when I first heard of it.  I fully expected it to be slow, stuttery, and &apos;cute&apos; when I finally played with it.  Now, having used it and slowly incorporating it into my usage habits, it&apos;s amazing.  Smooth and not stuttery at all, it looks like a computer interface feature from the movies.</li>\n<li>Fast user switching, where desktops rotate in and out of view, also looks like you wish it would, and seems like it&apos;s from the movies.</li>\n<li>I <b>hate</b> metal.</li>\n<li>I hate <i>metal</i>.</li>\n<li><u>I hate metal.</u></li>\n</ul>\n<p>\nThat is all.  For now.  Maybe.\n</p>\n",
    "prevPostPath": "2003/10/29/panther-and-forgotten-connections",
    "nextPostPath": "2003/10/29/nokia-ngage-schmutz"
  },
  {
    "comments_archived": true,
    "date": "2003-10-29T13:06:02.000Z",
    "layout": "post",
    "title": "A thought about the Nokia N-Gage",
    "wordpress_id": 498,
    "wordpress_slug": "nokia-ngage-schmutz",
    "wordpress_url": "http://www.decafbad.com/blog/?p=498",
    "year": "2003",
    "month": "10",
    "day": "29",
    "isDir": false,
    "slug": "nokia-ngage-schmutz",
    "postName": "2003-10-29-nokia-ngage-schmutz",
    "html": "<p>\nAfter playing with an N-Gage, I think <a href=\"http://www.sidetalkin.com\">sidetalkin.com</a> is freakin' hillarious.  One thought on this sidetalking thing, though:\n</p>\n<p>\nAt least it keeps the screen from getting all schmutzed.  My Treo 300 screen gets absolutely filthy, due to me pressing the slab up against my head to talk.  Also, there seems to be a defect in the LCD developing, which seems to have something to do with, again, being pressed up against my face.\n</p>\n<p>\nIn most other ways, this thing looks to be a flop...  but the sidetalking thing might just not be such a bad idea.\n</p>\n<!--more-->\nshortname=nokia-ngage-schmutz\n",
    "body": "<p>\r\nAfter playing with an N-Gage, I think <a href=\"http://www.sidetalkin.com\">sidetalkin.com</a> is freakin' hillarious.  One thought on this sidetalking thing, though:\r\n</p>\r\n<p>\r\nAt least it keeps the screen from getting all schmutzed.  My Treo 300 screen gets absolutely filthy, due to me pressing the slab up against my head to talk.  Also, there seems to be a defect in the LCD developing, which seems to have something to do with, again, being pressed up against my face.\r\n</p>\r\n<p>\r\nIn most other ways, this thing looks to be a flop...  but the sidetalking thing might just not be such a bad idea.\r\n</p>\r\n<!--more-->\r\nshortname=nokia-ngage-schmutz\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/29/nokia-ngage-schmutz",
    "summary": "<p>\nAfter playing with an N-Gage, I think <a href=\"http://www.sidetalkin.com\">sidetalkin.com</a> is freakin&apos; hillarious.  One thought on this sidetalking thing, though:\n</p>\n<p>\nAt least it keeps the screen from getting all schmutzed.  My Treo 300 screen gets absolutely filthy, due to me pressing the slab up against my head to talk.  Also, there seems to be a defect in the LCD developing, which seems to have something to do with, again, being pressed up against my face.\n</p>\n<p>\nIn most other ways, this thing looks to be a flop...  but the sidetalking thing might just not be such a bad idea.\n</p>\n",
    "prevPostPath": "2003/10/29/late-to-the-panther-party",
    "nextPostPath": "2003/10/16/seeing-out-opposites"
  },
  {
    "comments_archived": true,
    "date": "2003-10-16T17:19:17.000Z",
    "layout": "post",
    "title": "Seeking Out Opposites",
    "wordpress_id": 497,
    "wordpress_slug": "seeing-out-opposites",
    "wordpress_url": "http://www.decafbad.com/blog/?p=497",
    "year": "2003",
    "month": "10",
    "day": "16",
    "isDir": false,
    "slug": "seeing-out-opposites",
    "postName": "2003-10-16-seeing-out-opposites",
    "html": "<p>\nFor the past year or two, I've been trying an experiment in my\npersonal research and learning.  I've been seeking out tools and\ntechnologies which are as different as possible from those with which\nI already have experience.  I want to break up some prejudices and\nhabits I have, and expose myself to more ways of looking at things.\nNow that I write this, it sounds like a great approach to life in\ngeneral, but for now I'm focusing on computer science.  :)\n</p>\n\n<p>\nMy success \nwith this has been entirely dependant on free time and brain cycles,\nof which I've had precious little.  But, I have managed to wean myself\naway from Perl to learning Python, developing a few apps with it and\nincorporating it into my problem solving kit.  I've also managed to\nget myself away from XEmacs for hours at a time in order to weave Vim\ninto my work-a-day life.  These two things haven't been easy for me,\nsince I've been using both Perl and some variant of Emacs for almost\n12 years now, and I've done my share of sneering at that which is not\nperl or emacs.  \n</p>\n\n<p>\nAnd, although I've yet to spring upon them, I've also been making wary, \nnarrowing circles around Lisp, Smalltalk, Prolog, and .NET.  There\nbeen occasional forays into Java, as well as my daily attachment to\nFlash and Actionscript lately.  And then, there've been my hefting and\nswinging of XSLT and XPath, as well as RDF, countered by a few feints\nwith plaintext shell tools and YAML.  There's been more, but most\ninvestigations have been too tentative to mention.\n</p>\n\n<p>\nIf there's a \"holy war\" between two things, I want to explore them both.\nI tend to see two apparently intelligent parties in an extended debate\nover which of them has a hold on the One True Way.  In my\nexperience, though, there's a high likelyhood that such a phenomenon\npoints toward a real truth which lies somewhere inbetween.  (This, of\ncourse, ignoring such cases where one party is correct, and the other\nis WRONG, WRONG, WRONG!)  There tend to be very good reasons why smart\npeople on either side of a fence have taken up with what they have,\nand I want to know both sides thoroughly.  I know full well that both\nsides have at least some valid criticisms against the other, but I\nwant a synthesis of the two.\n</p>\n\n<p>\nIn this field of computer science, there\nare as many ways of working with the dreamstuff as there\nare ways of structuring thoughts.  And, rather than there ever being\nOne True Way to do things, there will always be another smart person\ndeveloping another powerfully expressive and insightful way of doing\nthings.  Someday, I'd like to be one of those smart people, so I need\nto have a sense for that truth in the middle that other One True Ways \nbracket and zero in on.  And then, I want to know enough to jump out\nof the frame altogether, and in which ways I can invert and twist\nthings to encircle some new spark.\n</p>\n\n<p>\nSomeday in the next few years, I'd like to get back into school so I\ncan get to even higher levels of growing up to be a computer scientist.\nBut for now, it's back to work for me.  And, if you happen to think of\nany geeky holy wars, let me know.  I'm collecting them for study.\n</p>\n<!--more-->\nshortname=seeing_out_opposites\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221087477\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://danimal.org/SenorTaco/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=ec27de7aad384cd7ec8fe7cdec221dcf&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://danimal.org/SenorTaco/\">Dan Weeks</a>\n</div>\n<a href=\"#comment-221087477\" class=\"permalink\"><time datetime=\"2003-10-16T14:19:54\">2003-10-16T14:19:54</time></a>\n</div>\n<div class=\"content\">In a group of friends we keep a list of these things.  Some of the technolgy ones are:\n1. Windows vs. Unix\n2. Linux vs. BSD\n3. Emacs vs. the unmentionable one (vi)\n6. Fortran vs. C/C++\n7. Perl vs. Python\n9. LaTeX vs. Word or Framemaker\n10. Steered Code (via scripts) vs. Not\nThen there are even pronunciations of some products that de-evolve into holy wars:\n12. Pronunciation:\nb. .gif: Gif vs. Jif\nd. LaTeX: lah-TEK vs. LAH-tek vs. LAY-tex\ne. data: DAH-tah vs. DAY-tah\nI look forward to more information from you on this and seeing what you find.</div>\n</li>\n<li class=\"comment\" id=\"comment-221087480\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.m14m.net/bloglet.php\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4a798b64b3d34d2377959729761f68b2&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.m14m.net/bloglet.php\">Moss Collum</a>\n</div>\n<a href=\"#comment-221087480\" class=\"permalink\"><time datetime=\"2003-10-16T16:11:21\">2003-10-16T16:11:21</time></a>\n</div>\n<div class=\"content\">Static vs. dynamic typing, and its cousin, compiled vs. interpreted languages, seem like big interesting ones. More trivially, tabs vs. spaces.\nAlso, if you want to find more holy wars than you ever dreamed possible, you could always try searching Wiki for Vs.</div>\n</li>\n<li class=\"comment\" id=\"comment-221087483\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://fallenearth.org/blogs/caiuschen/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=ac95aa7cf579a6f2d52870a59a5866d9&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://fallenearth.org/blogs/caiuschen/\">caiuschen</a>\n</div>\n<a href=\"#comment-221087483\" class=\"permalink\"><time datetime=\"2003-10-17T00:15:20\">2003-10-17T00:15:20</time></a>\n</div>\n<div class=\"content\">I would say that even more intense than Perl vs. Python is Ruby vs. Python.</div>\n</li>\n<li class=\"comment\" id=\"comment-221087487\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.joegrossberg.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a74de86470c1376d27cb3a3186b7a9d2&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.joegrossberg.com\">Joe Grossberg</a>\n</div>\n<a href=\"#comment-221087487\" class=\"permalink\"><time datetime=\"2003-10-17T12:03:56\">2003-10-17T12:03:56</time></a>\n</div>\n<div class=\"content\">Here are a few:\n* IDE vs. multiple tools\n* HTML vs. Flash MX (or Java Applets, I suppose)\n* learning an existing tool or writing your own\nI also find that some tools are cool to know, because in a narrow set of uses, they're fscking awesome:\n* Expect (for use in automating some cron scripts)\n* awk (for piping through output)\n* ANSI color codes for making output more readable\nPlus there are great add-ons to the software you already use:\n* various emacs modes and tools (recentf is killer)\n* CPAN modules you might not have known about\n* list comprehensions and the __foo__() methods you can override in python</div>\n</li>\n<li class=\"comment\" id=\"comment-221087488\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://webmistressjulia.com/blog.htm\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=47d53fa5ccb973fbe6ff2a8ea3df29f7&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://webmistressjulia.com/blog.htm\">Julia</a>\n</div>\n<a href=\"#comment-221087488\" class=\"permalink\"><time datetime=\"2003-10-21T00:51:54\">2003-10-21T00:51:54</time></a>\n</div>\n<div class=\"content\">I'm not a programmer, I'm more of a user (software, not people), so I think of MSWord vs. WordPerfect (in the old, pre-Corel days) and for that matter, CorelDraw vs. everything else in the mid-90's.  Ok, but what struck me was not the holy war per se, but the pursuit.  I just read \"Zen and the art of motorcycle maint.\" and you both seem to be on the same path, looking for Quality (capital Q, specifically) in life, in work, in everything.  I support you in your quest!</div>\n</li>\n<li class=\"comment\" id=\"comment-221087489\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://eric.weblogs.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=816a0f3a912fecf45efee0c8124581e4&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://eric.weblogs.com/\">Eric Hancock</a>\n</div>\n<a href=\"#comment-221087489\" class=\"permalink\"><time datetime=\"2003-10-21T10:40:48\">2003-10-21T10:40:48</time></a>\n</div>\n<div class=\"content\">Trying to solve the same problem with different languages can be enlightening.  It requires that you bend your mind enough to understand, not syntax, but how things are done in different languages.\nHave you looked at Objective C?</div>\n</li>\n<li class=\"comment\" id=\"comment-221087490\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a1f366c1a7c9a7ff1fd9b5251a2a10ff&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Ralph Richard Cook</a>\n</div>\n<a href=\"#comment-221087490\" class=\"permalink\"><time datetime=\"2003-10-22T13:20:15\">2003-10-22T13:20:15</time></a>\n</div>\n<div class=\"content\">If you're looking for a holy war that makes no sense to someone on the outside of it, try Common Lisp vs. Scheme.</div>\n</li>\n<li class=\"comment\" id=\"comment-221087491\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.manifoldmedia.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=1e4ccc7efcccb82930bbe20c71988ff6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.manifoldmedia.com\">Gahlord Dewald</a>\n</div>\n<a href=\"#comment-221087491\" class=\"permalink\"><time datetime=\"2003-10-30T08:27:25\">2003-10-30T08:27:25</time></a>\n</div>\n<div class=\"content\">CSS-based web design coding vs Table-based web design coding\nJakob Nielsen vs Joshua Davis\nActionscript 1.0 vs Actionscript 2.0</div>\n</li>\n<li class=\"comment\" id=\"comment-221087492\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=10ff0e2c470a0e7e5fe06c9ce1bf2036&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Chris</a>\n</div>\n<a href=\"#comment-221087492\" class=\"permalink\"><time datetime=\"2003-11-05T14:57:33\">2003-11-05T14:57:33</time></a>\n</div>\n<div class=\"content\">RSS 1.0 vs. RSS 2.0\nThis is a great one because:\n--the RSS 1.0 geeks' argument was based almost entirely in the purported benefits of the One True Way to the poor simple reg'lar non-geeks what'll never understand them goshdarn namespaces\n--the entire thing actually seemed to be entirely about whether Mr. Winer was, in fact, insufferable and whether O'Reilly is Publisher of Cute-Covered Geekbooks or Cabal Bent on World Domination</div>\n</li>\n</ul>\n</div>\n",
    "body": "<p>\r\nFor the past year or two, I've been trying an experiment in my\r\npersonal research and learning.  I've been seeking out tools and\r\ntechnologies which are as different as possible from those with which\r\nI already have experience.  I want to break up some prejudices and\r\nhabits I have, and expose myself to more ways of looking at things.\r\nNow that I write this, it sounds like a great approach to life in\r\ngeneral, but for now I'm focusing on computer science.  :)\r\n</p>\r\n\r\n<p>\r\nMy success \r\nwith this has been entirely dependant on free time and brain cycles,\r\nof which I've had precious little.  But, I have managed to wean myself\r\naway from Perl to learning Python, developing a few apps with it and\r\nincorporating it into my problem solving kit.  I've also managed to\r\nget myself away from XEmacs for hours at a time in order to weave Vim\r\ninto my work-a-day life.  These two things haven't been easy for me,\r\nsince I've been using both Perl and some variant of Emacs for almost\r\n12 years now, and I've done my share of sneering at that which is not\r\nperl or emacs.  \r\n</p>\r\n\r\n<p>\r\nAnd, although I've yet to spring upon them, I've also been making wary, \r\nnarrowing circles around Lisp, Smalltalk, Prolog, and .NET.  There\r\nbeen occasional forays into Java, as well as my daily attachment to\r\nFlash and Actionscript lately.  And then, there've been my hefting and\r\nswinging of XSLT and XPath, as well as RDF, countered by a few feints\r\nwith plaintext shell tools and YAML.  There's been more, but most\r\ninvestigations have been too tentative to mention.\r\n</p>\r\n\r\n<p>\r\nIf there's a \"holy war\" between two things, I want to explore them both.\r\nI tend to see two apparently intelligent parties in an extended debate\r\nover which of them has a hold on the One True Way.  In my\r\nexperience, though, there's a high likelyhood that such a phenomenon\r\npoints toward a real truth which lies somewhere inbetween.  (This, of\r\ncourse, ignoring such cases where one party is correct, and the other\r\nis WRONG, WRONG, WRONG!)  There tend to be very good reasons why smart\r\npeople on either side of a fence have taken up with what they have,\r\nand I want to know both sides thoroughly.  I know full well that both\r\nsides have at least some valid criticisms against the other, but I\r\nwant a synthesis of the two.\r\n</p>\r\n\r\n<p>\r\nIn this field of computer science, there\r\nare as many ways of working with the dreamstuff as there\r\nare ways of structuring thoughts.  And, rather than there ever being\r\nOne True Way to do things, there will always be another smart person\r\ndeveloping another powerfully expressive and insightful way of doing\r\nthings.  Someday, I'd like to be one of those smart people, so I need\r\nto have a sense for that truth in the middle that other One True Ways \r\nbracket and zero in on.  And then, I want to know enough to jump out\r\nof the frame altogether, and in which ways I can invert and twist\r\nthings to encircle some new spark.\r\n</p>\r\n\r\n<p>\r\nSomeday in the next few years, I'd like to get back into school so I\r\ncan get to even higher levels of growing up to be a computer scientist.\r\nBut for now, it's back to work for me.  And, if you happen to think of\r\nany geeky holy wars, let me know.  I'm collecting them for study.\r\n</p>\r\n<!--more-->\r\nshortname=seeing_out_opposites\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221087477\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://danimal.org/SenorTaco/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=ec27de7aad384cd7ec8fe7cdec221dcf&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://danimal.org/SenorTaco/\">Dan Weeks</a>\r\n                </div>\r\n                <a href=\"#comment-221087477\" class=\"permalink\"><time datetime=\"2003-10-16T14:19:54\">2003-10-16T14:19:54</time></a>\r\n            </div>\r\n            <div class=\"content\">In a group of friends we keep a list of these things.  Some of the technolgy ones are:\r\n\r\n1. Windows vs. Unix\r\n2. Linux vs. BSD\r\n3. Emacs vs. the unmentionable one (vi)\r\n6. Fortran vs. C/C++\r\n7. Perl vs. Python\r\n9. LaTeX vs. Word or Framemaker\r\n10. Steered Code (via scripts) vs. Not\r\n\r\n\r\nThen there are even pronunciations of some products that de-evolve into holy wars:\r\n\r\n\r\n12. Pronunciation:\r\nb. .gif: Gif vs. Jif\r\nd. LaTeX: lah-TEK vs. LAH-tek vs. LAY-tex\r\ne. data: DAH-tah vs. DAY-tah\r\n\r\n\r\nI look forward to more information from you on this and seeing what you find.</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087480\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.m14m.net/bloglet.php\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4a798b64b3d34d2377959729761f68b2&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.m14m.net/bloglet.php\">Moss Collum</a>\r\n                </div>\r\n                <a href=\"#comment-221087480\" class=\"permalink\"><time datetime=\"2003-10-16T16:11:21\">2003-10-16T16:11:21</time></a>\r\n            </div>\r\n            <div class=\"content\">Static vs. dynamic typing, and its cousin, compiled vs. interpreted languages, seem like big interesting ones. More trivially, tabs vs. spaces.\r\n\r\nAlso, if you want to find more holy wars than you ever dreamed possible, you could always try searching Wiki for Vs.</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087483\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://fallenearth.org/blogs/caiuschen/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=ac95aa7cf579a6f2d52870a59a5866d9&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://fallenearth.org/blogs/caiuschen/\">caiuschen</a>\r\n                </div>\r\n                <a href=\"#comment-221087483\" class=\"permalink\"><time datetime=\"2003-10-17T00:15:20\">2003-10-17T00:15:20</time></a>\r\n            </div>\r\n            <div class=\"content\">I would say that even more intense than Perl vs. Python is Ruby vs. Python.</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087487\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.joegrossberg.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a74de86470c1376d27cb3a3186b7a9d2&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.joegrossberg.com\">Joe Grossberg</a>\r\n                </div>\r\n                <a href=\"#comment-221087487\" class=\"permalink\"><time datetime=\"2003-10-17T12:03:56\">2003-10-17T12:03:56</time></a>\r\n            </div>\r\n            <div class=\"content\">Here are a few:\r\n\r\n* IDE vs. multiple tools\r\n* HTML vs. Flash MX (or Java Applets, I suppose)\r\n* learning an existing tool or writing your own\r\n\r\nI also find that some tools are cool to know, because in a narrow set of uses, they're fscking awesome:\r\n* Expect (for use in automating some cron scripts)\r\n* awk (for piping through output)\r\n* ANSI color codes for making output more readable\r\n\r\nPlus there are great add-ons to the software you already use:\r\n* various emacs modes and tools (recentf is killer)\r\n* CPAN modules you might not have known about\r\n* list comprehensions and the __foo__() methods you can override in python</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087488\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://webmistressjulia.com/blog.htm\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=47d53fa5ccb973fbe6ff2a8ea3df29f7&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://webmistressjulia.com/blog.htm\">Julia</a>\r\n                </div>\r\n                <a href=\"#comment-221087488\" class=\"permalink\"><time datetime=\"2003-10-21T00:51:54\">2003-10-21T00:51:54</time></a>\r\n            </div>\r\n            <div class=\"content\">I'm not a programmer, I'm more of a user (software, not people), so I think of MSWord vs. WordPerfect (in the old, pre-Corel days) and for that matter, CorelDraw vs. everything else in the mid-90's.  Ok, but what struck me was not the holy war per se, but the pursuit.  I just read \"Zen and the art of motorcycle maint.\" and you both seem to be on the same path, looking for Quality (capital Q, specifically) in life, in work, in everything.  I support you in your quest!</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087489\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://eric.weblogs.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=816a0f3a912fecf45efee0c8124581e4&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://eric.weblogs.com/\">Eric Hancock</a>\r\n                </div>\r\n                <a href=\"#comment-221087489\" class=\"permalink\"><time datetime=\"2003-10-21T10:40:48\">2003-10-21T10:40:48</time></a>\r\n            </div>\r\n            <div class=\"content\">Trying to solve the same problem with different languages can be enlightening.  It requires that you bend your mind enough to understand, not syntax, but how things are done in different languages.\r\n\r\nHave you looked at Objective C?</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087490\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=a1f366c1a7c9a7ff1fd9b5251a2a10ff&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"\">Ralph Richard Cook</a>\r\n                </div>\r\n                <a href=\"#comment-221087490\" class=\"permalink\"><time datetime=\"2003-10-22T13:20:15\">2003-10-22T13:20:15</time></a>\r\n            </div>\r\n            <div class=\"content\">If you're looking for a holy war that makes no sense to someone on the outside of it, try Common Lisp vs. Scheme.</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087491\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.manifoldmedia.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=1e4ccc7efcccb82930bbe20c71988ff6&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.manifoldmedia.com\">Gahlord Dewald</a>\r\n                </div>\r\n                <a href=\"#comment-221087491\" class=\"permalink\"><time datetime=\"2003-10-30T08:27:25\">2003-10-30T08:27:25</time></a>\r\n            </div>\r\n            <div class=\"content\">CSS-based web design coding vs Table-based web design coding\r\nJakob Nielsen vs Joshua Davis\r\nActionscript 1.0 vs Actionscript 2.0</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087492\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=10ff0e2c470a0e7e5fe06c9ce1bf2036&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"\">Chris</a>\r\n                </div>\r\n                <a href=\"#comment-221087492\" class=\"permalink\"><time datetime=\"2003-11-05T14:57:33\">2003-11-05T14:57:33</time></a>\r\n            </div>\r\n            <div class=\"content\">RSS 1.0 vs. RSS 2.0\r\n\r\nThis is a great one because:\r\n--the RSS 1.0 geeks' argument was based almost entirely in the purported benefits of the One True Way to the poor simple reg'lar non-geeks what'll never understand them goshdarn namespaces\r\n--the entire thing actually seemed to be entirely about whether Mr. Winer was, in fact, insufferable and whether O'Reilly is Publisher of Cute-Covered Geekbooks or Cabal Bent on World Domination</div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/16/seeing-out-opposites",
    "summary": "<p>\nFor the past year or two, I&apos;ve been trying an experiment in my\npersonal research and learning.  I&apos;ve been seeking out tools and\ntechnologies which are as different as possible from those with which\nI already have experience.  I want to break up some prejudices and\nhabits I have, and expose myself to more ways of looking at things.\nNow that I write this, it sounds like a great approach to life in\ngeneral, but for now I&apos;m focusing on computer science.  :)\n</p>\n\n<p>\nMy success \nwith this has been entirely dependant on free time and brain cycles,\nof which I&apos;ve had precious little.  But, I have managed to wean myself\naway from Perl to learning Python, developing a few apps with it and\nincorporating it into my problem solving kit.  I&apos;ve also managed to\nget myself away from XEmacs for hours at a time in order to weave Vim\ninto my work-a-day life.  These two things haven&apos;t been easy for me,\nsince I&apos;ve been using both Perl and some variant of Emacs for almost\n12 years now, and I&apos;ve done my share of sneering at that which is not\nperl or emacs.  \n</p>\n\n<p>\nAnd, although I&apos;ve yet to spring upon them, I&apos;ve also been making wary, \nnarrowing circles around Lisp, Smalltalk, Prolog, and .NET.  There\nbeen occasional forays into Java, as well as my daily attachment to\nFlash and Actionscript lately.  And then, there&apos;ve been my hefting and\nswinging of XSLT and XPath, as well as RDF, countered by a few feints\nwith plaintext shell tools and YAML.  There&apos;s been more, but most\ninvestigations have been too tentative to mention.\n</p>\n\n<p>\nIf there&apos;s a &quot;holy war&quot; between two things, I want to explore them both.\nI tend to see two apparently intelligent parties in an extended debate\nover which of them has a hold on the One True Way.  In my\nexperience, though, there&apos;s a high likelyhood that such a phenomenon\npoints toward a real truth which lies somewhere inbetween.  (This, of\ncourse, ignoring such cases where one party is correct, and the other\nis WRONG, WRONG, WRONG!)  There tend to be very good reasons why smart\npeople on either side of a fence have taken up with what they have,\nand I want to know both sides thoroughly.  I know full well that both\nsides have at least some valid criticisms against the other, but I\nwant a synthesis of the two.\n</p>\n\n<p>\nIn this field of computer science, there\nare as many ways of working with the dreamstuff as there\nare ways of structuring thoughts.  And, rather than there ever being\nOne True Way to do things, there will always be another smart person\ndeveloping another powerfully expressive and insightful way of doing\nthings.  Someday, I&apos;d like to be one of those smart people, so I need\nto have a sense for that truth in the middle that other One True Ways \nbracket and zero in on.  And then, I want to know enough to jump out\nof the frame altogether, and in which ways I can invert and twist\nthings to encircle some new spark.\n</p>\n\n<p>\nSomeday in the next few years, I&apos;d like to get back into school so I\ncan get to even higher levels of growing up to be a computer scientist.\nBut for now, it&apos;s back to work for me.  And, if you happen to think of\nany geeky holy wars, let me know.  I&apos;m collecting them for study.\n</p>\n",
    "prevPostPath": "2003/10/29/nokia-ngage-schmutz",
    "nextPostPath": "2003/10/14/when-rss-attacks"
  },
  {
    "comments_archived": true,
    "date": "2003-10-14T15:05:34.000Z",
    "layout": "post",
    "title": "When RSS Developers Attack",
    "wordpress_id": 496,
    "wordpress_slug": "when-rss-attacks",
    "wordpress_url": "http://www.decafbad.com/blog/?p=496",
    "year": "2003",
    "month": "10",
    "day": "14",
    "isDir": false,
    "slug": "when-rss-attacks",
    "postName": "2003-10-14-when-rss-attacks",
    "html": "<blockquote cite=\"http://jeremy.zawodny.com/blog/archives/001007.html\">\n<p>I agree with Derek Balling [who <a href=\"http://www.megacity.org/blog/archives/001122.php\">criticized Foo Camp</a>], and when you come back to earth, I bet you will too Jeremy.</p>\n<p>Did I read that you guys had meetings about RSS? At a private invitation-only event? Do you realize how WRONG that is?</p>\n</blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://jeremy.zawodny.com/blog/archives/001007.html\">Dave Winer in a comment on \"Some Foo Camp Links\"</a></cite></small></div>\n\n<blockquote cite=\"http://www.intertwingly.net/blog/1611.html\">\n<p>One of the sessions on Sunday morning at FOO Camp was a brainstorming session on how a site could provide a list of feeds.</p>\n<p>...A working name for this effort is \"FDML\".  The stands for Feed (Discovery / Directory / Detailing) Markup Language, depending on who you ask. ;-)</p>\n</blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://www.intertwingly.net/blog/1611.html\">Sam Ruby: FDML</a></cite></small></div>\n\n<blockquote cite=\"http://www.intertwingly.net/blog/1611.html#c1066129228\">\n<p>Just so it is absolutely clear: all I have done is listed a set of requirements, many if not most of which are directly from Jeremy himself.  The acronym was suggested by David Sifry.</p>\n<p>People are welcome to question, refine, or add to the requirements, or present proposals on how these requirements can best be implemented.  Perhaps even with OPML.</p>\n</blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://www.intertwingly.net/blog/1611.html#c1066129228\">A later comment on Sam Ruby: FDML</a></cite></small></div>\n\n<p>\nFor anyone who wonders why people talk about politics and animosity in\nthe tiny sphere of web syndication tech, here's a case in point.\n</p>\n\n<p>\nYou see, there was a private event over the weekend, called Foo Camp.\nTo this, many smart people were invited, and many more weren't.\nGrousing about invitations, funding, and elitism aside, it sounded\nlike a great time and a cool change from your average conference.  I\nhope it turns into a regular event, and hope that someday I'm given\nthe opportunity to go to something like it.  I'm sure a lot of us\nout here would like to make it to something like that.\n</p>\n\n<p>\nBut, for what it was, you can only gather so many people before it\nbecomes a circus (or a conference).  Charging a price serves as a\nlimiter, while making the event invitation-only works as well.  The\ndifference is whether you're bringing in people who can afford it\nversus people who are favored by the organizer.  Either way, someone's\ngoing to be pissed about not going.  The difference is whether you're\npissed off at the organizer's economics or the organizer's\npersonality.  Oh well.\n</p>\n\n<p>\nSo anyway, around mid-September, Jeremy Zawodny had floated\n<a href=\"http://jeremy.zawodny.com/blog/archives/000967.html\">an idea</a>\ninvolving publishing and discovery of lists of RSS feeds.\nHe was one of those invited to Foo Camp, and in one of their\nhuddles, he brought the idea up for a brainstorming session.\nFrom the sounds of it, they tossed around a few ideas, but\ndidn't really come up with much other than that it was an idea\nworth discussing.\n</p>\n\n<p>\nNo sooner than the camp breaks up, though, and the angry buzz\nhas already started.  How dare a bunch of geeks talk about\ntechnology they're interested in while at a private gathering?\nHow dare they not invite all of us?  Conspiracy!  Elitism!\nThey didn't pick me for their kickball team!  By the way,\nthis isn't an attempt to put words in mouths.  This is my\noff-the-cuff impression of what I read yesterday.  It all\nseems repeatedly and unnecessarily childish to me, and it's\ncertainly not limited to one person.\n</p>\n\n<p>\nSo, by today, there's already\n<a href=\"http://www.intertwingly.net/wiki/fdml/FrontPage\">a wiki</a>\ndevoted to exploring this idea, along with a scattering of blog\nposts. This seems pretty speedy to me,\nconsidering campers returning to the work-a-day world after\na geek retreat.  This doesn't seem at all the work of a sinister\ncabal bent on wresting control and domination over a technology,\nas what I saw implied in the first comment I quoted above.\n</p>\n\n<p>\nDave Winer's already posted a\n<a href=\"http://blogs.law.harvard.edu/tech/myPublicFeedsOpml\">first proposal</a>\ntoward implementing the idea.  And, believe it or not, as Sam comments\non above, this approach has not been ruled out.  In fact,\nJeremy had suggested using OPML in his original posting of the idea.\n</p>\n\n<p>\nWhy couldn't we just have seen the collaboration without the\nantagonism, in at least this case?  Yeah, there was a small, private\ngathering at which discussions were had.  Sounds like what happens at\nwork, or with friends, or in classes.  Granted, I suppose an argument\ncould be made concerning the relative openness of these gatherings as\ncompared to Foo Camp.  But, this is mooted by the fact that the\npeople involved were already moving toward sharing the discussion.\n</p>\n\n<p>\nFor all the grousing about flame wars and personality clashes on\nmailing lists and working groups, sometimes it's nice to work on an\nidea in a smaller group with a good dynamic.  It helps to get\nsomething together before throwing the doors open to have the thing\nbuffeted by opinions and criticism from all sides.  It's one way to\navoid <a href=\"http://www.userland.com/whatIsStopEnergy\">\"stop\nenergy\"</a> while trying to build some momentum.\n</p>\n\n<p>\nAs Dave himself wrote, \"I heard at a working group meeting that things\nlike SOAP can only happen when no one is paying attention.\"  So, it\nsounds like a bunch of geeks tried to get something rolling before the\nattentional heat lamps turned on it.  Had they wanted to be a sinister\ncabal, we certainly wouldn't have heard about any of this until long,\nlong after the event.  It would have been kept behind closed corporate\ndoors until the day of embrace-and-extend.  Then, profit!  As it is, I\nthink they erred on the side of throwing open the discussion\n<i>too</i> early.\n</p>\n\n<p>\nSo anyway, the reason I write at such length about this is that I\ndon't think that this should be let to pass without comment or\nconsideration.  This kind of thing is what's wrong.  We need to take\nat <i>least</i> three deep breaths before reacting like this, whether\nor not we've taken 900 beep breaths in the past already.  It's the\nnature of these things.  As an interested but outside observer, the\natmosphere created by such reactions makes me very sad.  And it's not\njust one person doing this, either.\n</p>\n\n<p>\nSo, chill out.  It's just data.  In fact, the proposal at question\nhere is just <i>a friggen outline of feeds</i>!  It's just a list of\nlists!  Most of the geeks out there just want to play, and are happy\nto have more geeks to play with.  Can't we just get along and play the\ngame together, rather than gaming each other?\n</p>\n<!--more-->\nshortname=when_rss_attacks\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221085587\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://george.hotelling.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=89242476196334aff51840e7c4dadad2&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://george.hotelling.net/\">George Hotelling</a>\n</div>\n<a href=\"#comment-221085587\" class=\"permalink\"><time datetime=\"2003-10-14T18:55:17\">2003-10-14T18:55:17</time></a>\n</div>\n<div class=\"content\">Danny O'Brien has an excellent write up of how the exclusionary methods of Camp Foo were pissing people off, and more importantly why they were necessary.</div>\n</li>\n<li class=\"comment\" id=\"comment-221085588\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://dynamicobjects.com/d2r/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=5c641af6fe45a45f7048ea8ad6184761&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://dynamicobjects.com/d2r/\">Diego Doval</a>\n</div>\n<a href=\"#comment-221085588\" class=\"permalink\"><time datetime=\"2003-10-15T06:03:31\">2003-10-15T06:03:31</time></a>\n</div>\n<div class=\"content\">Actually, there was a reasonable amount of work done back when Jeremy first came up with the proposal, most of which I codified here  and here.  It was done without acrynomy, too. Maybe that's why people were not interested in starting from there and instead preferred to start all over again.</div>\n</li>\n</ul>\n</div>\n",
    "body": "<blockquote cite=\"http://jeremy.zawodny.com/blog/archives/001007.html\">\r\n<p>I agree with Derek Balling [who <a href=\"http://www.megacity.org/blog/archives/001122.php\">criticized Foo Camp</a>], and when you come back to earth, I bet you will too Jeremy.</p>\r\n<p>Did I read that you guys had meetings about RSS? At a private invitation-only event? Do you realize how WRONG that is?</p>\r\n</blockquote>\r\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://jeremy.zawodny.com/blog/archives/001007.html\">Dave Winer in a comment on \"Some Foo Camp Links\"</a></cite></small></div>\r\n\r\n<blockquote cite=\"http://www.intertwingly.net/blog/1611.html\">\r\n<p>One of the sessions on Sunday morning at FOO Camp was a brainstorming session on how a site could provide a list of feeds.</p>\r\n<p>...A working name for this effort is \"FDML\".  The stands for Feed (Discovery / Directory / Detailing) Markup Language, depending on who you ask. ;-)</p>\r\n</blockquote>\r\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://www.intertwingly.net/blog/1611.html\">Sam Ruby: FDML</a></cite></small></div>\r\n\r\n<blockquote cite=\"http://www.intertwingly.net/blog/1611.html#c1066129228\">\r\n<p>Just so it is absolutely clear: all I have done is listed a set of requirements, many if not most of which are directly from Jeremy himself.  The acronym was suggested by David Sifry.</p>\r\n<p>People are welcome to question, refine, or add to the requirements, or present proposals on how these requirements can best be implemented.  Perhaps even with OPML.</p>\r\n</blockquote>\r\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://www.intertwingly.net/blog/1611.html#c1066129228\">A later comment on Sam Ruby: FDML</a></cite></small></div>\r\n\r\n<p>\r\nFor anyone who wonders why people talk about politics and animosity in\r\nthe tiny sphere of web syndication tech, here's a case in point.\r\n</p>\r\n\r\n<p>\r\nYou see, there was a private event over the weekend, called Foo Camp.\r\nTo this, many smart people were invited, and many more weren't.\r\nGrousing about invitations, funding, and elitism aside, it sounded\r\nlike a great time and a cool change from your average conference.  I\r\nhope it turns into a regular event, and hope that someday I'm given\r\nthe opportunity to go to something like it.  I'm sure a lot of us\r\nout here would like to make it to something like that.\r\n</p>\r\n\r\n<p>\r\nBut, for what it was, you can only gather so many people before it\r\nbecomes a circus (or a conference).  Charging a price serves as a\r\nlimiter, while making the event invitation-only works as well.  The\r\ndifference is whether you're bringing in people who can afford it\r\nversus people who are favored by the organizer.  Either way, someone's\r\ngoing to be pissed about not going.  The difference is whether you're\r\npissed off at the organizer's economics or the organizer's\r\npersonality.  Oh well.\r\n</p>\r\n\r\n<p>\r\nSo anyway, around mid-September, Jeremy Zawodny had floated\r\n<a href=\"http://jeremy.zawodny.com/blog/archives/000967.html\">an idea</a>\r\ninvolving publishing and discovery of lists of RSS feeds.\r\nHe was one of those invited to Foo Camp, and in one of their\r\nhuddles, he brought the idea up for a brainstorming session.\r\nFrom the sounds of it, they tossed around a few ideas, but\r\ndidn't really come up with much other than that it was an idea\r\nworth discussing.\r\n</p>\r\n\r\n<p>\r\nNo sooner than the camp breaks up, though, and the angry buzz\r\nhas already started.  How dare a bunch of geeks talk about\r\ntechnology they're interested in while at a private gathering?\r\nHow dare they not invite all of us?  Conspiracy!  Elitism!\r\nThey didn't pick me for their kickball team!  By the way,\r\nthis isn't an attempt to put words in mouths.  This is my\r\noff-the-cuff impression of what I read yesterday.  It all\r\nseems repeatedly and unnecessarily childish to me, and it's\r\ncertainly not limited to one person.\r\n</p>\r\n\r\n<p>\r\nSo, by today, there's already\r\n<a href=\"http://www.intertwingly.net/wiki/fdml/FrontPage\">a wiki</a>\r\ndevoted to exploring this idea, along with a scattering of blog\r\nposts. This seems pretty speedy to me,\r\nconsidering campers returning to the work-a-day world after\r\na geek retreat.  This doesn't seem at all the work of a sinister\r\ncabal bent on wresting control and domination over a technology,\r\nas what I saw implied in the first comment I quoted above.\r\n</p>\r\n\r\n<p>\r\nDave Winer's already posted a\r\n<a href=\"http://blogs.law.harvard.edu/tech/myPublicFeedsOpml\">first proposal</a>\r\ntoward implementing the idea.  And, believe it or not, as Sam comments\r\non above, this approach has not been ruled out.  In fact,\r\nJeremy had suggested using OPML in his original posting of the idea.\r\n</p>\r\n\r\n<p>\r\nWhy couldn't we just have seen the collaboration without the\r\nantagonism, in at least this case?  Yeah, there was a small, private\r\ngathering at which discussions were had.  Sounds like what happens at\r\nwork, or with friends, or in classes.  Granted, I suppose an argument\r\ncould be made concerning the relative openness of these gatherings as\r\ncompared to Foo Camp.  But, this is mooted by the fact that the\r\npeople involved were already moving toward sharing the discussion.\r\n</p>\r\n\r\n<p>\r\nFor all the grousing about flame wars and personality clashes on\r\nmailing lists and working groups, sometimes it's nice to work on an\r\nidea in a smaller group with a good dynamic.  It helps to get\r\nsomething together before throwing the doors open to have the thing\r\nbuffeted by opinions and criticism from all sides.  It's one way to\r\navoid <a href=\"http://www.userland.com/whatIsStopEnergy\">\"stop\r\nenergy\"</a> while trying to build some momentum.\r\n</p>\r\n\r\n<p>\r\nAs Dave himself wrote, \"I heard at a working group meeting that things\r\nlike SOAP can only happen when no one is paying attention.\"  So, it\r\nsounds like a bunch of geeks tried to get something rolling before the\r\nattentional heat lamps turned on it.  Had they wanted to be a sinister\r\ncabal, we certainly wouldn't have heard about any of this until long,\r\nlong after the event.  It would have been kept behind closed corporate\r\ndoors until the day of embrace-and-extend.  Then, profit!  As it is, I\r\nthink they erred on the side of throwing open the discussion\r\n<i>too</i> early.\r\n</p>\r\n\r\n<p>\r\nSo anyway, the reason I write at such length about this is that I\r\ndon't think that this should be let to pass without comment or\r\nconsideration.  This kind of thing is what's wrong.  We need to take\r\nat <i>least</i> three deep breaths before reacting like this, whether\r\nor not we've taken 900 beep breaths in the past already.  It's the\r\nnature of these things.  As an interested but outside observer, the\r\natmosphere created by such reactions makes me very sad.  And it's not\r\njust one person doing this, either.\r\n</p>\r\n\r\n<p>\r\nSo, chill out.  It's just data.  In fact, the proposal at question\r\nhere is just <i>a friggen outline of feeds</i>!  It's just a list of\r\nlists!  Most of the geeks out there just want to play, and are happy\r\nto have more geeks to play with.  Can't we just get along and play the\r\ngame together, rather than gaming each other?\r\n</p>\r\n<!--more-->\r\nshortname=when_rss_attacks\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221085587\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://george.hotelling.net/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=89242476196334aff51840e7c4dadad2&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://george.hotelling.net/\">George Hotelling</a>\r\n                </div>\r\n                <a href=\"#comment-221085587\" class=\"permalink\"><time datetime=\"2003-10-14T18:55:17\">2003-10-14T18:55:17</time></a>\r\n            </div>\r\n            <div class=\"content\">Danny O'Brien has an excellent write up of how the exclusionary methods of Camp Foo were pissing people off, and more importantly why they were necessary.</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221085588\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://dynamicobjects.com/d2r/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=5c641af6fe45a45f7048ea8ad6184761&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://dynamicobjects.com/d2r/\">Diego Doval</a>\r\n                </div>\r\n                <a href=\"#comment-221085588\" class=\"permalink\"><time datetime=\"2003-10-15T06:03:31\">2003-10-15T06:03:31</time></a>\r\n            </div>\r\n            <div class=\"content\">Actually, there was a reasonable amount of work done back when Jeremy first came up with the proposal, most of which I codified here  and here.  It was done without acrynomy, too. Maybe that's why people were not interested in starting from there and instead preferred to start all over again.</div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/14/when-rss-attacks",
    "summary": "<blockquote cite=\"http://jeremy.zawodny.com/blog/archives/001007.html\">\n<p>I agree with Derek Balling [who <a href=\"http://www.megacity.org/blog/archives/001122.php\">criticized Foo Camp</a>], and when you come back to earth, I bet you will too Jeremy.</p>\n<p>Did I read that you guys had meetings about RSS? At a private invitation-only event? Do you realize how WRONG that is?</p>\n</blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://jeremy.zawodny.com/blog/archives/001007.html\">Dave Winer in a comment on &quot;Some Foo Camp Links&quot;</a></cite></small></div>\n\n<blockquote cite=\"http://www.intertwingly.net/blog/1611.html\">\n<p>One of the sessions on Sunday morning at FOO Camp was a brainstorming session on how a site could provide a list of feeds.</p>\n<p>...A working name for this effort is &quot;FDML&quot;.  The stands for Feed (Discovery / Directory / Detailing) Markup Language, depending on who you ask. ;-)</p>\n</blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://www.intertwingly.net/blog/1611.html\">Sam Ruby: FDML</a></cite></small></div>\n\n<blockquote cite=\"http://www.intertwingly.net/blog/1611.html#c1066129228\">\n<p>Just so it is absolutely clear: all I have done is listed a set of requirements, many if not most of which are directly from Jeremy himself.  The acronym was suggested by David Sifry.</p>\n<p>People are welcome to question, refine, or add to the requirements, or present proposals on how these requirements can best be implemented.  Perhaps even with OPML.</p>\n</blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://www.intertwingly.net/blog/1611.html#c1066129228\">A later comment on Sam Ruby: FDML</a></cite></small></div>\n\n<p>\nFor anyone who wonders why people talk about politics and animosity in\nthe tiny sphere of web syndication tech, here&apos;s a case in point.\n</p>\n\n<p>\nYou see, there was a private event over the weekend, called Foo Camp.\nTo this, many smart people were invited, and many more weren&apos;t.\nGrousing about invitations, funding, and elitism aside, it sounded\nlike a great time and a cool change from your average conference.  I\nhope it turns into a regular event, and hope that someday I&apos;m given\nthe opportunity to go to something like it.  I&apos;m sure a lot of us\nout here would like to make it to something like that.\n</p>\n\n<p>\nBut, for what it was, you can only gather so many people before it\nbecomes a circus (or a conference).  Charging a price serves as a\nlimiter, while making the event invitation-only works as well.  The\ndifference is whether you&apos;re bringing in people who can afford it\nversus people who are favored by the organizer.  Either way, someone&apos;s\ngoing to be pissed about not going.  The difference is whether you&apos;re\npissed off at the organizer&apos;s economics or the organizer&apos;s\npersonality.  Oh well.\n</p>\n\n<p>\nSo anyway, around mid-September, Jeremy Zawodny had floated\n<a href=\"http://jeremy.zawodny.com/blog/archives/000967.html\">an idea</a>\ninvolving publishing and discovery of lists of RSS feeds.\nHe was one of those invited to Foo Camp, and in one of their\nhuddles, he brought the idea up for a brainstorming session.\nFrom the sounds of it, they tossed around a few ideas, but\ndidn&apos;t really come up with much other than that it was an idea\nworth discussing.\n</p>\n\n<p>\nNo sooner than the camp breaks up, though, and the angry buzz\nhas already started.  How dare a bunch of geeks talk about\ntechnology they&apos;re interested in while at a private gathering?\nHow dare they not invite all of us?  Conspiracy!  Elitism!\nThey didn&apos;t pick me for their kickball team!  By the way,\nthis isn&apos;t an attempt to put words in mouths.  This is my\noff-the-cuff impression of what I read yesterday.  It all\nseems repeatedly and unnecessarily childish to me, and it&apos;s\ncertainly not limited to one person.\n</p>\n\n<p>\nSo, by today, there&apos;s already\n<a href=\"http://www.intertwingly.net/wiki/fdml/FrontPage\">a wiki</a>\ndevoted to exploring this idea, along with a scattering of blog\nposts. This seems pretty speedy to me,\nconsidering campers returning to the work-a-day world after\na geek retreat.  This doesn&apos;t seem at all the work of a sinister\ncabal bent on wresting control and domination over a technology,\nas what I saw implied in the first comment I quoted above.\n</p>\n\n<p>\nDave Winer&apos;s already posted a\n<a href=\"http://blogs.law.harvard.edu/tech/myPublicFeedsOpml\">first proposal</a>\ntoward implementing the idea.  And, believe it or not, as Sam comments\non above, this approach has not been ruled out.  In fact,\nJeremy had suggested using OPML in his original posting of the idea.\n</p>\n\n<p>\nWhy couldn&apos;t we just have seen the collaboration without the\nantagonism, in at least this case?  Yeah, there was a small, private\ngathering at which discussions were had.  Sounds like what happens at\nwork, or with friends, or in classes.  Granted, I suppose an argument\ncould be made concerning the relative openness of these gatherings as\ncompared to Foo Camp.  But, this is mooted by the fact that the\npeople involved were already moving toward sharing the discussion.\n</p>\n\n<p>\nFor all the grousing about flame wars and personality clashes on\nmailing lists and working groups, sometimes it&apos;s nice to work on an\nidea in a smaller group with a good dynamic.  It helps to get\nsomething together before throwing the doors open to have the thing\nbuffeted by opinions and criticism from all sides.  It&apos;s one way to\navoid <a href=\"http://www.userland.com/whatIsStopEnergy\">&quot;stop\nenergy&quot;</a> while trying to build some momentum.\n</p>\n\n<p>\nAs Dave himself wrote, &quot;I heard at a working group meeting that things\nlike SOAP can only happen when no one is paying attention.&quot;  So, it\nsounds like a bunch of geeks tried to get something rolling before the\nattentional heat lamps turned on it.  Had they wanted to be a sinister\ncabal, we certainly wouldn&apos;t have heard about any of this until long,\nlong after the event.  It would have been kept behind closed corporate\ndoors until the day of embrace-and-extend.  Then, profit!  As it is, I\nthink they erred on the side of throwing open the discussion\n<i>too</i> early.\n</p>\n\n<p>\nSo anyway, the reason I write at such length about this is that I\ndon&apos;t think that this should be let to pass without comment or\nconsideration.  This kind of thing is what&apos;s wrong.  We need to take\nat <i>least</i> three deep breaths before reacting like this, whether\nor not we&apos;ve taken 900 beep breaths in the past already.  It&apos;s the\nnature of these things.  As an interested but outside observer, the\natmosphere created by such reactions makes me very sad.  And it&apos;s not\njust one person doing this, either.\n</p>\n\n<p>\nSo, chill out.  It&apos;s just data.  In fact, the proposal at question\nhere is just <i>a friggen outline of feeds</i>!  It&apos;s just a list of\nlists!  Most of the geeks out there just want to play, and are happy\nto have more geeks to play with.  Can&apos;t we just get along and play the\ngame together, rather than gaming each other?\n</p>\n",
    "prevPostPath": "2003/10/16/seeing-out-opposites",
    "nextPostPath": "2003/10/08/microcontent-and-rss-data"
  },
  {
    "comments_archived": true,
    "date": "2003-10-08T12:30:52.000Z",
    "layout": "post",
    "title": "Microcontent and RSS-Data",
    "wordpress_id": 495,
    "wordpress_slug": "microcontent-and-rss-data",
    "wordpress_url": "http://www.decafbad.com/blog/?p=495",
    "year": "2003",
    "month": "10",
    "day": "08",
    "isDir": false,
    "slug": "microcontent-and-rss-data",
    "postName": "2003-10-08-microcontent-and-rss-data",
    "html": "<p>\nIn response to the opposition to RSS-Data,\n<a href=\"http://blogs.it/0100198/2003/10/07.html#a1818\">Marc asks</a>,\n\"Where are the Reviews, Resumes, Recipes, Topics and other cool new\nforms of micro-content?\"\n</p>\n<p>\nWell, I did a bit of Googling this morning, and this is what I found:\n</p>\n<ul>\n<li>\nOn the subject of reviews, A.M. Kuchling\n<a href=\"http://www.amk.ca/xml/reviews.html\">has provided</a> an\n<a href=\"http://amk.ca/xml/review/1.0\">RDF namespace</a>\nfor embedding book review metadata within XHTML documents.\n</li>\n<li>\nFor resumes,\nUldis Bojars\n<a href=\"http://lists.w3.org/Archives/Public/www-rdf-interest/2002Jun/0077.html\">has been working</a> on an\n<a href=\"http://nightman.lv/~captsolo/cv.rdfs\">RDF schema for resumes and CV</a>.\n</li>\n<li>\nTo offer up recipes, I found\n<a href=\"http://donnafales.com/2002/07/28/recipe-schema\">this RDF schema</a>\nfor <a href=\"http://donnafales.com/2003/recipes\">recipes</a> hosted on\n<a href=\"http://donnafales.com\">donnafales.com</a>.\n</li>\n<li>\nAs for topics, well, there's already a straight RSS 2.0 namespace\nextension called <a href=\"http://matt.blogs.it/specs/ENT/1.0/\">Easy News Topics</a>.\n</li>\n<li>\nAnd, finally, for events there is\n<a href=\"http://web.resource.org/rss/1.0/modules/event/\">mod_event</a>,\nand RSS 1.0 module used for presenting calendar event information.\n</li>\n</ul>\n<p>\nYes, with the exception of ENT, these are RDF schema or namespaces.\nBut, any one of them could likely be adapted to straight XML and used as an RSS 2.0\nnamespace, thereby leveraging the work these people have already done\nin modeling these kinds of content, as well as potentially providing\nan easy transformation path to RDF for those who care.\n</p>\n<p>\nWhat does RSS-Data provide out of the box which makes any of the\nabove obsolete?  There's no magic here, other than translating between\nraw data sctructures.  You'll still need to do the same sort of\nmodeling and structure work that the authors of all the above have\ndone.  It's always nicer to have someone else do homework for you.\n</p>\n<p>\nSo, if all this new microcontent is so hot, why hasn't anything like\nthe above been put into use?  Would adding 5 new tags to an RSS\nfeed really be an insane burden to express calendar events?  Granted,\nsome of the other examples above are more complex, but then so are\nthe things they seek to represent.\n</p>\n<p>\nWhat's the RSS-Data magic that improves on all the above?\n</p>\n<!--more-->\nshortname=microcontent_and_rss_data\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221085572\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=ac0d01ebb5e438c029c0764064f70827&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\">Danny</a>\n</div>\n<a href=\"#comment-221085572\" class=\"permalink\"><time datetime=\"2003-10-08T13:47:50\">2003-10-08T13:47:50</time></a>\n</div>\n<div class=\"content\">I did one too! A review vocab that is (I only did it as a demo, but Leigh used it in FOAF-a-matic for music and *blogs*, so I've started treating it proper).\nhttp://ideagraph.net/xmlns/rev/\nblog note:\nhttp://dannyayers.com/ideagraph-blog/archives/cat_vocabularies.html\nRe. RSS 2.0 extensions, I recently did a bit of Googling myself:\nhttp://dannyayers.com/archives/001713.html\n(in short, they're not getting used much)</div>\n</li>\n<li class=\"comment\" id=\"comment-221085574\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://admin.support.journurl.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4df556273eae91df768e9af6e4efdfcc&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://admin.support.journurl.com/\">Roger Benningfield</a>\n</div>\n<a href=\"#comment-221085574\" class=\"permalink\"><time datetime=\"2003-10-09T02:03:01\">2003-10-09T02:03:01</time></a>\n</div>\n<div class=\"content\">Les: There's a recurring theme in a few of your recent entries that I think it pretty important to consider... extended metadata in RSS is, so far, sort of a flop. The central elements of title, description, and date are so easy to adapt to so many applications that *any* kind of extension (namespaces, RDF, or RSS-Data) may be more trouble than 90% of the folks out there are willing to endure. In the grand scheme, streamlining something like RSS subscriptions or subscription management is probably *way* more important than finding ways to wedge new information into existing feeds. So ultimately, we may be debating an edge case's edge case.\nBut assuming for the moment that there's actually a point to all of this :) , and in answer to your entry...\nLes: \"You'll still need to do the same sort of modeling and structure work that the authors of all the above have done. It's always nicer to have someone else do homework for you.\"\nWhy would I design my application's internal database, for example, around what some random group/person thinks a book review should look like? My development environment has efficiencies and potholes to consider. My application has different expectations for user input and behavior. My users have needs that may not track with the mainstream.\nI fundamentally disagree with that sort of thinking... it's one of the big reasons that I tend to lose interest in some XML/blogging/whatever projects. (Atom being a recent, prominent example.) There often seems to come a point where data-modeling fans stop talking about ways to translate what I'm saying into something we both understand and start telling me to change my native language to suit their notions of order and purity.\nNow, as I sit here typing this, it occurs to me that RSS-Data could be the exact same thing in reverse. It's possible that some of it's appeal to me may boil down to a desire to project *my* priorities on to other folks. It's a bit hypocritical of me to be irritated by people who want to tell me how to design my app and then turn around and tell someone else, \"Hey, if you want at my data, you'll just have to accomodate my internal structure in your app.\"\nI hope you're proud of yourself, Les. You're about to make me change my mind by inadvertantly poking my guilty conscience with a stick. :D</div>\n</li>\n</ul>\n</div>\n",
    "body": "<p>\r\nIn response to the opposition to RSS-Data,\r\n<a href=\"http://blogs.it/0100198/2003/10/07.html#a1818\">Marc asks</a>,\r\n\"Where are the Reviews, Resumes, Recipes, Topics and other cool new\r\nforms of micro-content?\"\r\n</p>\r\n<p>\r\nWell, I did a bit of Googling this morning, and this is what I found:\r\n</p>\r\n<ul>\r\n<li>\r\nOn the subject of reviews, A.M. Kuchling\r\n<a href=\"http://www.amk.ca/xml/reviews.html\">has provided</a> an\r\n<a href=\"http://amk.ca/xml/review/1.0\">RDF namespace</a>\r\nfor embedding book review metadata within XHTML documents.\r\n</li>\r\n<li>\r\nFor resumes,\r\nUldis Bojars\r\n<a href=\"http://lists.w3.org/Archives/Public/www-rdf-interest/2002Jun/0077.html\">has been working</a> on an\r\n<a href=\"http://nightman.lv/~captsolo/cv.rdfs\">RDF schema for resumes and CV</a>.\r\n</li>\r\n<li>\r\nTo offer up recipes, I found\r\n<a href=\"http://donnafales.com/2002/07/28/recipe-schema\">this RDF schema</a>\r\nfor <a href=\"http://donnafales.com/2003/recipes\">recipes</a> hosted on\r\n<a href=\"http://donnafales.com\">donnafales.com</a>.\r\n</li>\r\n<li>\r\nAs for topics, well, there's already a straight RSS 2.0 namespace\r\nextension called <a href=\"http://matt.blogs.it/specs/ENT/1.0/\">Easy News Topics</a>.\r\n</li>\r\n<li>\r\nAnd, finally, for events there is\r\n<a href=\"http://web.resource.org/rss/1.0/modules/event/\">mod_event</a>,\r\nand RSS 1.0 module used for presenting calendar event information.\r\n</li>\r\n</ul>\r\n<p>\r\nYes, with the exception of ENT, these are RDF schema or namespaces.\r\nBut, any one of them could likely be adapted to straight XML and used as an RSS 2.0\r\nnamespace, thereby leveraging the work these people have already done\r\nin modeling these kinds of content, as well as potentially providing\r\nan easy transformation path to RDF for those who care.\r\n</p>\r\n<p>\r\nWhat does RSS-Data provide out of the box which makes any of the\r\nabove obsolete?  There's no magic here, other than translating between\r\nraw data sctructures.  You'll still need to do the same sort of\r\nmodeling and structure work that the authors of all the above have\r\ndone.  It's always nicer to have someone else do homework for you.\r\n</p>\r\n<p>\r\nSo, if all this new microcontent is so hot, why hasn't anything like\r\nthe above been put into use?  Would adding 5 new tags to an RSS\r\nfeed really be an insane burden to express calendar events?  Granted,\r\nsome of the other examples above are more complex, but then so are\r\nthe things they seek to represent.\r\n</p>\r\n<p>\r\nWhat's the RSS-Data magic that improves on all the above?\r\n</p>\r\n<!--more-->\r\nshortname=microcontent_and_rss_data\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221085572\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=ac0d01ebb5e438c029c0764064f70827&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://dannyayers.com\">Danny</a>\r\n                </div>\r\n                <a href=\"#comment-221085572\" class=\"permalink\"><time datetime=\"2003-10-08T13:47:50\">2003-10-08T13:47:50</time></a>\r\n            </div>\r\n            <div class=\"content\">I did one too! A review vocab that is (I only did it as a demo, but Leigh used it in FOAF-a-matic for music and *blogs*, so I've started treating it proper).\r\n\r\nhttp://ideagraph.net/xmlns/rev/\r\nblog note:\r\nhttp://dannyayers.com/ideagraph-blog/archives/cat_vocabularies.html\r\n\r\nRe. RSS 2.0 extensions, I recently did a bit of Googling myself:\r\n\r\nhttp://dannyayers.com/archives/001713.html\r\n\r\n(in short, they're not getting used much)</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221085574\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://admin.support.journurl.com/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=4df556273eae91df768e9af6e4efdfcc&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://admin.support.journurl.com/\">Roger Benningfield</a>\r\n                </div>\r\n                <a href=\"#comment-221085574\" class=\"permalink\"><time datetime=\"2003-10-09T02:03:01\">2003-10-09T02:03:01</time></a>\r\n            </div>\r\n            <div class=\"content\">Les: There's a recurring theme in a few of your recent entries that I think it pretty important to consider... extended metadata in RSS is, so far, sort of a flop. The central elements of title, description, and date are so easy to adapt to so many applications that *any* kind of extension (namespaces, RDF, or RSS-Data) may be more trouble than 90% of the folks out there are willing to endure. In the grand scheme, streamlining something like RSS subscriptions or subscription management is probably *way* more important than finding ways to wedge new information into existing feeds. So ultimately, we may be debating an edge case's edge case.\r\n\r\nBut assuming for the moment that there's actually a point to all of this :) , and in answer to your entry...\r\n\r\nLes: \"You'll still need to do the same sort of modeling and structure work that the authors of all the above have done. It's always nicer to have someone else do homework for you.\"\r\n\r\nWhy would I design my application's internal database, for example, around what some random group/person thinks a book review should look like? My development environment has efficiencies and potholes to consider. My application has different expectations for user input and behavior. My users have needs that may not track with the mainstream.\r\n\r\nI fundamentally disagree with that sort of thinking... it's one of the big reasons that I tend to lose interest in some XML/blogging/whatever projects. (Atom being a recent, prominent example.) There often seems to come a point where data-modeling fans stop talking about ways to translate what I'm saying into something we both understand and start telling me to change my native language to suit their notions of order and purity.\r\n\r\nNow, as I sit here typing this, it occurs to me that RSS-Data could be the exact same thing in reverse. It's possible that some of it's appeal to me may boil down to a desire to project *my* priorities on to other folks. It's a bit hypocritical of me to be irritated by people who want to tell me how to design my app and then turn around and tell someone else, \"Hey, if you want at my data, you'll just have to accomodate my internal structure in your app.\"\r\n\r\nI hope you're proud of yourself, Les. You're about to make me change my mind by inadvertantly poking my guilty conscience with a stick. :D</div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/08/microcontent-and-rss-data",
    "summary": "<p>\nIn response to the opposition to RSS-Data,\n<a href=\"http://blogs.it/0100198/2003/10/07.html#a1818\">Marc asks</a>,\n&quot;Where are the Reviews, Resumes, Recipes, Topics and other cool new\nforms of micro-content?&quot;\n</p>\n<p>\nWell, I did a bit of Googling this morning, and this is what I found:\n</p>\n<ul>\n<li>\nOn the subject of reviews, A.M. Kuchling\n<a href=\"http://www.amk.ca/xml/reviews.html\">has provided</a> an\n<a href=\"http://amk.ca/xml/review/1.0\">RDF namespace</a>\nfor embedding book review metadata within XHTML documents.\n</li>\n<li>\nFor resumes,\nUldis Bojars\n<a href=\"http://lists.w3.org/Archives/Public/www-rdf-interest/2002Jun/0077.html\">has been working</a> on an\n<a href=\"http://nightman.lv/~captsolo/cv.rdfs\">RDF schema for resumes and CV</a>.\n</li>\n<li>\nTo offer up recipes, I found\n<a href=\"http://donnafales.com/2002/07/28/recipe-schema\">this RDF schema</a>\nfor <a href=\"http://donnafales.com/2003/recipes\">recipes</a> hosted on\n<a href=\"http://donnafales.com\">donnafales.com</a>.\n</li>\n<li>\nAs for topics, well, there&apos;s already a straight RSS 2.0 namespace\nextension called <a href=\"http://matt.blogs.it/specs/ENT/1.0/\">Easy News Topics</a>.\n</li>\n<li>\nAnd, finally, for events there is\n<a href=\"http://web.resource.org/rss/1.0/modules/event/\">mod_event</a>,\nand RSS 1.0 module used for presenting calendar event information.\n</li>\n</ul>\n<p>\nYes, with the exception of ENT, these are RDF schema or namespaces.\nBut, any one of them could likely be adapted to straight XML and used as an RSS 2.0\nnamespace, thereby leveraging the work these people have already done\nin modeling these kinds of content, as well as potentially providing\nan easy transformation path to RDF for those who care.\n</p>\n<p>\nWhat does RSS-Data provide out of the box which makes any of the\nabove obsolete?  There&apos;s no magic here, other than translating between\nraw data sctructures.  You&apos;ll still need to do the same sort of\nmodeling and structure work that the authors of all the above have\ndone.  It&apos;s always nicer to have someone else do homework for you.\n</p>\n<p>\nSo, if all this new microcontent is so hot, why hasn&apos;t anything like\nthe above been put into use?  Would adding 5 new tags to an RSS\nfeed really be an insane burden to express calendar events?  Granted,\nsome of the other examples above are more complex, but then so are\nthe things they seek to represent.\n</p>\n<p>\nWhat&apos;s the RSS-Data magic that improves on all the above?\n</p>\n",
    "prevPostPath": "2003/10/14/when-rss-attacks",
    "nextPostPath": "2003/10/07/schemas-freedom-and-control"
  },
  {
    "comments_archived": true,
    "date": "2003-10-07T15:12:49.000Z",
    "layout": "post",
    "title": "Schemas, Freedom, and Control",
    "wordpress_id": 494,
    "wordpress_slug": "schemas-freedom-and-control",
    "wordpress_url": "http://www.decafbad.com/blog/?p=494",
    "year": "2003",
    "month": "10",
    "day": "07",
    "isDir": false,
    "slug": "schemas-freedom-and-control",
    "postName": "2003-10-07-schemas-freedom-and-control",
    "html": "<blockquote cite=\"URL\">\nI'll be at the Enterprise Architect Summit in Palm Springs next week,\non a couple of panels. One's entitled <a href=\"http://www.fawcette.com/conferences/eas/sessions.aspx#13SchemasWild\">Schemas in the wild: XML takes\non the vertical industries</a>, and the panelists are Jon Bosak and Jean\nPaoli. The single most important question I'd like to ask these guys\nis: how do we strike the proper balance between freedom and control?\nBy freedom I mean incremental and iterative evolution of data\nstructures in response to patterns of real-world use. By control I\nmean the predictable regularity enforced by a DTD or XSD.\n</blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://weblog.infoworld.com/udell/2003/10/07.html#a821\">Jon Udell's weblog, XML vocabularies: freedom and control</a></cite></small></div>\n<p>\nFor quite awhile now, Jon Udell's been asking the same\nsorts of questions as I did in my <a href=\"http://www.decafbad.com/blog/tech/rss_data_and_schema.html\">longwinded write-up yesterday</a>.\n</p>\n<!--more-->\nshortname=schemas_freedom_and_control\n",
    "body": "<blockquote cite=\"URL\">\r\nI'll be at the Enterprise Architect Summit in Palm Springs next week,\r\non a couple of panels. One's entitled <a href=\"http://www.fawcette.com/conferences/eas/sessions.aspx#13SchemasWild\">Schemas in the wild: XML takes\r\non the vertical industries</a>, and the panelists are Jon Bosak and Jean\r\nPaoli. The single most important question I'd like to ask these guys\r\nis: how do we strike the proper balance between freedom and control?\r\nBy freedom I mean incremental and iterative evolution of data\r\nstructures in response to patterns of real-world use. By control I\r\nmean the predictable regularity enforced by a DTD or XSD.\r\n</blockquote>\r\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://weblog.infoworld.com/udell/2003/10/07.html#a821\">Jon Udell's weblog, XML vocabularies: freedom and control</a></cite></small></div>\r\n<p>\r\nFor quite awhile now, Jon Udell's been asking the same\r\nsorts of questions as I did in my <a href=\"http://www.decafbad.com/blog/tech/rss_data_and_schema.html\">longwinded write-up yesterday</a>.\r\n</p>\r\n<!--more-->\r\nshortname=schemas_freedom_and_control\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/07/schemas-freedom-and-control",
    "summary": "<blockquote cite=\"URL\">\nI&apos;ll be at the Enterprise Architect Summit in Palm Springs next week,\non a couple of panels. One&apos;s entitled <a href=\"http://www.fawcette.com/conferences/eas/sessions.aspx#13SchemasWild\">Schemas in the wild: XML takes\non the vertical industries</a>, and the panelists are Jon Bosak and Jean\nPaoli. The single most important question I&apos;d like to ask these guys\nis: how do we strike the proper balance between freedom and control?\nBy freedom I mean incremental and iterative evolution of data\nstructures in response to patterns of real-world use. By control I\nmean the predictable regularity enforced by a DTD or XSD.\n</blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://weblog.infoworld.com/udell/2003/10/07.html#a821\">Jon Udell&apos;s weblog, XML vocabularies: freedom and control</a></cite></small></div>\n<p>\nFor quite awhile now, Jon Udell&apos;s been asking the same\nsorts of questions as I did in my <a href=\"http://www.decafbad.com/blog/tech/rss_data_and_schema.html\">longwinded write-up yesterday</a>.\n</p>\n",
    "prevPostPath": "2003/10/08/microcontent-and-rss-data",
    "nextPostPath": "2003/10/06/rss-data-and-schema"
  },
  {
    "comments_archived": true,
    "date": "2003-10-06T22:52:44.000Z",
    "layout": "post",
    "title": "RSS-Data and Schema: Thinking about structure and data",
    "wordpress_id": 493,
    "wordpress_slug": "rss-data-and-schema",
    "wordpress_url": "http://www.decafbad.com/blog/?p=493",
    "year": "2003",
    "month": "10",
    "day": "06",
    "isDir": false,
    "slug": "rss-data-and-schema",
    "postName": "2003-10-06-rss-data-and-schema",
    "html": "<blockquote cite=\"http://danja.typepad.com/fecho/2003/10/why_use_schema.html\"><i>Dare Obasanjo has provided some initial bullet points of what a vocabulary gets from having an XML Schema :\n<br /><br />\n * Usually provides a terse and concise description of\n the vocabulary [relative to the prose of the spec]\n<br /><br />\n* Enables software to validate that XML documents\n being received from clients or servers actually\n conform to the vocabulary. This prevents issues like\n each application hacking up its own validator or\n \"liberal RSS parser\". \n<br /><br />\n* Allows vocabulary to co-exist with technologies and\n tools that already support features specific to a\n schema language such as relational to XML mapping,\n object to XML mapping, directed editting, etc.\n</i></blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://danja.typepad.com/fecho/2003/10/why_use_schema.html\">Finally Atom: Why use schema?</a></cite></small></div>\n\n<blockquote cite=\"http://journurl.com/support/index.cfm?fa=skin.read&message=664&group=9&thread=444&date=all&mrow=3&trow=1\"><i>Danny [Ayers]: \"...and the same can already be done using RSS 1.0 as it stands.\"\n<br /><br />\nBut are we talking about the same \"same\"?  The appeal of RSS-Data is that I don't need to work up a schema, get anyone to buy-in, or map anything to an external resource... I take an existing data structure, and plug it into a syndication feed. That's it.\n</i></blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://journurl.com/support/index.cfm?fa=skin.read&message=664&group=9&thread=444&date=all&mrow=3&trow=1\">Roger Benningfield in a comment on his \"RSS-Data: A Working Demo\"</a></cite></small></div> \n\n<blockquote cite=\"http://blogs.it/0100198/2003/10/05.html#a1807\"><i>Yes - we know that RDF can do many of the things RSS-Data was designed for.? But (believe it or not) it really has nothing to do with RSS 1.0 at all.? RSS-Data is about extending RSS 2.0.? OK?? Not RSS 1.0.\n<br /><br />\nThe point here being that the world is bi-forcated and what do we do?? Can't we all live together?? Can't we put our heads together and come up with solutions that BRIDGE between these two standards - which just happen to have almost the same dam name?\n<br /><br />\nI gotta believe there's a way that once we \"structure\" something - like a Calendar Events, Resumes, Recipes or Reviews - we SHOULD be able to express and subscribe to these micro-content?formats - via EITHER RSS 1.0 or RSS 2.0.\n<br /><br />\nOK - get it?? BRIDGE BETWEEN BOTH RSS 1.0 & RSS 2.0.? That's what we want.? BOTH!</i></blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://blogs.it/0100198/2003/10/05.html#a1807\">Marc's Voice: We want BOTH RSS 1.0 & RSS 2.0!</a></cite></small></div>\n<br /><br />\nSo, it looks like this RSS-Data thing is gaining momentum and <a href=\"http://journurl.com/support/users/admin/index.cfm?mode=article&entry=662\">demos</a>, so I'm guessing that it's going to become one of the thing us <a href=\"http://www.decafbad.com/blog/tech/old/oooaee.html\">rock-bangers</a> will have to contend with at some point or another in tinkering with things in syndication and interoperability.  I have my misgivings about it, which mostly center around the issue of schema.\n<br /><br />\nSee, the goal of RSS-Data, as I understand it, is to bridge raw data from one programming environment to another, and package it up to be syndicated within RSS feeds for which an existing infrastructure already exists.  So, it's \"easy\".  Just throw your data structures at a library, which serializes them into some magic XML.  At the receiving end, another library, written possibly in a different language altogether, transliterates the magic XML into local idiomatic data structures.  You never think much about XML, nor does the consumer of your data.\n<br /><br />\nBut...  we're still talking about <i>structures</i> here.  Whether they're represented by XML tags, RDF triples, RDF/XML serialization, or hashtables and arrays-- there's still a structure involved.  From whence did it come?\n<br /><br />\nAbout RSS-Data, Roger Benningfield writes, \"...I don't need to work up a schema...\", which is literally true.  He goes on to write, \"I take an existing data structure, and plug it into a syndication feed. That's it.\"\n<br /><br />\nFrom where did this \"existing data structure\" originate?  For <a href=\"http://www.decafbad.com/blog/tech/rss_data_versus_namespace.html\">my examples</a>, I used an existing schema from the Amazon web services.  Where'd you get yours?\n<br /><br />\nI'd guess that you got it from somewhere in the bowels of your scripts, a hash or rough structure once limited to intra- or inter- module data exchange, but now pressed into service as a unit of interoperation.  I wouldn't expect that you'd put much specific effort toward making this data structure particularly concise or friendly for interoperation.  This might not be a big deal for now.  And anyway, why bother with it?  That's not the philosophy with this tech, as far as I understand it.  The idea, is that hopefully this data structure is already <i>good enough</i> for sharing.  And, luckily enough, this is sometimes the case.\n<br /><br />\nOn the other hand, maybe you're sitting down to come up with a new data structure for sharing, from scratch.  During this activity, I imagine that you'll be mulling over what goes where, what's contained by what, what this hash or dictionary key means versus that one.  You'll likely be deciding whether to use a string here, or a date time here, and you'll likely have some idea about ranges of values for various things.  This is a bit more abstract an activity than you may have gone through, were you simply creating an internal data structure for your app.  In this case, you'd likely be thinking more about the data in and of itself, rather than the specific needs of your app and its API. In my opinion, this is a <i>bit better</i> for sharing.\n<br /><br />\nBut, how's your documentation?  Will I be able to reliably accept data from your application by just looking at a write-up or a rough spec?  Will I have to walk through your source code to reverse engineer general usage?  Will I have to examine RSS-Data dumps to come up with a rough approximation of what to expect from your data structure?  If this is a data structure plucked from the depths of your script, who knows?  If this structure was designed specifically for sharing, I hope that you've documented as you go along.\n<br /><br />\nWhat RSS-Data makes me worry about is an abundance of fuzzy, adhoc structures for interchange that no one ever quite documents well enough because they're too busy hacking along and pushing things out the door.  Maybe they'll be good enough, given discipline and thoughtfulness, but then maybe they'll end up in a mess.  But, just like many scripting languages, there are no facilities in RSS-Data currently to either require or even merely encourage clean and documented interchange structures.\n<br /><br />\nThis is a <b>code-first-schema-later</b> approach:  The schema stems, eventually, from general usage and tradition, and if we're lucky, from documentation.  If the people hacking on the project have discipline and are thoughtful, this documentation will be well maintained, and changes well communicated.  It can be a train-wreck, but it doesn't have to be.\n<br /><br />\nOn the other hand, we can circle back to that <a href=\"http://xml.amazon.com/schemas3/dev-lite.xsd\">Amazon Web Services schema</a> I used in my <a href=\"http://www.decafbad.com/blog/tech/rss_data_versus_namespace.html\">previous examples</a>.  This technology, <a href=\"http://www.w3.org/TR/xmlschema-1/\">XML Schema</a>, represents the opposite approach: <b>schema-first-code-later</b>.  In coming up with such a schema, I think still think about information and data structures just as I would while hacking on a script and thinking about a native data structure for sharing.  It's just that, with this approach, I'm doing things in a different order and front-loading the thinking. \n<br /><br />\nBut, there's more: if I build something like an XML Schema, I'm creating something which is both documentation <i>and</i> a machine readable resource.  I'm sure someone out there is working on or has released tools or stylesheets to convert XML Schema into HTML or RTF or something human readable.  Hell, you could even <a href=\"http://www.xml.com/pub/a/2003/01/15/transforming-schemas.html\">apply some transformation to the schema to generate code or data entry forms</a>.\n<br /><br />\nOnce I have a schema, implementing code to produce and handle XML data conforming to it isn't really all that much harder than using straight RSS-Data.  This is an item for much dispute, but my gut and limited experience tells me that the difference in complexity will usually be more like a dozen lines of code or less in a decent environment rather than, say, an order of magnitude.  I think we'll find that things will tend to be consistent with <a href=\"http://www.myelin.co.nz/post/2003/10/3/#200310033\">Phillip Pearson's example implementations</a> of an RSS namespace extension versus an RSS-Data example.\n<br /><br />\nWhat we get for the added complexity, though, is certainty.  I can say, \"Here.  This is a URL to the schema for the XML data my application produces.\"  If I've lived up to my end \nof the bargain, you won't even need to see my application's code or documentation.  You can implement with the schema, and our apps will interoperate.  We can treat the data formats <i>as separate entities from applications</i>.  In other words, we can treat interchange <i>as neutral ground</i>.\n<br /><br />\nThe problem, of course, is that this business with schema carries with it a bit of overhead, as well as a demand that you do some homework.  You'll need to know more than your immediate programming environment.  You'll need to think about XML and XML schemas, and you can't just stay in your comfortable favorite environment of programing language idiom.  This is off-putting to some, to say the least.\n<br /><br />\nSo...  how about Marc's question?  \"Can't we all live together?? Can't we put our heads together and come up with solutions that BRIDGE between these two standards - which just happen to have almost the same dam name?\"  On the one side, I see hackers who want to get down and code, and who consider themselves and each other thoughtful and disciplined enough to do the right thing and prevent trainwrecks.  On the other side, I see hackers who want to put discipline and thoughtfulness upfront and <i>in writing (or typing?)</i> before they code, because they don't really trust themselves or others to keep from wrecking the trains all the time.\n<br /><br />\nPersonally, I want to live somewhere in the middle.  Just enough distrust of myself and others to discourage sloppy problems, but not too much so that I have to trudge through careful molasses to get anywhere.\n<br /><br />\nI don't think I'm thrilled with RSS-Data.  But if you're going to use RSS-Data anyway, but here's one thought out of all this:  Is there some way we could come up with an RSS-Data-analogue for schema?  Forget about XML schema and standards groups and the like.  Think about some semi-universal way of translating meta-data-structures composed within one's favorite scripting language which forms documentation and a promise about what to expect over the wire?  If done right, maybe we could even generate an XML schema with this, and that could be a bridge between the two approaches.  On the surface, it sounds like a wonky idea to me, but hey...\n<br /><br />\nThanks for bearing with me through this much-longer-than-usual post.  :)\n<!--more-->\nshortname=rss_data_and_schema\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221086629\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://therealadam.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b205857010d759de7e2c8cb592b01dd5&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://therealadam.com\">Adam Keys</a>\n</div>\n<a href=\"#comment-221086629\" class=\"permalink\"><time datetime=\"2003-10-06T23:03:14\">2003-10-06T23:03:14</time></a>\n</div>\n<div class=\"content\">This is absolutely brilliant.  I'd been wanting to get into RSS-Data tonight and this is the perfect jumping off point.  Unfortunately there are so many jumping off points you've offered, I'm afraid I'll bog down in the research.  Ah, life is difficult.  So many technologies, so little time.</div>\n</li>\n</ul>\n</div>\n",
    "body": "<blockquote cite=\"http://danja.typepad.com/fecho/2003/10/why_use_schema.html\"><i>Dare Obasanjo has provided some initial bullet points of what a vocabulary gets from having an XML Schema :\r\n<br /><br />\r\n * Usually provides a terse and concise description of\r\n the vocabulary [relative to the prose of the spec]\r\n<br /><br />\r\n* Enables software to validate that XML documents\r\n being received from clients or servers actually\r\n conform to the vocabulary. This prevents issues like\r\n each application hacking up its own validator or\r\n \"liberal RSS parser\". \r\n<br /><br />\r\n* Allows vocabulary to co-exist with technologies and\r\n tools that already support features specific to a\r\n schema language such as relational to XML mapping,\r\n object to XML mapping, directed editting, etc.\r\n</i></blockquote>\r\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://danja.typepad.com/fecho/2003/10/why_use_schema.html\">Finally Atom: Why use schema?</a></cite></small></div>\r\n\r\n<blockquote cite=\"http://journurl.com/support/index.cfm?fa=skin.read&message=664&group=9&thread=444&date=all&mrow=3&trow=1\"><i>Danny [Ayers]: \"...and the same can already be done using RSS 1.0 as it stands.\"\r\n<br /><br />\r\nBut are we talking about the same \"same\"?  The appeal of RSS-Data is that I don't need to work up a schema, get anyone to buy-in, or map anything to an external resource... I take an existing data structure, and plug it into a syndication feed. That's it.\r\n</i></blockquote>\r\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://journurl.com/support/index.cfm?fa=skin.read&message=664&group=9&thread=444&date=all&mrow=3&trow=1\">Roger Benningfield in a comment on his \"RSS-Data: A Working Demo\"</a></cite></small></div> \r\n\r\n<blockquote cite=\"http://blogs.it/0100198/2003/10/05.html#a1807\"><i>Yes - we know that RDF can do many of the things RSS-Data was designed for.? But (believe it or not) it really has nothing to do with RSS 1.0 at all.? RSS-Data is about extending RSS 2.0.? OK?? Not RSS 1.0.\r\n<br /><br />\r\nThe point here being that the world is bi-forcated and what do we do?? Can't we all live together?? Can't we put our heads together and come up with solutions that BRIDGE between these two standards - which just happen to have almost the same dam name?\r\n<br /><br />\r\nI gotta believe there's a way that once we \"structure\" something - like a Calendar Events, Resumes, Recipes or Reviews - we SHOULD be able to express and subscribe to these micro-content?formats - via EITHER RSS 1.0 or RSS 2.0.\r\n<br /><br />\r\nOK - get it?? BRIDGE BETWEEN BOTH RSS 1.0 & RSS 2.0.? That's what we want.? BOTH!</i></blockquote>\r\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://blogs.it/0100198/2003/10/05.html#a1807\">Marc's Voice: We want BOTH RSS 1.0 & RSS 2.0!</a></cite></small></div>\r\n<br /><br />\r\nSo, it looks like this RSS-Data thing is gaining momentum and <a href=\"http://journurl.com/support/users/admin/index.cfm?mode=article&entry=662\">demos</a>, so I'm guessing that it's going to become one of the thing us <a href=\"http://www.decafbad.com/blog/tech/old/oooaee.html\">rock-bangers</a> will have to contend with at some point or another in tinkering with things in syndication and interoperability.  I have my misgivings about it, which mostly center around the issue of schema.\r\n<br /><br />\r\nSee, the goal of RSS-Data, as I understand it, is to bridge raw data from one programming environment to another, and package it up to be syndicated within RSS feeds for which an existing infrastructure already exists.  So, it's \"easy\".  Just throw your data structures at a library, which serializes them into some magic XML.  At the receiving end, another library, written possibly in a different language altogether, transliterates the magic XML into local idiomatic data structures.  You never think much about XML, nor does the consumer of your data.\r\n<br /><br />\r\nBut...  we're still talking about <i>structures</i> here.  Whether they're represented by XML tags, RDF triples, RDF/XML serialization, or hashtables and arrays-- there's still a structure involved.  From whence did it come?\r\n<br /><br />\r\nAbout RSS-Data, Roger Benningfield writes, \"...I don't need to work up a schema...\", which is literally true.  He goes on to write, \"I take an existing data structure, and plug it into a syndication feed. That's it.\"\r\n<br /><br />\r\nFrom where did this \"existing data structure\" originate?  For <a href=\"http://www.decafbad.com/blog/tech/rss_data_versus_namespace.html\">my examples</a>, I used an existing schema from the Amazon web services.  Where'd you get yours?\r\n<br /><br />\r\nI'd guess that you got it from somewhere in the bowels of your scripts, a hash or rough structure once limited to intra- or inter- module data exchange, but now pressed into service as a unit of interoperation.  I wouldn't expect that you'd put much specific effort toward making this data structure particularly concise or friendly for interoperation.  This might not be a big deal for now.  And anyway, why bother with it?  That's not the philosophy with this tech, as far as I understand it.  The idea, is that hopefully this data structure is already <i>good enough</i> for sharing.  And, luckily enough, this is sometimes the case.\r\n<br /><br />\r\nOn the other hand, maybe you're sitting down to come up with a new data structure for sharing, from scratch.  During this activity, I imagine that you'll be mulling over what goes where, what's contained by what, what this hash or dictionary key means versus that one.  You'll likely be deciding whether to use a string here, or a date time here, and you'll likely have some idea about ranges of values for various things.  This is a bit more abstract an activity than you may have gone through, were you simply creating an internal data structure for your app.  In this case, you'd likely be thinking more about the data in and of itself, rather than the specific needs of your app and its API. In my opinion, this is a <i>bit better</i> for sharing.\r\n<br /><br />\r\nBut, how's your documentation?  Will I be able to reliably accept data from your application by just looking at a write-up or a rough spec?  Will I have to walk through your source code to reverse engineer general usage?  Will I have to examine RSS-Data dumps to come up with a rough approximation of what to expect from your data structure?  If this is a data structure plucked from the depths of your script, who knows?  If this structure was designed specifically for sharing, I hope that you've documented as you go along.\r\n<br /><br />\r\nWhat RSS-Data makes me worry about is an abundance of fuzzy, adhoc structures for interchange that no one ever quite documents well enough because they're too busy hacking along and pushing things out the door.  Maybe they'll be good enough, given discipline and thoughtfulness, but then maybe they'll end up in a mess.  But, just like many scripting languages, there are no facilities in RSS-Data currently to either require or even merely encourage clean and documented interchange structures.\r\n<br /><br />\r\nThis is a <b>code-first-schema-later</b> approach:  The schema stems, eventually, from general usage and tradition, and if we're lucky, from documentation.  If the people hacking on the project have discipline and are thoughtful, this documentation will be well maintained, and changes well communicated.  It can be a train-wreck, but it doesn't have to be.\r\n<br /><br />\r\nOn the other hand, we can circle back to that <a href=\"http://xml.amazon.com/schemas3/dev-lite.xsd\">Amazon Web Services schema</a> I used in my <a href=\"http://www.decafbad.com/blog/tech/rss_data_versus_namespace.html\">previous examples</a>.  This technology, <a href=\"http://www.w3.org/TR/xmlschema-1/\">XML Schema</a>, represents the opposite approach: <b>schema-first-code-later</b>.  In coming up with such a schema, I think still think about information and data structures just as I would while hacking on a script and thinking about a native data structure for sharing.  It's just that, with this approach, I'm doing things in a different order and front-loading the thinking. \r\n<br /><br />\r\nBut, there's more: if I build something like an XML Schema, I'm creating something which is both documentation <i>and</i> a machine readable resource.  I'm sure someone out there is working on or has released tools or stylesheets to convert XML Schema into HTML or RTF or something human readable.  Hell, you could even <a href=\"http://www.xml.com/pub/a/2003/01/15/transforming-schemas.html\">apply some transformation to the schema to generate code or data entry forms</a>.\r\n<br /><br />\r\nOnce I have a schema, implementing code to produce and handle XML data conforming to it isn't really all that much harder than using straight RSS-Data.  This is an item for much dispute, but my gut and limited experience tells me that the difference in complexity will usually be more like a dozen lines of code or less in a decent environment rather than, say, an order of magnitude.  I think we'll find that things will tend to be consistent with <a href=\"http://www.myelin.co.nz/post/2003/10/3/#200310033\">Phillip Pearson's example implementations</a> of an RSS namespace extension versus an RSS-Data example.\r\n<br /><br />\r\nWhat we get for the added complexity, though, is certainty.  I can say, \"Here.  This is a URL to the schema for the XML data my application produces.\"  If I've lived up to my end \r\nof the bargain, you won't even need to see my application's code or documentation.  You can implement with the schema, and our apps will interoperate.  We can treat the data formats <i>as separate entities from applications</i>.  In other words, we can treat interchange <i>as neutral ground</i>.\r\n<br /><br />\r\nThe problem, of course, is that this business with schema carries with it a bit of overhead, as well as a demand that you do some homework.  You'll need to know more than your immediate programming environment.  You'll need to think about XML and XML schemas, and you can't just stay in your comfortable favorite environment of programing language idiom.  This is off-putting to some, to say the least.\r\n<br /><br />\r\nSo...  how about Marc's question?  \"Can't we all live together?? Can't we put our heads together and come up with solutions that BRIDGE between these two standards - which just happen to have almost the same dam name?\"  On the one side, I see hackers who want to get down and code, and who consider themselves and each other thoughtful and disciplined enough to do the right thing and prevent trainwrecks.  On the other side, I see hackers who want to put discipline and thoughtfulness upfront and <i>in writing (or typing?)</i> before they code, because they don't really trust themselves or others to keep from wrecking the trains all the time.\r\n<br /><br />\r\nPersonally, I want to live somewhere in the middle.  Just enough distrust of myself and others to discourage sloppy problems, but not too much so that I have to trudge through careful molasses to get anywhere.\r\n<br /><br />\r\nI don't think I'm thrilled with RSS-Data.  But if you're going to use RSS-Data anyway, but here's one thought out of all this:  Is there some way we could come up with an RSS-Data-analogue for schema?  Forget about XML schema and standards groups and the like.  Think about some semi-universal way of translating meta-data-structures composed within one's favorite scripting language which forms documentation and a promise about what to expect over the wire?  If done right, maybe we could even generate an XML schema with this, and that could be a bridge between the two approaches.  On the surface, it sounds like a wonky idea to me, but hey...\r\n<br /><br />\r\nThanks for bearing with me through this much-longer-than-usual post.  :)\r\n<!--more-->\r\nshortname=rss_data_and_schema\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221086629\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://therealadam.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=b205857010d759de7e2c8cb592b01dd5&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://therealadam.com\">Adam Keys</a>\r\n                </div>\r\n                <a href=\"#comment-221086629\" class=\"permalink\"><time datetime=\"2003-10-06T23:03:14\">2003-10-06T23:03:14</time></a>\r\n            </div>\r\n            <div class=\"content\">This is absolutely brilliant.  I'd been wanting to get into RSS-Data tonight and this is the perfect jumping off point.  Unfortunately there are so many jumping off points you've offered, I'm afraid I'll bog down in the research.  Ah, life is difficult.  So many technologies, so little time.</div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/06/rss-data-and-schema",
    "summary": "<blockquote cite=\"http://danja.typepad.com/fecho/2003/10/why_use_schema.html\"><i>Dare Obasanjo has provided some initial bullet points of what a vocabulary gets from having an XML Schema :\n<br><br>\n * Usually provides a terse and concise description of\n the vocabulary [relative to the prose of the spec]\n<br><br>\n* Enables software to validate that XML documents\n being received from clients or servers actually\n conform to the vocabulary. This prevents issues like\n each application hacking up its own validator or\n &quot;liberal RSS parser&quot;. \n<br><br>\n* Allows vocabulary to co-exist with technologies and\n tools that already support features specific to a\n schema language such as relational to XML mapping,\n object to XML mapping, directed editting, etc.\n</i></blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://danja.typepad.com/fecho/2003/10/why_use_schema.html\">Finally Atom: Why use schema?</a></cite></small></div>\n\n<blockquote cite=\"http://journurl.com/support/index.cfm?fa=skin.read&amp;message=664&amp;group=9&amp;thread=444&amp;date=all&amp;mrow=3&amp;trow=1\"><i>Danny [Ayers]: &quot;...and the same can already be done using RSS 1.0 as it stands.&quot;\n<br><br>\nBut are we talking about the same &quot;same&quot;?  The appeal of RSS-Data is that I don&apos;t need to work up a schema, get anyone to buy-in, or map anything to an external resource... I take an existing data structure, and plug it into a syndication feed. That&apos;s it.\n</i></blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://journurl.com/support/index.cfm?fa=skin.read&amp;message=664&amp;group=9&amp;thread=444&amp;date=all&amp;mrow=3&amp;trow=1\">Roger Benningfield in a comment on his &quot;RSS-Data: A Working Demo&quot;</a></cite></small></div> \n\n<blockquote cite=\"http://blogs.it/0100198/2003/10/05.html#a1807\"><i>Yes - we know that RDF can do many of the things RSS-Data was designed for.? But (believe it or not) it really has nothing to do with RSS 1.0 at all.? RSS-Data is about extending RSS 2.0.? OK?? Not RSS 1.0.\n<br><br>\nThe point here being that the world is bi-forcated and what do we do?? Can&apos;t we all live together?? Can&apos;t we put our heads together and come up with solutions that BRIDGE between these two standards - which just happen to have almost the same dam name?\n<br><br>\nI gotta believe there&apos;s a way that once we &quot;structure&quot; something - like a Calendar Events, Resumes, Recipes or Reviews - we SHOULD be able to express and subscribe to these micro-content?formats - via EITHER RSS 1.0 or RSS 2.0.\n<br><br>\nOK - get it?? BRIDGE BETWEEN BOTH RSS 1.0 &amp; RSS 2.0.? That&apos;s what we want.? BOTH!</i></blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"http://blogs.it/0100198/2003/10/05.html#a1807\">Marc&apos;s Voice: We want BOTH RSS 1.0 &amp; RSS 2.0!</a></cite></small></div>\n<br><br>\nSo, it looks like this RSS-Data thing is gaining momentum and <a href=\"http://journurl.com/support/users/admin/index.cfm?mode=article&amp;entry=662\">demos</a>, so I&apos;m guessing that it&apos;s going to become one of the thing us <a href=\"http://www.decafbad.com/blog/tech/old/oooaee.html\">rock-bangers</a> will have to contend with at some point or another in tinkering with things in syndication and interoperability.  I have my misgivings about it, which mostly center around the issue of schema.\n<br><br>\nSee, the goal of RSS-Data, as I understand it, is to bridge raw data from one programming environment to another, and package it up to be syndicated within RSS feeds for which an existing infrastructure already exists.  So, it&apos;s &quot;easy&quot;.  Just throw your data structures at a library, which serializes them into some magic XML.  At the receiving end, another library, written possibly in a different language altogether, transliterates the magic XML into local idiomatic data structures.  You never think much about XML, nor does the consumer of your data.\n<br><br>\nBut...  we&apos;re still talking about <i>structures</i> here.  Whether they&apos;re represented by XML tags, RDF triples, RDF/XML serialization, or hashtables and arrays-- there&apos;s still a structure involved.  From whence did it come?\n<br><br>\nAbout RSS-Data, Roger Benningfield writes, &quot;...I don&apos;t need to work up a schema...&quot;, which is literally true.  He goes on to write, &quot;I take an existing data structure, and plug it into a syndication feed. That&apos;s it.&quot;\n<br><br>\nFrom where did this &quot;existing data structure&quot; originate?  For <a href=\"http://www.decafbad.com/blog/tech/rss_data_versus_namespace.html\">my examples</a>, I used an existing schema from the Amazon web services.  Where&apos;d you get yours?\n<br><br>\nI&apos;d guess that you got it from somewhere in the bowels of your scripts, a hash or rough structure once limited to intra- or inter- module data exchange, but now pressed into service as a unit of interoperation.  I wouldn&apos;t expect that you&apos;d put much specific effort toward making this data structure particularly concise or friendly for interoperation.  This might not be a big deal for now.  And anyway, why bother with it?  That&apos;s not the philosophy with this tech, as far as I understand it.  The idea, is that hopefully this data structure is already <i>good enough</i> for sharing.  And, luckily enough, this is sometimes the case.\n<br><br>\nOn the other hand, maybe you&apos;re sitting down to come up with a new data structure for sharing, from scratch.  During this activity, I imagine that you&apos;ll be mulling over what goes where, what&apos;s contained by what, what this hash or dictionary key means versus that one.  You&apos;ll likely be deciding whether to use a string here, or a date time here, and you&apos;ll likely have some idea about ranges of values for various things.  This is a bit more abstract an activity than you may have gone through, were you simply creating an internal data structure for your app.  In this case, you&apos;d likely be thinking more about the data in and of itself, rather than the specific needs of your app and its API. In my opinion, this is a <i>bit better</i> for sharing.\n<br><br>\nBut, how&apos;s your documentation?  Will I be able to reliably accept data from your application by just looking at a write-up or a rough spec?  Will I have to walk through your source code to reverse engineer general usage?  Will I have to examine RSS-Data dumps to come up with a rough approximation of what to expect from your data structure?  If this is a data structure plucked from the depths of your script, who knows?  If this structure was designed specifically for sharing, I hope that you&apos;ve documented as you go along.\n<br><br>\nWhat RSS-Data makes me worry about is an abundance of fuzzy, adhoc structures for interchange that no one ever quite documents well enough because they&apos;re too busy hacking along and pushing things out the door.  Maybe they&apos;ll be good enough, given discipline and thoughtfulness, but then maybe they&apos;ll end up in a mess.  But, just like many scripting languages, there are no facilities in RSS-Data currently to either require or even merely encourage clean and documented interchange structures.\n<br><br>\nThis is a <b>code-first-schema-later</b> approach:  The schema stems, eventually, from general usage and tradition, and if we&apos;re lucky, from documentation.  If the people hacking on the project have discipline and are thoughtful, this documentation will be well maintained, and changes well communicated.  It can be a train-wreck, but it doesn&apos;t have to be.\n<br><br>\nOn the other hand, we can circle back to that <a href=\"http://xml.amazon.com/schemas3/dev-lite.xsd\">Amazon Web Services schema</a> I used in my <a href=\"http://www.decafbad.com/blog/tech/rss_data_versus_namespace.html\">previous examples</a>.  This technology, <a href=\"http://www.w3.org/TR/xmlschema-1/\">XML Schema</a>, represents the opposite approach: <b>schema-first-code-later</b>.  In coming up with such a schema, I think still think about information and data structures just as I would while hacking on a script and thinking about a native data structure for sharing.  It&apos;s just that, with this approach, I&apos;m doing things in a different order and front-loading the thinking. \n<br><br>\nBut, there&apos;s more: if I build something like an XML Schema, I&apos;m creating something which is both documentation <i>and</i> a machine readable resource.  I&apos;m sure someone out there is working on or has released tools or stylesheets to convert XML Schema into HTML or RTF or something human readable.  Hell, you could even <a href=\"http://www.xml.com/pub/a/2003/01/15/transforming-schemas.html\">apply some transformation to the schema to generate code or data entry forms</a>.\n<br><br>\nOnce I have a schema, implementing code to produce and handle XML data conforming to it isn&apos;t really all that much harder than using straight RSS-Data.  This is an item for much dispute, but my gut and limited experience tells me that the difference in complexity will usually be more like a dozen lines of code or less in a decent environment rather than, say, an order of magnitude.  I think we&apos;ll find that things will tend to be consistent with <a href=\"http://www.myelin.co.nz/post/2003/10/3/#200310033\">Phillip Pearson&apos;s example implementations</a> of an RSS namespace extension versus an RSS-Data example.\n<br><br>\nWhat we get for the added complexity, though, is certainty.  I can say, &quot;Here.  This is a URL to the schema for the XML data my application produces.&quot;  If I&apos;ve lived up to my end \nof the bargain, you won&apos;t even need to see my application&apos;s code or documentation.  You can implement with the schema, and our apps will interoperate.  We can treat the data formats <i>as separate entities from applications</i>.  In other words, we can treat interchange <i>as neutral ground</i>.\n<br><br>\nThe problem, of course, is that this business with schema carries with it a bit of overhead, as well as a demand that you do some homework.  You&apos;ll need to know more than your immediate programming environment.  You&apos;ll need to think about XML and XML schemas, and you can&apos;t just stay in your comfortable favorite environment of programing language idiom.  This is off-putting to some, to say the least.\n<br><br>\nSo...  how about Marc&apos;s question?  &quot;Can&apos;t we all live together?? Can&apos;t we put our heads together and come up with solutions that BRIDGE between these two standards - which just happen to have almost the same dam name?&quot;  On the one side, I see hackers who want to get down and code, and who consider themselves and each other thoughtful and disciplined enough to do the right thing and prevent trainwrecks.  On the other side, I see hackers who want to put discipline and thoughtfulness upfront and <i>in writing (or typing?)</i> before they code, because they don&apos;t really trust themselves or others to keep from wrecking the trains all the time.\n<br><br>\nPersonally, I want to live somewhere in the middle.  Just enough distrust of myself and others to discourage sloppy problems, but not too much so that I have to trudge through careful molasses to get anywhere.\n<br><br>\nI don&apos;t think I&apos;m thrilled with RSS-Data.  But if you&apos;re going to use RSS-Data anyway, but here&apos;s one thought out of all this:  Is there some way we could come up with an RSS-Data-analogue for schema?  Forget about XML schema and standards groups and the like.  Think about some semi-universal way of translating meta-data-structures composed within one&apos;s favorite scripting language which forms documentation and a promise about what to expect over the wire?  If done right, maybe we could even generate an XML schema with this, and that could be a bridge between the two approaches.  On the surface, it sounds like a wonky idea to me, but hey...\n<br><br>\nThanks for bearing with me through this much-longer-than-usual post.  :)\n",
    "prevPostPath": "2003/10/07/schemas-freedom-and-control",
    "nextPostPath": "2003/10/06/http-in-rdf"
  },
  {
    "comments_archived": true,
    "date": "2003-10-06T19:45:12.000Z",
    "layout": "post",
    "title": "RDF representations of HTTP transactions?",
    "wordpress_id": 492,
    "wordpress_slug": "http-in-rdf",
    "wordpress_url": "http://www.decafbad.com/blog/?p=492",
    "year": "2003",
    "month": "10",
    "day": "06",
    "isDir": false,
    "slug": "http-in-rdf",
    "postName": "2003-10-06-http-in-rdf",
    "html": "<blockquote cite=\"http://ilrt.org/discovery/chatlogs/rdfig/2003-10-06#T14-01-47\"><i>13:52:29 &lt;monkeyiq&gt; is there a notation for capturing browse\nhistories in rdf?\n<br /><br />\n13:53:25 &lt;DanC&gt; good question, monkeyiq... I wanted something\nlike that a while ago...\n<br /><br />\n13:53:30 &lt;DanC&gt; I didn't find anything in particular.</i></blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"\">#rdfig: hypertext histories and RDF schemas for HTTP</a></cite></small></div>\n<p>\nFor what it's worth, I'm looking <a href=\"http://rdfig.xmlhack.com/2003/10/06/2003-10-06.html#1065448897.942970\">for this</a> too.  I've done a little bit\nof work in cobbling together some RDF representations of HTTP transactions,\nin order to record browsing history in a rich way.  I've\nbasically just been mapping from <a href=\"http://www.ietf.org/rfc/rfc2616#\">HTTP/1.1</a>\nheader fields to RDF properties.  It's been a little while, but I seem to remember that both \n<a href=\"http://www.decafbad.com/cvs/dbproxy/plugins/metaminer/lib/metaminer/__init__.py?rev=HEAD&content-type=text/vnd.viewcvs-markup\">dbproxy's metaminer plugin</a>\nand\n<a href=\"http://www.decafbad.com/cvs/AgentFrank/plugins/MetaMiner/src/com/decafbad/www/filter/MetaStoreQueue.java?rev=HEAD&content-type=text/vnd.viewcvs-markup\">AgentFrank's MetaMiner plugin</a>\nhave implementations toward this end.  Sooner or later, I'll get back to one project or\nthe other, and I'd really like someone else to do my homework on this. :)\n</p>\n<!--more-->\nshortname=http_in_rdf\n",
    "body": "<blockquote cite=\"http://ilrt.org/discovery/chatlogs/rdfig/2003-10-06#T14-01-47\"><i>13:52:29 &lt;monkeyiq&gt; is there a notation for capturing browse\r\nhistories in rdf?\r\n<br /><br />\r\n13:53:25 &lt;DanC&gt; good question, monkeyiq... I wanted something\r\nlike that a while ago...\r\n<br /><br />\r\n13:53:30 &lt;DanC&gt; I didn't find anything in particular.</i></blockquote>\r\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href=\"\">#rdfig: hypertext histories and RDF schemas for HTTP</a></cite></small></div>\r\n<p>\r\nFor what it's worth, I'm looking <a href=\"http://rdfig.xmlhack.com/2003/10/06/2003-10-06.html#1065448897.942970\">for this</a> too.  I've done a little bit\r\nof work in cobbling together some RDF representations of HTTP transactions,\r\nin order to record browsing history in a rich way.  I've\r\nbasically just been mapping from <a href=\"http://www.ietf.org/rfc/rfc2616#\">HTTP/1.1</a>\r\nheader fields to RDF properties.  It's been a little while, but I seem to remember that both \r\n<a href=\"http://www.decafbad.com/cvs/dbproxy/plugins/metaminer/lib/metaminer/__init__.py?rev=HEAD&content-type=text/vnd.viewcvs-markup\">dbproxy's metaminer plugin</a>\r\nand\r\n<a href=\"http://www.decafbad.com/cvs/AgentFrank/plugins/MetaMiner/src/com/decafbad/www/filter/MetaStoreQueue.java?rev=HEAD&content-type=text/vnd.viewcvs-markup\">AgentFrank's MetaMiner plugin</a>\r\nhave implementations toward this end.  Sooner or later, I'll get back to one project or\r\nthe other, and I'd really like someone else to do my homework on this. :)\r\n</p>\r\n<!--more-->\r\nshortname=http_in_rdf\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/06/http-in-rdf",
    "summary": "<blockquote cite=\"http://ilrt.org/discovery/chatlogs/rdfig/2003-10-06#T14-01-47\"><i>13:52:29 &lt;monkeyiq&gt; is there a notation for capturing browse\nhistories in rdf?\n<br><br>\n13:53:25 &lt;DanC&gt; good question, monkeyiq... I wanted something\nlike that a while ago...\n<br><br>\n13:53:30 &lt;DanC&gt; I didn&apos;t find anything in particular.</i></blockquote>\n<div class=\"credit\" align=\"right\"><small>Source:<cite><a href>#rdfig: hypertext histories and RDF schemas for HTTP</a></cite></small></div>\n<p>\nFor what it&apos;s worth, I&apos;m looking <a href=\"http://rdfig.xmlhack.com/2003/10/06/2003-10-06.html#1065448897.942970\">for this</a> too.  I&apos;ve done a little bit\nof work in cobbling together some RDF representations of HTTP transactions,\nin order to record browsing history in a rich way.  I&apos;ve\nbasically just been mapping from <a href=\"http://www.ietf.org/rfc/rfc2616#\">HTTP/1.1</a>\nheader fields to RDF properties.  It&apos;s been a little while, but I seem to remember that both \n<a href=\"http://www.decafbad.com/cvs/dbproxy/plugins/metaminer/lib/metaminer/__init__.py?rev=HEAD&amp;content-type=text/vnd.viewcvs-markup\">dbproxy&apos;s metaminer plugin</a>\nand\n<a href=\"http://www.decafbad.com/cvs/AgentFrank/plugins/MetaMiner/src/com/decafbad/www/filter/MetaStoreQueue.java?rev=HEAD&amp;content-type=text/vnd.viewcvs-markup\">AgentFrank&apos;s MetaMiner plugin</a>\nhave implementations toward this end.  Sooner or later, I&apos;ll get back to one project or\nthe other, and I&apos;d really like someone else to do my homework on this. :)\n</p>\n",
    "prevPostPath": "2003/10/06/rss-data-and-schema",
    "nextPostPath": "2003/10/03/a-quick-irc-soap-primer"
  },
  {
    "comments_archived": true,
    "date": "2003-10-03T13:28:17.000Z",
    "layout": "post",
    "title": "A quick SOAP primer via IRC (but not SOAP via IRC)",
    "wordpress_id": 491,
    "wordpress_slug": "a-quick-irc-soap-primer",
    "wordpress_url": "http://www.decafbad.com/blog/?p=491",
    "year": "2003",
    "month": "10",
    "day": "03",
    "isDir": false,
    "slug": "a-quick-irc-soap-primer",
    "postName": "2003-10-03-a-quick-irc-soap-primer",
    "html": "<p>\nAfter making those RSS namespace examples, I was thinking aloud about\nSOAP on #joiito yesterday and how it compares to what I did with the Amazon\ndata.  <a href=\"http://www.intertwingly.com\">Sam Ruby</a>\nhappened to be in the room:\n</p>\n<pre>&lt;rubys&gt; deusx: want a quick primer?\n\n<p>&lt;deusx&gt; rubys: I&#39;d love one, though unfortunately at the moment,\nI&#39;m about to be off to a meeting :(</p>\n<ul>\n<li>f8dy would like a quick primer</li>\n</ul>\n<p>&lt;rubys&gt; This is really quick.  Take some XML.  XML that doesn&#39;t\nhave a DTD or any PI&#39;s.  Put it in a soap:Body.  Put the soap:Body in\na soap:Envelope.  Voila&#39;, you have valid document literal SOAP.</pre></p>\n<p>\nThat <i>was</i> a quick primer, and though I know there's more to\nit, putting it like that makes me see SOAP a little differently.\n</p>\n<!--more-->\nshortname=a_quick_irc_soap_primer\n",
    "body": "<p>\r\nAfter making those RSS namespace examples, I was thinking aloud about\r\nSOAP on #joiito yesterday and how it compares to what I did with the Amazon\r\ndata.  <a href=\"http://www.intertwingly.com\">Sam Ruby</a>\r\nhappened to be in the room:\r\n</p>\r\n<pre>&lt;rubys&gt; deusx: want a quick primer?\r\n\r\n&lt;deusx&gt; rubys: I'd love one, though unfortunately at the moment,\r\nI'm about to be off to a meeting :(\r\n\r\n* f8dy would like a quick primer\r\n\r\n&lt;rubys&gt; This is really quick.  Take some XML.  XML that doesn't\r\nhave a DTD or any PI's.  Put it in a soap:Body.  Put the soap:Body in\r\na soap:Envelope.  Voila', you have valid document literal SOAP.</pre>\r\n<p>\r\nThat <i>was</i> a quick primer, and though I know there's more to\r\nit, putting it like that makes me see SOAP a little differently.\r\n</p>\r\n<!--more-->\r\nshortname=a_quick_irc_soap_primer\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/03/a-quick-irc-soap-primer",
    "summary": "<p>\nAfter making those RSS namespace examples, I was thinking aloud about\nSOAP on #joiito yesterday and how it compares to what I did with the Amazon\ndata.  <a href=\"http://www.intertwingly.com\">Sam Ruby</a>\nhappened to be in the room:\n</p>\n<pre>&lt;rubys&gt; deusx: want a quick primer?\n\n<p>&lt;deusx&gt; rubys: I&apos;d love one, though unfortunately at the moment,\nI&apos;m about to be off to a meeting :(</p>\n<ul>\n<li>f8dy would like a quick primer</li>\n</ul>\n<p>&lt;rubys&gt; This is really quick.  Take some XML.  XML that doesn&apos;t\nhave a DTD or any PI&apos;s.  Put it in a soap:Body.  Put the soap:Body in\na soap:Envelope.  Voila&apos;, you have valid document literal SOAP.</p>\n<p>\nThat <i>was</i> a quick primer, and though I know there&apos;s more to\nit, putting it like that makes me see SOAP a little differently.\n</p>\n</pre>",
    "prevPostPath": "2003/10/06/http-in-rdf",
    "nextPostPath": "2003/10/03/rss-data-versus-namespace-3"
  },
  {
    "comments_archived": true,
    "date": "2003-10-03T12:28:16.000Z",
    "layout": "post",
    "title": "RSS 2.0 namespace versus RSS-Data, Part 3: Electric Boogalee",
    "wordpress_id": 490,
    "wordpress_slug": "rss-data-versus-namespace-3",
    "wordpress_url": "http://www.decafbad.com/blog/?p=490",
    "year": "2003",
    "month": "10",
    "day": "03",
    "isDir": false,
    "slug": "rss-data-versus-namespace-3",
    "postName": "2003-10-03-rss-data-versus-namespace-3",
    "html": "<p>\nSo, for the same of argument, yesterday I threw together\n<a href=\"http://www.decafbad.com/blog/tech/rss_data_versus_namespace.html\">examples</a>\nof what a use of RSS-Data might look like alongside what\nthe same data in an RSS namespace extension might look like.\nI promised code, but never got a chance to circle back around.\nFortunately, <a href=\"http://www.myelin.co.nz/post/\">Phillip Pearson</a>\nconnected the rest of the dots for me with two examples:\n</p>\n<ul>\n<li><a href=\"http://www.myelin.co.nz/post/2003/10/3/#200310031\">Parsing RSS-Data</a></li>\n<li><a href=\"http://www.myelin.co.nz/post/2003/10/3/#200310032\">Parsing an RSS namespace extension</a></li>\n</ul>\n<p>\nI was just a <i>little</i> surprised by his results, since I expected\nthe code to handle an RSS namespace to be at least a bit more complex\nthan the RSS-Data example.  But,\n<a href=\"http://www.myelin.co.nz/post/2003/10/3/#200310033\">as Phillip observed later</a>,\nthe scripts were pretty much equivalent in length, complexity, and\nease of construction.\n</p>\n<p>\nThen, this morning, I saw that Danny Ayers had posted an\n<a href=\"http://dannyayers.com/archives/001908.html\">example in RDF</a>\nof this same data.  It doesn't differ very much from my namespace\nextension example, except that the few differences there are enables\nhis example to flow through RDF tools (as well as, usually, XML tools like\nXPath and XSLT).\n</p>\n<p>\nIn <a href=\"http://www.myelin.co.nz/phil/pss/comments.php?u=2&p=200310033&link=http://www.myelin.co.nz/post/2003/10/3/#200310033\">a comment</a>\non one of Phillip's posts, though, Roger Benningfield makes\nthe point that this example is a bit biased:\n</p>\n<blockquote><i>\nI agree that there won't be a ton of difference between a struct full\nof strings and plain ol' XML. But that's kind of a stacked example,\nsince SDL would allow a lot more than that... arrays, integers, and\narrays of integers inside structs.\n</i></blockquote>\n<p>\nWhat I did could be obscuring some work.  I just took an existing\nschema from Amazon, which gave me some initial work already for free.\n(Though, there's something to be said for <i>that</i> in and of itself.)\nThe structures were already established, and the schema was created\nwith XML representation already in mind.  This could have placed\nRSS-Data at an example.  While I really don't think\nthat XML-RPC serialization offers more flexibility in expression than\nXML itself, I could be wrong and I don't want to be tilting\nat <a href=\"http://www.nizkor.org/features/fallacies/straw-man.html\">straw men</a>.  \n</p>\n<p>\nSo, while I doubt that I'll have a whole lot of time today, I think\nfor the same of completeness, someone should go through the parallel\nprocesses of going from problem statement up through data modeling and\non to production and consumption of RSS-Data and an RSS namespace\nextension.  While doing this, capture the work involved in both.\n</p>\n<p>\nI could see shortcuts taken on the RSS-Data side, since you don't have\nto be concerened with various bits of XML tech like DTDs or schema\nor whatnot.  You can jump right into coding up an example usage and\ncome up with your data model on the fly.  Whether this is a good thing\nor not, I'm sure many will disagree.  Also, I'm sure others would\ngo through this differently than I would.  Again, your mojo may\nexceed mine.\n</p>\n<p>\nAt this point, I can see the benefits of RSS-Data in rapidly cobbling\ntogether scripts, but I lean toward having a decently defined data\nmodel first.  You can do this in your scripts, but using the existing\nXML tech forces you through some specific processes.  On the other\nhand, I can see where some busy developers don't have time or spare\nbrain cycles to absorb all the XML tech.  It could be made easier\nat that end of things, which is where I'd rather spend my effort.\n</p>\n<p>\nAnyway, I'm really interested in seeing where this goes, because\nthis comparison of RSS-Data, RSS namespace extensions, and even\nRDF seems like another very concrete, non-theoretical way to demonstrate\nthe benefits and drawbacks of these ways of thinking about data\nand interoperability.\n</p>\n<!--more-->\nshortname=rss_data_versus_namespace_3\n",
    "body": "<p>\r\nSo, for the same of argument, yesterday I threw together\r\n<a href=\"http://www.decafbad.com/blog/tech/rss_data_versus_namespace.html\">examples</a>\r\nof what a use of RSS-Data might look like alongside what\r\nthe same data in an RSS namespace extension might look like.\r\nI promised code, but never got a chance to circle back around.\r\nFortunately, <a href=\"http://www.myelin.co.nz/post/\">Phillip Pearson</a>\r\nconnected the rest of the dots for me with two examples:\r\n</p>\r\n<ul>\r\n<li><a href=\"http://www.myelin.co.nz/post/2003/10/3/#200310031\">Parsing RSS-Data</a></li>\r\n<li><a href=\"http://www.myelin.co.nz/post/2003/10/3/#200310032\">Parsing an RSS namespace extension</a></li>\r\n</ul>\r\n<p>\r\nI was just a <i>little</i> surprised by his results, since I expected\r\nthe code to handle an RSS namespace to be at least a bit more complex\r\nthan the RSS-Data example.  But,\r\n<a href=\"http://www.myelin.co.nz/post/2003/10/3/#200310033\">as Phillip observed later</a>,\r\nthe scripts were pretty much equivalent in length, complexity, and\r\nease of construction.\r\n</p>\r\n<p>\r\nThen, this morning, I saw that Danny Ayers had posted an\r\n<a href=\"http://dannyayers.com/archives/001908.html\">example in RDF</a>\r\nof this same data.  It doesn't differ very much from my namespace\r\nextension example, except that the few differences there are enables\r\nhis example to flow through RDF tools (as well as, usually, XML tools like\r\nXPath and XSLT).\r\n</p>\r\n<p>\r\nIn <a href=\"http://www.myelin.co.nz/phil/pss/comments.php?u=2&p=200310033&link=http://www.myelin.co.nz/post/2003/10/3/#200310033\">a comment</a>\r\non one of Phillip's posts, though, Roger Benningfield makes\r\nthe point that this example is a bit biased:\r\n</p>\r\n<blockquote><i>\r\nI agree that there won't be a ton of difference between a struct full\r\nof strings and plain ol' XML. But that's kind of a stacked example,\r\nsince SDL would allow a lot more than that... arrays, integers, and\r\narrays of integers inside structs.\r\n</i></blockquote>\r\n<p>\r\nWhat I did could be obscuring some work.  I just took an existing\r\nschema from Amazon, which gave me some initial work already for free.\r\n(Though, there's something to be said for <i>that</i> in and of itself.)\r\nThe structures were already established, and the schema was created\r\nwith XML representation already in mind.  This could have placed\r\nRSS-Data at an example.  While I really don't think\r\nthat XML-RPC serialization offers more flexibility in expression than\r\nXML itself, I could be wrong and I don't want to be tilting\r\nat <a href=\"http://www.nizkor.org/features/fallacies/straw-man.html\">straw men</a>.  \r\n</p>\r\n<p>\r\nSo, while I doubt that I'll have a whole lot of time today, I think\r\nfor the same of completeness, someone should go through the parallel\r\nprocesses of going from problem statement up through data modeling and\r\non to production and consumption of RSS-Data and an RSS namespace\r\nextension.  While doing this, capture the work involved in both.\r\n</p>\r\n<p>\r\nI could see shortcuts taken on the RSS-Data side, since you don't have\r\nto be concerened with various bits of XML tech like DTDs or schema\r\nor whatnot.  You can jump right into coding up an example usage and\r\ncome up with your data model on the fly.  Whether this is a good thing\r\nor not, I'm sure many will disagree.  Also, I'm sure others would\r\ngo through this differently than I would.  Again, your mojo may\r\nexceed mine.\r\n</p>\r\n<p>\r\nAt this point, I can see the benefits of RSS-Data in rapidly cobbling\r\ntogether scripts, but I lean toward having a decently defined data\r\nmodel first.  You can do this in your scripts, but using the existing\r\nXML tech forces you through some specific processes.  On the other\r\nhand, I can see where some busy developers don't have time or spare\r\nbrain cycles to absorb all the XML tech.  It could be made easier\r\nat that end of things, which is where I'd rather spend my effort.\r\n</p>\r\n<p>\r\nAnyway, I'm really interested in seeing where this goes, because\r\nthis comparison of RSS-Data, RSS namespace extensions, and even\r\nRDF seems like another very concrete, non-theoretical way to demonstrate\r\nthe benefits and drawbacks of these ways of thinking about data\r\nand interoperability.\r\n</p>\r\n<!--more-->\r\nshortname=rss_data_versus_namespace_3\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/03/rss-data-versus-namespace-3",
    "summary": "<p>\nSo, for the same of argument, yesterday I threw together\n<a href=\"http://www.decafbad.com/blog/tech/rss_data_versus_namespace.html\">examples</a>\nof what a use of RSS-Data might look like alongside what\nthe same data in an RSS namespace extension might look like.\nI promised code, but never got a chance to circle back around.\nFortunately, <a href=\"http://www.myelin.co.nz/post/\">Phillip Pearson</a>\nconnected the rest of the dots for me with two examples:\n</p>\n<ul>\n<li><a href=\"http://www.myelin.co.nz/post/2003/10/3/#200310031\">Parsing RSS-Data</a></li>\n<li><a href=\"http://www.myelin.co.nz/post/2003/10/3/#200310032\">Parsing an RSS namespace extension</a></li>\n</ul>\n<p>\nI was just a <i>little</i> surprised by his results, since I expected\nthe code to handle an RSS namespace to be at least a bit more complex\nthan the RSS-Data example.  But,\n<a href=\"http://www.myelin.co.nz/post/2003/10/3/#200310033\">as Phillip observed later</a>,\nthe scripts were pretty much equivalent in length, complexity, and\nease of construction.\n</p>\n<p>\nThen, this morning, I saw that Danny Ayers had posted an\n<a href=\"http://dannyayers.com/archives/001908.html\">example in RDF</a>\nof this same data.  It doesn&apos;t differ very much from my namespace\nextension example, except that the few differences there are enables\nhis example to flow through RDF tools (as well as, usually, XML tools like\nXPath and XSLT).\n</p>\n<p>\nIn <a href=\"http://www.myelin.co.nz/phil/pss/comments.php?u=2&amp;p=200310033&amp;link=http://www.myelin.co.nz/post/2003/10/3/#200310033\">a comment</a>\non one of Phillip&apos;s posts, though, Roger Benningfield makes\nthe point that this example is a bit biased:\n</p>\n<blockquote><i>\nI agree that there won&apos;t be a ton of difference between a struct full\nof strings and plain ol&apos; XML. But that&apos;s kind of a stacked example,\nsince SDL would allow a lot more than that... arrays, integers, and\narrays of integers inside structs.\n</i></blockquote>\n<p>\nWhat I did could be obscuring some work.  I just took an existing\nschema from Amazon, which gave me some initial work already for free.\n(Though, there&apos;s something to be said for <i>that</i> in and of itself.)\nThe structures were already established, and the schema was created\nwith XML representation already in mind.  This could have placed\nRSS-Data at an example.  While I really don&apos;t think\nthat XML-RPC serialization offers more flexibility in expression than\nXML itself, I could be wrong and I don&apos;t want to be tilting\nat <a href=\"http://www.nizkor.org/features/fallacies/straw-man.html\">straw men</a>.  \n</p>\n<p>\nSo, while I doubt that I&apos;ll have a whole lot of time today, I think\nfor the same of completeness, someone should go through the parallel\nprocesses of going from problem statement up through data modeling and\non to production and consumption of RSS-Data and an RSS namespace\nextension.  While doing this, capture the work involved in both.\n</p>\n<p>\nI could see shortcuts taken on the RSS-Data side, since you don&apos;t have\nto be concerened with various bits of XML tech like DTDs or schema\nor whatnot.  You can jump right into coding up an example usage and\ncome up with your data model on the fly.  Whether this is a good thing\nor not, I&apos;m sure many will disagree.  Also, I&apos;m sure others would\ngo through this differently than I would.  Again, your mojo may\nexceed mine.\n</p>\n<p>\nAt this point, I can see the benefits of RSS-Data in rapidly cobbling\ntogether scripts, but I lean toward having a decently defined data\nmodel first.  You can do this in your scripts, but using the existing\nXML tech forces you through some specific processes.  On the other\nhand, I can see where some busy developers don&apos;t have time or spare\nbrain cycles to absorb all the XML tech.  It could be made easier\nat that end of things, which is where I&apos;d rather spend my effort.\n</p>\n<p>\nAnyway, I&apos;m really interested in seeing where this goes, because\nthis comparison of RSS-Data, RSS namespace extensions, and even\nRDF seems like another very concrete, non-theoretical way to demonstrate\nthe benefits and drawbacks of these ways of thinking about data\nand interoperability.\n</p>\n",
    "prevPostPath": "2003/10/03/a-quick-irc-soap-primer",
    "nextPostPath": "2003/10/02/rss-data-versus-namespace-2"
  },
  {
    "comments_archived": true,
    "date": "2003-10-02T16:26:02.000Z",
    "layout": "post",
    "title": "RSS 2.0 namespace versus RSS-Data, Part 2: First impressions",
    "wordpress_id": 489,
    "wordpress_slug": "rss-data-versus-namespace-2",
    "wordpress_url": "http://www.decafbad.com/blog/?p=489",
    "year": "2003",
    "month": "10",
    "day": "02",
    "isDir": false,
    "slug": "rss-data-versus-namespace-2",
    "postName": "2003-10-02-rss-data-versus-namespace-2",
    "html": "<p>\nOkay, I got\n<a href=\"http://www.decafbad.com/blog/tech/rss_data_versus_namespace.html\">the example data</a> out there.\nHere's what's first on my mind about it:\n</p>\n<ol>\n<li>\n<p>\nMan, that RSS-Data is one verbose piece of XML.  The Amazon-specific\nnamespace version looks much more compact and readable; I'd rather\n<a href=\"http://backend.userland.com/davesRss2PoliticalFaq\">View Source</a>\non that one.\n</p>\n</li>\n<li>\n<p>\nPython comes out of the box with\n<a href=\"http://www.python.org/doc/current/lib/module-xmlrpclib.html\">xmlrpclib</a>,\nand other languages have XML-RPC facilities available as well.  I can't imagine\nit'd be too hard to get a hold of the core of it and employ it in\nunmarshalling the RSS-Data straight into idiomatic Python structures.\nOn the other hand, I'll need to write my own handlers for the Amazon XML\nusing the XML parser modules that come with Python.\n</p>\n</li>\n<li>\n<p>\nWith its clean, almost self-documenting structure, the Amazon XML is easily\nhandled with XPath and XSL.  If I had a pile of ProductInfo elements\nin a document, I could yank out all their images with something like:\n<code>//az:ProductInfo/az:Details/az:ImageUrlSmall</code>\n</p>\n<p>\nUsing the RSS-Data\nexample, it'd probably be something more like:\n<code>//sdl:data/sdl:struct/sdl:member/sdl:name[@text='ImageUrlSmall']/../sdl:value</code>,\nand that's not considering if I have mixed kinds of RSS-Data schema represented in the\nfeed.\n</p>\n<p>\nI suppose I could help this out by surrounding the struct with another\nstruct, containing one member named 'AzProductInfo', making the path something\nlike so:\n<code>//sdl:data/sdl:struct/sdl:member/sdl:name[@text='AzProductInfo']<br />\n/../sdl:value/sdl:struct/sdl:member/sdl:name[@text='ImageUrlSmall']/../sdl:value</code>.\n</p>\n</li>\n</ol>\n\n<p>\nAnd these are the conclusions I'm jumping to at the moment, before experimenting:\n</p>\n\n<ol>\n<li>\nRSS-Data's convenience to script authors is at odds with the RSS 2.0\nspirit of View Source.\n</li>\n<li>\nProducing and consuming RSS-Data could be easier than handling\npurpose-specific XML schema in scripts.\n</li>\n<li>\nSince RSS-Data doesn't follow in the spirit of XML specs and schema,\nusing formal XML tools to handle this stuff will give you\nnothing but headaches.  (Then again, it seems like some of the\nstuff that's fully in the spirit of XML yields headaches just\nthe same.)\n</li>\n<li>\nRSS-Data might catch on and spread nonetheless, because lots\nof people don't read XML, don't use formal XML tools, and just\nwrite scripts to get their jobs done.\n</li>\n</ol>\n<!--more-->\nshortname=rss_data_versus_namespace_2\n",
    "body": "<p>\r\nOkay, I got\r\n<a href=\"http://www.decafbad.com/blog/tech/rss_data_versus_namespace.html\">the example data</a> out there.\r\nHere's what's first on my mind about it:\r\n</p>\r\n<ol>\r\n<li>\r\n<p>\r\nMan, that RSS-Data is one verbose piece of XML.  The Amazon-specific\r\nnamespace version looks much more compact and readable; I'd rather\r\n<a href=\"http://backend.userland.com/davesRss2PoliticalFaq\">View Source</a>\r\non that one.\r\n</p>\r\n</li>\r\n<li>\r\n<p>\r\nPython comes out of the box with\r\n<a href=\"http://www.python.org/doc/current/lib/module-xmlrpclib.html\">xmlrpclib</a>,\r\nand other languages have XML-RPC facilities available as well.  I can't imagine\r\nit'd be too hard to get a hold of the core of it and employ it in\r\nunmarshalling the RSS-Data straight into idiomatic Python structures.\r\nOn the other hand, I'll need to write my own handlers for the Amazon XML\r\nusing the XML parser modules that come with Python.\r\n</p>\r\n</li>\r\n<li>\r\n<p>\r\nWith its clean, almost self-documenting structure, the Amazon XML is easily\r\nhandled with XPath and XSL.  If I had a pile of ProductInfo elements\r\nin a document, I could yank out all their images with something like:\r\n<code>//az:ProductInfo/az:Details/az:ImageUrlSmall</code>\r\n</p>\r\n<p>\r\nUsing the RSS-Data\r\nexample, it'd probably be something more like:\r\n<code>//sdl:data/sdl:struct/sdl:member/sdl:name[@text='ImageUrlSmall']/../sdl:value</code>,\r\nand that's not considering if I have mixed kinds of RSS-Data schema represented in the\r\nfeed.\r\n</p>\r\n<p>\r\nI suppose I could help this out by surrounding the struct with another\r\nstruct, containing one member named 'AzProductInfo', making the path something\r\nlike so:\r\n<code>//sdl:data/sdl:struct/sdl:member/sdl:name[@text='AzProductInfo']<br />\r\n/../sdl:value/sdl:struct/sdl:member/sdl:name[@text='ImageUrlSmall']/../sdl:value</code>.\r\n</p>\r\n</li>\r\n</ol>\r\n\r\n<p>\r\nAnd these are the conclusions I'm jumping to at the moment, before experimenting:\r\n</p>\r\n\r\n<ol>\r\n<li>\r\nRSS-Data's convenience to script authors is at odds with the RSS 2.0\r\nspirit of View Source.\r\n</li>\r\n<li>\r\nProducing and consuming RSS-Data could be easier than handling\r\npurpose-specific XML schema in scripts.\r\n</li>\r\n<li>\r\nSince RSS-Data doesn't follow in the spirit of XML specs and schema,\r\nusing formal XML tools to handle this stuff will give you\r\nnothing but headaches.  (Then again, it seems like some of the\r\nstuff that's fully in the spirit of XML yields headaches just\r\nthe same.)\r\n</li>\r\n<li>\r\nRSS-Data might catch on and spread nonetheless, because lots\r\nof people don't read XML, don't use formal XML tools, and just\r\nwrite scripts to get their jobs done.\r\n</li>\r\n</ol>\r\n<!--more-->\r\nshortname=rss_data_versus_namespace_2\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/02/rss-data-versus-namespace-2",
    "summary": "<p>\nOkay, I got\n<a href=\"http://www.decafbad.com/blog/tech/rss_data_versus_namespace.html\">the example data</a> out there.\nHere&apos;s what&apos;s first on my mind about it:\n</p>\n<ol>\n<li>\n<p>\nMan, that RSS-Data is one verbose piece of XML.  The Amazon-specific\nnamespace version looks much more compact and readable; I&apos;d rather\n<a href=\"http://backend.userland.com/davesRss2PoliticalFaq\">View Source</a>\non that one.\n</p>\n</li>\n<li>\n<p>\nPython comes out of the box with\n<a href=\"http://www.python.org/doc/current/lib/module-xmlrpclib.html\">xmlrpclib</a>,\nand other languages have XML-RPC facilities available as well.  I can&apos;t imagine\nit&apos;d be too hard to get a hold of the core of it and employ it in\nunmarshalling the RSS-Data straight into idiomatic Python structures.\nOn the other hand, I&apos;ll need to write my own handlers for the Amazon XML\nusing the XML parser modules that come with Python.\n</p>\n</li>\n<li>\n<p>\nWith its clean, almost self-documenting structure, the Amazon XML is easily\nhandled with XPath and XSL.  If I had a pile of ProductInfo elements\nin a document, I could yank out all their images with something like:\n<code>//az:ProductInfo/az:Details/az:ImageUrlSmall</code>\n</p>\n<p>\nUsing the RSS-Data\nexample, it&apos;d probably be something more like:\n<code>//sdl:data/sdl:struct/sdl:member/sdl:name[@text=&apos;ImageUrlSmall&apos;]/../sdl:value</code>,\nand that&apos;s not considering if I have mixed kinds of RSS-Data schema represented in the\nfeed.\n</p>\n<p>\nI suppose I could help this out by surrounding the struct with another\nstruct, containing one member named &apos;AzProductInfo&apos;, making the path something\nlike so:\n<code>//sdl:data/sdl:struct/sdl:member/sdl:name[@text=&apos;AzProductInfo&apos;]<br>\n/../sdl:value/sdl:struct/sdl:member/sdl:name[@text=&apos;ImageUrlSmall&apos;]/../sdl:value</code>.\n</p>\n</li>\n</ol>\n\n<p>\nAnd these are the conclusions I&apos;m jumping to at the moment, before experimenting:\n</p>\n\n<ol>\n<li>\nRSS-Data&apos;s convenience to script authors is at odds with the RSS 2.0\nspirit of View Source.\n</li>\n<li>\nProducing and consuming RSS-Data could be easier than handling\npurpose-specific XML schema in scripts.\n</li>\n<li>\nSince RSS-Data doesn&apos;t follow in the spirit of XML specs and schema,\nusing formal XML tools to handle this stuff will give you\nnothing but headaches.  (Then again, it seems like some of the\nstuff that&apos;s fully in the spirit of XML yields headaches just\nthe same.)\n</li>\n<li>\nRSS-Data might catch on and spread nonetheless, because lots\nof people don&apos;t read XML, don&apos;t use formal XML tools, and just\nwrite scripts to get their jobs done.\n</li>\n</ol>\n",
    "prevPostPath": "2003/10/03/rss-data-versus-namespace-3",
    "nextPostPath": "2003/10/02/rss-data-versus-namespace"
  },
  {
    "comments_archived": true,
    "date": "2003-10-02T15:52:00.000Z",
    "layout": "post",
    "title": "An example of an RSS 2.0 namespace versus RSS-Data usage",
    "wordpress_id": 488,
    "wordpress_slug": "rss-data-versus-namespace",
    "wordpress_url": "http://www.decafbad.com/blog/?p=488",
    "year": "2003",
    "month": "10",
    "day": "02",
    "isDir": false,
    "slug": "rss-data-versus-namespace",
    "postName": "2003-10-02-rss-data-versus-namespace",
    "html": "<p>\nOkay, just for the sake of tinkering, I'm poking at embedding data\nfrom the\n<a href=\"http://www.amazon.com/gp/browse.html/002-4832258-8958444?node=3435361\">Amazon Web Services</a>\ninto an RSS 2.0 feed.  On one hand, I just shoehorned the Amazon\nXML schema into an RSS 2.0 namespace, and on the other, I tried\ntransliterating the Amazon XML data into\n<a href=\"http://radio.weblogs.com/0113297/2003/10/01.html#a237\">RSS-Data</a> /\n<a href=\"http://www.xml-rpc.com/spec\">XML-RPC</a> serialized data\nstructures.\n</p>\n<p>\nTo resolve my own love/hate of this RSS-Data idea,\nI'm planning to keep going from here and work up some simple Python\nscripts to produce and consume data along the lines of both examples,\nthen to comment on the experience.  (This is assuming I don't run out\nof round tuits.)  Some things to note:\n<ul>\n\n<li>Your XML mojo is probably stronger than mine,\nso please feel free to correct me.</li>\n\n<li>Although I created the RSS-Data example by hand, it would\notherwise be completely produced and consumed by machine.</li>\n\n<li>Since it's at the root of a few things I'm thinking,\nit's worth restating:  RSS-Data is intended to be produced and\nconsumed by machine, not by humans.  This means that the XML\ndata needs not look pretty or elegant to you, but to your machine.</li>\n\n</ul>\n</p>\n\n<p>\nSo, on with the XML.  First, I\n<a href=\"http://xml.amazon.com/onca/xml3?t=0xdecafbad-20&dev-t=foo&AsinSearch=0439139597&type=lite&f=xml\">requested data</a>\nfrom Amazon and got the following:\n</p>\n\n<pre>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;ProductInfo\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:noNamespaceSchemaLocation=\"http://xml.amazon.com/schemas3/dev-lite.xsd\"&gt;\n  &lt;Details url=\"http://www.amazon.com/exec/obidos/ASIN/0439139597/0xdecafbad-20\"&gt;\n    &lt;Asin&gt;0439139597&lt;/Asin&gt;\n    &lt;ProductName&gt;Harry Potter and the Goblet of Fire (Book 4)&lt;/ProductName&gt;\n    &lt;Catalog&gt;Book&lt;/Catalog&gt;\n    &lt;Authors&gt;\n      &lt;Author&gt;J. K. Rowling&lt;/Author&gt;\n      &lt;Author&gt;Mary GrandPr?&lt;/Author&gt;\n    &lt;/Authors&gt;\n    &lt;ReleaseDate&gt;08 July, 2000&lt;/ReleaseDate&gt;\n    &lt;Manufacturer&gt;Scholastic&lt;/Manufacturer&gt;\n    &lt;ImageUrlSmall&gt;http://images.amazon.com/images/P/0439139597.01.THUMBZZZ.jpg&lt;/ImageUrlSmall&gt;\n    &lt;ImageUrlMedium&gt;http://images.amazon.com/images/P/0439139597.01.MZZZZZZZ.jpg&lt;/ImageUrlMedium&gt;\n    &lt;ImageUrlLarge&gt;http://images.amazon.com/images/P/0439139597.01.LZZZZZZZ.jpg&lt;/ImageUrlLarge&gt;\n    &lt;Availability&gt;Usually ships within 24 hours&lt;/Availability&gt;\n    &lt;ListPrice&gt;$25.95&lt;/ListPrice&gt;\n    &lt;OurPrice&gt;$18.16&lt;/OurPrice&gt;\n    &lt;UsedPrice&gt;$3.97&lt;/UsedPrice&gt;\n  &lt;/Details&gt;\n&lt;/ProductInfo&gt;</pre>\n\n<p>\nFrom this, I cooked up an example RSS feed with Amazon's XML\nschema shoehorned in as a namespace:\n</p>\n<pre>&lt;rss version=\"2.0\"\n  xmlns=\"http://blogs.law.harvard.edu/tech/rss\"\n  xmlns:az=\"http://www.amazon.com/gp/aws/landing.html\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://www.amazon.com/gp/aws/landing.html\n                      http://xml.amazon.com/schemas3/dev-lite.xsd\"&gt;\n  &lt;channel&gt;\n    &lt;title&gt;Testing Amazon Namespace&lt;/title&gt;   \n    &lt;item&gt;\n      &lt;title&gt;Harry Potter and the Goblet of Fire (Book 4)&lt;/title&gt;\n      &lt;az:ProductInfo&gt;\n        &lt;az:Details url=\"http://www.amazon.com/exec/obidos/ASIN/0439139597/0xdecafbad-20\"&gt;\n          &lt;az:Asin&gt;0439139597&lt;/az:Asin&gt;\n          &lt;az:ProductName&gt;Harry Potter and the Goblet of Fire (Book 4)&lt;/az:ProductName&gt;\n          &lt;az:Catalog&gt;Book&lt;/az:Catalog&gt;\n          &lt;az:Authors&gt;\n            &lt;az:Author&gt;J. K. Rowling&lt;/az:Author&gt;\n            &lt;az:Author&gt;Mary GrandPr?&lt;/az:Author&gt;\n          &lt;/az:Authors&gt;\n          &lt;az:ReleaseDate&gt;08 July, 2000&lt;/az:ReleaseDate&gt;\n          &lt;az:Manufacturer&gt;Scholastic&lt;/az:Manufacturer&gt;\n          &lt;az:ImageUrlSmall&gt;http://images.amazon.com/images/P/0439139597.01.THUMBZZZ.jpg&lt;/az:ImageUrlSmall&gt;\n          &lt;az:ImageUrlMedium&gt;http://images.amazon.com/images/P/0439139597.01.MZZZZZZZ.jpg&lt;/az:ImageUrlMedium&gt;\n          &lt;az:ImageUrlLarge&gt;http://images.amazon.com/images/P/0439139597.01.LZZZZZZZ.jpg&lt;/az:ImageUrlLarge&gt;\n          &lt;az:Availability&gt;Usually ships within 24 hours&lt;/az:Availability&gt;\n          &lt;az:ListPrice&gt;$25.95&lt;/az:ListPrice&gt;\n          &lt;az:OurPrice&gt;$18.16&lt;/az:OurPrice&gt;\n          &lt;az:UsedPrice&gt;$3.97&lt;/az:UsedPrice&gt;\n        &lt;/az:Details&gt;\n      &lt;/az:ProductInfo&gt;\n    &lt;/item&gt;   \n  &lt;/channel&gt;   \n&lt;/rss&gt;</pre>\n\n<p>\nThen, I transliterated things into what I understand of RSS-Data:\n</p>\n<pre>&lt;rss version=\"2.0\"\n  xmlns=\"http://blogs.law.harvard.edu/tech/rss\"\n  xmlns:sdl=\"http://radio.weblogs.com/0113297/2003/10/01.html#a237\"&gt;\n  &lt;channel&gt;\n    &lt;title&gt;Testing Amazon Namespace&lt;/title&gt;   \n    &lt;item&gt;   \n      &lt;title&gt;A Sample Item&lt;/title&gt;\n      &lt;sdl:data&gt;\n        &lt;sdl:struct&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;url&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:string&gt;http://www.amazon.com/exec/obidos/ASIN/0439139597/0xdecafbad-20&lt;/sdl:string&gt;\n            &lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;Asin&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;0439139597&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;ProductName&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:string&gt;\n                Harry Potter and the Goblet of Fire (Book 4)\n              &lt;/sdl:string&gt;\n            &lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;Catalog&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;Book&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;          \n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;Authors&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:array&gt;\n                &lt;sdl:data&gt;\n                  &lt;sdl:value&gt;J. K. Rowling&lt;/sdl:value&gt;\n                  &lt;sdl:value&gt;Mary GrandPr&lt;/sdl:value&gt;\n                &lt;/sdl:data&gt;\n              &lt;/sdl:array&gt;\n            &lt;/sdl:value&gt;            \n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;ReleaseDate&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:dateTime.iso8601&gt;2000-07-08T00:00:00&lt;/sdl:dateTime.iso8601&gt;\n            &lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;          \n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;Manufacturer&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;Scholastic&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;ImageUrlSmall&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:string&gt;http://images.amazon.com/images/P/0439139597.01.THUMBZZZ.jpg&lt;/sdl:string&gt;\n            &lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;          \n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;ImageUrlMedium&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:string&gt;http://images.amazon.com/images/P/0439139597.01.MZZZZZZZ.jpg&lt;/sdl:string&gt;\n            &lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;          \n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;ImageUrlLarge&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:string&gt;http://images.amazon.com/images/P/0439139597.01.LZZZZZZZ.jpg&lt;/sdl:string&gt;\n            &lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;          \n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;Availability&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;Usually ships within 24 hours&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;ListPrice&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;$25.95&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;OurPrice&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;$18.16&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;UsedPrice&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;$3.97&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n        &lt;/sdl:struct&gt;\n      &lt;/sdl:data&gt;\n    &lt;/item&gt;   \n  &lt;/channel&gt;   \n&lt;/rss&gt;</pre>\n<!--more-->\nshortname=rss_data_versus_namespace\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221087864\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://zoe.nu/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2d3d8732d4a17d4ad7513b127ce055e7&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://zoe.nu/\">Zoe</a>\n</div>\n<a href=\"#comment-221087864\" class=\"permalink\"><time datetime=\"2003-10-02T12:25:19\">2003-10-02T12:25:19</time></a>\n</div>\n<div class=\"content\">Hehe... :) Good work. \nThis demonstration should put this RSS-Data nonsense to rest.\nNothing like a good example...</div>\n</li>\n<li class=\"comment\" id=\"comment-221087866\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://icite.net/blog/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=9c8bd9e7e240a5917219fba15f0a10f4&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://icite.net/blog/\">Jay Fienberg</a>\n</div>\n<a href=\"#comment-221087866\" class=\"permalink\"><time datetime=\"2003-10-02T12:41:14\">2003-10-02T12:41:14</time></a>\n</div>\n<div class=\"content\">Thanks for building a good example comparison--very useful and helpful to the discussion</div>\n</li>\n<li class=\"comment\" id=\"comment-221087868\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.myelin.co.nz/post/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=79d809dc2d0441ef44efc6ad1a1429eb&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.myelin.co.nz/post/\">Phillip Pearson</a>\n</div>\n<a href=\"#comment-221087868\" class=\"permalink\"><time datetime=\"2003-10-02T17:48:09\">2003-10-02T17:48:09</time></a>\n</div>\n<div class=\"content\">Here's code to parse the RSS-Data version:\nhttp://www.myelin.co.nz/post/2003/10/3/#200310031</div>\n</li>\n<li class=\"comment\" id=\"comment-221087869\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.davidgalbraith.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=30d76b8340ace48320c3cc24927543aa&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.davidgalbraith.org\">David Galbraith</a>\n</div>\n<a href=\"#comment-221087869\" class=\"permalink\"><time datetime=\"2003-10-02T18:08:36\">2003-10-02T18:08:36</time></a>\n</div>\n<div class=\"content\">Heh - nothing like actually seeing something. And surely if you use a schema version of RSS you would get the extra information about the metadata without having to put it inline with the feed itself?</div>\n</li>\n<li class=\"comment\" id=\"comment-221087870\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.myelin.co.nz/post/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=79d809dc2d0441ef44efc6ad1a1429eb&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.myelin.co.nz/post/\">Phillip Pearson</a>\n</div>\n<a href=\"#comment-221087870\" class=\"permalink\"><time datetime=\"2003-10-02T18:18:13\">2003-10-02T18:18:13</time></a>\n</div>\n<div class=\"content\">And here's code to parse the namespace version:\nhttp://www.myelin.co.nz/post/2003/10/3/#200310032</div>\n</li>\n<li class=\"comment\" id=\"comment-221087871\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=ac0d01ebb5e438c029c0764064f70827&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://dannyayers.com\">Danny</a>\n</div>\n<a href=\"#comment-221087871\" class=\"permalink\"><time datetime=\"2003-10-03T07:22:16\">2003-10-03T07:22:16</time></a>\n</div>\n<div class=\"content\">I've done a first-shot at this in RDF/XML :\nhttp://dannyayers.com/archives/001908.html\nCompare and contrast with the RSS-Data version (especially in terms of readibility, simplicity etc ;-)</div>\n</li>\n<li class=\"comment\" id=\"comment-221087872\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8f8684b971819df3daca507573d78894&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"\">Michael Thorne</a>\n</div>\n<a href=\"#comment-221087872\" class=\"permalink\"><time datetime=\"2003-10-21T17:15:09\">2003-10-21T17:15:09</time></a>\n</div>\n<div class=\"content\">Just started looking into the RSS-Data format and lightly read over your samples.  What I noticed first off was there was no currency definition.  I believe this would be a critical component of international business. mxt</div>\n</li>\n</ul>\n</div>\n",
    "body": "<p>\r\nOkay, just for the sake of tinkering, I'm poking at embedding data\r\nfrom the\r\n<a href=\"http://www.amazon.com/gp/browse.html/002-4832258-8958444?node=3435361\">Amazon Web Services</a>\r\ninto an RSS 2.0 feed.  On one hand, I just shoehorned the Amazon\r\nXML schema into an RSS 2.0 namespace, and on the other, I tried\r\ntransliterating the Amazon XML data into\r\n<a href=\"http://radio.weblogs.com/0113297/2003/10/01.html#a237\">RSS-Data</a> /\r\n<a href=\"http://www.xml-rpc.com/spec\">XML-RPC</a> serialized data\r\nstructures.\r\n</p>\r\n<p>\r\nTo resolve my own love/hate of this RSS-Data idea,\r\nI'm planning to keep going from here and work up some simple Python\r\nscripts to produce and consume data along the lines of both examples,\r\nthen to comment on the experience.  (This is assuming I don't run out\r\nof round tuits.)  Some things to note:\r\n<ul>\r\n\r\n<li>Your XML mojo is probably stronger than mine,\r\nso please feel free to correct me.</li>\r\n\r\n<li>Although I created the RSS-Data example by hand, it would\r\notherwise be completely produced and consumed by machine.</li>\r\n\r\n<li>Since it's at the root of a few things I'm thinking,\r\nit's worth restating:  RSS-Data is intended to be produced and\r\nconsumed by machine, not by humans.  This means that the XML\r\ndata needs not look pretty or elegant to you, but to your machine.</li>\r\n\r\n</ul>\r\n</p>\r\n\r\n<p>\r\nSo, on with the XML.  First, I\r\n<a href=\"http://xml.amazon.com/onca/xml3?t=0xdecafbad-20&dev-t=foo&AsinSearch=0439139597&type=lite&f=xml\">requested data</a>\r\nfrom Amazon and got the following:\r\n</p>\r\n\r\n<pre>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n&lt;ProductInfo\r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:noNamespaceSchemaLocation=\"http://xml.amazon.com/schemas3/dev-lite.xsd\"&gt;\r\n  &lt;Details url=\"http://www.amazon.com/exec/obidos/ASIN/0439139597/0xdecafbad-20\"&gt;\r\n    &lt;Asin&gt;0439139597&lt;/Asin&gt;\r\n    &lt;ProductName&gt;Harry Potter and the Goblet of Fire (Book 4)&lt;/ProductName&gt;\r\n    &lt;Catalog&gt;Book&lt;/Catalog&gt;\r\n    &lt;Authors&gt;\r\n      &lt;Author&gt;J. K. Rowling&lt;/Author&gt;\r\n      &lt;Author&gt;Mary GrandPr?&lt;/Author&gt;\r\n    &lt;/Authors&gt;\r\n    &lt;ReleaseDate&gt;08 July, 2000&lt;/ReleaseDate&gt;\r\n    &lt;Manufacturer&gt;Scholastic&lt;/Manufacturer&gt;\r\n    &lt;ImageUrlSmall&gt;http://images.amazon.com/images/P/0439139597.01.THUMBZZZ.jpg&lt;/ImageUrlSmall&gt;\r\n    &lt;ImageUrlMedium&gt;http://images.amazon.com/images/P/0439139597.01.MZZZZZZZ.jpg&lt;/ImageUrlMedium&gt;\r\n    &lt;ImageUrlLarge&gt;http://images.amazon.com/images/P/0439139597.01.LZZZZZZZ.jpg&lt;/ImageUrlLarge&gt;\r\n    &lt;Availability&gt;Usually ships within 24 hours&lt;/Availability&gt;\r\n    &lt;ListPrice&gt;$25.95&lt;/ListPrice&gt;\r\n    &lt;OurPrice&gt;$18.16&lt;/OurPrice&gt;\r\n    &lt;UsedPrice&gt;$3.97&lt;/UsedPrice&gt;\r\n  &lt;/Details&gt;\r\n&lt;/ProductInfo&gt;</pre>\r\n\r\n<p>\r\nFrom this, I cooked up an example RSS feed with Amazon's XML\r\nschema shoehorned in as a namespace:\r\n</p>\r\n<pre>&lt;rss version=\"2.0\"\r\n  xmlns=\"http://blogs.law.harvard.edu/tech/rss\"\r\n  xmlns:az=\"http://www.amazon.com/gp/aws/landing.html\"\r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.amazon.com/gp/aws/landing.html\r\n                      http://xml.amazon.com/schemas3/dev-lite.xsd\"&gt;\r\n  &lt;channel&gt;\r\n    &lt;title&gt;Testing Amazon Namespace&lt;/title&gt;   \r\n    &lt;item&gt;\r\n      &lt;title&gt;Harry Potter and the Goblet of Fire (Book 4)&lt;/title&gt;\r\n      &lt;az:ProductInfo&gt;\r\n        &lt;az:Details url=\"http://www.amazon.com/exec/obidos/ASIN/0439139597/0xdecafbad-20\"&gt;\r\n          &lt;az:Asin&gt;0439139597&lt;/az:Asin&gt;\r\n          &lt;az:ProductName&gt;Harry Potter and the Goblet of Fire (Book 4)&lt;/az:ProductName&gt;\r\n          &lt;az:Catalog&gt;Book&lt;/az:Catalog&gt;\r\n          &lt;az:Authors&gt;\r\n            &lt;az:Author&gt;J. K. Rowling&lt;/az:Author&gt;\r\n            &lt;az:Author&gt;Mary GrandPr?&lt;/az:Author&gt;\r\n          &lt;/az:Authors&gt;\r\n          &lt;az:ReleaseDate&gt;08 July, 2000&lt;/az:ReleaseDate&gt;\r\n          &lt;az:Manufacturer&gt;Scholastic&lt;/az:Manufacturer&gt;\r\n          &lt;az:ImageUrlSmall&gt;http://images.amazon.com/images/P/0439139597.01.THUMBZZZ.jpg&lt;/az:ImageUrlSmall&gt;\r\n          &lt;az:ImageUrlMedium&gt;http://images.amazon.com/images/P/0439139597.01.MZZZZZZZ.jpg&lt;/az:ImageUrlMedium&gt;\r\n          &lt;az:ImageUrlLarge&gt;http://images.amazon.com/images/P/0439139597.01.LZZZZZZZ.jpg&lt;/az:ImageUrlLarge&gt;\r\n          &lt;az:Availability&gt;Usually ships within 24 hours&lt;/az:Availability&gt;\r\n          &lt;az:ListPrice&gt;$25.95&lt;/az:ListPrice&gt;\r\n          &lt;az:OurPrice&gt;$18.16&lt;/az:OurPrice&gt;\r\n          &lt;az:UsedPrice&gt;$3.97&lt;/az:UsedPrice&gt;\r\n        &lt;/az:Details&gt;\r\n      &lt;/az:ProductInfo&gt;\r\n    &lt;/item&gt;   \r\n  &lt;/channel&gt;   \r\n&lt;/rss&gt;</pre>\r\n\r\n<p>\r\nThen, I transliterated things into what I understand of RSS-Data:\r\n</p>\r\n<pre>&lt;rss version=\"2.0\"\r\n  xmlns=\"http://blogs.law.harvard.edu/tech/rss\"\r\n  xmlns:sdl=\"http://radio.weblogs.com/0113297/2003/10/01.html#a237\"&gt;\r\n  &lt;channel&gt;\r\n    &lt;title&gt;Testing Amazon Namespace&lt;/title&gt;   \r\n    &lt;item&gt;   \r\n      &lt;title&gt;A Sample Item&lt;/title&gt;\r\n      &lt;sdl:data&gt;\r\n        &lt;sdl:struct&gt;\r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;url&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;\r\n              &lt;sdl:string&gt;http://www.amazon.com/exec/obidos/ASIN/0439139597/0xdecafbad-20&lt;/sdl:string&gt;\r\n            &lt;/sdl:value&gt;\r\n          &lt;/sdl:member&gt;\r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;Asin&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;&lt;sdl:string&gt;0439139597&lt;/sdl:string&gt;&lt;/sdl:value&gt;\r\n          &lt;/sdl:member&gt;\r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;ProductName&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;\r\n              &lt;sdl:string&gt;\r\n                Harry Potter and the Goblet of Fire (Book 4)\r\n              &lt;/sdl:string&gt;\r\n            &lt;/sdl:value&gt;\r\n          &lt;/sdl:member&gt;\r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;Catalog&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;&lt;sdl:string&gt;Book&lt;/sdl:string&gt;&lt;/sdl:value&gt;\r\n          &lt;/sdl:member&gt;          \r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;Authors&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;\r\n              &lt;sdl:array&gt;\r\n                &lt;sdl:data&gt;\r\n                  &lt;sdl:value&gt;J. K. Rowling&lt;/sdl:value&gt;\r\n                  &lt;sdl:value&gt;Mary GrandPr&lt;/sdl:value&gt;\r\n                &lt;/sdl:data&gt;\r\n              &lt;/sdl:array&gt;\r\n            &lt;/sdl:value&gt;            \r\n          &lt;/sdl:member&gt;\r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;ReleaseDate&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;\r\n              &lt;sdl:dateTime.iso8601&gt;2000-07-08T00:00:00&lt;/sdl:dateTime.iso8601&gt;\r\n            &lt;/sdl:value&gt;\r\n          &lt;/sdl:member&gt;          \r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;Manufacturer&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;&lt;sdl:string&gt;Scholastic&lt;/sdl:string&gt;&lt;/sdl:value&gt;\r\n          &lt;/sdl:member&gt;\r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;ImageUrlSmall&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;\r\n              &lt;sdl:string&gt;http://images.amazon.com/images/P/0439139597.01.THUMBZZZ.jpg&lt;/sdl:string&gt;\r\n            &lt;/sdl:value&gt;\r\n          &lt;/sdl:member&gt;          \r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;ImageUrlMedium&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;\r\n              &lt;sdl:string&gt;http://images.amazon.com/images/P/0439139597.01.MZZZZZZZ.jpg&lt;/sdl:string&gt;\r\n            &lt;/sdl:value&gt;\r\n          &lt;/sdl:member&gt;          \r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;ImageUrlLarge&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;\r\n              &lt;sdl:string&gt;http://images.amazon.com/images/P/0439139597.01.LZZZZZZZ.jpg&lt;/sdl:string&gt;\r\n            &lt;/sdl:value&gt;\r\n          &lt;/sdl:member&gt;          \r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;Availability&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;&lt;sdl:string&gt;Usually ships within 24 hours&lt;/sdl:string&gt;&lt;/sdl:value&gt;\r\n          &lt;/sdl:member&gt;\r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;ListPrice&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;&lt;sdl:string&gt;$25.95&lt;/sdl:string&gt;&lt;/sdl:value&gt;\r\n          &lt;/sdl:member&gt;\r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;OurPrice&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;&lt;sdl:string&gt;$18.16&lt;/sdl:string&gt;&lt;/sdl:value&gt;\r\n          &lt;/sdl:member&gt;\r\n          &lt;sdl:member&gt;\r\n            &lt;sdl:name&gt;UsedPrice&lt;/sdl:name&gt;\r\n            &lt;sdl:value&gt;&lt;sdl:string&gt;$3.97&lt;/sdl:string&gt;&lt;/sdl:value&gt;\r\n          &lt;/sdl:member&gt;\r\n        &lt;/sdl:struct&gt;\r\n      &lt;/sdl:data&gt;\r\n    &lt;/item&gt;   \r\n  &lt;/channel&gt;   \r\n&lt;/rss&gt;</pre>\r\n<!--more-->\r\nshortname=rss_data_versus_namespace\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221087864\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://zoe.nu/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=2d3d8732d4a17d4ad7513b127ce055e7&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://zoe.nu/\">Zoe</a>\r\n                </div>\r\n                <a href=\"#comment-221087864\" class=\"permalink\"><time datetime=\"2003-10-02T12:25:19\">2003-10-02T12:25:19</time></a>\r\n            </div>\r\n            <div class=\"content\">Hehe... :) Good work. \r\n\r\nThis demonstration should put this RSS-Data nonsense to rest.\r\n\r\nNothing like a good example...</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087866\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://icite.net/blog/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=9c8bd9e7e240a5917219fba15f0a10f4&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://icite.net/blog/\">Jay Fienberg</a>\r\n                </div>\r\n                <a href=\"#comment-221087866\" class=\"permalink\"><time datetime=\"2003-10-02T12:41:14\">2003-10-02T12:41:14</time></a>\r\n            </div>\r\n            <div class=\"content\">Thanks for building a good example comparison--very useful and helpful to the discussion</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087868\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.myelin.co.nz/post/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=79d809dc2d0441ef44efc6ad1a1429eb&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.myelin.co.nz/post/\">Phillip Pearson</a>\r\n                </div>\r\n                <a href=\"#comment-221087868\" class=\"permalink\"><time datetime=\"2003-10-02T17:48:09\">2003-10-02T17:48:09</time></a>\r\n            </div>\r\n            <div class=\"content\">Here's code to parse the RSS-Data version:\r\n\r\nhttp://www.myelin.co.nz/post/2003/10/3/#200310031</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087869\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.davidgalbraith.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=30d76b8340ace48320c3cc24927543aa&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.davidgalbraith.org\">David Galbraith</a>\r\n                </div>\r\n                <a href=\"#comment-221087869\" class=\"permalink\"><time datetime=\"2003-10-02T18:08:36\">2003-10-02T18:08:36</time></a>\r\n            </div>\r\n            <div class=\"content\">Heh - nothing like actually seeing something. And surely if you use a schema version of RSS you would get the extra information about the metadata without having to put it inline with the feed itself?</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087870\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.myelin.co.nz/post/\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=79d809dc2d0441ef44efc6ad1a1429eb&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.myelin.co.nz/post/\">Phillip Pearson</a>\r\n                </div>\r\n                <a href=\"#comment-221087870\" class=\"permalink\"><time datetime=\"2003-10-02T18:18:13\">2003-10-02T18:18:13</time></a>\r\n            </div>\r\n            <div class=\"content\">And here's code to parse the namespace version:\r\n\r\nhttp://www.myelin.co.nz/post/2003/10/3/#200310032</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087871\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://dannyayers.com\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=ac0d01ebb5e438c029c0764064f70827&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://dannyayers.com\">Danny</a>\r\n                </div>\r\n                <a href=\"#comment-221087871\" class=\"permalink\"><time datetime=\"2003-10-03T07:22:16\">2003-10-03T07:22:16</time></a>\r\n            </div>\r\n            <div class=\"content\">I've done a first-shot at this in RDF/XML :\r\n\r\nhttp://dannyayers.com/archives/001908.html\r\n\r\nCompare and contrast with the RSS-Data version (especially in terms of readibility, simplicity etc ;-)</div>\r\n            \r\n        </li>\r\n    \r\n        <li class=\"comment\" id=\"comment-221087872\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=8f8684b971819df3daca507573d78894&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"\">Michael Thorne</a>\r\n                </div>\r\n                <a href=\"#comment-221087872\" class=\"permalink\"><time datetime=\"2003-10-21T17:15:09\">2003-10-21T17:15:09</time></a>\r\n            </div>\r\n            <div class=\"content\">Just started looking into the RSS-Data format and lightly read over your samples.  What I noticed first off was there was no currency definition.  I believe this would be a critical component of international business. mxt</div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/02/rss-data-versus-namespace",
    "summary": "<p>\nOkay, just for the sake of tinkering, I&apos;m poking at embedding data\nfrom the\n<a href=\"http://www.amazon.com/gp/browse.html/002-4832258-8958444?node=3435361\">Amazon Web Services</a>\ninto an RSS 2.0 feed.  On one hand, I just shoehorned the Amazon\nXML schema into an RSS 2.0 namespace, and on the other, I tried\ntransliterating the Amazon XML data into\n<a href=\"http://radio.weblogs.com/0113297/2003/10/01.html#a237\">RSS-Data</a> /\n<a href=\"http://www.xml-rpc.com/spec\">XML-RPC</a> serialized data\nstructures.\n</p>\n<p>\nTo resolve my own love/hate of this RSS-Data idea,\nI&apos;m planning to keep going from here and work up some simple Python\nscripts to produce and consume data along the lines of both examples,\nthen to comment on the experience.  (This is assuming I don&apos;t run out\nof round tuits.)  Some things to note:\n</p><ul>\n\n<li>Your XML mojo is probably stronger than mine,\nso please feel free to correct me.</li>\n\n<li>Although I created the RSS-Data example by hand, it would\notherwise be completely produced and consumed by machine.</li>\n\n<li>Since it&apos;s at the root of a few things I&apos;m thinking,\nit&apos;s worth restating:  RSS-Data is intended to be produced and\nconsumed by machine, not by humans.  This means that the XML\ndata needs not look pretty or elegant to you, but to your machine.</li>\n\n</ul>\n<p></p>\n\n<p>\nSo, on with the XML.  First, I\n<a href=\"http://xml.amazon.com/onca/xml3?t=0xdecafbad-20&amp;dev-t=foo&amp;AsinSearch=0439139597&amp;type=lite&amp;f=xml\">requested data</a>\nfrom Amazon and got the following:\n</p>\n\n<pre>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;ProductInfo\n  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n  xsi:noNamespaceSchemaLocation=&quot;http://xml.amazon.com/schemas3/dev-lite.xsd&quot;&gt;\n  &lt;Details url=&quot;http://www.amazon.com/exec/obidos/ASIN/0439139597/0xdecafbad-20&quot;&gt;\n    &lt;Asin&gt;0439139597&lt;/Asin&gt;\n    &lt;ProductName&gt;Harry Potter and the Goblet of Fire (Book 4)&lt;/ProductName&gt;\n    &lt;Catalog&gt;Book&lt;/Catalog&gt;\n    &lt;Authors&gt;\n      &lt;Author&gt;J. K. Rowling&lt;/Author&gt;\n      &lt;Author&gt;Mary GrandPr?&lt;/Author&gt;\n    &lt;/Authors&gt;\n    &lt;ReleaseDate&gt;08 July, 2000&lt;/ReleaseDate&gt;\n    &lt;Manufacturer&gt;Scholastic&lt;/Manufacturer&gt;\n    &lt;ImageUrlSmall&gt;http://images.amazon.com/images/P/0439139597.01.THUMBZZZ.jpg&lt;/ImageUrlSmall&gt;\n    &lt;ImageUrlMedium&gt;http://images.amazon.com/images/P/0439139597.01.MZZZZZZZ.jpg&lt;/ImageUrlMedium&gt;\n    &lt;ImageUrlLarge&gt;http://images.amazon.com/images/P/0439139597.01.LZZZZZZZ.jpg&lt;/ImageUrlLarge&gt;\n    &lt;Availability&gt;Usually ships within 24 hours&lt;/Availability&gt;\n    &lt;ListPrice&gt;$25.95&lt;/ListPrice&gt;\n    &lt;OurPrice&gt;$18.16&lt;/OurPrice&gt;\n    &lt;UsedPrice&gt;$3.97&lt;/UsedPrice&gt;\n  &lt;/Details&gt;\n&lt;/ProductInfo&gt;</pre>\n\n<p>\nFrom this, I cooked up an example RSS feed with Amazon&apos;s XML\nschema shoehorned in as a namespace:\n</p>\n<pre>&lt;rss version=&quot;2.0&quot;\n  xmlns=&quot;http://blogs.law.harvard.edu/tech/rss&quot;\n  xmlns:az=&quot;http://www.amazon.com/gp/aws/landing.html&quot;\n  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n  xsi:schemaLocation=&quot;http://www.amazon.com/gp/aws/landing.html\n                      http://xml.amazon.com/schemas3/dev-lite.xsd&quot;&gt;\n  &lt;channel&gt;\n    &lt;title&gt;Testing Amazon Namespace&lt;/title&gt;   \n    &lt;item&gt;\n      &lt;title&gt;Harry Potter and the Goblet of Fire (Book 4)&lt;/title&gt;\n      &lt;az:ProductInfo&gt;\n        &lt;az:Details url=&quot;http://www.amazon.com/exec/obidos/ASIN/0439139597/0xdecafbad-20&quot;&gt;\n          &lt;az:Asin&gt;0439139597&lt;/az:Asin&gt;\n          &lt;az:ProductName&gt;Harry Potter and the Goblet of Fire (Book 4)&lt;/az:ProductName&gt;\n          &lt;az:Catalog&gt;Book&lt;/az:Catalog&gt;\n          &lt;az:Authors&gt;\n            &lt;az:Author&gt;J. K. Rowling&lt;/az:Author&gt;\n            &lt;az:Author&gt;Mary GrandPr?&lt;/az:Author&gt;\n          &lt;/az:Authors&gt;\n          &lt;az:ReleaseDate&gt;08 July, 2000&lt;/az:ReleaseDate&gt;\n          &lt;az:Manufacturer&gt;Scholastic&lt;/az:Manufacturer&gt;\n          &lt;az:ImageUrlSmall&gt;http://images.amazon.com/images/P/0439139597.01.THUMBZZZ.jpg&lt;/az:ImageUrlSmall&gt;\n          &lt;az:ImageUrlMedium&gt;http://images.amazon.com/images/P/0439139597.01.MZZZZZZZ.jpg&lt;/az:ImageUrlMedium&gt;\n          &lt;az:ImageUrlLarge&gt;http://images.amazon.com/images/P/0439139597.01.LZZZZZZZ.jpg&lt;/az:ImageUrlLarge&gt;\n          &lt;az:Availability&gt;Usually ships within 24 hours&lt;/az:Availability&gt;\n          &lt;az:ListPrice&gt;$25.95&lt;/az:ListPrice&gt;\n          &lt;az:OurPrice&gt;$18.16&lt;/az:OurPrice&gt;\n          &lt;az:UsedPrice&gt;$3.97&lt;/az:UsedPrice&gt;\n        &lt;/az:Details&gt;\n      &lt;/az:ProductInfo&gt;\n    &lt;/item&gt;   \n  &lt;/channel&gt;   \n&lt;/rss&gt;</pre>\n\n<p>\nThen, I transliterated things into what I understand of RSS-Data:\n</p>\n<pre>&lt;rss version=&quot;2.0&quot;\n  xmlns=&quot;http://blogs.law.harvard.edu/tech/rss&quot;\n  xmlns:sdl=&quot;http://radio.weblogs.com/0113297/2003/10/01.html#a237&quot;&gt;\n  &lt;channel&gt;\n    &lt;title&gt;Testing Amazon Namespace&lt;/title&gt;   \n    &lt;item&gt;   \n      &lt;title&gt;A Sample Item&lt;/title&gt;\n      &lt;sdl:data&gt;\n        &lt;sdl:struct&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;url&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:string&gt;http://www.amazon.com/exec/obidos/ASIN/0439139597/0xdecafbad-20&lt;/sdl:string&gt;\n            &lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;Asin&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;0439139597&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;ProductName&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:string&gt;\n                Harry Potter and the Goblet of Fire (Book 4)\n              &lt;/sdl:string&gt;\n            &lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;Catalog&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;Book&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;          \n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;Authors&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:array&gt;\n                &lt;sdl:data&gt;\n                  &lt;sdl:value&gt;J. K. Rowling&lt;/sdl:value&gt;\n                  &lt;sdl:value&gt;Mary GrandPr&lt;/sdl:value&gt;\n                &lt;/sdl:data&gt;\n              &lt;/sdl:array&gt;\n            &lt;/sdl:value&gt;            \n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;ReleaseDate&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:dateTime.iso8601&gt;2000-07-08T00:00:00&lt;/sdl:dateTime.iso8601&gt;\n            &lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;          \n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;Manufacturer&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;Scholastic&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;ImageUrlSmall&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:string&gt;http://images.amazon.com/images/P/0439139597.01.THUMBZZZ.jpg&lt;/sdl:string&gt;\n            &lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;          \n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;ImageUrlMedium&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:string&gt;http://images.amazon.com/images/P/0439139597.01.MZZZZZZZ.jpg&lt;/sdl:string&gt;\n            &lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;          \n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;ImageUrlLarge&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;\n              &lt;sdl:string&gt;http://images.amazon.com/images/P/0439139597.01.LZZZZZZZ.jpg&lt;/sdl:string&gt;\n            &lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;          \n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;Availability&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;Usually ships within 24 hours&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;ListPrice&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;$25.95&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;OurPrice&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;$18.16&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n          &lt;sdl:member&gt;\n            &lt;sdl:name&gt;UsedPrice&lt;/sdl:name&gt;\n            &lt;sdl:value&gt;&lt;sdl:string&gt;$3.97&lt;/sdl:string&gt;&lt;/sdl:value&gt;\n          &lt;/sdl:member&gt;\n        &lt;/sdl:struct&gt;\n      &lt;/sdl:data&gt;\n    &lt;/item&gt;   \n  &lt;/channel&gt;   \n&lt;/rss&gt;</pre>\n",
    "prevPostPath": "2003/10/02/rss-data-versus-namespace-2",
    "nextPostPath": "2003/10/01/rss-data"
  },
  {
    "comments_archived": true,
    "date": "2003-10-01T20:21:23.000Z",
    "layout": "post",
    "title": "RSS-Data: XML-RPC encoding in RSS 2.0",
    "wordpress_id": 487,
    "wordpress_slug": "rss-data",
    "wordpress_url": "http://www.decafbad.com/blog/?p=487",
    "year": "2003",
    "month": "10",
    "day": "01",
    "isDir": false,
    "slug": "rss-data",
    "postName": "2003-10-01-rss-data",
    "html": "<blockquote cite=\"http://radio.weblogs.com/0113297/2003/10/01.html#a236\"><i><p>\nA few months ago I approached Dave Winer and a few other people with a very simple idea.? Why not use XML-RPC's data serialization format to create a simple data language for object meta-data in RSS (and other!) applications.? Interestingly, if you subtract the message envelop from XML-RPC, add Unicode and time-zone support to the standard, you've actually got WDDX, quite literally.? Dave really liked the idea, and we came up with the idea of RSS-Data.\n</p>\n<p>\nWhy use RSS-Data?? Pragmatism.? Because of the rapid growth of blogging software, XML-RPC parsers are already implemented in dozens of languages and platforms.? As a result, a simple data language based on XML-RPC's data model could emerge in a matter of days or weeks, as developers quickly refactor their parsers to simply provide data serialization/deserialization components.\n</p></i></blockquote><div class=\"credit\" align=\"right\"><small>Source: <cite><a href=\"http://radio.weblogs.com/0113297/2003/10/01.html#a236\">Jeremy Allaire's Radio </a></cite> (via <a href=\"http://weblog.siliconvalley.com/column/dangillmor/archives/001383.shtml\">Silicon Valley - Dan Gillmor's eJournal - Expanding the Scope of RSS</a>)</small></div>    <p>Grr. I can&#8217;t decide whether I hate this idea or can live with it.  On the one hand, I have benefitted from <span class=\"caps\">XML</span>-RPC and it&#8217;s quick integration between disparate scripting environments.  But on the other hand, the tendency to use adhoc data structures in scripting has given me numerous headaches and plenty of inexplicable bugs.</p><p>The further I get, the less I want quick and dirty, and the more I want thoughtful chaos and at least some documentation.  I&#8217;d like some schemas, rather than reverse engineering from example.  But sometimes it&#8217;s nice to short circuit over-designed processes and take expedient shortcuts, even if there lies the road to madness.  Sleep is good sometimes.</p>\n<!--more-->\nshortname=rss_data\n",
    "body": "<blockquote cite=\"http://radio.weblogs.com/0113297/2003/10/01.html#a236\"><i><p>\r\nA few months ago I approached Dave Winer and a few other people with a very simple idea.? Why not use XML-RPC's data serialization format to create a simple data language for object meta-data in RSS (and other!) applications.? Interestingly, if you subtract the message envelop from XML-RPC, add Unicode and time-zone support to the standard, you've actually got WDDX, quite literally.? Dave really liked the idea, and we came up with the idea of RSS-Data.\r\n</p>\r\n<p>\r\nWhy use RSS-Data?? Pragmatism.? Because of the rapid growth of blogging software, XML-RPC parsers are already implemented in dozens of languages and platforms.? As a result, a simple data language based on XML-RPC's data model could emerge in a matter of days or weeks, as developers quickly refactor their parsers to simply provide data serialization/deserialization components.\r\n</p></i></blockquote><div class=\"credit\" align=\"right\"><small>Source: <cite><a href=\"http://radio.weblogs.com/0113297/2003/10/01.html#a236\">Jeremy Allaire's Radio </a></cite> (via <a href=\"http://weblog.siliconvalley.com/column/dangillmor/archives/001383.shtml\">Silicon Valley - Dan Gillmor's eJournal - Expanding the Scope of RSS</a>)</small></div>\t<p>Grr. I can&#8217;t decide whether I hate this idea or can live with it.  On the one hand, I have benefitted from <span class=\"caps\">XML</span>-RPC and it&#8217;s quick integration between disparate scripting environments.  But on the other hand, the tendency to use adhoc data structures in scripting has given me numerous headaches and plenty of inexplicable bugs.</p><p>The further I get, the less I want quick and dirty, and the more I want thoughtful chaos and at least some documentation.  I&#8217;d like some schemas, rather than reverse engineering from example.  But sometimes it&#8217;s nice to short circuit over-designed processes and take expedient shortcuts, even if there lies the road to madness.  Sleep is good sometimes.</p>\r\n<!--more-->\r\nshortname=rss_data\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/01/rss-data",
    "summary": "<blockquote cite=\"http://radio.weblogs.com/0113297/2003/10/01.html#a236\"><i><p>\nA few months ago I approached Dave Winer and a few other people with a very simple idea.? Why not use XML-RPC&apos;s data serialization format to create a simple data language for object meta-data in RSS (and other!) applications.? Interestingly, if you subtract the message envelop from XML-RPC, add Unicode and time-zone support to the standard, you&apos;ve actually got WDDX, quite literally.? Dave really liked the idea, and we came up with the idea of RSS-Data.\n</p>\n<p>\nWhy use RSS-Data?? Pragmatism.? Because of the rapid growth of blogging software, XML-RPC parsers are already implemented in dozens of languages and platforms.? As a result, a simple data language based on XML-RPC&apos;s data model could emerge in a matter of days or weeks, as developers quickly refactor their parsers to simply provide data serialization/deserialization components.\n</p></i></blockquote><div class=\"credit\" align=\"right\"><small>Source: <cite><a href=\"http://radio.weblogs.com/0113297/2003/10/01.html#a236\">Jeremy Allaire&apos;s Radio </a></cite> (via <a href=\"http://weblog.siliconvalley.com/column/dangillmor/archives/001383.shtml\">Silicon Valley - Dan Gillmor&apos;s eJournal - Expanding the Scope of RSS</a>)</small></div>    <p>Grr. I can&#x2019;t decide whether I hate this idea or can live with it.  On the one hand, I have benefitted from <span class=\"caps\">XML</span>-RPC and it&#x2019;s quick integration between disparate scripting environments.  But on the other hand, the tendency to use adhoc data structures in scripting has given me numerous headaches and plenty of inexplicable bugs.</p><p>The further I get, the less I want quick and dirty, and the more I want thoughtful chaos and at least some documentation.  I&#x2019;d like some schemas, rather than reverse engineering from example.  But sometimes it&#x2019;s nice to short circuit over-designed processes and take expedient shortcuts, even if there lies the road to madness.  Sleep is good sometimes.</p>\n",
    "prevPostPath": "2003/10/02/rss-data-versus-namespace",
    "nextPostPath": "2003/10/01/comment-icons"
  },
  {
    "comments_archived": true,
    "date": "2003-10-01T17:00:56.000Z",
    "layout": "post",
    "title": "Comment Icons drawn from author's RSS or FOAF files",
    "wordpress_id": 486,
    "wordpress_slug": "comment-icons",
    "wordpress_url": "http://www.decafbad.com/blog/?p=486",
    "year": "2003",
    "month": "10",
    "day": "01",
    "isDir": false,
    "slug": "comment-icons",
    "postName": "2003-10-01-comment-icons",
    "html": "<p>\nThis is an interesting thing over at\n<a href=\"http://kasei.evilfunhouse.com/blog/\">Life on Mars</a>:\n<a href=\"http://kasei.evilfunhouse.com/blog/archives/2003/09/30/icons\">Comment Icons</a>.\n</p>\n<p>\nPost a comment, supply the URL to your blog, and if your\nblog has a locatable RSS feed which points to an image,\nthat image will be displayed next to your comments.  As I've\nbeen known to have <a href=\"http://www.decafbad.com/blog.cgi/?q=livejournal\">a mild obsession with LiveJournal</a>, this reminds\nme a lot of the usericons in use there, only distributed\nacross blogspace, which is what I've wanted to see done for a\nlong time.\n</p>\n<p>\nAll the infrastructure of LiveJournal,\nFriendster, and the like could be recast as distributed\nfeeds and metadata, with smarts on blog servers or\npersonal clients.  One piece at a time...\n</p>\n<!--more-->\nshortname=comment_icons\n",
    "body": "<p>\r\nThis is an interesting thing over at\r\n<a href=\"http://kasei.evilfunhouse.com/blog/\">Life on Mars</a>:\r\n<a href=\"http://kasei.evilfunhouse.com/blog/archives/2003/09/30/icons\">Comment Icons</a>.\r\n</p>\r\n<p>\r\nPost a comment, supply the URL to your blog, and if your\r\nblog has a locatable RSS feed which points to an image,\r\nthat image will be displayed next to your comments.  As I've\r\nbeen known to have <a href=\"http://www.decafbad.com/blog.cgi/?q=livejournal\">a mild obsession with LiveJournal</a>, this reminds\r\nme a lot of the usericons in use there, only distributed\r\nacross blogspace, which is what I've wanted to see done for a\r\nlong time.\r\n</p>\r\n<p>\r\nAll the infrastructure of LiveJournal,\r\nFriendster, and the like could be recast as distributed\r\nfeeds and metadata, with smarts on blog servers or\r\npersonal clients.  One piece at a time...\r\n</p>\r\n<!--more-->\r\nshortname=comment_icons\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/01/comment-icons",
    "summary": "<p>\nThis is an interesting thing over at\n<a href=\"http://kasei.evilfunhouse.com/blog/\">Life on Mars</a>:\n<a href=\"http://kasei.evilfunhouse.com/blog/archives/2003/09/30/icons\">Comment Icons</a>.\n</p>\n<p>\nPost a comment, supply the URL to your blog, and if your\nblog has a locatable RSS feed which points to an image,\nthat image will be displayed next to your comments.  As I&apos;ve\nbeen known to have <a href=\"http://www.decafbad.com/blog.cgi/?q=livejournal\">a mild obsession with LiveJournal</a>, this reminds\nme a lot of the usericons in use there, only distributed\nacross blogspace, which is what I&apos;ve wanted to see done for a\nlong time.\n</p>\n<p>\nAll the infrastructure of LiveJournal,\nFriendster, and the like could be recast as distributed\nfeeds and metadata, with smarts on blog servers or\npersonal clients.  One piece at a time...\n</p>\n",
    "prevPostPath": "2003/10/01/rss-data",
    "nextPostPath": "2003/10/01/mailbucket-feeds"
  },
  {
    "comments_archived": true,
    "date": "2003-10-01T15:34:25.000Z",
    "layout": "post",
    "title": "Mailbucket syndication feeds",
    "wordpress_id": 485,
    "wordpress_slug": "mailbucket-feeds",
    "wordpress_url": "http://www.decafbad.com/blog/?p=485",
    "year": "2003",
    "month": "10",
    "day": "01",
    "isDir": false,
    "slug": "mailbucket-feeds",
    "postName": "2003-10-01-mailbucket-feeds",
    "html": "<p>\nJust discovered Tom Dyson's\n<a href=\"http://www.mailbucket.org/index.html\">Mailbucket.org</a>,\nand started playing around with signing up mailing lists\nfor feeds.  It's simple, send an email to\n<a href=\"mailto:foo@mailbucket.org\">foo@mailbucket.org</a>,\nthen check <a href=\"http://mailbucket.org/foo.xml\">http://mailbucket.org/foo.xml</a>\nfor an RSS feed.\nI was tinkering with something like it last week, using\nPostfix, Mail::Audit, and blosxom -- but hey, if someone else\nhas done it, I'll just go use theirs! :)\n</p>\n<p>\nA few feeds I've set up:\n</p>\n<ul>\n<li><a href=\"http://mailbucket.org/cocoa-dev.xml\">cocoa-dev</a> from Apple</li>\n<li><a href=\"http://mailbucket.org/macosx-dev.xml\">macosx-dev</a> from OmniGroup</li>\n</ul>\n<!--more-->\nshortname=mailbucket_feeds\n\n<div id=\"comments\" class=\"comments archived-comments\"><h3>Archived Comments</h3>\n<ul class=\"comments\">\n<li class=\"comment\" id=\"comment-221086433\">\n<div class=\"meta\">\n<div class=\"author\">\n<a class=\"avatar image\" rel=\"nofollow\" \nhref=\"http://www.10500bc.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=6492f173a7059ece309f7d670ff44e95&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\n<a class=\"avatar name\" rel=\"nofollow\" \nhref=\"http://www.10500bc.org\">nf0</a>\n</div>\n<a href=\"#comment-221086433\" class=\"permalink\"><time datetime=\"2003-10-01T14:25:16\">2003-10-01T14:25:16</time></a>\n</div>\n<div class=\"content\">Great idea. We continue to shove more things into our aggregators since we spend so much time there.</div>\n</li>\n</ul>\n</div>\n",
    "body": "<p>\r\nJust discovered Tom Dyson's\r\n<a href=\"http://www.mailbucket.org/index.html\">Mailbucket.org</a>,\r\nand started playing around with signing up mailing lists\r\nfor feeds.  It's simple, send an email to\r\n<a href=\"mailto:foo@mailbucket.org\">foo@mailbucket.org</a>,\r\nthen check <a href=\"http://mailbucket.org/foo.xml\">http://mailbucket.org/foo.xml</a>\r\nfor an RSS feed.\r\nI was tinkering with something like it last week, using\r\nPostfix, Mail::Audit, and blosxom -- but hey, if someone else\r\nhas done it, I'll just go use theirs! :)\r\n</p>\r\n<p>\r\nA few feeds I've set up:\r\n</p>\r\n<ul>\r\n<li><a href=\"http://mailbucket.org/cocoa-dev.xml\">cocoa-dev</a> from Apple</li>\r\n<li><a href=\"http://mailbucket.org/macosx-dev.xml\">macosx-dev</a> from OmniGroup</li>\r\n</ul>\r\n<!--more-->\r\nshortname=mailbucket_feeds\r\n\r\n<div id=\"comments\" class=\"comments archived-comments\">\r\n            <h3>Archived Comments</h3>\r\n            \r\n        <ul class=\"comments\">\r\n            \r\n        <li class=\"comment\" id=\"comment-221086433\">\r\n            <div class=\"meta\">\r\n                <div class=\"author\">\r\n                    <a class=\"avatar image\" rel=\"nofollow\" \r\n                       href=\"http://www.10500bc.org\"><img src=\"http://www.gravatar.com/avatar.php?gravatar_id=6492f173a7059ece309f7d670ff44e95&amp;size=32&amp;default=http://mediacdn.disqus.com/1320279820/images/noavatar32.png\"/></a>\r\n                    <a class=\"avatar name\" rel=\"nofollow\" \r\n                       href=\"http://www.10500bc.org\">nf0</a>\r\n                </div>\r\n                <a href=\"#comment-221086433\" class=\"permalink\"><time datetime=\"2003-10-01T14:25:16\">2003-10-01T14:25:16</time></a>\r\n            </div>\r\n            <div class=\"content\">Great idea. We continue to shove more things into our aggregators since we spend so much time there.</div>\r\n            \r\n        </li>\r\n    \r\n        </ul>\r\n    \r\n        </div>\r\n    ",
    "parentPath": "../blog.lmorchard.com/posts/archives/2003",
    "path": "2003/10/01/mailbucket-feeds",
    "summary": "<p>\nJust discovered Tom Dyson&apos;s\n<a href=\"http://www.mailbucket.org/index.html\">Mailbucket.org</a>,\nand started playing around with signing up mailing lists\nfor feeds.  It&apos;s simple, send an email to\n<a href=\"mailto:foo@mailbucket.org\">foo@mailbucket.org</a>,\nthen check <a href=\"http://mailbucket.org/foo.xml\">http://mailbucket.org/foo.xml</a>\nfor an RSS feed.\nI was tinkering with something like it last week, using\nPostfix, Mail::Audit, and blosxom -- but hey, if someone else\nhas done it, I&apos;ll just go use theirs! :)\n</p>\n<p>\nA few feeds I&apos;ve set up:\n</p>\n<ul>\n<li><a href=\"http://mailbucket.org/cocoa-dev.xml\">cocoa-dev</a> from Apple</li>\n<li><a href=\"http://mailbucket.org/macosx-dev.xml\">macosx-dev</a> from OmniGroup</li>\n</ul>\n",
    "prevPostPath": "2003/10/01/comment-icons",
    "nextPostPath": "2003/09/29/dynamic-polling-freq-too"
  }
]