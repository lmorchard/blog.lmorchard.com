[
  {
    "title": "Random thoughts for 2014 Nov 25",
    "tags": [
      "daybook",
      "thoughts",
      "livinginthefuture",
      "retro",
      "bbs",
      "synchronet"
    ],
    "year": "2014",
    "month": "11",
    "day": "25",
    "isDir": false,
    "slug": "random",
    "date": "2014-11-25T12:00:00.000Z",
    "postName": "2014-11-25-random",
    "html": "<p>TL;DR: Living in the future with spreadsheets and DOS games.</p>\n<!--more-->\n\n<ul>\n<li><p>Hello world. I&#39;ve not gotten any better at keeping these posts going.</p>\n</li>\n<li><p>A reminder that we&#39;re living in the future: </p>\n<ul>\n<li><p>A <a href=\"https://docs.google.com/\">powerful spreadsheet package</a> is available online, free to use.</p>\n</li>\n<li><p>It offers the ability to fill in cells with live data queried from\nservices all over the world.</p>\n<ul>\n<li>This is serious gee-whiz stuff. I seem to remember first getting fired\nup by the potential after reading <a href=\"http://www.amazon.com/Practical-Internet-Groupware-Jon-Udell/dp/1565925378\">Practical Internet Groupware by Jon\nUdell</a>, circa 1999.</li>\n</ul>\n</li>\n<li><p>Oh, and I mainly use it to <a href=\"https://www.fuzzwork.co.uk/2013/06/22/importing-price-data-into-spreadsheets/\">plan business activities in a video\ngame</a>.</p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Speaking of living in the future: <a href=\"http://bbs.decafbad.com\">bbs.decafbad.com</a> lives again! </p>\n<ul>\n<li><p><a href=\"http://bbs.decafbad.com\"><img src=\"/uploads/2014/decafbad-bbs.png\" style=\"width:66%\"></a></p>\n</li>\n<li><p>In a spasm of nostalgia-ception, I set up <a href=\"http://synchro.net\">Synchronet</a> with a handful of\n<a href=\"http://breakintochat.com/wiki/BBS_door\">BBS DOOR games</a>.</p>\n<ul>\n<li>e.g. <a href=\"http://breakintochat.com/wiki/Legend_of_the_Red_Dragon\">LORD</a>, <a href=\"http://breakintochat.com/wiki/Barren_Realms_Elite\">BRE</a>, <a href=\"http://breakintochat.com/wiki/Solar_Realms_Elite\">SRE</a>, <a href=\"http://breakintochat.com/wiki/Usurper\">Usurper</a>, and a few others.</li>\n</ul>\n</li>\n<li><p>The last time I did this was <a href=\"http://www.decafbad.com/blog/2002/02/15/ooooai/\">back in 2002</a>, on a\nlittle 70mhz PC rescued from a dumpster.</p>\n<ul>\n<li><em>Holy crap over 12 years ago</em>. So, there are like 2 layers of nostalgia\ngoing on here.</li>\n</ul>\n</li>\n<li><p>This time around, I first tried installing Synchronet on my\n<a href=\"http://blog.lmorchard.com/2013/02/10/building-my-couch-computing-station/\">couch gaming PC</a>.</p>\n<ul>\n<li>The BBS itself works. But, alas, Windows 8 has\nlargely left the old DOS games behind. Also, and having this stuff\ngoing on this PC is annoying.</li>\n</ul>\n</li>\n<li><p>My second attempt was to <a href=\"https://twitter.com/lmorchard/status/535478319148703744\">try running Windows 98 in QEMU</a> on my\nhobby Linux VM.</p>\n<ul>\n<li><a href=\"https://twitter.com/lmorchard/status/535485189196369920\">It was hilarious.</a> But, it chewed up 100% CPU\nwhile running. After I slapped it with <a href=\"http://cpulimit.sourceforge.net/\">cpulimit</a>, it performed\nabout as well as that 2002 trash computer.</li>\n</ul>\n</li>\n<li><p>My third attempt saw me <a href=\"http://wiki.synchro.net/install:nix\">building the Linux port of Synchronet</a>.</p>\n<ul>\n<li><p>This involves wrestling with <a href=\"http://wiki.synchro.net/howto:dosemu\">DOSEmu</a> to run the old-school games.\nThere are a few hitches, but the games are far more playable than I\nexpected.</p>\n</li>\n<li><p>I expect this Linux-based install to be a lot easier to keep running,\nsince it doesn&#39;t depend on hardware in my own house and I can mostly\nforget about it.</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "body": "TL;DR: Living in the future with spreadsheets and DOS games.\n\n<!--more-->\n\n* Hello world. I've not gotten any better at keeping these posts going.\n\n* A reminder that we're living in the future: \n\n  * A [powerful spreadsheet package][docs] is available online, free to use.\n  \n  * It offers the ability to fill in cells with live data queried from\n    services all over the world.\n\n    * This is serious gee-whiz stuff. I seem to remember first getting fired\n      up by the potential after reading [Practical Internet Groupware by Jon\n      Udell][group], circa 1999.\n\n  * Oh, and I mainly use it to [plan business activities in a video\n    game][evesheet].\n\n[docs]: https://docs.google.com/\n[group]: http://www.amazon.com/Practical-Internet-Groupware-Jon-Udell/dp/1565925378\n[evesheet]: https://www.fuzzwork.co.uk/2013/06/22/importing-price-data-into-spreadsheets/\n\n* Speaking of living in the future: [bbs.decafbad.com][] lives again! \n\n  * [<img src=\"/uploads/2014/decafbad-bbs.png\" style=\"width:66%\">][bbs.decafbad.com]\n\n  * In a spasm of nostalgia-ception, I set up [Synchronet][] with a handful of\n    [BBS DOOR games][door].\n\n    * e.g. [LORD][], [BRE][], [SRE][], [Usurper][], and a few others.\n\n  * The last time I did this was [back in 2002][lastbbs], on a\n    little 70mhz PC rescued from a dumpster.\n\n    * *Holy crap over 12 years ago*. So, there are like 2 layers of nostalgia\n      going on here.\n\n  * This time around, I first tried installing Synchronet on my\n    [couch gaming PC][couchpc].\n\n    * The BBS itself works. But, alas, Windows 8 has\n      largely left the old DOS games behind. Also, and having this stuff\n      going on this PC is annoying.\n\n  * My second attempt was to [try running Windows 98 in QEMU][win98] on my\n    hobby Linux VM.\n    \n    * [It was hilarious.][winfunny] But, it chewed up 100% CPU\n      while running. After I slapped it with [cpulimit][], it performed\n      about as well as that 2002 trash computer.\n\n  * My third attempt saw me [building the Linux port of Synchronet][sbbsport].\n  \n    * This involves wrestling with [DOSEmu][] to run the old-school games.\n      There are a few hitches, but the games are far more playable than I\n      expected.\n\n    * I expect this Linux-based install to be a lot easier to keep running,\n      since it doesn't depend on hardware in my own house and I can mostly\n      forget about it.\n    \n[couchpc]: http://blog.lmorchard.com/2013/02/10/building-my-couch-computing-station/\n[cpulimit]: http://cpulimit.sourceforge.net/\n[dosemu]: http://wiki.synchro.net/howto:dosemu\n[sbbsport]: http://wiki.synchro.net/install:nix\n[lastbbs]: http://www.decafbad.com/blog/2002/02/15/ooooai/\n[synchronet]: http://synchro.net\n[bbs.decafbad.com]: http://bbs.decafbad.com\n[door]: http://breakintochat.com/wiki/BBS_door\n[lord]: http://breakintochat.com/wiki/Legend_of_the_Red_Dragon\n[bre]: http://breakintochat.com/wiki/Barren_Realms_Elite\n[sre]: http://breakintochat.com/wiki/Solar_Realms_Elite\n[usurper]: http://breakintochat.com/wiki/Usurper\n[win98]: https://twitter.com/lmorchard/status/535478319148703744\n[winfunny]: https://twitter.com/lmorchard/status/535485189196369920\n\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/11/25/random",
    "thumbnail": "/blog.lmorchard.com/uploads/2014/decafbad-bbs.png",
    "summary": "<p>TL;DR: Living in the future with spreadsheets and DOS games.</p>\n",
    "prevPostPath": "2015/02/09/parsec-patrol-resumes",
    "nextPostPath": "2014/10/27/thoughts"
  },
  {
    "title": "Random thoughts for 2014 Oct 27",
    "tags": [
      "daybook",
      "thoughts",
      "webdev",
      "mobile",
      "social"
    ],
    "year": "2014",
    "month": "10",
    "day": "27",
    "isDir": false,
    "slug": "thoughts",
    "date": "2014-10-27T12:00:00.000Z",
    "postName": "2014-10-27-thoughts",
    "html": "<p>TL;DR: More <a href=\"http://blog.lmorchard.com/2014/10/23/wtfomgbullets\">random stuff</a> collected and updated throughout the day.</p>\n<!--more-->\n\n<ul>\n<li><p>Hello world!</p>\n</li>\n<li><p>&quot;<a href=\"http://www.extremetech.com/extreme/134672-harvard-cracks-dna-storage-crams-700-terabytes-of-data-into-a-single-gram\">Harvard cracks DNA storage, crams 700 terabytes of data into a single\ngram</a>&quot;</p>\n<ul>\n<li><p>Can you imagine what it would be like to have a personal device that\ncould store all the data you would ever need?</p>\n</li>\n<li><p>And stored on media that&#39;s made for copying?</p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Dave asks, &quot;<a href=\"http://scripting.com/2014/10/27/whatsTheBestDesktopNodejsShell.html\">What&#39;s the best desktop node.js shell?</a>&quot;</p>\n<ul>\n<li><p>Could be an odd question in the age of CPUs in pockets\n&amp; clouds and the desktop in decline.</p>\n</li>\n<li><p>But, <a href=\"http://scripting.com/davenet/1997/09/14/FractionalHorsepowerHTTPSe.html\">fractional horsepower HTTP servers</a> and <a href=\"http://scripting.com/davenet/2001/01/04/desktopWebsites.html\">desktop\nwebsites</a> are powerful notions.</p>\n<ul>\n<li><p>Back in the day, <a href=\"http://radio.userland.com/\">Radio UserLand</a> and <a href=\"http://www.disobey.com/amphetadesk/\">AmphetaDesk</a> were\nmarvels.</p>\n</li>\n<li><p>First time I realized that a web server in my\nhouse <em>just for me</em> was a good idea.</p>\n</li>\n</ul>\n</li>\n<li><p>I&#39;ve also tried to say a few things about <a href=\"http://blog.lmorchard.com/2012/07/25/aerostats-base-stations-and-the-cloud/\">aerostats and base\nstations</a>.</p>\n</li>\n<li><p><a href=\"https://github.com/rogerwang/node-webkit\">node-webkit</a> seems like something I should check out.</p>\n<ul>\n<li>It&#39;s like <a href=\"http://www.indigostar.com/perl2exe.php\">Perl2EXE</a> all over again!</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>It seems like the sizes of mobile computers are trying to find some\n<a href=\"http://en.wikipedia.org/wiki/Lagrangian_point\">Lagrange points</a> where the influences of human hand size and demand for\nscreen real estate balance.</p>\n<ul>\n<li>Yes, I&#39;m trying to talk myself into <a href=\"http://newsroom.t-mobile.com/news/t-mobile-to-bring-nexus-6-to-its-data-strong-network-this-november.htm\">buying a Nexus 6</a>.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Do we really all <em>want</em> to live in the same big room on the internet?</p>\n<ul>\n<li><p>I&#39;ve <a href=\"http://decafbad.com/recaffeinated/archives/2007/11/20/WoWEVEandDelicious.html\">long thought</a> some separation between groups can help things scale\nsocially and tech-wise.</p>\n</li>\n<li><p>Reddit gets a lot right with subreddits. Kind of a\nsilo, yet avoids a most of the problems.</p>\n</li>\n</ul>\n</li>\n</ul>\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "body": "TL;DR: More [random stuff][why] collected and updated throughout the day.\r\n\r\n[why]: http://blog.lmorchard.com/2014/10/23/wtfomgbullets\r\n\r\n<!--more-->\r\n\r\n* Hello world!\r\n\r\n* \"[Harvard cracks DNA storage, crams 700 terabytes of data into a single\r\n  gram][dnadata]\"\r\n\r\n  * Can you imagine what it would be like to have a personal device that\r\n    could store all the data you would ever need?\r\n\r\n  * And stored on media that's made for copying?\r\n\r\n[dnadata]: http://www.extremetech.com/extreme/134672-harvard-cracks-dna-storage-crams-700-terabytes-of-data-into-a-single-gram\r\n\r\n* Dave asks, \"[What's the best desktop node.js shell?][nodeshell]\"\r\n\r\n  * Could be an odd question in the age of CPUs in pockets\r\n    & clouds and the desktop in decline.\r\n\r\n  * But, [fractional horsepower HTTP servers][frac] and [desktop\r\n    websites][deskweb] are powerful notions.\r\n\r\n    * Back in the day, [Radio UserLand][ruser] and [AmphetaDesk][] were\r\n      marvels.\r\n      \r\n    * First time I realized that a web server in my\r\n      house *just for me* was a good idea.\r\n\r\n  * I've also tried to say a few things about [aerostats and base\r\n    stations][aerostats].\r\n\r\n  * [node-webkit][] seems like something I should check out.\r\n\r\n    * It's like [Perl2EXE][] all over again!\r\n\r\n[perl2exe]: http://www.indigostar.com/perl2exe.php\r\n[ruser]: http://radio.userland.com/ \r\n[AmphetaDesk]: http://www.disobey.com/amphetadesk/\r\n[node-webkit]: https://github.com/rogerwang/node-webkit\r\n[aerostats]: http://blog.lmorchard.com/2012/07/25/aerostats-base-stations-and-the-cloud/  \r\n[deskweb]: http://scripting.com/davenet/2001/01/04/desktopWebsites.html\r\n[frac]: http://scripting.com/davenet/1997/09/14/FractionalHorsepowerHTTPSe.html\r\n[nodeshell]: http://scripting.com/2014/10/27/whatsTheBestDesktopNodejsShell.html\r\n\r\n* It seems like the sizes of mobile computers are trying to find some\r\n  [Lagrange points][] where the influences of human hand size and demand for\r\n  screen real estate balance.\r\n\r\n  * Yes, I'm trying to talk myself into [buying a Nexus 6][n6].\r\n\r\n[n6]: http://newsroom.t-mobile.com/news/t-mobile-to-bring-nexus-6-to-its-data-strong-network-this-november.htm\r\n\r\n* Do we really all *want* to live in the same big room on the internet?\r\n\r\n  * I've [long thought][] some separation between groups can help things scale\r\n   socially and tech-wise.\r\n\r\n  * Reddit gets a lot right with subreddits. Kind of a\r\n    silo, yet avoids a most of the problems.\r\n\r\n[long thought]: http://decafbad.com/recaffeinated/archives/2007/11/20/WoWEVEandDelicious.html\r\n[Lagrange points]: http://en.wikipedia.org/wiki/Lagrangian_point\r\n\r\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/10/27/thoughts",
    "summary": "<p>TL;DR: More <a href=\"http://blog.lmorchard.com/2014/10/23/wtfomgbullets\">random stuff</a> collected and updated throughout the day.</p>\n",
    "prevPostPath": "2014/11/25/random",
    "nextPostPath": "2014/10/23/node-project-layout"
  },
  {
    "title": "Playing with a node.js app project layout",
    "tags": [
      "nodejs",
      "webdev",
      "javascript",
      "gulp",
      "heroku"
    ],
    "year": "2014",
    "month": "10",
    "day": "23",
    "isDir": false,
    "slug": "node-project-layout",
    "date": "2014-10-23T12:00:00.000Z",
    "postName": "2014-10-23-node-project-layout",
    "html": "<p>I&#39;m pleased with <a href=\"https://github.com/lmorchard/toothub/tree/913c4d326ea5a424087899a103301323d46d8086\">this project layout</a> for a node.js-based web client /\nserver app.</p>\n<!--more-->\n\n<pre><code class=\"language-bash\">➜  toothub git:(master) ✗ tree\n├── Procfile\n├── README.md\n├── app.json\n├── bin\n│   └── toothub\n├── config.json-dist\n├── htdocs\n│   ├── css\n│   │   └── main.styl\n│   └── index.html\n├── lib\n│   ├── cli\n│   │   ├── index.js\n│   │   └── server.js\n│   ├── client\n│   │   └── index.js\n│   ├── models\n│   │   ├── Item.js\n│   │   └── index.js\n│   └── server\n│       ├── index.js\n│       └── static.js\n├── package.json\n└── test\n    └── test-index.js</code></pre>\n<p><a href=\"http://browserify.org/\">Browserify</a> lets me share a lot of code between client &amp; server, using the same\nconventions.  Though, I have to be careful not to pile too much into the\nclient-side JS bundle. It&#39;s really easy to inflate that.</p>\n<p>The <a href=\"https://www.npmjs.org/package/require-dir\">require-dir</a> module lets me do <a href=\"https://github.com/lmorchard/feeder2/tree/9d02e216e4d4e47351a69eece8bece67d2fed550/lib/cli\">some lazy things</a> to break up my\ncode into more submodules - at least on the server side. It&#39;s a little thing,\nbut I really like it. I first saw it over in <a href=\"http://viget.com/extend/gulp-browserify-starter-faq\">this Gulp + Browserify starter\nkit</a>.</p>\n<p>Thanks to the <a href=\"https://blog.heroku.com/archives/2014/8/7/heroku-button\">Heroku Button</a>, this thing is cake to get running\nsomewhere <em>out there</em>. Free Heroku is like the Raspberry PI of the cloud. I&#39;m\nstarting to think that anyone who&#39;s into indiewebish self-hosting concepts\nshould really be taking a look at this.</p>\n<p>I&#39;ve also been really into <a href=\"http://gulpjs.com/\">Gulp</a> recently, but so far I don&#39;t need it here.\nI&#39;m gratuitously wasting memory and cycles by processing resources on the fly\nthrough the app server rather than generating as static assets. Maybe I&#39;ll\nchange my mind on that after I&#39;ve tinkered for awhile.</p>\n<p>Anyway, now I guess I should actually start making this thing do stuff.</p>\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "body": "I'm pleased with [this project layout][layout] for a node.js-based web client /\r\nserver app.\r\n\r\n<!--more-->\r\n\r\n```bash\r\n➜  toothub git:(master) ✗ tree\r\n├── Procfile\r\n├── README.md\r\n├── app.json\r\n├── bin\r\n│   └── toothub\r\n├── config.json-dist\r\n├── htdocs\r\n│   ├── css\r\n│   │   └── main.styl\r\n│   └── index.html\r\n├── lib\r\n│   ├── cli\r\n│   │   ├── index.js\r\n│   │   └── server.js\r\n│   ├── client\r\n│   │   └── index.js\r\n│   ├── models\r\n│   │   ├── Item.js\r\n│   │   └── index.js\r\n│   └── server\r\n│       ├── index.js\r\n│       └── static.js\r\n├── package.json\r\n└── test\r\n    └── test-index.js\r\n```\r\n\r\n[Browserify][] lets me share a lot of code between client & server, using the same\r\nconventions.  Though, I have to be careful not to pile too much into the\r\nclient-side JS bundle. It's really easy to inflate that.\r\n\r\n[Browserify]: http://browserify.org/\r\n\r\nThe [require-dir][] module lets me do [some lazy things][lazy] to break up my\r\ncode into more submodules - at least on the server side. It's a little thing,\r\nbut I really like it. I first saw it over in [this Gulp + Browserify starter\r\nkit][starterkit].\r\n\r\n[starterkit]: http://viget.com/extend/gulp-browserify-starter-faq\r\n[require-dir]: https://www.npmjs.org/package/require-dir\r\n[lazy]: https://github.com/lmorchard/feeder2/tree/9d02e216e4d4e47351a69eece8bece67d2fed550/lib/cli\r\n\r\nThanks to the [Heroku Button][], this thing is cake to get running\r\nsomewhere *out there*. Free Heroku is like the Raspberry PI of the cloud. I'm\r\nstarting to think that anyone who's into indiewebish self-hosting concepts\r\nshould really be taking a look at this.\r\n\r\n[Heroku Button]: https://blog.heroku.com/archives/2014/8/7/heroku-button\r\n\r\nI've also been really into [Gulp][] recently, but so far I don't need it here.\r\nI'm gratuitously wasting memory and cycles by processing resources on the fly\r\nthrough the app server rather than generating as static assets. Maybe I'll\r\nchange my mind on that after I've tinkered for awhile.\r\n\r\n[gulp]: http://gulpjs.com/\r\n[layout]: https://github.com/lmorchard/toothub/tree/913c4d326ea5a424087899a103301323d46d8086\r\n\r\nAnyway, now I guess I should actually start making this thing do stuff.\r\n\r\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/10/23/node-project-layout",
    "summary": "<p>I&apos;m pleased with <a href=\"https://github.com/lmorchard/toothub/tree/913c4d326ea5a424087899a103301323d46d8086\">this project layout</a> for a node.js-based web client /\nserver app.</p>\n",
    "prevPostPath": "2014/10/27/thoughts",
    "nextPostPath": "2014/10/23/thoughts"
  },
  {
    "title": "Random thoughts for 2014 Oct 23",
    "tags": [
      "daybook",
      "thoughts",
      "tinderbox",
      "mashups",
      "twitter",
      "social"
    ],
    "year": "2014",
    "month": "10",
    "day": "23",
    "isDir": false,
    "slug": "thoughts",
    "date": "2014-10-23T12:00:00.000Z",
    "postName": "2014-10-23-thoughts",
    "html": "<p>TL;DR: This is a bunch of stuff I just randomly collected throughout the day.\n<a href=\"http://blog.lmorchard.com/2014/10/23/wtfomgbullets\">Look here for a bit of explanation</a>. I may or may not do this again.\nI&#39;m experimenting and entertaining myself.</p>\n<!--more-->\n\n<ul>\n<li><p>As a remote worker, I think this is a splendid insight:</p>\n<blockquote>\n<p>If you focus purely on the job, and not the industry, you realise airlines\nselling business class seats are competing with Skype for customers, as they\naddress the same job: the need to have clear communication with colleagues.</p>\n</blockquote>\n<p>Source: <a href=\"http://blog.intercom.io/the-end-of-apps-as-we-know-them/\">The End of Apps as We Know Them</a></p>\n</li>\n<li><p>I&#39;ve got a notion to crawl through all my blog archives, harvest all the\nlinks, and see which are still reachable - starting from the oldest.</p>\n</li>\n<li><p>I miss web mashups.</p>\n<ul>\n<li>So I made a couple of mashups against my own blog - look in the sidebar.</li>\n</ul>\n</li>\n<li><p>I&#39;ve installed <a href=\"https://github.com/NYTimes/Emphasis\">Emphasis</a> on this blog.</p>\n<ul>\n<li>Tap Shift twice and see what happens. Permalink ALL the things!</li>\n</ul>\n</li>\n<li><p><a href=\"http://www.strava.com/athletes/6013128\">I&#39;ve been running.</a></p>\n<ul>\n<li><p>I&#39;m not a champ by any means, yet, but it&#39;s looking like it&#39;s stuck as a\nhabit. </p>\n<ul>\n<li>I start to feel antsy when I haven&#39;t managed to get around to it.</li>\n</ul>\n</li>\n<li><p>Winter in Michigan will be interesting.</p>\n<ul>\n<li>Last year, the sidewalks were break-neck dangerous for walking let alone\njogging.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>I read a lot; I think a lot. I am well versed in <a href=\"http://en.wikipedia.org/wiki/Omphaloskepsis\">omphaloskepsis</a>.</p>\n<ul>\n<li><p>I have a lot of notions about psychology &amp; life in general.</p>\n</li>\n<li><p><a href=\"http://links.net/daze/14/10/17-xoxo-2014.html\">Watching Justin Hall speechify</a> got me thinking again about posting\nthem here.</p>\n</li>\n<li><p>But, this has typically been a techie place.</p>\n</li>\n<li><p>Still, that&#39;s what personal blogs are for, no?</p>\n<ul>\n<li><p>Or, at least a <a href=\"http://deus-x.livejournal.com\">LiveJournal</a>. </p>\n<ul>\n<li>Wow, I haven&#39;t written there in a very long time.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "body": "TL;DR: This is a bunch of stuff I just randomly collected throughout the day.\r\n[Look here for a bit of explanation][look]. I may or may not do this again.\r\nI'm experimenting and entertaining myself.\r\n\r\n<!--more-->\r\n\r\n[look]: http://blog.lmorchard.com/2014/10/23/wtfomgbullets\r\n\r\n* As a remote worker, I think this is a splendid insight:\r\n\r\n  > If you focus purely on the job, and not the industry, you realise airlines\r\n  > selling business class seats are competing with Skype for customers, as they\r\n  > address the same job: the need to have clear communication with colleagues.\r\n\r\n  Source: [The End of Apps as We Know Them][endofapps]\r\n\r\n* I've got a notion to crawl through all my blog archives, harvest all the\r\n  links, and see which are still reachable - starting from the oldest.\r\n\r\n* I miss web mashups.\r\n  \r\n  * So I made a couple of mashups against my own blog - look in the sidebar.\r\n\r\n* I've installed [Emphasis][] on this blog.\r\n\r\n  * Tap Shift twice and see what happens. Permalink ALL the things!\r\n\r\n* [I've been running.][running]\r\n\r\n  * I'm not a champ by any means, yet, but it's looking like it's stuck as a\r\n    habit. \r\n    \r\n    * I start to feel antsy when I haven't managed to get around to it.\r\n\r\n  * Winter in Michigan will be interesting.\r\n\r\n    * Last year, the sidewalks were break-neck dangerous for walking let alone\r\n      jogging.\r\n\r\n* I read a lot; I think a lot. I am well versed in [omphaloskepsis][].\r\n  \r\n  * I have a lot of notions about psychology & life in general.\r\n\r\n  * [Watching Justin Hall speechify][jah] got me thinking again about posting\r\n    them here.\r\n\r\n  * But, this has typically been a techie place.\r\n\r\n  * Still, that's what personal blogs are for, no?\r\n\r\n    * Or, at least a [LiveJournal](http://deus-x.livejournal.com). \r\n    \r\n      * Wow, I haven't written there in a very long time.\r\n\r\n[Omphaloskepsis]: http://en.wikipedia.org/wiki/Omphaloskepsis\r\n[jah]: http://links.net/daze/14/10/17-xoxo-2014.html\r\n[running]: http://www.strava.com/athletes/6013128\r\n[endofapps]: http://blog.intercom.io/the-end-of-apps-as-we-know-them/\r\n[Emphasis]: https://github.com/NYTimes/Emphasis\r\n\r\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/10/23/thoughts",
    "summary": "<p>TL;DR: This is a bunch of stuff I just randomly collected throughout the day.\n<a href=\"http://blog.lmorchard.com/2014/10/23/wtfomgbullets\">Look here for a bit of explanation</a>. I may or may not do this again.\nI&apos;m experimenting and entertaining myself.</p>\n",
    "prevPostPath": "2014/10/23/node-project-layout",
    "nextPostPath": "2014/10/23/toot-toot"
  },
  {
    "title": "Toot = Tiny Outburst of Text",
    "tags": [
      "metablogging",
      "tootr",
      "social",
      "toots",
      "twitter"
    ],
    "year": "2014",
    "month": "10",
    "day": "23",
    "isDir": false,
    "slug": "toot-toot",
    "date": "2014-10-23T12:00:00.000Z",
    "postName": "2014-10-23-toot-toot",
    "html": "<p>I&#39;ve been toying with something Twitterish lately, and thought I needed a\ndifferent word to describe the central <a href=\"http://en.wikipedia.org/wiki/Social_objects\">social object</a>. So, I started using\n<strong>toot</strong>, which means &quot;<a href=\"https://github.com/lmorchard/toothub/tree/ea774e76c7688e33ca5ec8144d13ae1a4c1546da#what\">tiny outburst of text</a>&quot;. Of course, I started by\nmaking fart jokes to myself before that expansion appeared in my head. But, I\nthink it&#39;s fun.</p>\n<!--more-->\n\n<p>Toot is a white-label term for &quot;tweet&quot; that&#39;s not as dry as &quot;microblog post&quot;\nor &quot;status update&quot;. It makes me giggle, which is important when you&#39;re\ncoding for the hell of it. It would tickle me if toot caught on, didn&#39;t get\ntrademarked, and everyone had a giggle too.</p>\n<p>Some important answers to questions no one&#39;s asked yet:</p>\n<ul>\n<li><p>&quot;tiny&quot; means not necessarily 140 characters, but definitely not an essay.</p>\n<ul>\n<li>A paragraph or less? Should be a single notion, easily scanned in one\nvisual gulp.</li>\n</ul>\n</li>\n<li><p>&quot;outburst&quot; means it&#39;s outloud to a bunch of people</p>\n<ul>\n<li>Could be a public broadcast, could be an aside to a small group</li>\n</ul>\n</li>\n<li><p>&quot;text&quot; does not mean these should only be plain words and sentences.</p>\n<ul>\n<li><p>There&#39;s <a href=\"http://www.merriam-webster.com/dictionary/text\">a definition</a> of text that goes like &quot;something (as a\nstory or movie) considered as an object to be examined, explicated, or\ndeconstructed&quot;</p>\n</li>\n<li><p>And texts we send each other these days are riddled with pictures and\nvideos and emoji and random expression. So, why not toots?</p>\n</li>\n</ul>\n</li>\n</ul>\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "body": "I've been toying with something Twitterish lately, and thought I needed a\r\ndifferent word to describe the central [social object][]. So, I started using\r\n**toot**, which means \"[tiny outburst of text][toot]\". Of course, I started by\r\nmaking fart jokes to myself before that expansion appeared in my head. But, I\r\nthink it's fun.\r\n\r\n<!--more-->\r\n\r\n[social object]: http://en.wikipedia.org/wiki/Social_objects\r\n\r\nToot is a white-label term for \"tweet\" that's not as dry as \"microblog post\"\r\nor \"status update\". It makes me giggle, which is important when you're\r\ncoding for the hell of it. It would tickle me if toot caught on, didn't get\r\ntrademarked, and everyone had a giggle too.\r\n\r\nSome important answers to questions no one's asked yet:\r\n\r\n  * \"tiny\" means not necessarily 140 characters, but definitely not an essay.\r\n  \r\n    * A paragraph or less? Should be a single notion, easily scanned in one\r\n      visual gulp.\r\n\r\n  * \"outburst\" means it's outloud to a bunch of people\r\n\r\n    * Could be a public broadcast, could be an aside to a small group\r\n\r\n  * \"text\" does not mean these should only be plain words and sentences.\r\n\r\n    * There's [a definition][def] of text that goes like \"something (as a\r\n      story or movie) considered as an object to be examined, explicated, or\r\n      deconstructed\"\r\n\r\n    * And texts we send each other these days are riddled with pictures and\r\n      videos and emoji and random expression. So, why not toots?\r\n\r\n[def]: http://www.merriam-webster.com/dictionary/text\r\n[toot]: https://github.com/lmorchard/toothub/tree/ea774e76c7688e33ca5ec8144d13ae1a4c1546da#what\r\n\r\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/10/23/toot-toot",
    "summary": "<p>I&apos;ve been toying with something Twitterish lately, and thought I needed a\ndifferent word to describe the central <a href=\"http://en.wikipedia.org/wiki/Social_objects\">social object</a>. So, I started using\n<strong>toot</strong>, which means &quot;<a href=\"https://github.com/lmorchard/toothub/tree/ea774e76c7688e33ca5ec8144d13ae1a4c1546da#what\">tiny outburst of text</a>&quot;. Of course, I started by\nmaking fart jokes to myself before that expansion appeared in my head. But, I\nthink it&apos;s fun.</p>\n",
    "prevPostPath": "2014/10/23/thoughts",
    "nextPostPath": "2014/10/23/wtfomgbullets"
  },
  {
    "title": "What were all those bullets for?",
    "tags": [
      "metablogging",
      "writing",
      "opml",
      "tinderbox"
    ],
    "year": "2014",
    "month": "10",
    "day": "23",
    "isDir": false,
    "slug": "wtfomgbullets",
    "date": "2014-10-23T12:00:00.000Z",
    "postName": "2014-10-23-wtfomgbullets",
    "html": "<p>Did you see <a href=\"http://blog.lmorchard.com/2014/10/23/wtfomgbullets/\">that thing I just posted</a>? Weird. Back when I used <a href=\"http://home.opml.org/\">Dave\nWiner&#39;s OPML Editor</a>, I used to have <a href=\"http://decafbad.com/bucket/?start=77&amp;count=7\">a daily habit</a> of opening a\nnew outline and popping over to it throughout the day to collect random\nthoughts. </p>\n<!--more-->\n\n<p>I might build on one thing or another, and sometimes a full blog post would\nsprout out of one of them. Otherwise, I might just hit publish and put the\nwhole outline as-is on the web.</p>\n<p>I also tried using <a href=\"http://www.eastgate.com/Tinderbox/\">Eastgate Tinderbox</a> for awhile like this. That was\ninteresting for capturing constellations of thoughts, but I found it harder to\nput that into <a href=\"http://decafbad.com/recaffeinated/\">a web-ready form</a> without reworking things into proper posts. An\noutline just seems to work as a bullet list.</p>\n<p>These days, this sort of microblogging happens on Twitter. But, that&#39;s like\ndropping seeds into a running stream. In they go, and then they&#39;re gone. The\nimpulse to get something out of my head is satisfied, but I never really come\nback to look at what came out <a href=\"http://blog.lmorchard.com/2014/10/\">or cultivate more</a>.</p>\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "body": "Did you see [that thing I just posted][bullets]? Weird. Back when I used [Dave\r\nWiner's OPML Editor][opml], I used to have [a daily habit][habit] of opening a\r\nnew outline and popping over to it throughout the day to collect random\r\nthoughts. \r\n\r\n<!--more-->\r\n\r\nI might build on one thing or another, and sometimes a full blog post would\r\nsprout out of one of them. Otherwise, I might just hit publish and put the\r\nwhole outline as-is on the web.\r\n\r\nI also tried using [Eastgate Tinderbox][tinderbox] for awhile like this. That was\r\ninteresting for capturing constellations of thoughts, but I found it harder to\r\nput that into [a web-ready form][tinderblog] without reworking things into proper posts. An\r\noutline just seems to work as a bullet list.\r\n\r\n[tinderblog]: http://decafbad.com/recaffeinated/\r\n\r\nThese days, this sort of microblogging happens on Twitter. But, that's like\r\ndropping seeds into a running stream. In they go, and then they're gone. The\r\nimpulse to get something out of my head is satisfied, but I never really come\r\nback to look at what came out [or cultivate more][today].\r\n\r\n[today]: http://blog.lmorchard.com/2014/10/\r\n[bullets]: http://blog.lmorchard.com/2014/10/23/wtfomgbullets/\r\n[tinderbox]: http://www.eastgate.com/Tinderbox/\r\n[opml]: http://home.opml.org/\r\n[habit]: http://decafbad.com/bucket/?start=77&count=7\r\n\r\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/10/23/wtfomgbullets",
    "summary": "<p>Did you see <a href=\"http://blog.lmorchard.com/2014/10/23/wtfomgbullets/\">that thing I just posted</a>? Weird. Back when I used <a href=\"http://home.opml.org/\">Dave\nWiner&apos;s OPML Editor</a>, I used to have <a href=\"http://decafbad.com/bucket/?start=77&amp;count=7\">a daily habit</a> of opening a\nnew outline and popping over to it throughout the day to collect random\nthoughts. </p>\n",
    "prevPostPath": "2014/10/23/toot-toot",
    "nextPostPath": "2014/10/20/static-blog-generation-with-gulp"
  },
  {
    "title": "Static blog generation with Gulp and S3",
    "tags": [
      "metablogging",
      "webdev",
      "js",
      "gulp",
      "jekyll",
      "wordpress"
    ],
    "year": "2014",
    "month": "10",
    "day": "20",
    "isDir": false,
    "slug": "static-blog-generation-with-gulp",
    "date": "2014-10-20T12:00:00.000Z",
    "postName": "2014-10-20-static-blog-generation-with-gulp",
    "html": "<p>I&#39;ve long agreed that many sites, like blogs, are better <a href=\"http://www.aaronsw.com/weblog/000404\">baked than\nfried</a>. It makes for web hosting that&#39;s cheaper to run and simpler to\nmaintain. I&#39;ve also often thought that <a href=\"https://indiewebcamp.com/database-antipattern\">using a database can be an\nanti-pattern</a> for managing content. But, what I&#39;ve also found is\nthat baked sites often yield a poor writing environment. That said, I think\nI&#39;m going to give it another try, because I think I might have found a new\napproach that works for me.</p>\n<!--more-->\n\n<h2 id=\"from-wordpress-to-jekyll-to-wordpress\">From WordPress to Jekyll to WordPress</h2>\n<p><a href=\"http://decafbad.com/blog/2011/06/08/moved-to-jekyll/\">As I&#39;ve mentioned before</a>, I&#39;ve flirted with a variety of\nplatforms for putting stuff from my brain on the web. But, the last time I\nswitched away from WordPress to Jekyll, I ended up switching right back again.</p>\n<p>Jekyll <a href=\"http://blog.lmorchard.com/2012/06/16/blogging-like-a-blogger/\">took <em>way</em> too long</a> to generate my site and its 1150 posts, and I\ncouldn&#39;t figure out how to speed that up for previewing drafts without moving\nfiles around.  I tried a few different external tools like\n<a href=\"http://25.io/mou/\">Mou</a> and <a href=\"http://marked2app.com/\">Marked</a>, but the process\nnever clicked. I&#39;ve also never quite gotten along with Ruby, so I didn&#39;t go\nfar with scratching my own itches on Jekyll.</p>\n<p>On the other hand, WordPress has a nicer writing experience. But, it&#39;s clunky\nin other ways. I&#39;m always worried about all that PHP code sitting around\nfrying up page views, hoping no one figures out how to get at the publishing\nmachinery. I&#39;m also less interested in hacking on PHP for fun, these days.</p>\n<h2 id=\"gulp-is-great\">Gulp is great</h2>\n<p>The place where I&#39;ve been having a lot of hacking fun over the past few years\nis in node.js. So, when I was thinking about trying static hosting for\nmy blog again, I started looking into node.js-based Jekyll clones.</p>\n<p>But then, it occurred to me that <a href=\"http://gulpjs.com/\">Gulp</a> would be a fine tool for the job. In\na nutshell, like unix tools pipe character streams between tools, Gulp pipes\nstreams of files between small utility functions. All I had to do was build up\na small collection of file processing functions and glue them together. </p>\n<h2 id=\"copying-riokis-homework\">Copying Rioki&#39;s homework</h2>\n<p>As it happens, <a href=\"http://www.rioki.org/2014/06/09/jekyll-to-gulp.html\">someone else had already started that work for me</a>! The\ncore of it, handling the posts, looks something <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L34\">like this</a>:</p>\n<pre><code class=\"language-javascript\">function posts (path) {\n  return gulp.src(path)\n    .pipe(frontMatter({property: &#39;page&#39;, remove: true}))\n    .pipe(taskUtils.filename2date())\n    .pipe(marked())\n    .pipe(taskUtils.summarize(&#39;&lt;!--more--&gt;&#39;))\n    .pipe(rename(taskUtils.postNameToDatePath))\n    .pipe(taskUtils.applyTemplate(&#39;design/layouts/post.html&#39;))\n    .pipe(gulp.dest(&#39;build&#39;));\n}</code></pre>\n<p>Pretty clean &amp; straightforward, at least to my eyes.</p>\n<p>Starting from <a href=\"https://github.com/rioki/www.rioki.org/blob/master/gulpfile.js\">Rioki&#39;s gulpfile.js</a>, I hacked and iterated until I had\na <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/gulpfile.js\">gulpfile.js</a> of my own, split into <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L34\">a directory of small task\nmodules</a>.  At this point, I&#39;ve got a bunch of in-memory post indexes,\ndate &amp; tag based archive pages, RSS feeds, and a handful of other templated\npages. I can push all the content to an Amazon S3 bucket <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/gulpfile.js#L32\">with one\ncommand</a>. </p>\n<p>Oh, and building the whole site only takes around 30 seconds. Still, that&#39;s\nnot fast enough for running previews while writing. So, I&#39;ve broken things up so \n<a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L13\">new &amp; draft posts lead to quick rebuilds when their files change</a> - and I even <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L29\">trigger a LiveReload\nservice</a>\nthat keeps a browser tab updated as I make changes in Vim.</p>\n<p>And, best of all, I understand how the whole thing works. This stuff feels\nnicely maintainable and fun to expand in the future as a\n<a href=\"https://www.stephencovey.com/7habits/7habits-habit7.php\">saw-sharpening</a> / yak-shaving opportunity. I might even take a shot\nat spinning off all the code from the content and release it as a standalone\nmodule installable from <a href=\"http://npmjs.org\">NPM</a> in case anyone else wants to\ntry it out.</p>\n<h2 id=\"from-wordpress-and-jekyll-to-gulp\">From WordPress and Jekyll to Gulp</h2>\n<p>I found <a href=\"https://github.com/benbalter/wordpress-to-jekyll-exporter\">a WordPress-to-Jekyll exporter plugin</a>. It\ngenerates a nice zip file download right from the site admin. That let me\ndump the 50 posts I&#39;ve accumulated since the last switch.</p>\n<p>And, a great thing about the YAML-and-markdown file format used by Jekyll is\nthat I was able to merge my posts from both decafbad.com and\nblog.lmorchard.com just by copying them into the same directory. So, I&#39;m\nthinking that I&#39;ll revive my old blog by squashing it right on into the\nnew, and set up a handful of redirects to unify the whole mess.</p>\n<h2 id=\"amazon-s3-deployment\">Amazon S3 deployment</h2>\n<p><a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html\">Hosting a static website on Amazon S3</a> is cheap and fast and low\nmaintenance. And, a module called <a href=\"https://github.com/pgherveou/gulp-awspublish\">gulp-awspublish</a> can handle pushing this\nwhole site to S3 <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/gulpfile.js#L32\">really easily</a>.</p>\n<p>Turns out I generate around 4750 files, between all the posts and tags and dates. \nIt takes about 30 minutes to upload the first time. But, <a href=\"https://github.com/pgherveou/gulp-awspublish\">gulp-awspublish</a>\nkeeps track of MD5 hashes. So, next time I generate and upload, it skips all the\npages that haven&#39;t changed. That&#39;s just a handful of files, if\nall I&#39;m doing is publishing one new post.</p>\n<p>It also seems like this module uploads one file at a time. I wonder if I might\nhack it to queue up a few dozen or so in parallel to speed things up? I doubt\nthat uploading thousands of files was the original use case, so it might do\nwith some tweaking.</p>\n<h2 id=\"page-sections-loaded-via-ajax\">Page sections loaded via AJAX</h2>\n<p>I&#39;ve got a simple template for this new blog, and I hope to keep it that way.\nBut, there&#39;s a lot of stuff in that sidebar. Well, I decided to tweak a few\nthings and suddenly I had 4750 files to upload to S3.</p>\n<p>Just because the site is statically published doesn&#39;t mean some parts\ncan&#39;t be dynamic with the help of the client. Rather than put up wth\nregenerating &amp; uploading all the things in the future, I yanked the sidebar\nout of almost every page and generated it as <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/design/sidebar.html\">a separate resource</a>.</p>\n<p>Then, with <a href=\"https://github.com/lmorchard/blog.lmorchard.com/blob/master/design/js/main.js\">a tiny bit of jQuery magic</a>, I load that sidebar into\nthe page via AJAX. That shrank the size of the site overall, and it&#39;s so fast\nand cacheable that I never see any difference.</p>\n<p>I think this will be one of the little keys to maintaining the site: Try to\nextract any common element used throughout the site, and push it into a\ndynamically loaded asset. Not everything can be done that way, but I think\nplenty can.</p>\n<h2 id=\"disqus-and-comment-archival\">Disqus and comment archival</h2>\n<p>I&#39;m also back to using Disqus for comments. They&#39;ve got a great service, and\nthey&#39;re not a roach motel. They have a great API, and I even wrote a Python\nscript for decafbad.com that <a href=\"https://github.com/lmorchard/blog.decafbad.com/blob/master/_bin/archive_disqus_comments.py\">archives comments from closed\nthreads</a> right into the blog post itself.</p>\n<p>At some point, I need to get that working again and maybe transliterate it\nover to node.js. </p>\n<h2 id=\"next-steps\">Next steps</h2>\n<p>I&#39;ve got some more I&#39;d like to do with this stuff, but the main next steps are\nthese:</p>\n<ul>\n<li>Write more often</li>\n<li>Write more consistently</li>\n</ul>\n<p>Of course, having skimmed through my posts over the years on this blog, I&#39;d\nestimate about 25% of the whole thing is me grousing out loud about the long\nstretches I spend neglecting this place. </p>\n<p>So, who knows? Maybe you&#39;ll see my\nnext post show up sometime next June!</p>\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\n",
    "body": "I've long agreed that many sites, like blogs, are better [baked than\r\nfried][bake]. It makes for web hosting that's cheaper to run and simpler to\r\nmaintain. I've also often thought that [using a database can be an\r\nanti-pattern][antidatabase] for managing content. But, what I've also found is\r\nthat baked sites often yield a poor writing environment. That said, I think\r\nI'm going to give it another try, because I think I might have found a new\r\napproach that works for me.\r\n\r\n<!--more-->\r\n\r\n## From WordPress to Jekyll to WordPress\r\n\r\n[As I've mentioned before][platforms], I've flirted with a variety of\r\nplatforms for putting stuff from my brain on the web. But, the last time I\r\nswitched away from WordPress to Jekyll, I ended up switching right back again.\r\n\r\nJekyll [took *way* too long][jekyllslow] to generate my site and its 1150 posts, and I\r\ncouldn't figure out how to speed that up for previewing drafts without moving\r\nfiles around.  I tried a few different external tools like\r\n[Mou](http://25.io/mou/) and [Marked](http://marked2app.com/), but the process\r\nnever clicked. I've also never quite gotten along with Ruby, so I didn't go\r\nfar with scratching my own itches on Jekyll.\r\n\r\n[jekyllslow]: http://blog.lmorchard.com/2012/06/16/blogging-like-a-blogger/\r\n\r\nOn the other hand, WordPress has a nicer writing experience. But, it's clunky\r\nin other ways. I'm always worried about all that PHP code sitting around\r\nfrying up page views, hoping no one figures out how to get at the publishing\r\nmachinery. I'm also less interested in hacking on PHP for fun, these days.\r\n\r\n## Gulp is great\r\n\r\nThe place where I've been having a lot of hacking fun over the past few years\r\nis in node.js. So, when I was thinking about trying static hosting for\r\nmy blog again, I started looking into node.js-based Jekyll clones.\r\n\r\nBut then, it occurred to me that [Gulp][] would be a fine tool for the job. In\r\na nutshell, like unix tools pipe character streams between tools, Gulp pipes\r\nstreams of files between small utility functions. All I had to do was build up\r\na small collection of file processing functions and glue them together. \r\n\r\n## Copying Rioki's homework\r\n\r\nAs it happens, [someone else had already started that work for me][rioki]! The\r\ncore of it, handling the posts, looks something [like this][tasks]:\r\n\r\n```javascript\r\nfunction posts (path) {\r\n  return gulp.src(path)\r\n    .pipe(frontMatter({property: 'page', remove: true}))\r\n    .pipe(taskUtils.filename2date())\r\n    .pipe(marked())\r\n    .pipe(taskUtils.summarize('<!--more-->'))\r\n    .pipe(rename(taskUtils.postNameToDatePath))\r\n    .pipe(taskUtils.applyTemplate('design/layouts/post.html'))\r\n    .pipe(gulp.dest('build'));\r\n}\r\n```\r\n\r\nPretty clean & straightforward, at least to my eyes.\r\n\r\nStarting from [Rioki's gulpfile.js][rioki2], I hacked and iterated until I had\r\na [gulpfile.js][] of my own, split into [a directory of small task\r\nmodules][tasks].  At this point, I've got a bunch of in-memory post indexes,\r\ndate & tag based archive pages, RSS feeds, and a handful of other templated\r\npages. I can push all the content to an Amazon S3 bucket [with one\r\ncommand][deploy]. \r\n\r\n[deploy]: https://github.com/lmorchard/blog.lmorchard.com/blob/master/gulpfile.js#L32\r\n[tasks]: https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L34\r\n[gulpfile.js]: https://github.com/lmorchard/blog.lmorchard.com/blob/master/gulpfile.js\r\n\r\nOh, and building the whole site only takes around 30 seconds. Still, that's\r\nnot fast enough for running previews while writing. So, I've broken things up so \r\n[new & draft posts lead to quick rebuilds when their files change](https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L13) - and I even [trigger a LiveReload\r\nservice](https://github.com/lmorchard/blog.lmorchard.com/blob/master/lib/tasks/posts.js#L29)\r\nthat keeps a browser tab updated as I make changes in Vim.\r\n\r\nAnd, best of all, I understand how the whole thing works. This stuff feels\r\nnicely maintainable and fun to expand in the future as a\r\n[saw-sharpening][sharpen] / yak-shaving opportunity. I might even take a shot\r\nat spinning off all the code from the content and release it as a standalone\r\nmodule installable from [NPM](http://npmjs.org) in case anyone else wants to\r\ntry it out.\r\n\r\n## From WordPress and Jekyll to Gulp\r\n\r\nI found [a WordPress-to-Jekyll exporter plugin][exporter]. It\r\ngenerates a nice zip file download right from the site admin. That let me\r\ndump the 50 posts I've accumulated since the last switch.\r\n\r\nAnd, a great thing about the YAML-and-markdown file format used by Jekyll is\r\nthat I was able to merge my posts from both decafbad.com and\r\nblog.lmorchard.com just by copying them into the same directory. So, I'm\r\nthinking that I'll revive my old blog by squashing it right on into the\r\nnew, and set up a handful of redirects to unify the whole mess.\r\n\r\n## Amazon S3 deployment\r\n\r\n[Hosting a static website on Amazon S3][static] is cheap and fast and low\r\nmaintenance. And, a module called [gulp-awspublish][] can handle pushing this\r\nwhole site to S3 [really easily][deploy].\r\n\r\n[static]: http://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html\r\n\r\nTurns out I generate around 4750 files, between all the posts and tags and dates. \r\nIt takes about 30 minutes to upload the first time. But, [gulp-awspublish][]\r\nkeeps track of MD5 hashes. So, next time I generate and upload, it skips all the\r\npages that haven't changed. That's just a handful of files, if\r\nall I'm doing is publishing one new post.\r\n\r\nIt also seems like this module uploads one file at a time. I wonder if I might\r\nhack it to queue up a few dozen or so in parallel to speed things up? I doubt\r\nthat uploading thousands of files was the original use case, so it might do\r\nwith some tweaking.\r\n\r\n[gulp-awspublish]: https://github.com/pgherveou/gulp-awspublish\r\n\r\n## Page sections loaded via AJAX\r\n\r\nI've got a simple template for this new blog, and I hope to keep it that way.\r\nBut, there's a lot of stuff in that sidebar. Well, I decided to tweak a few\r\nthings and suddenly I had 4750 files to upload to S3.\r\n\r\nJust because the site is statically published doesn't mean some parts\r\ncan't be dynamic with the help of the client. Rather than put up wth\r\nregenerating & uploading all the things in the future, I yanked the sidebar\r\nout of almost every page and generated it as [a separate resource][sidebar].\r\n\r\nThen, with [a tiny bit of jQuery magic][sidebarajax], I load that sidebar into\r\nthe page via AJAX. That shrank the size of the site overall, and it's so fast\r\nand cacheable that I never see any difference.\r\n\r\nI think this will be one of the little keys to maintaining the site: Try to\r\nextract any common element used throughout the site, and push it into a\r\ndynamically loaded asset. Not everything can be done that way, but I think\r\nplenty can.\r\n\r\n[sidebar]: https://github.com/lmorchard/blog.lmorchard.com/blob/master/design/sidebar.html\r\n[sidebarajax]: https://github.com/lmorchard/blog.lmorchard.com/blob/master/design/js/main.js\r\n\r\n## Disqus and comment archival\r\n\r\nI'm also back to using Disqus for comments. They've got a great service, and\r\nthey're not a roach motel. They have a great API, and I even wrote a Python\r\nscript for decafbad.com that [archives comments from closed\r\nthreads][commentarchiver] right into the blog post itself.\r\n\r\n[commentarchiver]: https://github.com/lmorchard/blog.decafbad.com/blob/master/_bin/archive_disqus_comments.py\r\n\r\nAt some point, I need to get that working again and maybe transliterate it\r\nover to node.js. \r\n\r\n## Next steps\r\n\r\nI've got some more I'd like to do with this stuff, but the main next steps are\r\nthese:\r\n\r\n* Write more often\r\n* Write more consistently\r\n\r\nOf course, having skimmed through my posts over the years on this blog, I'd\r\nestimate about 25% of the whole thing is me grousing out loud about the long\r\nstretches I spend neglecting this place. \r\n\r\nSo, who knows? Maybe you'll see my\r\nnext post show up sometime next June!\r\n\r\n[bake]: http://www.aaronsw.com/weblog/000404\r\n[rioki]: http://www.rioki.org/2014/06/09/jekyll-to-gulp.html\r\n[antidatabase]: https://indiewebcamp.com/database-antipattern\r\n[exporter]: https://github.com/benbalter/wordpress-to-jekyll-exporter\r\n[platforms]: http://decafbad.com/blog/2011/06/08/moved-to-jekyll/\r\n\r\n[gulp]: http://gulpjs.com/\r\n[enthusiasm]: http://decafbad.com/blog/2006/05/26/confessions-of-a-serial-enthusiast\r\n[sharpen]: https://www.stephencovey.com/7habits/7habits-habit7.php\r\n[rioki2]: https://github.com/rioki/www.rioki.org/blob/master/gulpfile.js\r\n\r\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=78: -->\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/10/20/static-blog-generation-with-gulp",
    "summary": "<p>I&apos;ve long agreed that many sites, like blogs, are better <a href=\"http://www.aaronsw.com/weblog/000404\">baked than\nfried</a>. It makes for web hosting that&apos;s cheaper to run and simpler to\nmaintain. I&apos;ve also often thought that <a href=\"https://indiewebcamp.com/database-antipattern\">using a database can be an\nanti-pattern</a> for managing content. But, what I&apos;ve also found is\nthat baked sites often yield a poor writing environment. That said, I think\nI&apos;m going to give it another try, because I think I might have found a new\napproach that works for me.</p>\n",
    "prevPostPath": "2014/10/23/wtfomgbullets",
    "nextPostPath": "2014/10/11/tootr-1"
  },
  {
    "title": "tootr: microblogging app, hosting not included",
    "author": "lmorchard",
    "layout": "post",
    "permalink": "/2014/10/11/tootr-1",
    "response_url": [
      null
    ],
    "response_title": [
      null
    ],
    "response_quote": [
      null
    ],
    "categories": [
      "Uncategorized"
    ],
    "tags": [
      "amazon",
      "metablogging",
      "s3",
      "social",
      "tootr",
      "webdev"
    ],
    "year": "2014",
    "month": "10",
    "day": "11",
    "isDir": false,
    "slug": "tootr-1",
    "date": "2014-10-11T12:00:00.000Z",
    "postName": "2014-10-11-tootr-1",
    "html": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\n  <p class=\"toc_title\">\n    Contents\n  </p>\n\n  <ul class=\"toc_list\">\n    <li>\n      <a href=\"#S3_is_not_simple_enough\"><span class=\"toc_number toc_depth_1\">1</span> S3 is not simple enough</a>\n    </li>\n    <li>\n      <a href=\"#Login_with_Amazon\"><span class=\"toc_number toc_depth_1\">2</span> Login with Amazon</a>\n    </li>\n    <li>\n      <a href=\"#IAM_and_Roles\"><span class=\"toc_number toc_depth_1\">3</span> IAM and Roles</a>\n    </li>\n    <li>\n      <a href=\"#STS_and_Temporary_Credentials\"><span class=\"toc_number toc_depth_1\">4</span> STS and Temporary Credentials</a>\n    </li>\n    <li>\n      <a href=\"#Demo_time_and_next_steps\"><span class=\"toc_number toc_depth_1\">5</span> Demo time and next steps</a>\n    </li>\n  </ul>\n</div>\n\n<p>In my last two posts, I wrote about how I&#8217;ve been <a href=\"http://blog.lmorchard.com/2014/10/08/microblogging-like-its-2002\">thinking about building yet another microblogging tool</a> and how I think it might be interesting to <a href=\"http://blog.lmorchard.com/2014/10/09/separating-publishing-from-hosting-on-the-web\">separate web publishing apps from web hosting</a>. Well, I started tinkering, and I&#8217;ve got a rough prototype working.</p>\n<!--more-->\n\n<h2 style=\"text-align: left;\">\n  <span id=\"S3_is_not_simple_enough\">S3 is not simple enough</span>\n</h2>\n\n<p style=\"text-align: left;\">\n  When I think about dead simple web hosting, the first thing that comes to mind is <a href=\"http://aws.amazon.com/s3/\">Amazon S3</a>. I&#8217;ve been a fan of S3 for long enough that <a href=\"https://twitter.com/lmorchard/status/518228792780005376\">digging up my old code freaked me out</a>.\n</p>\n\n<p style=\"text-align: left;\">\n  There&#8217;s not much to the API: GET, PUT, & DELETE web content in URLspace under a &#8220;bucket&#8221; that you pay for by the byte. Overall S3 fits my criteria of &#8220;<a href=\"http://blog.lmorchard.com/2014/10/09/separating-publishing-from-hosting-on-the-web#p[IadIcc]\">dead simple hosting service</a>&#8221; rather nicely.\n</p>\n\n<p style=\"text-align: left;\">\n  Amazon S3 is <a href=\"http://aws.amazon.com/s3/pricing/\">super cheap</a>. I&#8217;ve never paid much more than US$0.50 in a month, and that&#8217;s even when I was experimenting with <a href=\"https://github.com/lmorchard/S3Ajax/blob/master/js/wiki.js\">a public-access wiki built atop the service</a> that folks from Amazon itself were playing with. I&#8217;ll probably move my blog there, someday, once I get the notion to revisit static site generators again.\n</p>\n\n<p style=\"text-align: left;\">\n  Amazon S3 is, however, <a href=\"http://www.team.net/mjb/hawg.html\">a professional&#8217;s tool</a>. It expects documentation to be read and training to be had. For a busy person with non-developer things do to, it&#8217;s <a href=\"http://en.wikipedia.org/wiki/Colossal_Cave_Adventure\">a twisty maze of passages, all alike</a>. That makes it a poor consumer product.\n</p>\n\n<p>So, I wondered: How hard would it be to smooth over some of the rough parts and make the experience almost as easy as a normal social media site?</p>\n<h2 style=\"text-align: left;\">\n  <span id=\"Login_with_Amazon\">Login with Amazon</span>\n</h2>\n\n<p style=\"text-align: left;\">\n  First, the on-ramp has to be easy. Filling out a form with username, password, nickname, and email address would be an okay start. (Billing info would be nice, too, but let&#8217;s not go there quite yet.)\n</p>\n\n<p style=\"text-align: left;\">\n  What would be even better, though, is to click one button and reuse data already filled out elsewhere! Filling out forms with personal data is part of the problem web wonks call &#8220;identity&#8221;. Apropos of that, did you know that <a href=\"http://login.amazon.com/website\">Amazon has an identity service</a>? I didn&#8217;t, at least not until last weekend. (<a href=\"http://mobile.awsblog.com/post/Tx3UKF4SV4V0LV3/Announcing-Web-Identity-Federation\">Man, am I behind</a>!)\n</p>\n\n<p style=\"text-align: left;\">\n  I can put a &#8220;<a href=\"http://login.amazon.com/\">Login with Amazon</a>&#8221; button on my web app. You login with your Amazon username & password, but my app doesn&#8217;t see them. Instead, Amazon offers my app some simple profile details &#8211; user ID, email, & full name.\n</p>\n\n<p style=\"text-align: left;\">\n  But, having access to your Amazon identity offers even more power:\n</p>\n\n<li style=\"text-align: left;\">\n  Clicking &#8220;<a href=\"http://login.amazon.com/\">Login with Amazon</a>&#8221; gives your Amazon identity to my app.\n</li>\n<li style=\"text-align: left;\">\n  My app can use your Amazon identity to assume a temporary role.\n</li>\n<li style=\"text-align: left;\">\n  This temporary role enables use of a portion of an S3 bucket.\n</li>\n\n<p style=\"text-align: left;\">\n  This is hewing pretty close to <a href=\"http://blog.lmorchard.com/2014/10/09/separating-publishing-from-hosting-on-the-web\">the publishing app / hosting service notions I laid out in my last post</a>. So, how does it work?\n</p>\n\n<p style=\"text-align: left;\">\n  Well, one of the things my app receives when you click the &#8220;Login&#8221; button is an <a href=\"http://login.amazon.com/glossary#access_token\"><code>access_token</code></a>. Chasing that <code>access_token</code> down the rabbit hole, I rediscovered Amazon IAM and STS &#8211; <a href=\"http://aws.amazon.com/iam/\">Identity & Access Management</a> and <a href=\"http://docs.aws.amazon.com/STS/latest/APIReference/Welcome.html\">Secure Token Service</a>.\n</p>\n\n<h2 style=\"text-align: left;\">\n  <span id=\"IAM_and_Roles\">IAM and Roles</span>\n</h2>\n\n<p style=\"text-align: left;\">\n  Among other things, Amazon IAM lets you define roles and associate them with apps. Roles contain policies that grant access to resources controlled by your account &#8211; e.g. an S3 bucket.\n</p>\n\n<p style=\"text-align: left;\">\n  For example, here&#8217;s a policy snippet for a role I created on IAM:\n</p>\n\n<pre class=\"language-javascript\" style=\"text-align: left;\">{\n \"Effect\": \"Allow\",\n \"Action\": [\n   \"s3:PutObject\",\n   \"s3:PutObjectAcl\",\n   \"s3:DeleteObject\",\n   \"s3:GetObject\",\n   \"s3:GetObjectAcl\"\n ],\n \"Resource\": [\n   \"arn:aws:s3:::tootr/users/amazon/${www.amazon.com:user_id}\",\n   \"arn:aws:s3:::tootr/users/amazon/${www.amazon.com:user_id}/*\"\n ]\n}</pre>\n\n<p style=\"text-align: left;\">\n  This role grants access to GET, PUT, & DELETE web resources in my S3 bucket named &#8220;tootr&#8221; &#8211; but only as long as the resources are under the &#8220;<code>users/amazon/{USER_ID}</code>&#8221; URLspace, where <code>{USER_ID}</code> is a uniquely generated identifier supplied by an Amazon profile.\n</p>\n\n<h2 style=\"text-align: left;\">\n  <span id=\"STS_and_Temporary_Credentials\">STS and Temporary Credentials</span>\n</h2>\n\n<p style=\"text-align: left;\">\n  So, how can someone assume such a role? That&#8217;s <a href=\"https://github.com/lmorchard/tootr/blob/master/src/javascript/publishers/AmazonS3.js#L103\">where Amazon STS comes in</a>:\n</p>\n\n<pre style=\"text-align: left;\"><code class=\"language-javascript\">$.ajax('https://sts.amazonaws.com/?' + $.param({\n\n  'Action': 'AssumeRoleWithWebIdentity',\n  'Version': '2011-06-15',\n  'RoleArn': 'arn:aws:iam::8675309:role/tootr-amazon-user-buckets',\n  'RoleSessionName': 'web-identity-federation',\n  'ProviderId': 'www.amazon.com',\n  'DurationSeconds': '900',\n  'WebIdentityToken': access_token\n\n})).then(function (dataXML, status, xhr) {\n\n  var data = <a href=\"https://github.com/lmorchard/tootr/blob/master/src/javascript/misc.js#L11\">misc.xmlToObj</a>(dataXML);\n  var credentials = data\n    .AssumeRoleWithWebIdentityResponse\n    .AssumeRoleWithWebIdentityResult\n    .Credentials;\n\n});</code></pre>\n\n<p style=\"text-align: left;\">\n  The <code>RoleArn</code> parameter identifies the IAM role created earlier. The <code>access_token</code> is what my app got when you logged in. The <a href=\"http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html\"><code>AssumeRoleWithWebIdentity</code> API on Amazon STS</a> lets me <a href=\"https://github.com/lmorchard/tootr/blob/master/src/javascript/publishers/AmazonS3.js#L103\">connect the two and generate temporary credentials</a>.\n</p>\n\n<p style=\"text-align: left;\">\n  Those credentials look something like this:\n</p>\n\n<pre class=\"language-javascript\" style=\"text-align: left;\">{\n  \"SessionToken\":\"NIweiunfiunIUWNLFIsd87\",\n  \"Expiration\":\"2014-10-11T19:15:58Z\",\n  \"AccessKeyId\":\"ASIAQWERTYUIOP\",\n  \"SecretAccessKey\":\"SKLN9869KJnisdhfli\"\n}</pre>\n\n<p style=\"text-align: left;\">\n  As it turns out, <a href=\"https://github.com/lmorchard/tootr/blob/master/src/javascript/publishers/AmazonS3.js#L148\">these credentials work with Amazon S3</a>. So, after accepting a login and doing the <code>AssumeRoleWithWebIdentity</code> dance, my app can manage web hosting at Amazon S3 on your behalf.\n</p>\n\n<p style=\"text-align: left;\">\n  For further reading, check out &#8220;<a href=\"docs.aws.amazon.com/STS/latest/UsingSTS/CreatingWIF.html\">Creating Temporary Security Credentials for Mobile Apps Using Identity Providers</a>&#8221; in Amazon&#8217;s documentation. That&#8217;s from where I stole most of this stuff.\n</p>\n\n<h2 style=\"text-align: left;\">\n  <span id=\"Demo_time_and_next_steps\">Demo time and next steps</span>\n</h2>\n\n<p style=\"text-align: left;\">\n  I&#8217;ve rolled all of this into <a href=\"https://github.com/lmorchard/tootr\">a microblogging app called &#8220;tootr&#8221;</a>. Here&#8217;s a demo:\n</p>\n\n<li style=\"text-align: left;\">\n  <a href=\"https://lmorchard.github.io/tootr/\">https://lmorchard.github.io/tootr/</a>\n</li>\n\n<p>You can visit the app, click &#8220;Login with Amazon&#8221;, and you&#8217;ll soon be tooting up a storm. But, you should notice some serious drawbacks:</p>\n<ul>\n<li>The app is terrible and missing almost every interesting feature.</li>\n<li>Your username is something like <a href=\"https://tootr.s3.amazonaws.com/users/amazon/amzn1.account.AF5OSES2YSFJEKYBANBHRFB25RXQ/index.html\">AF5OSES2YSFJEKYBANBHRFB25RXQ</a> and that&#8217;s also terrible.</li>\n<li>You&#8217;re tooting into my Amazon S3 bucket. You&#8217;re not paying me or Amazon. I <em>will</em> vandalize &amp; delete your stuff and not feel bad about it.</li>\n</ul>\n<p>As a proof-of-concept, though, I think it works: The &#8220;tootr&#8221; app at <a href=\"https://lmorchard.github.io/tootr/\">lmorchard.github.io</a> publishes to a hosting API at <a href=\"http://s3.amazonaws.com\">s3.amazonaws.com</a>. The on-ramp is a single button click and an Amazon sign-in dialog.</p>\n<p>But, I think all the above issues can be addressed. Also, Amazon is an interesting core for this stuff: Many people have an Amazon account, and Amazon is a place where people generally pay for things. So, it&#8217;s different territory than most social media sites.</p>\n<p>The challenge will be keeping the on-ramp simple while improving the app and switching to a user-owned web hosting space. Still, I think this is promising stuff. At any rate, it&#8217;s tinkering I&#8217;ve been procrastinating for years now, so I&#8217;ve got plenty of ideas to chase down.</p>\n",
    "body": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\r\n  <p class=\"toc_title\">\r\n    Contents\r\n  </p>\r\n  \r\n  <ul class=\"toc_list\">\r\n    <li>\r\n      <a href=\"#S3_is_not_simple_enough\"><span class=\"toc_number toc_depth_1\">1</span> S3 is not simple enough</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Login_with_Amazon\"><span class=\"toc_number toc_depth_1\">2</span> Login with Amazon</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#IAM_and_Roles\"><span class=\"toc_number toc_depth_1\">3</span> IAM and Roles</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#STS_and_Temporary_Credentials\"><span class=\"toc_number toc_depth_1\">4</span> STS and Temporary Credentials</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Demo_time_and_next_steps\"><span class=\"toc_number toc_depth_1\">5</span> Demo time and next steps</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\nIn my last two posts, I wrote about how I&#8217;ve been [thinking about building yet another microblogging tool][1] and how I think it might be interesting to [separate web publishing apps from web hosting][2]. Well, I started tinkering, and I&#8217;ve got a rough prototype working.\r\n\r\n<!--more-->\r\n\r\n<h2 style=\"text-align: left;\">\r\n  <span id=\"S3_is_not_simple_enough\">S3 is not simple enough</span>\r\n</h2>\r\n\r\n<p style=\"text-align: left;\">\r\n  When I think about dead simple web hosting, the first thing that comes to mind is <a href=\"http://aws.amazon.com/s3/\">Amazon S3</a>. I&#8217;ve been a fan of S3 for long enough that <a href=\"https://twitter.com/lmorchard/status/518228792780005376\">digging up my old code freaked me out</a>.\r\n</p>\r\n\r\n<p style=\"text-align: left;\">\r\n  There&#8217;s not much to the API: GET, PUT, & DELETE web content in URLspace under a &#8220;bucket&#8221; that you pay for by the byte. Overall S3 fits my criteria of &#8220;<a href=\"http://blog.lmorchard.com/2014/10/09/separating-publishing-from-hosting-on-the-web#p[IadIcc]\">dead simple hosting service</a>&#8221; rather nicely.\r\n</p>\r\n\r\n<p style=\"text-align: left;\">\r\n  Amazon S3 is <a href=\"http://aws.amazon.com/s3/pricing/\">super cheap</a>. I&#8217;ve never paid much more than US$0.50 in a month, and that&#8217;s even when I was experimenting with <a href=\"https://github.com/lmorchard/S3Ajax/blob/master/js/wiki.js\">a public-access wiki built atop the service</a> that folks from Amazon itself were playing with. I&#8217;ll probably move my blog there, someday, once I get the notion to revisit static site generators again.\r\n</p>\r\n\r\n<p style=\"text-align: left;\">\r\n  Amazon S3 is, however, <a href=\"http://www.team.net/mjb/hawg.html\">a professional&#8217;s tool</a>. It expects documentation to be read and training to be had. For a busy person with non-developer things do to, it&#8217;s <a href=\"http://en.wikipedia.org/wiki/Colossal_Cave_Adventure\">a twisty maze of passages, all alike</a>. That makes it a poor consumer product.\r\n</p>\r\n\r\nSo, I wondered: How hard would it be to smooth over some of the rough parts and make the experience almost as easy as a normal social media site?\r\n\r\n<h2 style=\"text-align: left;\">\r\n  <span id=\"Login_with_Amazon\">Login with Amazon</span>\r\n</h2>\r\n\r\n<p style=\"text-align: left;\">\r\n  First, the on-ramp has to be easy. Filling out a form with username, password, nickname, and email address would be an okay start. (Billing info would be nice, too, but let&#8217;s not go there quite yet.)\r\n</p>\r\n\r\n<p style=\"text-align: left;\">\r\n  What would be even better, though, is to click one button and reuse data already filled out elsewhere! Filling out forms with personal data is part of the problem web wonks call &#8220;identity&#8221;. Apropos of that, did you know that <a href=\"http://login.amazon.com/website\">Amazon has an identity service</a>? I didn&#8217;t, at least not until last weekend. (<a href=\"http://mobile.awsblog.com/post/Tx3UKF4SV4V0LV3/Announcing-Web-Identity-Federation\">Man, am I behind</a>!)\r\n</p>\r\n\r\n<p style=\"text-align: left;\">\r\n  I can put a &#8220;<a href=\"http://login.amazon.com/\">Login with Amazon</a>&#8221; button on my web app. You login with your Amazon username & password, but my app doesn&#8217;t see them. Instead, Amazon offers my app some simple profile details &#8211; user ID, email, & full name.\r\n</p>\r\n\r\n<p style=\"text-align: left;\">\r\n  But, having access to your Amazon identity offers even more power:\r\n</p>\r\n\r\n<li style=\"text-align: left;\">\r\n  Clicking &#8220;<a href=\"http://login.amazon.com/\">Login with Amazon</a>&#8221; gives your Amazon identity to my app.\r\n</li>\r\n<li style=\"text-align: left;\">\r\n  My app can use your Amazon identity to assume a temporary role.\r\n</li>\r\n<li style=\"text-align: left;\">\r\n  This temporary role enables use of a portion of an S3 bucket.\r\n</li>\r\n\r\n<p style=\"text-align: left;\">\r\n  This is hewing pretty close to <a href=\"http://blog.lmorchard.com/2014/10/09/separating-publishing-from-hosting-on-the-web\">the publishing app / hosting service notions I laid out in my last post</a>. So, how does it work?\r\n</p>\r\n\r\n<p style=\"text-align: left;\">\r\n  Well, one of the things my app receives when you click the &#8220;Login&#8221; button is an <a href=\"http://login.amazon.com/glossary#access_token\"><code>access_token</code></a>. Chasing that <code>access_token</code> down the rabbit hole, I rediscovered Amazon IAM and STS &#8211; <a href=\"http://aws.amazon.com/iam/\">Identity & Access Management</a> and <a href=\"http://docs.aws.amazon.com/STS/latest/APIReference/Welcome.html\">Secure Token Service</a>.\r\n</p>\r\n\r\n<h2 style=\"text-align: left;\">\r\n  <span id=\"IAM_and_Roles\">IAM and Roles</span>\r\n</h2>\r\n\r\n<p style=\"text-align: left;\">\r\n  Among other things, Amazon IAM lets you define roles and associate them with apps. Roles contain policies that grant access to resources controlled by your account &#8211; e.g. an S3 bucket.\r\n</p>\r\n\r\n<p style=\"text-align: left;\">\r\n  For example, here&#8217;s a policy snippet for a role I created on IAM:\r\n</p>\r\n\r\n<pre class=\"language-javascript\" style=\"text-align: left;\">{\r\n \"Effect\": \"Allow\",\r\n \"Action\": [\r\n   \"s3:PutObject\",\r\n   \"s3:PutObjectAcl\",\r\n   \"s3:DeleteObject\",\r\n   \"s3:GetObject\",\r\n   \"s3:GetObjectAcl\"\r\n ],\r\n \"Resource\": [\r\n   \"arn:aws:s3:::tootr/users/amazon/${www.amazon.com:user_id}\",\r\n   \"arn:aws:s3:::tootr/users/amazon/${www.amazon.com:user_id}/*\"\r\n ]\r\n}</pre>\r\n\r\n<p style=\"text-align: left;\">\r\n  This role grants access to GET, PUT, & DELETE web resources in my S3 bucket named &#8220;tootr&#8221; &#8211; but only as long as the resources are under the &#8220;<code>users/amazon/{USER_ID}</code>&#8221; URLspace, where <code>{USER_ID}</code> is a uniquely generated identifier supplied by an Amazon profile.\r\n</p>\r\n\r\n<h2 style=\"text-align: left;\">\r\n  <span id=\"STS_and_Temporary_Credentials\">STS and Temporary Credentials</span>\r\n</h2>\r\n\r\n<p style=\"text-align: left;\">\r\n  So, how can someone assume such a role? That&#8217;s <a href=\"https://github.com/lmorchard/tootr/blob/master/src/javascript/publishers/AmazonS3.js#L103\">where Amazon STS comes in</a>:\r\n</p>\r\n\r\n<pre style=\"text-align: left;\"><code class=\"language-javascript\">$.ajax('https://sts.amazonaws.com/?' + $.param({\r\n\r\n  'Action': 'AssumeRoleWithWebIdentity',\r\n  'Version': '2011-06-15',\r\n  'RoleArn': 'arn:aws:iam::8675309:role/tootr-amazon-user-buckets',\r\n  'RoleSessionName': 'web-identity-federation',\r\n  'ProviderId': 'www.amazon.com',\r\n  'DurationSeconds': '900',\r\n  'WebIdentityToken': access_token\r\n\r\n})).then(function (dataXML, status, xhr) {\r\n\r\n  var data = <a href=\"https://github.com/lmorchard/tootr/blob/master/src/javascript/misc.js#L11\">misc.xmlToObj</a>(dataXML);\r\n  var credentials = data\r\n    .AssumeRoleWithWebIdentityResponse\r\n    .AssumeRoleWithWebIdentityResult\r\n    .Credentials;\r\n\r\n});</code></pre>\r\n\r\n<p style=\"text-align: left;\">\r\n  The <code>RoleArn</code> parameter identifies the IAM role created earlier. The <code>access_token</code> is what my app got when you logged in. The <a href=\"http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html\"><code>AssumeRoleWithWebIdentity</code> API on Amazon STS</a> lets me <a href=\"https://github.com/lmorchard/tootr/blob/master/src/javascript/publishers/AmazonS3.js#L103\">connect the two and generate temporary credentials</a>.\r\n</p>\r\n\r\n<p style=\"text-align: left;\">\r\n  Those credentials look something like this:\r\n</p>\r\n\r\n<pre class=\"language-javascript\" style=\"text-align: left;\">{\r\n  \"SessionToken\":\"NIweiunfiunIUWNLFIsd87\",\r\n  \"Expiration\":\"2014-10-11T19:15:58Z\",\r\n  \"AccessKeyId\":\"ASIAQWERTYUIOP\",\r\n  \"SecretAccessKey\":\"SKLN9869KJnisdhfli\"\r\n}</pre>\r\n\r\n<p style=\"text-align: left;\">\r\n  As it turns out, <a href=\"https://github.com/lmorchard/tootr/blob/master/src/javascript/publishers/AmazonS3.js#L148\">these credentials work with Amazon S3</a>. So, after accepting a login and doing the <code>AssumeRoleWithWebIdentity</code> dance, my app can manage web hosting at Amazon S3 on your behalf.\r\n</p>\r\n\r\n<p style=\"text-align: left;\">\r\n  For further reading, check out &#8220;<a href=\"docs.aws.amazon.com/STS/latest/UsingSTS/CreatingWIF.html\">Creating Temporary Security Credentials for Mobile Apps Using Identity Providers</a>&#8221; in Amazon&#8217;s documentation. That&#8217;s from where I stole most of this stuff.\r\n</p>\r\n\r\n<h2 style=\"text-align: left;\">\r\n  <span id=\"Demo_time_and_next_steps\">Demo time and next steps</span>\r\n</h2>\r\n\r\n<p style=\"text-align: left;\">\r\n  I&#8217;ve rolled all of this into <a href=\"https://github.com/lmorchard/tootr\">a microblogging app called &#8220;tootr&#8221;</a>. Here&#8217;s a demo:\r\n</p>\r\n\r\n<li style=\"text-align: left;\">\r\n  <a href=\"https://lmorchard.github.io/tootr/\">https://lmorchard.github.io/tootr/</a>\r\n</li>\r\n\r\nYou can visit the app, click &#8220;Login with Amazon&#8221;, and you&#8217;ll soon be tooting up a storm. But, you should notice some serious drawbacks:\r\n\r\n*   The app is terrible and missing almost every interesting feature.\r\n*   Your username is something like [AF5OSES2YSFJEKYBANBHRFB25RXQ][3] and that&#8217;s also terrible.\r\n*   You&#8217;re tooting into my Amazon S3 bucket. You&#8217;re not paying me or Amazon. I *will* vandalize & delete your stuff and not feel bad about it.\r\n\r\nAs a proof-of-concept, though, I think it works: The &#8220;tootr&#8221; app at [lmorchard.github.io][4] publishes to a hosting API at [s3.amazonaws.com][5]. The on-ramp is a single button click and an Amazon sign-in dialog.\r\n\r\nBut, I think all the above issues can be addressed. Also, Amazon is an interesting core for this stuff: Many people have an Amazon account, and Amazon is a place where people generally pay for things. So, it&#8217;s different territory than most social media sites.\r\n\r\nThe challenge will be keeping the on-ramp simple while improving the app and switching to a user-owned web hosting space. Still, I think this is promising stuff. At any rate, it&#8217;s tinkering I&#8217;ve been procrastinating for years now, so I&#8217;ve got plenty of ideas to chase down.\r\n\r\n [1]: http://blog.lmorchard.com/2014/10/08/microblogging-like-its-2002\r\n [2]: http://blog.lmorchard.com/2014/10/09/separating-publishing-from-hosting-on-the-web\r\n [3]: https://tootr.s3.amazonaws.com/users/amazon/amzn1.account.AF5OSES2YSFJEKYBANBHRFB25RXQ/index.html\r\n [4]: https://lmorchard.github.io/tootr/\r\n [5]: http://s3.amazonaws.com\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/10/11/tootr-1",
    "summary": "\n\n<p>In my last two posts, I wrote about how I&#x2019;ve been <a href=\"http://blog.lmorchard.com/2014/10/08/microblogging-like-its-2002\">thinking about building yet another microblogging tool</a> and how I think it might be interesting to <a href=\"http://blog.lmorchard.com/2014/10/09/separating-publishing-from-hosting-on-the-web\">separate web publishing apps from web hosting</a>. Well, I started tinkering, and I&#x2019;ve got a rough prototype working.</p>\n",
    "prevPostPath": "2014/10/20/static-blog-generation-with-gulp",
    "nextPostPath": "2014/10/09/separating-publishing-from-hosting-on-the-web"
  },
  {
    "title": "Separating publishing from hosting on the web",
    "author": "lmorchard",
    "layout": "post",
    "permalink": "/2014/10/09/separating-publishing-from-hosting-on-the-web",
    "response_url": [
      null
    ],
    "response_title": [
      null
    ],
    "response_quote": [
      null
    ],
    "categories": [
      "Uncategorized"
    ],
    "tags": [
      "facebook",
      "metablogging",
      "social",
      "tootr",
      "twitter",
      "webdev"
    ],
    "year": "2014",
    "month": "10",
    "day": "09",
    "isDir": false,
    "slug": "separating-publishing-from-hosting-on-the-web",
    "date": "2014-10-09T12:00:00.000Z",
    "postName": "2014-10-09-separating-publishing-from-hosting-on-the-web",
    "html": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\n  <p class=\"toc_title\">\n    Contents\n  </p>\n\n  <ul class=\"toc_list\">\n    <li>\n      <a href=\"#Hosting_made_stupid_simple\"><span class=\"toc_number toc_depth_1\">1</span> Hosting made stupid simple</a>\n    </li>\n    <li>\n      <a href=\"#There8217s_an_app_for_publishing_that\"><span class=\"toc_number toc_depth_1\">2</span> There&#8217;s an app for publishing that</a>\n    </li>\n    <li>\n      <a href=\"#It8217s_complicated_but_worth_it\"><span class=\"toc_number toc_depth_1\">3</span> It&#8217;s complicated, but worth it</a>\n    </li>\n    <li>\n      <a href=\"#Challenges\"><span class=\"toc_number toc_depth_1\">4</span> Challenges</a>\n    </li>\n  </ul>\n</div>\n\n<p>Social media like Twitter and Facebook combine web publishing and hosting. You can&#8217;t run different software, and you can&#8217;t move your stuff. So, if you&#8217;re unhappy, your choices are a) deal with it or b) abandon your stuff and your friends. Those are pretty rough options.</p>\n<p>But, what if you <em>could</em> move your stuff? And what if you <em>could</em> switch apps?</p>\n<!--more-->\n\n<h2 id=\"hosting-made-stupid-simple\"><span id=\"Hosting_made_stupid_simple\">Hosting made stupid simple</span></h2>\n<p>Imagine a dead simple hosting service that puts stuff on the web for you. The main thing they do is support an API for apps. It&#8217;s not free-as-in-beer, but it&#8217;s cheap. Say $10 / year or maybe even $25 / year if you get serious and rent your own domain name. It could charge per usage, which might mean pennies-per-month if you&#8217;re a not yet a superstar celebrity.</p>\n<p>They also make it easy to get backups and move to a competitor. If they annoy you or go down often or get hacked, you can just pack up and leave. And since your web stuff is made up of static <a target=\"_blank\" title=\"HTML\" href=\"https://developer.mozilla.org/docs/Web/HTML?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">HTML</a> / <a target=\"_blank\" title=\"JS\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JS</a> / <a target=\"_blank\" title=\"CSS\" href=\"https://developer.mozilla.org/docs/Web/CSS?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">CSS</a> / image resources, moving is simple. All your URLs will change, unless you splurged on that domain name. But, I think we can smooth over that problem, like in the olden days when your phone number changed.</p>\n<h2 id=\"theres-an-app-for-publishing-that\"><span id=\"There8217s_an_app_for_publishing_that\">There&#8217;s an app for publishing that</span></h2>\n<p>Now, imagine a publishing app. This could run on a device you own &#8211; like your phone or tablet or laptop. It could also run on someone&#8217;s server in the cloud. When you start using a publishing app, it asks where you keep your stuff. Then, it does a permission dance with you and your hosting service &#8211; &#8220;so-and-so wants to do such-and-such, is this okay?&#8221;</p>\n<p>Having gotten permission, the publishing app can manage some or all of your stuff at the hosting service. A Twitter-alike could maintain some <a target=\"_blank\" title=\"HTML\" href=\"https://developer.mozilla.org/docs/Web/HTML?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">HTML</a> pages for your random thoughts, help you upload a header image &amp; a picture of yourself. If the authors of the Twitter app disappoint you, you can switch to the Ello-ish app. You don&#8217;t abandon anything or anyone.</p>\n<p>Ideally, these competing apps support the same formats. Or, they offer a way to convert between the two. They&#8217;d have incentive to make transitions easy, because they want you to switch. And that&#8217;s because you can pay for these apps &#8211; say $1 or $5 or $10. They could even offer in-app purchases for themes or analytics or scheduled posts or whatever.</p>\n<h2 id=\"its-complicated-but-worth-it\"><span id=\"It8217s_complicated_but_worth_it\">It&#8217;s complicated, but worth it</span></h2>\n<p>There&#8217;s complexity introduced, here. But, it&#8217;s not that bad, relatively speaking: You don&#8217;t need to deal with configuring web servers, uploading PHP scripts, or logging in with SSH. The hosting service, again, is stupid simple and commoditized.</p>\n<p>Apps can be as complex as their authors like, but that can be hidden from you with great UX &amp; UI. The main thing is that you manage the permissions between your hosting service and your apps &#8211; not nothing, but it&#8217;s not much.</p>\n<p>And, remember, the reason you might choose to accept this extra complexity is because it gives you choice. Both the hosting services and the publishing apps have incentive to serve you &#8211; because you&#8217;re a paying customer and because you can leave.</p>\n<h2 id=\"challenges\"><span id=\"Challenges\">Challenges</span></h2>\n<p>What&#8217;s the incentive for bootstrapping this? I&#8217;m not really sure, beyond thinking it&#8217;s a neat idea. Is there a profit potential, even if just in the range of a lifestyle business?</p>\n<p>It&#8217;s a chicken-and-egg problem: There aren&#8217;t really many (any?) super simple web hosts with great UX, and there aren&#8217;t apps that use them. Which comes first? Probably a little of both, most likely from a web host who also offers their own apps.</p>\n<p>Also, a central challenge in building this kind of ecosystem is to make sure the signup process for a hosting service and the permission dances with apps are easy. This is an opportunity to provide a great user experience, so that the only extra burden is the novelty of considering hosting &amp; publishing as separate concerns.</p>\n<p>I&#8217;m not sure if all the above is a solution. It&#8217;s not a new idea, either. But, I think it deserves revisiting. It might make for some fun tinkering, at least.</p>\n",
    "body": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\r\n  <p class=\"toc_title\">\r\n    Contents\r\n  </p>\r\n  \r\n  <ul class=\"toc_list\">\r\n    <li>\r\n      <a href=\"#Hosting_made_stupid_simple\"><span class=\"toc_number toc_depth_1\">1</span> Hosting made stupid simple</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#There8217s_an_app_for_publishing_that\"><span class=\"toc_number toc_depth_1\">2</span> There&#8217;s an app for publishing that</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#It8217s_complicated_but_worth_it\"><span class=\"toc_number toc_depth_1\">3</span> It&#8217;s complicated, but worth it</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Challenges\"><span class=\"toc_number toc_depth_1\">4</span> Challenges</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\nSocial media like Twitter and Facebook combine web publishing and hosting. You can&#8217;t run different software, and you can&#8217;t move your stuff. So, if you&#8217;re unhappy, your choices are a) deal with it or b) abandon your stuff and your friends. Those are pretty rough options.\r\n\r\nBut, what if you *could* move your stuff? And what if you *could* switch apps?\r\n\r\n<!--more-->\r\n\r\n## <span id=\"Hosting_made_stupid_simple\">Hosting made stupid simple</span>\r\n\r\nImagine a dead simple hosting service that puts stuff on the web for you. The main thing they do is support an API for apps. It&#8217;s not free-as-in-beer, but it&#8217;s cheap. Say $10 / year or maybe even $25 / year if you get serious and rent your own domain name. It could charge per usage, which might mean pennies-per-month if you&#8217;re a not yet a superstar celebrity.\r\n\r\nThey also make it easy to get backups and move to a competitor. If they annoy you or go down often or get hacked, you can just pack up and leave. And since your web stuff is made up of static <a target=\"_blank\" title=\"HTML\" href=\"https://developer.mozilla.org/docs/Web/HTML?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">HTML</a> / <a target=\"_blank\" title=\"JS\" href=\"https://developer.mozilla.org/docs/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">JS</a> / <a target=\"_blank\" title=\"CSS\" href=\"https://developer.mozilla.org/docs/Web/CSS?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">CSS</a> / image resources, moving is simple. All your URLs will change, unless you splurged on that domain name. But, I think we can smooth over that problem, like in the olden days when your phone number changed.\r\n\r\n## <span id=\"There8217s_an_app_for_publishing_that\">There&#8217;s an app for publishing that</span>\r\n\r\nNow, imagine a publishing app. This could run on a device you own &#8211; like your phone or tablet or laptop. It could also run on someone&#8217;s server in the cloud. When you start using a publishing app, it asks where you keep your stuff. Then, it does a permission dance with you and your hosting service &#8211; &#8220;so-and-so wants to do such-and-such, is this okay?&#8221;\r\n\r\nHaving gotten permission, the publishing app can manage some or all of your stuff at the hosting service. A Twitter-alike could maintain some <a target=\"_blank\" title=\"HTML\" href=\"https://developer.mozilla.org/docs/Web/HTML?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn\">HTML</a> pages for your random thoughts, help you upload a header image & a picture of yourself. If the authors of the Twitter app disappoint you, you can switch to the Ello-ish app. You don&#8217;t abandon anything or anyone.\r\n\r\nIdeally, these competing apps support the same formats. Or, they offer a way to convert between the two. They&#8217;d have incentive to make transitions easy, because they want you to switch. And that&#8217;s because you can pay for these apps &#8211; say $1 or $5 or $10. They could even offer in-app purchases for themes or analytics or scheduled posts or whatever.\r\n\r\n## <span id=\"It8217s_complicated_but_worth_it\">It&#8217;s complicated, but worth it</span>\r\n\r\nThere&#8217;s complexity introduced, here. But, it&#8217;s not that bad, relatively speaking: You don&#8217;t need to deal with configuring web servers, uploading PHP scripts, or logging in with SSH. The hosting service, again, is stupid simple and commoditized.\r\n\r\nApps can be as complex as their authors like, but that can be hidden from you with great UX & UI. The main thing is that you manage the permissions between your hosting service and your apps &#8211; not nothing, but it&#8217;s not much.\r\n\r\nAnd, remember, the reason you might choose to accept this extra complexity is because it gives you choice. Both the hosting services and the publishing apps have incentive to serve you &#8211; because you&#8217;re a paying customer and because you can leave.\r\n\r\n## <span id=\"Challenges\">Challenges</span>\r\n\r\nWhat&#8217;s the incentive for bootstrapping this? I&#8217;m not really sure, beyond thinking it&#8217;s a neat idea. Is there a profit potential, even if just in the range of a lifestyle business?\r\n\r\nIt&#8217;s a chicken-and-egg problem: There aren&#8217;t really many (any?) super simple web hosts with great UX, and there aren&#8217;t apps that use them. Which comes first? Probably a little of both, most likely from a web host who also offers their own apps.\r\n\r\nAlso, a central challenge in building this kind of ecosystem is to make sure the signup process for a hosting service and the permission dances with apps are easy. This is an opportunity to provide a great user experience, so that the only extra burden is the novelty of considering hosting & publishing as separate concerns.\r\n\r\nI&#8217;m not sure if all the above is a solution. It&#8217;s not a new idea, either. But, I think it deserves revisiting. It might make for some fun tinkering, at least.",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/10/09/separating-publishing-from-hosting-on-the-web",
    "summary": "\n\n<p>Social media like Twitter and Facebook combine web publishing and hosting. You can&#x2019;t run different software, and you can&#x2019;t move your stuff. So, if you&#x2019;re unhappy, your choices are a) deal with it or b) abandon your stuff and your friends. Those are pretty rough options.</p>\n<p>But, what if you <em>could</em> move your stuff? And what if you <em>could</em> switch apps?</p>\n",
    "prevPostPath": "2014/10/11/tootr-1",
    "nextPostPath": "2014/10/08/microblogging-like-its-2002"
  },
  {
    "title": "Microblogging like it&#8217;s 2002",
    "author": "lmorchard",
    "layout": "post",
    "permalink": "/2014/10/08/microblogging-like-its-2002",
    "response_url": [
      null
    ],
    "response_title": [
      null
    ],
    "response_quote": [
      null
    ],
    "categories": [
      "Uncategorized"
    ],
    "tags": [
      "facebook",
      "metablogging",
      "social",
      "tootr",
      "twitter",
      "web"
    ],
    "year": "2014",
    "month": "10",
    "day": "08",
    "isDir": false,
    "slug": "microblogging-like-its-2002",
    "date": "2014-10-08T12:00:00.000Z",
    "postName": "2014-10-08-microblogging-like-its-2002",
    "html": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\n  <p class=\"toc_title\">\n    Contents\n  </p>\n\n  <ul class=\"toc_list\">\n    <li>\n      <a href=\"#Silos_Sovereignty\"><span class=\"toc_number toc_depth_1\">1</span> Silos & Sovereignty</a>\n    </li>\n    <li>\n      <a href=\"#The_Great_Big_Block_Party_on_the_Web\"><span class=\"toc_number toc_depth_1\">2</span> The Great Big Block Party on the Web</a>\n    </li>\n    <li>\n      <a href=\"#Free_as_in_Lunch\"><span class=\"toc_number toc_depth_1\">3</span> Free as in Lunch</a>\n    </li>\n    <li>\n      <a href=\"#Fair_Trade\"><span class=\"toc_number toc_depth_1\">4</span> Fair Trade?</a>\n    </li>\n    <li>\n      <a href=\"#Party_Like_it8217s_2002\"><span class=\"toc_number toc_depth_1\">5</span> Party Like it&#8217;s 2002?</a>\n    </li>\n  </ul>\n</div>\n\n<p>Every year or so, I (re)join the ranks of hackers who decide they&#8217;d like to try building a <a href=\"http://en.wikipedia.org/wiki/Microblogging\">microblogging</a> tool. It&#8217;s sometimes after Twitter or Facebook does something cruddy to remind me that I&#8217;m the product. Sometimes, it&#8217;s when jerks have the run of the place and no one can do anything about it. Often these things are highly correlated.</p>\n<!--more-->\n\n<h2 id=\"silos--sovereignty\"><span id=\"Silos_Sovereignty\">Silos &amp; Sovereignty</span></h2>\n<p>To just build another silo would be a mistake. So, as usual, my thinking strays toward decentralization &amp; user sovereignty. That is, empower people to put their stuff in lots of different places online that treat them like royalty &#8211; often because they&#8217;re paying customers.</p>\n<p>Historically, this tends to offer a terrible experience. To write on your own piece of the web, for example, you have to rent a domain &amp; a server. Then, get some kind of publishing tool working. Oh, and be sure to keep everything updated &amp; running.</p>\n<p>All of this requires hours of study and tinkering better spent doing something else. You know, like the things that prompted you to have thoughts worth sharing in the first place.</p>\n<h2 id=\"the-great-big-block-party-on-the-web\"><span id=\"The_Great_Big_Block_Party_on_the_Web\">The Great Big Block Party on the Web</span></h2>\n<p>Still, circa 2002 or so, we had us a great big block party on the web. The experience was so compelling that plenty of full- and part-time geeks braved the tech gauntlet to participate in the emergent <a href=\"http://en.wikipedia.org/wiki/Blogosphere\">blogosphere</a>. Good times, fun hacks.</p>\n<p>But, some folks had notions to make this even easier &amp; more accessible &#8211; and thereby rope in a much broader swath of humanity. Ditch decentralization. Simplify discovery. Provide the servers and the software. Improve the on-ramps. Make it free-as-in-beer.</p>\n<p>And it worked. The network effects of throwing open the doors on massive party silos soon dwarfed our little hobby homesteads on the open web. By the time I get a proper blog running and build myself <a href=\"http://en.wikipedia.org/wiki/Glossary_of_blogging#B\">a blogroll</a>, you&#8217;ve already gotten on both Twitter and Facebook and started making fun of me with all your new friends.</p>\n<p>However much I might grouse about the fix we find ourselves in now, it&#8217;s undeniable that these social networking silos have had massive success in connecting people around the world. You know, that thing we always dreamed the Internet would do?</p>\n<h2 id=\"free-as-in-lunch\"><span id=\"Free_as_in_Lunch\">Free as in Lunch</span></h2>\n<p><a href=\"http://en.wikipedia.org/wiki/There_ain%27t_no_such_thing_as_a_free_lunch\">There ain&#8217;t no such thing as a free lunch</a>, though. Servers, developers, and bandwidth all cost money. As it turns out, though, having all these people partying in one place generates a big steaming heap of attention &amp; data. Certain parties are willing to pay for (or semi-legally demand) access to this rich humus, because it helps their businesses grow.</p>\n<p>The unfortunate thing, though, is that this optimizes for treating people like organic waste. The only real concern is that you don&#8217;t raise too much of a stink and just keep stewing in the pile producing valuable nutrients.</p>\n<p>That&#8217;s what it means to be the product rather than the customer. You have little control or influence. Maybe, just maybe, if you and a bunch of other people shout loud &amp; long enough, they&#8217;ll turn &amp; aerate the compost. That may not accomplish what you hoped.</p>\n<h2 id=\"fair-trade\"><span id=\"Fair_Trade\">Fair Trade?</span></h2>\n<p>Most people seem okay with the trade, though. Putting up with monitoring &amp; marketing can be an acceptable cover charge, given the alternatives. I&#8217;m no exception: I&#8217;ve been complacent enough over the past decade &#8211; because I get to talk to family, friends, and interesting folks without yak shaving on my hobby server. (Not yak shaving about this particular thing, anyway.)</p>\n<p>But, I haven&#8217;t clicked on a banner in forever, and I&#8217;ve gotten really cynical about marketing in general. More often than not, an ad drives me to actively avoid the product. Seems like the silos really have to work to squeeze value out of me. Seriously, some days I feel like I&#8217;m pulling a con on every single free-beer service on the web.</p>\n<p>My hunch is that the party will wind down, someday. But, maybe not soon and maybe not for everyone: <a href=\"http://money.cnn.com/2013/08/20/technology/social/facebook-zuckerberg-5-billion/\">We still have a few billion people on the planet yet to get in the door.</a> Those folks get to carry my freeloading butt. But, I bet things will start to look less familiar as time goes on and the silos catch on and stop targeting me.</p>\n<h2 id=\"party-like-its-2002\"><span id=\"Party_Like_it8217s_2002\">Party Like it&#8217;s 2002?</span></h2>\n<p>Still, it feels like the stink from the pile is rising steadily. Fresh folks might keep it rolling, but maybe veterans and cynical newcomers will look for something different. We have ephemeral messaging apps like Snapchat, anonymous spew like Secret, and continual complaints about meddling with the news feed.</p>\n<p>People object when they notice the creepy guys wandering around with clipboards, eavesdropping on conversations and randomly rearranging furniture in the room. Nothing really new, but it isn&#8217;t going away. Maybe it&#8217;ll rise to some level of notice and snowball?</p>\n<p>I wonder if we&#8217;ll have an opportunity to revisit the Great Web Block Party of 2002? Could we convince more people to pay money and tolerate complexity &#8211; even just a little &#8211; in exchange for their own pieces of the web?</p>\n<p>Maybe. But, I think it will take a better balance of payment &amp; annoyance vs privacy &amp; sovereignty. It also wouldn&#8217;t hurt if it made a profit for some folks &#8211; even if only as some nice <a href=\"http://en.wikipedia.org/wiki/Lifestyle_business\">lifestyle businesses</a>. If I knew how to make that happen, though, I&#8217;d be doing it. That&#8217;s what keeps me at my day job &#8211; though it helps that my employer is looking at this stuff, <a href=\"https://www.mozilla.org/en-US/foundation/\">albeit as a non-profit</a>.</p>\n<p>Of course, us old web hackers could just end up the new ham radio enthusiasts. We&#8217;ll get up early for our swap meets and trade links. Meanwhile, the world will have moved on from the web and we&#8217;ll have discovered that AOL was just ahead of its time.</p>\n<p>That&#8217;s a depressing thought. I think I&#8217;ll <a href=\"http://www.strava.com/athletes/6013128\">go for a run</a>, then return to tinkering to cheer myself up.</p>\n",
    "body": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\r\n  <p class=\"toc_title\">\r\n    Contents\r\n  </p>\r\n  \r\n  <ul class=\"toc_list\">\r\n    <li>\r\n      <a href=\"#Silos_Sovereignty\"><span class=\"toc_number toc_depth_1\">1</span> Silos & Sovereignty</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#The_Great_Big_Block_Party_on_the_Web\"><span class=\"toc_number toc_depth_1\">2</span> The Great Big Block Party on the Web</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Free_as_in_Lunch\"><span class=\"toc_number toc_depth_1\">3</span> Free as in Lunch</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Fair_Trade\"><span class=\"toc_number toc_depth_1\">4</span> Fair Trade?</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Party_Like_it8217s_2002\"><span class=\"toc_number toc_depth_1\">5</span> Party Like it&#8217;s 2002?</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\nEvery year or so, I (re)join the ranks of hackers who decide they&#8217;d like to try building a [microblogging][1] tool. It&#8217;s sometimes after Twitter or Facebook does something cruddy to remind me that I&#8217;m the product. Sometimes, it&#8217;s when jerks have the run of the place and no one can do anything about it. Often these things are highly correlated.\r\n\r\n<!--more-->\r\n\r\n## <span id=\"Silos_Sovereignty\">Silos & Sovereignty</span>\r\n\r\nTo just build another silo would be a mistake. So, as usual, my thinking strays toward decentralization & user sovereignty. That is, empower people to put their stuff in lots of different places online that treat them like royalty &#8211; often because they&#8217;re paying customers.\r\n\r\nHistorically, this tends to offer a terrible experience. To write on your own piece of the web, for example, you have to rent a domain & a server. Then, get some kind of publishing tool working. Oh, and be sure to keep everything updated & running.\r\n\r\nAll of this requires hours of study and tinkering better spent doing something else. You know, like the things that prompted you to have thoughts worth sharing in the first place.\r\n\r\n## <span id=\"The_Great_Big_Block_Party_on_the_Web\">The Great Big Block Party on the Web</span>\r\n\r\nStill, circa 2002 or so, we had us a great big block party on the web. The experience was so compelling that plenty of full- and part-time geeks braved the tech gauntlet to participate in the emergent [blogosphere][2]. Good times, fun hacks.\r\n\r\nBut, some folks had notions to make this even easier & more accessible &#8211; and thereby rope in a much broader swath of humanity. Ditch decentralization. Simplify discovery. Provide the servers and the software. Improve the on-ramps. Make it free-as-in-beer.\r\n\r\nAnd it worked. The network effects of throwing open the doors on massive party silos soon dwarfed our little hobby homesteads on the open web. By the time I get a proper blog running and build myself [a blogroll][3], you&#8217;ve already gotten on both Twitter and Facebook and started making fun of me with all your new friends.\r\n\r\nHowever much I might grouse about the fix we find ourselves in now, it&#8217;s undeniable that these social networking silos have had massive success in connecting people around the world. You know, that thing we always dreamed the Internet would do?\r\n\r\n## <span id=\"Free_as_in_Lunch\">Free as in Lunch</span>\r\n\r\n[There ain&#8217;t no such thing as a free lunch][4], though. Servers, developers, and bandwidth all cost money. As it turns out, though, having all these people partying in one place generates a big steaming heap of attention & data. Certain parties are willing to pay for (or semi-legally demand) access to this rich humus, because it helps their businesses grow.\r\n\r\nThe unfortunate thing, though, is that this optimizes for treating people like organic waste. The only real concern is that you don&#8217;t raise too much of a stink and just keep stewing in the pile producing valuable nutrients.\r\n\r\nThat&#8217;s what it means to be the product rather than the customer. You have little control or influence. Maybe, just maybe, if you and a bunch of other people shout loud & long enough, they&#8217;ll turn & aerate the compost. That may not accomplish what you hoped.\r\n\r\n## <span id=\"Fair_Trade\">Fair Trade?</span>\r\n\r\nMost people seem okay with the trade, though. Putting up with monitoring & marketing can be an acceptable cover charge, given the alternatives. I&#8217;m no exception: I&#8217;ve been complacent enough over the past decade &#8211; because I get to talk to family, friends, and interesting folks without yak shaving on my hobby server. (Not yak shaving about this particular thing, anyway.)\r\n\r\nBut, I haven&#8217;t clicked on a banner in forever, and I&#8217;ve gotten really cynical about marketing in general. More often than not, an ad drives me to actively avoid the product. Seems like the silos really have to work to squeeze value out of me. Seriously, some days I feel like I&#8217;m pulling a con on every single free-beer service on the web.\r\n\r\nMy hunch is that the party will wind down, someday. But, maybe not soon and maybe not for everyone: [We still have a few billion people on the planet yet to get in the door.][5] Those folks get to carry my freeloading butt. But, I bet things will start to look less familiar as time goes on and the silos catch on and stop targeting me.\r\n\r\n## <span id=\"Party_Like_it8217s_2002\">Party Like it&#8217;s 2002?</span>\r\n\r\nStill, it feels like the stink from the pile is rising steadily. Fresh folks might keep it rolling, but maybe veterans and cynical newcomers will look for something different. We have ephemeral messaging apps like Snapchat, anonymous spew like Secret, and continual complaints about meddling with the news feed.\r\n\r\nPeople object when they notice the creepy guys wandering around with clipboards, eavesdropping on conversations and randomly rearranging furniture in the room. Nothing really new, but it isn&#8217;t going away. Maybe it&#8217;ll rise to some level of notice and snowball?\r\n\r\nI wonder if we&#8217;ll have an opportunity to revisit the Great Web Block Party of 2002? Could we convince more people to pay money and tolerate complexity &#8211; even just a little &#8211; in exchange for their own pieces of the web?\r\n\r\nMaybe. But, I think it will take a better balance of payment & annoyance vs privacy & sovereignty. It also wouldn&#8217;t hurt if it made a profit for some folks &#8211; even if only as some nice [lifestyle businesses][6]. If I knew how to make that happen, though, I&#8217;d be doing it. That&#8217;s what keeps me at my day job &#8211; though it helps that my employer is looking at this stuff, [albeit as a non-profit][7].\r\n\r\nOf course, us old web hackers could just end up the new ham radio enthusiasts. We&#8217;ll get up early for our swap meets and trade links. Meanwhile, the world will have moved on from the web and we&#8217;ll have discovered that AOL was just ahead of its time.\r\n\r\nThat&#8217;s a depressing thought. I think I&#8217;ll [go for a run][8], then return to tinkering to cheer myself up.\r\n\r\n [1]: http://en.wikipedia.org/wiki/Microblogging\r\n [2]: http://en.wikipedia.org/wiki/Blogosphere\r\n [3]: http://en.wikipedia.org/wiki/Glossary_of_blogging#B\r\n [4]: http://en.wikipedia.org/wiki/There_ain%27t_no_such_thing_as_a_free_lunch\r\n [5]: http://money.cnn.com/2013/08/20/technology/social/facebook-zuckerberg-5-billion/\r\n [6]: http://en.wikipedia.org/wiki/Lifestyle_business\r\n [7]: https://www.mozilla.org/en-US/foundation/\r\n [8]: http://www.strava.com/athletes/6013128",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/10/08/microblogging-like-its-2002",
    "summary": "\n\n<p>Every year or so, I (re)join the ranks of hackers who decide they&#x2019;d like to try building a <a href=\"http://en.wikipedia.org/wiki/Microblogging\">microblogging</a> tool. It&#x2019;s sometimes after Twitter or Facebook does something cruddy to remind me that I&#x2019;m the product. Sometimes, it&#x2019;s when jerks have the run of the place and no one can do anything about it. Often these things are highly correlated.</p>\n",
    "prevPostPath": "2014/10/09/separating-publishing-from-hosting-on-the-web",
    "nextPostPath": "2014/09/29/1288"
  },
  {
    "author": "lmorchard",
    "layout": "post",
    "permalink": "/2014/09/29/1288",
    "categories": [
      "Uncategorized"
    ],
    "tags": [
      "asides",
      "indieweb",
      "webdev"
    ],
    "format": "status",
    "year": "2014",
    "month": "09",
    "day": "29",
    "isDir": false,
    "slug": "1288",
    "date": "2014-09-29T12:00:00.000Z",
    "postName": "2014-09-29-1288",
    "html": "<p>My <a href=\"http://decafbad.com/blog/2006/05/26/confessions-of-a-serial-enthusiast/\">serial enthusiasm</a> is straying back toward things Indie Web. So, maybe I&#8217;ll start lighting this thing up again with little bits and bobs of mad web science. This status post, in particular, is really just an excuse to see if <a href=\"http://indiewebcamp.com/webmention\">WebMentions</a> work.</p>\n",
    "body": "My [serial enthusiasm][1] is straying back toward things Indie Web. So, maybe I&#8217;ll start lighting this thing up again with little bits and bobs of mad web science. This status post, in particular, is really just an excuse to see if [WebMentions][2] work.\r\n\r\n [1]: http://decafbad.com/blog/2006/05/26/confessions-of-a-serial-enthusiast/\r\n [2]: http://indiewebcamp.com/webmention\r\n",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/09/29/1288",
    "prevPostPath": "2014/10/08/microblogging-like-its-2002",
    "nextPostPath": "2014/01/18/ppd-avoidance"
  },
  {
    "title": "Parsec Patrol Diaries: How To Avoid Smashing Into Things",
    "author": "lmorchard",
    "layout": "post",
    "permalink": "/2014/01/18/ppd-avoidance",
    "dsq_thread_id": [
      2140934375
    ],
    "categories": [
      "Uncategorized"
    ],
    "tags": [
      "html5",
      "parsecpatrol",
      "webdev"
    ],
    "year": "2014",
    "month": "01",
    "day": "18",
    "isDir": false,
    "slug": "ppd-avoidance",
    "date": "2014-01-18T12:00:00.000Z",
    "postName": "2014-01-18-ppd-avoidance",
    "html": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\n  <p class=\"toc_title\">\n    Contents\n  </p>\n\n  <ul class=\"toc_list\">\n    <li>\n      <a href=\"#Where_to_start\"><span class=\"toc_number toc_depth_1\">1</span> Where to start?</a>\n    </li>\n    <li>\n      <a href=\"#Waypoint_Graphs_Navigation_Meshes\"><span class=\"toc_number toc_depth_1\">2</span> Waypoint Graphs & Navigation Meshes</a>\n    </li>\n    <li>\n      <a href=\"#A_Search\"><span class=\"toc_number toc_depth_1\">3</span> A* Search</a>\n    </li>\n    <li>\n      <a href=\"#Trigonometry_Refresher\"><span class=\"toc_number toc_depth_1\">4</span> Trigonometry Refresher</a>\n    </li>\n    <li>\n      <a href=\"#Spaceships_with_Whiskers\"><span class=\"toc_number toc_depth_1\">5</span> Spaceships with Whiskers</a>\n    </li>\n    <li>\n      <a href=\"#Functions_with_Potential\"><span class=\"toc_number toc_depth_1\">6</span> Functions with Potential</a>\n    </li>\n    <li>\n      <a href=\"#Further_research\"><span class=\"toc_number toc_depth_1\">7</span> Further research</a>\n    </li>\n  </ul>\n</div>\n\n<p>I made a hero ship with beam weapons. I even built drifting asteroids that handle smashing into things. What gave me trouble was finding a way to teach enemy ships how to <em>avoid</em> smashing into things. You know, not perfectly, but just well enough to seem vaguely cunning and worth pretending to outsmart in a video game.</p>\n<!--more-->\n\n<p>In developing Parsec Patrol, I&#8217;ve never had plans or specifications so much as doodles &amp; daydreams. One day I imagined this scene where I&#8217;m piloting the hero ship through a shifting maze of asteroids, a dozen enemy scout ships in fast pursuit. I dodge &amp; weave through the rocks, just barely negotiating the gaps. One by one, the baddies vanish in bursts of light &amp; debris: Some succumb to my beam weapons, while others smash into rocks or bungle into each other. Classic space dogfight material, here.</p>\n<h3 id=\"where-to-start\"><span id=\"Where_to_start\">Where to start?</span></h3>\n<p>From years of playing &amp; tinkering with shooters like Unreal &amp; Quake, I had a vague notion of bots needing &#8220;pathfinding&#8221; algorithms to find their way around levels. So, I started hitting Google, looking to see what I could find and understand just well enough to eliminate from consideration or flag for a deeper dive.</p>\n<h3 id=\"waypoint-graphs--navigation-meshes\"><span id=\"Waypoint_Graphs_Navigation_Meshes\">Waypoint Graphs &amp; Navigation Meshes</span></h3>\n<p>Some of the first pathfinding tools I started reading about were <em>waypoint graphs *and *navigation meshes</em>. It turns out that some bots rely on cheat sheets: map-specific and manually placed points or polygons, traversed to get from point A to point B. Generally it&#8217;s a cheap way to make bots seem like they know where they&#8217;re going, because a human being does most of the work up front.</p>\n<div style=\"width: 322px\" class=\"wp-caption alignleft\">\n  <a href=\"http://www.ai-blog.net/archives/000152.html\"><img class=\"    \" alt=\"\" src=\"http://i252.photobucket.com/albums/hh9/PaulTozour/Halaa_waypoints2_AB.jpg\" width=\"312\" height=\"250\" /></a><p class=\"wp-caption-text\">\n    Waypoint graph\n  </p>\n</div>\n\n<div style=\"width: 322px\" class=\"wp-caption alignleft\">\n  <a href=\"www.ai-blog.net/archives/000152.html\"><img class=\"    \" alt=\"\" src=\"http://i252.photobucket.com/albums/hh9/PaulTozour/Halaa_navmesh2_AB.jpg\" width=\"312\" height=\"250\" /></a><p class=\"wp-caption-text\">\n    Navigation mesh\n  </p>\n</div>\n\n<p>Unfortunately, an asteroid field is not like a Quake map. In Parsec Patrol, the clusters of rocks are randomly generated and only get more chaotic as the rocks drift and collide. There&#8217;s just no way to handcraft a map for robots in this scenario.</p>\n<h3 id=\"a-search\"><span id=\"A_Search\">A* Search</span></h3>\n<div style=\"width: 220px\" class=\"wp-caption alignright\">\n  <a href=\"http://en.wikipedia.org/wiki/A*_search_algorithm\"><img class=\"   \" alt=\"\" src=\"http://upload.wikimedia.org/wikipedia/commons/5/5d/Astar_progress_animation.gif\" width=\"210\" height=\"210\" /></a><p class=\"wp-caption-text\">\n    A* Search animation from Wikipedia\n  </p>\n</div>\n\n<p>Another approach I found was the <a href=\"http://en.wikipedia.org/wiki/A*_search_algorithm\">A* Search algorithm</a>. There are some <a href=\"http://buildnewgames.com/astar/\">great write-ups on this algorithm</a> out there, so I won&#8217;t try making a hash of it here. You can also <a href=\"http://easystar.nodejitsu.com/demo.html\">try out some implementations in JavaScript</a>.</p>\n<p>This algorithm seems best suited for navigating graphs with few connections between nodes &#8211; a 2D grid, for example, with 8 exits per cell. If I ever wrote a roguelike dungeon crawler, this would be my jam.</p>\n<p>Unfortunately, the world of Parsec Patrol uses a continuous coordinate system, rather than a map of discrete grid cells. And, it seems like a waste to try to find a complete path from point A to point B for this game &#8211; because that path is likely to be made obsolete from moment to moment. So, how about trying to work out the best move for just the next moment?</p>\n<h3 id=\"trigonometry-refresher\"><span id=\"Trigonometry_Refresher\">Trigonometry Refresher</span></h3>\n<div style=\"width: 203px\" class=\"wp-caption alignright\">\n  <a href=\"http://www.hyperionedge.com/2010/04/tron-13-lightcycle-game-grid.html\"><img class=\"     \" alt=\"\" src=\"http://2.bp.blogspot.com/_p21BV9S5a0k/S7n0ztF4bBI/AAAAAAAACKw/u9cPiF-dSXE/s1600/TronCards14.jpg\" width=\"193\" height=\"136\" /></a><p class=\"wp-caption-text\">\n    Right angles only, for Light Cycles\n  </p>\n</div>\n\n<p>I took a short break from research and decided to see what I could come up with on my own. What does it mean to avoid an obstacle?</p>\n<p>One way to avoid a collision is to make a full right angle turn, into a perpendicular course. That works on the Light Cycle Grid, but it&#8217;s a bit extreme. So, I need an angle between 0 and 90 degrees with respect to the ship&#8217;s vector and the obstacle.</p>\n<p>So, I decided to give myself a refresher course in trigonometry:</p>\n<div id=\"attachment_1206\" style=\"width: 510px\" class=\"wp-caption aligncenter\">\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/trig2.png\"><img class=\"size-full wp-image-1206 \" alt=\"I am not good at math\" src=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/trig2.png\" width=\"500\" height=\"558\" /></a><p class=\"wp-caption-text\">\n    I am not good at math\n  </p>\n</div>\n\n<p>These scribblings are not meant to impress. Rather, this shows how much I forgot about high school trigonometry. Nonetheless, I worked out how to <a href=\"https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L1034\">calculate an appropriate target angle that would miss the obstacle by a defined distance</a>. Having that angle meant that I could turn less drastically while steering for avoidance.</p>\n<p>It was a small victory &#8211; and now I remember <a href=\"http://www.mathwords.com/s/sohcahtoa.htm\">SOHCAHTOA</a> again.</p>\n<h3 id=\"spaceships-with-whiskers\"><span id=\"Spaceships_with_Whiskers\">Spaceships with Whiskers</span></h3>\n<p>Now that I had a way to calculate a steering angle that avoided smashing into something, I needed a way to know when I was headed for a collision.</p>\n<p>If I were trying to build a physical robot, I might add some whiskers to detect the nearest obstacle and trigger a turn. But, how to do that in the virtual game world? A little bit of research brought me to the notion of using <a href=\"https://www.google.com/search?q=collision+detection+ray+casting\">raycasting combined with collision detection</a>, something like this:</p>\n<div id=\"attachment_1191\" style=\"width: 394px\" class=\"wp-caption aligncenter\">\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/2014-01-16-21.18.36.jpg\"><img class=\"wp-image-1191 \" alt=\"\" src=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/2014-01-16-21.18.36-1024x768.jpg\" width=\"384\" height=\"288\" /></a><p class=\"wp-caption-text\">\n    Spaceships with whiskers!\n  </p>\n</div>\n\n<p><a href=\"https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L987\">The algorithm I came up with</a> constructs a vector on each side of the ship. <a href=\"https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L1008\">I project circles along the vectors</a>, with a radius based on the margin by which I hoped to avoid obstacles. In order from nearest to farthest, <a href=\"https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L1015\">I run collision detection for each of the circles</a>. The search stops with the first hit, using the nearest obstacle found.</p>\n<p>So, when my ship finds an obstacle with the whiskers, calculate the avoidance angle, and set that as the steering target for the current game tick. This ends up much more lightweight than finding a complete optimal path, and it can react from moment to moment to the changing game environment.</p>\n<div id=\"attachment_1203\" style=\"width: 510px\" class=\"wp-caption aligncenter\">\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/whiskers-twitch-3.gif.gif\"><img class=\"size-full wp-image-1203 \" alt=\"Whiskers are twitchy\" src=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/whiskers-twitch-3.gif.gif\" width=\"500\" height=\"380\" /></a><p class=\"wp-caption-text\">\n    My whiskers are wiggly\n  </p>\n</div>\n\n<p>Unfortunately, this scheme looks funny in action: Since <a href=\"https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L1085\">I revert back to target seeking after resolving obstacle avoidance</a>, the enemy ships wiggle as they oscillate between the two strategies. Tracking straight toward the target often brings the ship into collision course &#8211; so once an avoidance course is achieved, target tracking turns right back into the obstacle.</p>\n<h3 id=\"functions-with-potential\"><span id=\"Functions_with_Potential\">Functions with Potential</span></h3>\n<p>What I really wanted was some way for these ships to take many nearby obstacles into account along with seeking toward the target, and come up with a smoothly changing steering angle that seemed not entirely stupid or goofy looking.</p>\n<p>After some further research, I started reading <a href=\"http://www.amazon.com/gp/product/0596005555/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0596005555&amp;linkCode=as2&amp;tag=0xdecafbad01-20\">AI for Game Developers</a><img class=\"tvatbijdbdexywujcjjd svuitzfraxzoondqiznf pybiawadmcxjgjpdvhto\" style=\"border: none !important; margin: 0px !important;\" alt=\"\" src=\"http://ir-na.amazon-adsystem.com/e/ir?t=0xdecafbad01-20&l=as2&o=1&a=0596005555\" width=\"1\" height=\"1\" border=\"0\" /> by David M. Bourg and Glenn Seemann. In Chapter 5, I found code using <a href=\"http://en.wikipedia.org/wiki/Lennard-Jones_potential\">the Lennard-Jones potential function</a> to drive avoidance of multiple obstacles and target seeking all in one algorithm.</p>\n<div style=\"width: 442px\" class=\"wp-caption aligncenter\">\n  <a href=\"http://chemwiki.ucdavis.edu/Physical_Chemistry/Quantum_Mechanics/Atomic_Theory/Intermolecular_Forces/Lennard-Jones_Potential\"><img alt=\"\" src=\"http://chemwiki.ucdavis.edu/@api/deki/files/8914/Figure_B.jpg\" width=\"432\" height=\"324\" /></a><p class=\"wp-caption-text\">\n    Serious business, this potential function\n  </p>\n</div>\n\n<p>A thumbnail sketch of this function with respect to the game goes something like this: Entities can repel &amp; attract each other. Repulsion &amp; attraction change over distance. For example, swarming entities can attract at long distance and repel when too close.</p>\n<p>Here&#8217;s what <a href=\"http://en.wikipedia.org/wiki/Lennard-Jones_potential#AB_form\">the simplified AB form of this function</a> looks like in my code:</p>\n<p><code>U = (-A/Math.pow(d,n)) + (B/Math.pow(d,m))</code></p>\n<p>There are 4 constants in this function:</p>\n<ul>\n<li><code>A</code> &#8211; magnitude of attraction</li>\n<li><code>n</code> &#8211; attenuation of attraction over distance</li>\n<li><code>B</code> &#8211; magnitude of repulsion</li>\n<li><code>m</code> &#8211; attenuation of repulsion over distance</li>\n</ul>\n<p>Pick values for these constants, and you&#8217;ve got a function that yields a positive (repulsion) or negative (attraction) value for any given distance (<code>d</code>). So far, <a href=\"https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/sketches/steering.coffee#L85\">I&#8217;ve just used trial &amp; error to find values for these constants</a>.</p>\n<p>To apply this function, <a href=\"https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L904\">I search for obstacles within a certain radius of the ship</a>. That limits the number of calculations, because far-flung obstacles have no significant influence. For each nearby obstacle, <a href=\"https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L868\">I calculate distance and apply the potential function</a>. I then <a href=\"https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L877\">calculate a unit vector from each obstacle to the ship and multiply by the result of the potential function</a>.</p>\n<p>Repeat all the above for targets, regardless of range, and with function constants that yield attraction rather than repulsion.</p>\n<p>That leaves me with a collection of vectors, each with a direction and a magnitude representing the weighted urgency of heading in that direction right now. I sum all these vectors, <a href=\"https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L932\">leaving a single vector with an angle useful as a steering goal</a>. I ignore the magnitude, because it was only useful during addition for influencing the angle.</p>\n<p><span class='embed-youtube' style='text-align:center; display: block;'></span></p>\n<p>Now, perhaps I&#8217;ve come off sounding smart after having written the above. But, I&#8217;ve already established that I&#8217;m not good at math. It&#8217;s quite possible I&#8217;ve abused &amp; misused this function entirely. That said, <a href=\"http://lmorchard.github.io/parsec-patrol/sketches/steering.html\">I think it&#8217;s produced a satisfying result</a>.</p>\n<div id=\"attachment_1238\" style=\"width: 485px\" class=\"wp-caption aligncenter\">\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/potential5.gif\"><img class=\"size-full wp-image-1238 \" alt=\"Smoother steering\" src=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/potential5.gif\" width=\"475\" height=\"375\" /></a><p class=\"wp-caption-text\">\n    Smoother steering with math!\n  </p>\n</div>\n\n<p>The <a href=\"http://lmorchard.github.io/parsec-patrol/sketches/steering.html\">demo sketch</a> has a debug mode full of confusing circles and lines, but it might help illustrate how the function works on they fly. In a nutshell, this means that closer obstacles have a greater influence on causing the ship to steer away. Meanwhile, there&#8217;s a constant influence pulling the ship back toward the target, whenever the mass of obstacles nearby do not dominate steering.</p>\n<p>I want to tinker some more, maybe see if I can make the ships swarm with each other while also avoiding obstacles and heading toward the target. I&#8217;d also like to find a way to stop guessing and calculate the function constants based on the speed &amp; steering characteristics of a given ship. That is, fast &amp; nimble ships should be able to navigate tighter spaces, while big &amp; clumsy ships should start working to avoid collisions from farther away.</p>\n<h3 id=\"further-research\"><span id=\"Further_research\">Further research</span></h3>\n<p>I&#8217;ve been thinking I need to look into <a href=\"http://gamedevelopment.tutsplus.com/tutorials/goal-based-vector-field-pathfinding--gamedev-9007\">vector fields</a> and <a href=\"http://www.red3d.com/cwr/boids/\">flocking behaviors</a> next. I&#8217;m still looking for more options to make this work, too. If you&#8217;ve made it this far reading this post, feel free to toss some suggestions &amp; critique my way. I have basically no idea what I&#8217;m doing, nor even what terms to use in searching for this stuff.</p>\n<p>Still, these are some pretty fun results stumbling along from daydreams to code.</p>\n",
    "body": "<div id=\"toc_container\" class=\"toc_wrap_right no_bullets\">\r\n  <p class=\"toc_title\">\r\n    Contents\r\n  </p>\r\n  \r\n  <ul class=\"toc_list\">\r\n    <li>\r\n      <a href=\"#Where_to_start\"><span class=\"toc_number toc_depth_1\">1</span> Where to start?</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Waypoint_Graphs_Navigation_Meshes\"><span class=\"toc_number toc_depth_1\">2</span> Waypoint Graphs & Navigation Meshes</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#A_Search\"><span class=\"toc_number toc_depth_1\">3</span> A* Search</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Trigonometry_Refresher\"><span class=\"toc_number toc_depth_1\">4</span> Trigonometry Refresher</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Spaceships_with_Whiskers\"><span class=\"toc_number toc_depth_1\">5</span> Spaceships with Whiskers</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Functions_with_Potential\"><span class=\"toc_number toc_depth_1\">6</span> Functions with Potential</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#Further_research\"><span class=\"toc_number toc_depth_1\">7</span> Further research</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\nI made a hero ship with beam weapons. I even built drifting asteroids that handle smashing into things. What gave me trouble was finding a way to teach enemy ships how to *avoid* smashing into things. You know, not perfectly, but just well enough to seem vaguely cunning and worth pretending to outsmart in a video game.\r\n\r\n<!--more-->\r\n\r\nIn developing Parsec Patrol, I&#8217;ve never had plans or specifications so much as doodles & daydreams. One day I imagined this scene where I&#8217;m piloting the hero ship through a shifting maze of asteroids, a dozen enemy scout ships in fast pursuit. I dodge & weave through the rocks, just barely negotiating the gaps. One by one, the baddies vanish in bursts of light & debris: Some succumb to my beam weapons, while others smash into rocks or bungle into each other. Classic space dogfight material, here.\r\n\r\n### <span id=\"Where_to_start\">Where to start?</span>\r\n\r\nFrom years of playing & tinkering with shooters like Unreal & Quake, I had a vague notion of bots needing &#8220;pathfinding&#8221; algorithms to find their way around levels. So, I started hitting Google, looking to see what I could find and understand just well enough to eliminate from consideration or flag for a deeper dive.\r\n\r\n### <span id=\"Waypoint_Graphs_Navigation_Meshes\">Waypoint Graphs & Navigation Meshes</span>\r\n\r\nSome of the first pathfinding tools I started reading about were *waypoint graphs *and *navigation meshes*. It turns out that some bots rely on cheat sheets: map-specific and manually placed points or polygons, traversed to get from point A to point B. Generally it&#8217;s a cheap way to make bots seem like they know where they&#8217;re going, because a human being does most of the work up front.\r\n\r\n<div style=\"width: 322px\" class=\"wp-caption alignleft\">\r\n  <a href=\"http://www.ai-blog.net/archives/000152.html\"><img class=\"    \" alt=\"\" src=\"http://i252.photobucket.com/albums/hh9/PaulTozour/Halaa_waypoints2_AB.jpg\" width=\"312\" height=\"250\" /></a><p class=\"wp-caption-text\">\r\n    Waypoint graph\r\n  </p>\r\n</div>\r\n\r\n<div style=\"width: 322px\" class=\"wp-caption alignleft\">\r\n  <a href=\"www.ai-blog.net/archives/000152.html\"><img class=\"    \" alt=\"\" src=\"http://i252.photobucket.com/albums/hh9/PaulTozour/Halaa_navmesh2_AB.jpg\" width=\"312\" height=\"250\" /></a><p class=\"wp-caption-text\">\r\n    Navigation mesh\r\n  </p>\r\n</div>\r\n\r\nUnfortunately, an asteroid field is not like a Quake map. In Parsec Patrol, the clusters of rocks are randomly generated and only get more chaotic as the rocks drift and collide. There&#8217;s just no way to handcraft a map for robots in this scenario.\r\n\r\n### <span id=\"A_Search\">A* Search</span>\r\n\r\n<div style=\"width: 220px\" class=\"wp-caption alignright\">\r\n  <a href=\"http://en.wikipedia.org/wiki/A*_search_algorithm\"><img class=\"   \" alt=\"\" src=\"http://upload.wikimedia.org/wikipedia/commons/5/5d/Astar_progress_animation.gif\" width=\"210\" height=\"210\" /></a><p class=\"wp-caption-text\">\r\n    A* Search animation from Wikipedia\r\n  </p>\r\n</div>\r\n\r\nAnother approach I found was the [A* Search algorithm][1]. There are some [great write-ups on this algorithm][2] out there, so I won&#8217;t try making a hash of it here. You can also [try out some implementations in JavaScript][3].\r\n\r\nThis algorithm seems best suited for navigating graphs with few connections between nodes &#8211; a 2D grid, for example, with 8 exits per cell. If I ever wrote a roguelike dungeon crawler, this would be my jam.\r\n\r\nUnfortunately, the world of Parsec Patrol uses a continuous coordinate system, rather than a map of discrete grid cells. And, it seems like a waste to try to find a complete path from point A to point B for this game &#8211; because that path is likely to be made obsolete from moment to moment. So, how about trying to work out the best move for just the next moment?\r\n\r\n### <span id=\"Trigonometry_Refresher\">Trigonometry Refresher</span>\r\n\r\n<div style=\"width: 203px\" class=\"wp-caption alignright\">\r\n  <a href=\"http://www.hyperionedge.com/2010/04/tron-13-lightcycle-game-grid.html\"><img class=\"     \" alt=\"\" src=\"http://2.bp.blogspot.com/_p21BV9S5a0k/S7n0ztF4bBI/AAAAAAAACKw/u9cPiF-dSXE/s1600/TronCards14.jpg\" width=\"193\" height=\"136\" /></a><p class=\"wp-caption-text\">\r\n    Right angles only, for Light Cycles\r\n  </p>\r\n</div>\r\n\r\nI took a short break from research and decided to see what I could come up with on my own. What does it mean to avoid an obstacle?\r\n\r\nOne way to avoid a collision is to make a full right angle turn, into a perpendicular course. That works on the Light Cycle Grid, but it&#8217;s a bit extreme. So, I need an angle between 0 and 90 degrees with respect to the ship&#8217;s vector and the obstacle.\r\n\r\nSo, I decided to give myself a refresher course in trigonometry:\r\n\r\n<div id=\"attachment_1206\" style=\"width: 510px\" class=\"wp-caption aligncenter\">\r\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/trig2.png\"><img class=\"size-full wp-image-1206 \" alt=\"I am not good at math\" src=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/trig2.png\" width=\"500\" height=\"558\" /></a><p class=\"wp-caption-text\">\r\n    I am not good at math\r\n  </p>\r\n</div>\r\n\r\nThese scribblings are not meant to impress. Rather, this shows how much I forgot about high school trigonometry. Nonetheless, I worked out how to [calculate an appropriate target angle that would miss the obstacle by a defined distance][4]. Having that angle meant that I could turn less drastically while steering for avoidance.\r\n\r\nIt was a small victory &#8211; and now I remember [SOHCAHTOA][5] again.\r\n\r\n### <span id=\"Spaceships_with_Whiskers\">Spaceships with Whiskers</span>\r\n\r\nNow that I had a way to calculate a steering angle that avoided smashing into something, I needed a way to know when I was headed for a collision.\r\n\r\nIf I were trying to build a physical robot, I might add some whiskers to detect the nearest obstacle and trigger a turn. But, how to do that in the virtual game world? A little bit of research brought me to the notion of using [raycasting combined with collision detection][6], something like this:\r\n\r\n<div id=\"attachment_1191\" style=\"width: 394px\" class=\"wp-caption aligncenter\">\r\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/2014-01-16-21.18.36.jpg\"><img class=\"wp-image-1191 \" alt=\"\" src=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/2014-01-16-21.18.36-1024x768.jpg\" width=\"384\" height=\"288\" /></a><p class=\"wp-caption-text\">\r\n    Spaceships with whiskers!\r\n  </p>\r\n</div>\r\n\r\n[The algorithm I came up with][7] constructs a vector on each side of the ship. [I project circles along the vectors][8], with a radius based on the margin by which I hoped to avoid obstacles. In order from nearest to farthest, [I run collision detection for each of the circles][9]. The search stops with the first hit, using the nearest obstacle found.\r\n\r\nSo, when my ship finds an obstacle with the whiskers, calculate the avoidance angle, and set that as the steering target for the current game tick. This ends up much more lightweight than finding a complete optimal path, and it can react from moment to moment to the changing game environment.\r\n\r\n<div id=\"attachment_1203\" style=\"width: 510px\" class=\"wp-caption aligncenter\">\r\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/whiskers-twitch-3.gif.gif\"><img class=\"size-full wp-image-1203 \" alt=\"Whiskers are twitchy\" src=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/whiskers-twitch-3.gif.gif\" width=\"500\" height=\"380\" /></a><p class=\"wp-caption-text\">\r\n    My whiskers are wiggly\r\n  </p>\r\n</div>\r\n\r\nUnfortunately, this scheme looks funny in action: Since [I revert back to target seeking after resolving obstacle avoidance][10], the enemy ships wiggle as they oscillate between the two strategies. Tracking straight toward the target often brings the ship into collision course &#8211; so once an avoidance course is achieved, target tracking turns right back into the obstacle.\r\n\r\n### <span id=\"Functions_with_Potential\">Functions with Potential</span>\r\n\r\nWhat I really wanted was some way for these ships to take many nearby obstacles into account along with seeking toward the target, and come up with a smoothly changing steering angle that seemed not entirely stupid or goofy looking.\r\n\r\nAfter some further research, I started reading [AI for Game Developers][11]<img class=\"tvatbijdbdexywujcjjd svuitzfraxzoondqiznf pybiawadmcxjgjpdvhto\" style=\"border: none !important; margin: 0px !important;\" alt=\"\" src=\"http://ir-na.amazon-adsystem.com/e/ir?t=0xdecafbad01-20&l=as2&o=1&a=0596005555\" width=\"1\" height=\"1\" border=\"0\" /> by David M. Bourg and Glenn Seemann. In Chapter 5, I found code using [the Lennard-Jones potential function][12] to drive avoidance of multiple obstacles and target seeking all in one algorithm.\r\n\r\n<div style=\"width: 442px\" class=\"wp-caption aligncenter\">\r\n  <a href=\"http://chemwiki.ucdavis.edu/Physical_Chemistry/Quantum_Mechanics/Atomic_Theory/Intermolecular_Forces/Lennard-Jones_Potential\"><img alt=\"\" src=\"http://chemwiki.ucdavis.edu/@api/deki/files/8914/Figure_B.jpg\" width=\"432\" height=\"324\" /></a><p class=\"wp-caption-text\">\r\n    Serious business, this potential function\r\n  </p>\r\n</div>\r\n\r\nA thumbnail sketch of this function with respect to the game goes something like this: Entities can repel & attract each other. Repulsion & attraction change over distance. For example, swarming entities can attract at long distance and repel when too close.\r\n\r\nHere&#8217;s what [the simplified AB form of this function][13] looks like in my code:\r\n\r\n`U = (-A/Math.pow(d,n)) + (B/Math.pow(d,m))`\r\n\r\nThere are 4 constants in this function:\r\n\r\n*   `A` &#8211; magnitude of attraction\r\n*   `n` &#8211; attenuation of attraction over distance\r\n*   `B` &#8211; magnitude of repulsion\r\n*   `m` &#8211; attenuation of repulsion over distance\r\n\r\nPick values for these constants, and you&#8217;ve got a function that yields a positive (repulsion) or negative (attraction) value for any given distance (`d`). So far, [I&#8217;ve just used trial & error to find values for these constants][14].\r\n\r\nTo apply this function, [I search for obstacles within a certain radius of the ship][15]. That limits the number of calculations, because far-flung obstacles have no significant influence. For each nearby obstacle, [I calculate distance and apply the potential function][16]. I then [calculate a unit vector from each obstacle to the ship and multiply by the result of the potential function][17].\r\n\r\nRepeat all the above for targets, regardless of range, and with function constants that yield attraction rather than repulsion.\r\n\r\nThat leaves me with a collection of vectors, each with a direction and a magnitude representing the weighted urgency of heading in that direction right now. I sum all these vectors, [leaving a single vector with an angle useful as a steering goal][18]. I ignore the magnitude, because it was only useful during addition for influencing the angle.\r\n\r\n<span class='embed-youtube' style='text-align:center; display: block;'></span>\r\n\r\nNow, perhaps I&#8217;ve come off sounding smart after having written the above. But, I&#8217;ve already established that I&#8217;m not good at math. It&#8217;s quite possible I&#8217;ve abused & misused this function entirely. That said, [I think it&#8217;s produced a satisfying result][19].\r\n\r\n<div id=\"attachment_1238\" style=\"width: 485px\" class=\"wp-caption aligncenter\">\r\n  <a href=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/potential5.gif\"><img class=\"size-full wp-image-1238 \" alt=\"Smoother steering\" src=\"http://blog.lmorchard.com/wp-content/uploads/2014/01/potential5.gif\" width=\"475\" height=\"375\" /></a><p class=\"wp-caption-text\">\r\n    Smoother steering with math!\r\n  </p>\r\n</div>\r\n\r\nThe [demo sketch][19] has a debug mode full of confusing circles and lines, but it might help illustrate how the function works on they fly. In a nutshell, this means that closer obstacles have a greater influence on causing the ship to steer away. Meanwhile, there&#8217;s a constant influence pulling the ship back toward the target, whenever the mass of obstacles nearby do not dominate steering.\r\n\r\nI want to tinker some more, maybe see if I can make the ships swarm with each other while also avoiding obstacles and heading toward the target. I&#8217;d also like to find a way to stop guessing and calculate the function constants based on the speed & steering characteristics of a given ship. That is, fast & nimble ships should be able to navigate tighter spaces, while big & clumsy ships should start working to avoid collisions from farther away.\r\n\r\n### <span id=\"Further_research\">Further research</span>\r\n\r\nI&#8217;ve been thinking I need to look into [vector fields][20] and [flocking behaviors][21] next. I&#8217;m still looking for more options to make this work, too. If you&#8217;ve made it this far reading this post, feel free to toss some suggestions & critique my way. I have basically no idea what I&#8217;m doing, nor even what terms to use in searching for this stuff.\r\n\r\nStill, these are some pretty fun results stumbling along from daydreams to code.\r\n\r\n [1]: http://en.wikipedia.org/wiki/A*_search_algorithm\r\n [2]: http://buildnewgames.com/astar/\r\n [3]: http://easystar.nodejitsu.com/demo.html\r\n [4]: https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L1034\r\n [5]: http://www.mathwords.com/s/sohcahtoa.htm\r\n [6]: https://www.google.com/search?q=collision+detection+ray+casting\r\n [7]: https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L987\r\n [8]: https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L1008\r\n [9]: https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L1015\r\n [10]: https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L1085\r\n [11]: http://www.amazon.com/gp/product/0596005555/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=0596005555&linkCode=as2&tag=0xdecafbad01-20\r\n [12]: http://en.wikipedia.org/wiki/Lennard-Jones_potential\r\n [13]: http://en.wikipedia.org/wiki/Lennard-Jones_potential#AB_form\r\n [14]: https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/sketches/steering.coffee#L85\r\n [15]: https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L904\r\n [16]: https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L868\r\n [17]: https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L877\r\n [18]: https://github.com/lmorchard/parsec-patrol/blob/2e3f9afa2404fee54b09152e3d5746c4c4a2b4ca/app/scripts/systems.coffee#L932\r\n [19]: http://lmorchard.github.io/parsec-patrol/sketches/steering.html\r\n [20]: http://gamedevelopment.tutsplus.com/tutorials/goal-based-vector-field-pathfinding--gamedev-9007\r\n [21]: http://www.red3d.com/cwr/boids/",
    "parentPath": "../blog.lmorchard.com/posts/archives/2014",
    "path": "2014/01/18/ppd-avoidance",
    "thumbnail": "http://i252.photobucket.com/albums/hh9/PaulTozour/Halaa_waypoints2_AB.jpg",
    "summary": "\n\n<p>I made a hero ship with beam weapons. I even built drifting asteroids that handle smashing into things. What gave me trouble was finding a way to teach enemy ships how to <em>avoid</em> smashing into things. You know, not perfectly, but just well enough to seem vaguely cunning and worth pretending to outsmart in a video game.</p>\n",
    "prevPostPath": "2014/09/29/1288",
    "nextPostPath": "2013/11/27/entity-component-system"
  }
]