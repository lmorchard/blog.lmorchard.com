{"layout":"post","title":"Please Do Learn To Code","tags":["coding","learning","work","webdev","mozilla"],"published":true,"date":"2012-05-16T00:00:00.000Z","url":"/2012/05/16/please-learn-to-code/","thumbnail":"http://farm3.static.flickr.com/2001/2508770940_b88b955aaa.jpg","path":"2012/05/16/please-learn-to-code","content":"<p><strong>TL;DR</strong>: <em>I think coding is an essential skill for modern humans\nsurrounded by code and machines that run it. Please learn to code.</em></p>\n<p><a href=\"http://www.flickr.com/photos/mita/2508770940/?ref=nf\" style=\"display: block; float: right; text-decoration: none; border: none; margin: 0 0 1em 1em; width: 310px;\"><img src=\"http://farm3.static.flickr.com/2001/2508770940_b88b955aaa.jpg\" style=\"width: 275px; border: 2px solid #ddd; padding: 1em; background: #fff;\" /></a></p>\n<p>I disagree with Jeff Atwood on <a href=\"http://www.codinghorror.com/blog/2012/05/please-dont-learn-to-code.html\">&quot;Please don&#39;t learn to code&quot;</a>:</p>\n<blockquote>\n<p>The &quot;everyone should learn to code&quot; movement isn&#39;t just wrong\nbecause it falsely equates coding with essential life skills like\nreading, writing, and math. I wish. It is wrong in so many other\nways. </p>\n</blockquote>\n<p>In fact, I <em>do</em> regard coding as an essential modern skill. Yes,\n<a href=\"http://dmlcentral.net/blog/cathy-davidson/why-we-need-4th-r-reading-writing-arithmetic-algorithms\" title=\"Why We Need a 4th R: Reading, wRiting, aRithmetic, algoRithms\">right alongside reading, writing, and &#39;rithmatic</a>. At least\nthis part of <a href=\"http://www.codinghorror.com/blog/2012/05/please-dont-learn-to-code.html\">the post</a> had me nodding:</p>\n<blockquote>\n<p>I suppose I can support learning a tiny bit about programming just\nso you can recognize what code is, and when code might be an\nappropriate way to approach a problem you have. But I can also\nrecognize plumbing problems when I see them without any particular\ntraining in the area.</p>\n</blockquote>\n<h2 id=\"visible-pipes\">Visible pipes</h2>\n<p>Luckily, pipes are not as occult as code. If you go into a basement or\nopen the door under a sink, you can see them and follow where they go.\nThat&#39;s <em>some</em> training, albeit informal or self-directed. </p>\n<p>I&#39;m not sure how you&#39;d get exposed to code in the same way: View\nSource in a browser <em>used</em> to be a decent start on the web, <a href=\"http://saveviewsource.org/\">but\nthat&#39;s less helpful lately</a>. Code elsewhere has\ntypically been hard to get at, Open Source notwithstanding.</p>\n<p>Still, I&#39;d bet there are people in the world for whom running water\ncomes from <em>magic</em> and drains into <em>magic</em>.  Where <em>magic</em> means: &quot;I\nnever thought about it, never needed to, and am sometimes vaguely\nafraid of it.&quot;</p>\n<p>For that class of homeowner, <a href=\"http://www.gkdating.com/mad-men-lessons-three-men-and-a-sink/\" title=\"Mad Men Lessons: Three Men and a Sink\">the kitchen floods when the sink springs\na leak, until an expert arrives</a>. It&#39;s not the end of\nthe world, and plenty of people get by just fine like that. But, I\ncertainly wouldn&#39;t agree that &quot;<strong>Please don&#39;t learn about pipes</strong>&quot; is\ngood advice in general.</p>\n<h2 id=\"learning-by-doing\">Learning by doing</h2>\n<p>Admittedly, &quot;<strong>learn to plumb</strong>&quot; isn&#39;t the same as &quot;<strong>learn about\npipes</strong>&quot;. But, is there a difference between &quot;<strong>learn <em>to</em> code</strong>&quot; and\n&quot;<strong>learn <em>about</em> code</strong>&quot;? I don&#39;t think so. Like writing, code doesn&#39;t\nseem like a thing that&#39;s easy to learn <em>about</em> without <em>doing</em> it.</p>\n<p>When I write &quot;coder&quot;, I generally mean this: Someone who is capable of\nencoding his or her intent and decision process into a form that can\ndrive a CPU to perform tasks on his or her behalf.</p>\n<p>That&#39;s a very broad definition, but it implies a lot. First, you have\nto realize that <em>you</em> can make a CPU can do things on your\nbehalf--it&#39;s okay, you won&#39;t break it. It&#39;s a tool made by\nhumans and you as a human can understand it. Then, you need a notion\nof <a href=\"http://rwxweb.wordpress.com/2012/01/31/teaching-algorithmic-thinking/\">algorithmic thinking</a>, in order to formulate your\nintent and reasoning in a form that a CPU can execute. These are not\nnatural or intuitive things.</p>\n<p>I agree with that it&#39;s good to &quot;<a href=\"http://www.codinghorror.com/blog/2012/05/please-dont-learn-to-code.html\">recognize what code is, and when code\nmight be an appropriate way to approach a problem</a>&quot;.  But,\nif you&#39;ve never made a CPU do your bidding, it&#39;s easy to see it as a\nmysterious black box with a will of its own--possibly malicious or\nat least capricious.</p>\n<p>And, if you&#39;ve never worked to force your thoughts into to the\nconfoundingly literal and common senseless constraints of computer\nprogramming, it&#39;s hard to even imagine how code works. If you can&#39;t\nimagine how it works, how do you work it into your mental toolkit for\ngetting things done?</p>\n<p>Learn to code, and a lot of other things get dragged into your head\nalong the way.</p>\n<h2 id=\"who-needs-all-these-coders-\">Who needs all these coders?</h2>\n<p>And then, there were these bits from &quot;<a href=\"http://www.codinghorror.com/blog/2012/05/please-dont-learn-to-code.html\">Please Don&#39;t Learn to\nCode</a>&quot;:</p>\n<blockquote>\n<p>It assumes that adding naive, novice,\nnot-even-sure-they-like-this-whole-programming-thing coders to the\nworkforce is a net positive for the world.</p>\n</blockquote>\n<blockquote>\n<p>It implies that there&#39;s a thin, easily permeable membrane between\nlearning to program and getting paid to program professionally.</p>\n</blockquote>\n<p>This is looking at work from the wrong angle. It isn&#39;t about <em>getting\npaid to program</em>, so much as <em>coding to <a href=\"http://www.codinghorror.com/blog/2004/08/be-good-at-your-job.html\">be good at your\njob</a></em>.</p>\n<p>I&#39;m not talking about Java-heads who live all day in Eclipse.  I&#39;m\ntalking about the Excel-head who used to rock <a href=\"http://en.wikipedia.org/wiki/Visual_Basic_for_Applications\">VBA macros</a>, who\nmaybe just started playing with <a href=\"https://developers.google.com/apps-script/\">Google Apps Script</a>. I have no\nidea how popular Google Apps Script might or might not be, but I&#39;ve\nseen some crazy amazing things done in VBA by sales and account reps\nwho&#39;d punch you in the nose if you called them geeks.</p>\n<p>As far as I can tell, the future of work is heading toward more work\nwith greater volumes of information and data. Should <strong>professional\nprogramers</strong> be the only people in an organization who know how to\napply computational power to solve problems? Maybe the vendors will\nsweep in, clean up all <a href=\"http://en.wikipedia.org/wiki/Computer_Lib_/_Dream_Machines\">the cybercrud</a>, and get the real work\ndone for us.</p>\n<h2 id=\"programming-should-not-be-a-priesthood\">Programming should not be a priesthood</h2>\n<p>Consider writing: there&#39;s a lot to learn and it used to be a thing\ndone only by a few scribes. But, people today get a lot of mileage out\nof just sticky notes and email. Sure, improving your grammar and\nlearning how to structure an essay can help in many, many ways. But,\nyou don&#39;t need to be a <strong>professional writer</strong> to be a <strong>professional\nwho uses written language</strong>.</p>\n<p>The same can apply for coding. The problem, though, is that the\nsticky-notes-and-email level of competence barely exists or is near\nimpossible to access. So, not only do I think we need more coders--we\nalso need more tools that support coding and make coding more\naccessible. I think we should support <strong>professionals who use code</strong>.</p>\n<p>More than that, I think we should encourage and support <strong>humans who\ncode</strong>. I really do consider coding next to reading, writing, and\nmath. I don&#39;t think we can all rely on someone else to write the\nperfect app for the work we&#39;ll need to do in the future. I expect the\nsuccessful people will be those who can apply <a href=\"http://teddziuba.com/2010/10/taco-bell-programming.html\">Taco Bell\nprogramming</a> to reams of data and find answers. We&#39;ll need\nto ride <a href=\"http://www.dougengelbart.org/history/pix.html#6\">bicycles, not tricycles</a>.</p>\n<!-- vim: set wrap wm=5 syntax=mkd textwidth=70: -->\n"}